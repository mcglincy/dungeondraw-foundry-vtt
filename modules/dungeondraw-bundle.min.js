const t="dungeon-draw",e=t=>{const e=t.split("."),i=e[0],r=e[1];if("custom"===i){return n()[r]}return s[r]},n=()=>{try{const e=game.settings.get(t,"customThemes");return JSON.parse(e)}catch(t){return console.log(t),{}}},i=e=>{const n=JSON.stringify(e);game.settings.set(t,"customThemes",n)},r=()=>game.settings.get(t,"themePainterTheme"),s={default:{name:"Default",config:{backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8}},arcPavement:{name:"Arc Pavement",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#111111",floorTexture:"modules/dungeon-draw/assets/textures/Arc_Pavement_001_basecolor.jpg",wallColor:"#111111",wallThickness:12})},basicBlack:{name:"Basic Black",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#0D0D0D",doorFillOpacity:0,exteriorShadowOpacity:0,interiorShadowOpacity:0,floorColor:"#FFFFFF",sceneBackgroundColor:"#0D0D0D",sceneGridOpacity:1,secretDoorSColor:"#0D0D0D",wallColor:"#0D0D0D"})},cavern:{name:"Cavern",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#2B2D2F",floorTexture:"modules/dungeon-draw/assets/textures/Stylized_Stone_Floor_002_bw.jpg",wallColor:"#2B2D2F",wallThickness:12})},checkerboard:{name:"Checkerboard",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorFillColor:"#C2BFB0",floorTexture:"modules/dungeon-draw/assets/textures/sci_fi_texture_150_by_llexandro_d939vk9.png",secretDoorSColor:"#C2BFB0",wallThickness:10})},cobblestone:{name:"Cobblestone",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#222222",doorFillColor:"#FFFFFF",floorTexture:"modules/dungeon-draw/assets/textures/Cobblestone_001_COLOR.jpg",secretDoorSColor:"#FFFFFF",wallColor:"#222222",wallThickness:12})},dirt:{name:"Dirt",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#1a1714",doorFillColor:"#8d7862",floorTexture:"modules/dungeon-draw/assets/textures/Ground_Dirt_007_basecolor.jpg",secretDoorSColor:"#8d7862",wallColor:"#1a1714",wallThickness:10})},dungeonSquares:{name:"Dungeon Squares",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#111111",floorTexture:"modules/dungeon-draw/assets/textures/outdoor+stone+tiles+pavement.jpg",wallColor:"#111111",wallThickness:12})},grass:{name:"Grass",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#72471d",doorFillColor:"#eee8c1",floorTexture:"modules/dungeon-draw/assets/textures/Grass_001_COLOR.jpg",secretDoorSColor:"#eee8c1",wallColor:"#72471d",wallThickness:10})},groovyCarpet:{name:"Groovy Carpet",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#2B2D2F",floorTexture:"modules/dungeon-draw/assets/textures/Fabric_Rug_006_basecolor.jpg",wallColor:"#2B2D2F",wallThickness:12})},hexagon:{name:"Hexagons",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#282828",doorFillColor:"#D1BD8A",floorTexture:"modules/dungeon-draw/assets/textures/Rocks_Hexagons_002_basecolor.jpg",secretDoorSColor:"#D1BD8A",wallColor:"#282828",wallThickness:12})},marble:{name:"Marble",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#686882",floorTexture:"modules/dungeon-draw/assets/textures/Marble_Tiles_001_basecolor.jpg",wallColor:"#686882"})},metalGrid:{name:"Metal Grid",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#27251A",doorFillColor:"#AAAAAA",floorTexture:"modules/dungeon-draw/assets/textures/Sci-fi_Floor_002_basecolor.jpg",secretDoorSColor:"#AAAAAA",wallColor:"#27251A"})},metalSquares:{name:"Metal Squares",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorFillColor:"#C0C0C0",floorTexture:"modules/dungeon-draw/assets/textures/sci_fi_texture_212_by_llexandro_dcuxgum.png",secretDoorSColor:"#C0C0C0"})},moldvayBlue:{name:"Moldvay Blue",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#3A9FF2",doorFillOpacity:0,doorThickness:35,exteriorShadowOpacity:0,floorColor:"#FFFFFF",interiorShadowOpacity:0,sceneBackgroundColor:"#3A9FF2",sceneGridColor:"#3A9FF2",sceneGridOpacity:1,secretDoorSColor:"#3A9FF2",wallColor:"#3A9FF2"})},neonBlueprint:{name:"Neon Blueprint",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#3A9FF2",doorFillOpacity:0,doorThickness:35,exteriorShadowColor:"#18495E",floorColor:"#142A3B",interiorShadowColor:"#1B7FAB",sceneBackgroundColor:"#171008",sceneGridColor:"#4C89A1",sceneGridOpacity:1,secretDoorSColor:"#3A9FF2",wallColor:"#63C9E6",wallThickness:4})},ruddyPaper:{name:"Ruddy Paper",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#913B55",doorFillColor:"#FADEE6",floorTexture:"modules/dungeon-draw/assets/textures/Paper_Recycled_001_COLOR.jpg",floorTextureTint:"#F9FAE6",exteriorShadowOpacity:0,interiorShadowOpacity:0,sceneBackgroundColor:"#EBD3BC",sceneGridColor:"#594026",sceneGridOpacity:1,secretDoorSColor:"#913B55",wallColor:"#9A6D54"})},water:{name:"Water",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#203246",floorTexture:"modules/dungeon-draw/assets/textures/Water_001_COLOR.jpg",wallColor:"#203246",wallThickness:5})},woodPlanks:{name:"Wood Planks",config:foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},{doorColor:"#332211",floorTexture:"modules/dungeon-draw/assets/textures/Old_Wooden_Plank_Seamless_Texture_765.jpg",wallColor:"#332211",wallThickness:10})}};class o extends FormApplication{constructor(t){super(),this.themeKey=t}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"dd-theme-sheet",classes:["sheet"],template:"modules/dungeon-draw/templates/theme-sheet.html",width:480,height:880,tabs:[{navSelector:".tabs",contentSelector:"form",initial:"position"}]})}get title(){return game.i18n.localize("DD.ThemeSheetTitle")}getData(){const t=n()[this.themeKey];return{config:t.config,themeName:t.name}}async _updateObject(t,e){const r=n(),s=e.themeName;delete e.themeName,r[this.themeKey]={name:s,config:e},i(r)}}class l extends FormApplication{constructor(t="settings"){super(),this._tabs[0].active=t}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"dd-config-sheet",classes:["sheet"],template:"modules/dungeon-draw/templates/config-sheet.html",width:480,height:920,tabs:[{navSelector:".tabs",contentSelector:"form",initial:"position"}]})}get title(){return game.i18n.localize("DD.ConfigSheetTitle")}getData(){let t=canvas.dungeon.dungeon?.state().config;t||(t={backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8});const e=n(),i=Object.keys(e).sort(),o=Object.keys(s).sort(),l=r();return{config:t,customThemes:e,customThemeKeys:i,themes:s,themeKeys:o,themePainterThemeKey:l}}async _updateObject(t,e){delete e.customThemeName,delete e.themePainterTheme,console.log("*** formData"),console.log(e),canvas.dungeon.dungeon?.setConfig(e),game.user.isGM&&await canvas.scene.update({backgroundColor:e.sceneBackgroundColor,gridAlpha:e.sceneGridAlpha,gridColor:e.sceneGridColor})}async close(t){await super.close(t),this.preview&&(this.preview.removeChildren(),this.preview=null)}activateListeners(t){super.activateListeners(t),t.find('button[name="resetDefault"]').click(this._onResetDefaults.bind(this)),t.find(".dd-theme-name").click(this._onThemeNameClick.bind(this)),t.find(".dd-save-as-theme-button").click(this._onSaveAsThemeClick.bind(this)),t.find(".dd-theme-edit").click(this._onEditThemeClick.bind(this)),t.find(".dd-theme-copy").click(this._onCopyThemeClick.bind(this)),t.find(".dd-theme-delete").click(this._onDeleteThemeClick.bind(this)),t.find('select[name="themePainterThemeKey"]').change(this._onThemePainterThemeSelect.bind(this))}_onResetDefaults(t){t.preventDefault(),canvas.dungeon.dungeon?.setConfig({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8}),canvas.dungeon.dungeon.refresh(),this.render()}async _onThemeNameClick(t){t.preventDefault();const e=$(t.currentTarget).parent(".dd-theme-row"),i=e.data("theme");let r;if("custom"===e.data("themetype")){r=n()[i]}else r=s[i];const o={...r.config};await(canvas.dungeon.dungeon?.setConfig(o)),game.user.isGM&&await canvas.scene.update({backgroundColor:o.sceneBackgroundColor,gridAlpha:o.sceneGridAlpha,gridColor:o.sceneGridColor}),this.render()}async _onSaveAsThemeClick(t){t.preventDefault();const e=$(t.currentTarget).closest(".form-fields").children(".saveAsThemeName").val(),r=this._getSubmitData();delete r.saveAsThemeName,delete r.themePainterThemeKey;const s=n();s[e]={name:e,config:r},i(s),this._tabs[0].active="themes",this.render()}async _onEditThemeClick(t){t.preventDefault();const e=$(t.currentTarget).closest(".dd-theme-row").data("theme");new o(e).render(!0)}_onCopyThemeClick(t){t.preventDefault();const e=$(t.currentTarget).closest(".dd-theme-row").data("theme"),r=n(),s=r[e],o=JSON.parse(JSON.stringify(s));let l,a=1;for(;l=`${s.name} (${a})`,l in r;)a++;o.name=l,r[l]=o,i(r),this.render()}_onDeleteThemeClick(t){t.preventDefault();const e=$(t.currentTarget).closest(".dd-theme-row").data("theme"),r=n();delete r[e],i(r),this.render()}_onThemePainterThemeSelect(e){(e=>{game.settings.set(t,"themePainterTheme",e)})($(e.currentTarget).val())}}class a{static equalsWithTolerance(t,e,n){return Math.abs(t-e)<=n}}class c extends Error{constructor(t){super(t),this.name=Object.keys({Exception:c})[0]}toString(){return this.message}}class h extends c{constructor(t){super(t),this.name=Object.keys({IllegalArgumentException:h})[0]}}class u{constructor(t,e){this.low=e||0,this.high=t||0}static toBinaryString(t){let e,n="";for(e=2147483648;e>0;e>>>=1)n+=(t.high&e)===e?"1":"0";for(e=2147483648;e>0;e>>>=1)n+=(t.low&e)===e?"1":"0";return n}}function d(){}function g(){}function f(){}function p(){}function m(){}d.NaN=NaN,d.isNaN=t=>Number.isNaN(t),d.isInfinite=t=>!Number.isFinite(t),d.MAX_VALUE=Number.MAX_VALUE,d.POSITIVE_INFINITY=Number.POSITIVE_INFINITY,d.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,"function"==typeof Float64Array&&"function"==typeof Int32Array?function(){const t=2146435072,e=new Float64Array(1),n=new Int32Array(e.buffer);d.doubleToLongBits=function(i){e[0]=i;let r=0|n[0],s=0|n[1];return(s&t)===t&&0!=(1048575&s)&&0!==r&&(r=0,s=2146959360),new u(s,r)},d.longBitsToDouble=function(t){return n[0]=t.low,n[1]=t.high,e[0]}}():function(){const t=1023,e=Math.log2,n=Math.floor,i=Math.pow,r=function(){for(let t=53;t>0;t--){const r=i(2,t)-1;if(n(e(r))+1===t)return r}return 0}();d.doubleToLongBits=function(s){let o,l,a,c,h,d,g,f,p;if(s<0||1/s===Number.NEGATIVE_INFINITY?(d=1<<31,s=-s):d=0,0===s)return p=0,f=d,new u(f,p);if(s===1/0)return p=0,f=2146435072|d,new u(f,p);if(s!=s)return p=0,f=2146959360,new u(f,p);if(c=0,p=0,o=n(s),o>1)if(o<=r)c=n(e(o)),c<=20?(p=0,f=o<<20-c&1048575):(a=c-20,l=i(2,a),p=o%l<<32-a,f=o/l&1048575);else for(a=o,p=0;l=a/2,a=n(l),0!==a;)c++,p>>>=1,p|=(1&f)<<31,f>>>=1,l!==a&&(f|=524288);if(g=c+t,h=0===o,o=s-o,c<52&&0!==o)for(a=0;;){if(l=2*o,l>=1?(o=l-1,h?(g--,h=!1):(a<<=1,a|=1,c++)):(o=l,h?0==--g&&(c++,h=!1):(a<<=1,c++)),20===c)f|=a,a=0;else if(52===c){p|=a;break}if(1===l){c<20?f|=a<<20-c:c<52&&(p|=a<<52-c);break}}return f|=g<<20,f|=d,new u(f,p)},d.longBitsToDouble=function(e){let n,r,s,o;const l=e.high,a=e.low,c=l&1<<31?-1:1;for(s=((2146435072&l)>>20)-t,o=0,r=1<<19,n=1;n<=20;n++)l&r&&(o+=i(2,-n)),r>>>=1;for(r=1<<31,n=21;n<=52;n++)a&r&&(o+=i(2,-n)),r>>>=1;if(-1023===s){if(0===o)return 0*c;s=-1022}else{if(1024===s)return 0===o?c/0:NaN;o+=1}return c*o*i(2,s)}}();class _ extends c{constructor(t){super(t),this.name=Object.keys({RuntimeException:_})[0]}}class y extends _{constructor(){super(),y.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)_.constructor_.call(this);else if(1===arguments.length){const t=arguments[0];_.constructor_.call(this,t)}}}class x{static shouldNeverReachHere(){if(0===arguments.length)x.shouldNeverReachHere(null);else if(1===arguments.length){const t=arguments[0];throw new y("Should never reach here"+(null!==t?": "+t:""))}}static isTrue(){if(1===arguments.length){const t=arguments[0];x.isTrue(t,null)}else if(2===arguments.length){const t=arguments[1];if(!arguments[0])throw null===t?new y:new y(t)}}static equals(){if(2===arguments.length){const t=arguments[0],e=arguments[1];x.equals(t,e,null)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(!e.equals(t))throw new y("Expected "+t+" but encountered "+e+(null!==n?": "+n:""))}}}const I=new ArrayBuffer(8),E=new Float64Array(I),C=new Int32Array(I);class S{constructor(){S.constructor_.apply(this,arguments)}static constructor_(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)S.constructor_.call(this,0,0);else if(1===arguments.length){const t=arguments[0];S.constructor_.call(this,t.x,t.y,t.getZ())}else if(2===arguments.length){const t=arguments[0],e=arguments[1];S.constructor_.call(this,t,e,S.NULL_ORDINATE)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.x=t,this.y=e,this.z=n}}static hashCode(t){return E[0]=t,C[0]^C[1]}getM(){return d.NaN}setOrdinate(t,e){switch(t){case S.X:this.x=e;break;case S.Y:this.y=e;break;case S.Z:this.setZ(e);break;default:throw new h("Invalid ordinate index: "+t)}}equals2D(){if(1===arguments.length){const t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){const t=arguments[0],e=arguments[1];return!!a.equalsWithTolerance(this.x,t.x,e)&&!!a.equalsWithTolerance(this.y,t.y,e)}}setM(t){throw new h("Invalid ordinate index: "+S.M)}getZ(){return this.z}getOrdinate(t){switch(t){case S.X:return this.x;case S.Y:return this.y;case S.Z:return this.getZ()}throw new h("Invalid ordinate index: "+t)}equals3D(t){return this.x===t.x&&this.y===t.y&&(this.getZ()===t.getZ()||d.isNaN(this.getZ())&&d.isNaN(t.getZ()))}equals(t){return t instanceof S&&this.equals2D(t)}equalInZ(t,e){return a.equalsWithTolerance(this.getZ(),t.getZ(),e)}setX(t){this.x=t}compareTo(t){const e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0}getX(){return this.x}setZ(t){this.z=t}clone(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return x.shouldNeverReachHere("this shouldn't happen because this class is Cloneable"),null;throw t}}copy(){return new S(this)}toString(){return"("+this.x+", "+this.y+", "+this.getZ()+")"}distance3D(t){const e=this.x-t.x,n=this.y-t.y,i=this.getZ()-t.getZ();return Math.sqrt(e*e+n*n+i*i)}getY(){return this.y}setY(t){this.y=t}distance(t){const e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)}hashCode(){let t=17;return t=37*t+S.hashCode(this.x),t=37*t+S.hashCode(this.y),t}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}get interfaces_(){return[g,f,m]}}class w{constructor(){w.constructor_.apply(this,arguments)}static constructor_(){if(this._dimensionsToTest=2,0===arguments.length)w.constructor_.call(this,2);else if(1===arguments.length){const t=arguments[0];if(2!==t&&3!==t)throw new h("only 2 or 3 dimensions may be specified");this._dimensionsToTest=t}}static compare(t,e){return t<e?-1:t>e?1:d.isNaN(t)?d.isNaN(e)?0:-1:d.isNaN(e)?1:0}compare(t,e){const n=w.compare(t.x,e.x);if(0!==n)return n;const i=w.compare(t.y,e.y);if(0!==i)return i;if(this._dimensionsToTest<=2)return 0;return w.compare(t.getZ(),e.getZ())}get interfaces_(){return[p]}}function N(t,e){return t.interfaces_&&t.interfaces_.indexOf(e)>-1}S.DimensionalComparator=w,S.NULL_ORDINATE=d.NaN,S.X=0,S.Y=1,S.Z=2,S.M=3;class T{getM(t){if(this.hasM()){const e=this.getDimension()-this.getMeasures();return this.getOrdinate(t,e)}return d.NaN}setOrdinate(t,e,n){}getZ(t){return this.hasZ()?this.getOrdinate(t,2):d.NaN}size(){}getOrdinate(t,e){}getCoordinate(){}getCoordinateCopy(t){}createCoordinate(){}getDimension(){}hasM(){return this.getMeasures()>0}getX(t){}hasZ(){return this.getDimension()-this.getMeasures()>2}getMeasures(){return 0}expandEnvelope(t){}copy(){}getY(t){}toCoordinateArray(){}get interfaces_(){return[f]}}T.X=0,T.Y=1,T.Z=2,T.M=3;class b{create(){if(1===arguments.length)arguments[0]instanceof Array||N(arguments[0],T);else if(2===arguments.length);else if(3===arguments.length){const t=arguments[0],e=arguments[1];return this.create(t,e)}}}class v{filter(t){}}class O{constructor(){O.constructor_.apply(this,arguments)}static constructor_(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof S){const t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof O){const t=arguments[0];this.init(t)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.init(t.x,e.x,t.y,e.y)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.init(t,e,n,i)}}static intersects(){if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];let r=Math.min(n.x,i.x),s=Math.max(n.x,i.x),o=Math.min(t.x,e.x),l=Math.max(t.x,e.x);return!(o>s)&&(!(l<r)&&(r=Math.min(n.y,i.y),s=Math.max(n.y,i.y),o=Math.min(t.y,e.y),l=Math.max(t.y,e.y),!(o>s)&&!(l<r)))}}getArea(){return this.getWidth()*this.getHeight()}equals(t){if(!(t instanceof O))return!1;const e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()}intersection(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new O;const e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,i=this._maxx<t._maxx?this._maxx:t._maxx,r=this._maxy<t._maxy?this._maxy:t._maxy;return new O(e,i,n,r)}isNull(){return this._maxx<this._minx}getMaxX(){return this._maxx}covers(){if(1===arguments.length){if(arguments[0]instanceof S){const t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof O){const t=arguments[0];return!this.isNull()&&!t.isNull()&&(t.getMinX()>=this._minx&&t.getMaxX()<=this._maxx&&t.getMinY()>=this._miny&&t.getMaxY()<=this._maxy)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];return!this.isNull()&&(t>=this._minx&&t<=this._maxx&&e>=this._miny&&e<=this._maxy)}}intersects(){if(1===arguments.length){if(arguments[0]instanceof O){const t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof S){const t=arguments[0];return this.intersects(t.x,t.y)}}else if(2===arguments.length){if(arguments[0]instanceof S&&arguments[1]instanceof S){const t=arguments[0],e=arguments[1];if(this.isNull())return!1;if((t.x<e.x?t.x:e.x)>this._maxx)return!1;if((t.x>e.x?t.x:e.x)<this._minx)return!1;if((t.y<e.y?t.y:e.y)>this._maxy)return!1;return!((t.y>e.y?t.y:e.y)<this._miny)}if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return!this.isNull()&&!(t>this._maxx||t<this._minx||e>this._maxy||e<this._miny)}}}getMinY(){return this._miny}getDiameter(){if(this.isNull())return 0;const t=this.getWidth(),e=this.getHeight();return Math.sqrt(t*t+e*e)}getMinX(){return this._minx}expandToInclude(){if(1===arguments.length){if(arguments[0]instanceof S){const t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof O){const t=arguments[0];if(t.isNull())return null;this.isNull()?(this._minx=t.getMinX(),this._maxx=t.getMaxX(),this._miny=t.getMinY(),this._maxy=t.getMaxY()):(t._minx<this._minx&&(this._minx=t._minx),t._maxx>this._maxx&&(this._maxx=t._maxx),t._miny<this._miny&&(this._miny=t._miny),t._maxy>this._maxy&&(this._maxy=t._maxy))}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.isNull()?(this._minx=t,this._maxx=t,this._miny=e,this._maxy=e):(t<this._minx&&(this._minx=t),t>this._maxx&&(this._maxx=t),e<this._miny&&(this._miny=e),e>this._maxy&&(this._maxy=e))}}minExtent(){if(this.isNull())return 0;const t=this.getWidth(),e=this.getHeight();return t<e?t:e}getWidth(){return this.isNull()?0:this._maxx-this._minx}compareTo(t){const e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0}translate(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)}copy(){return new O(this)}toString(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"}setToNull(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1}disjoint(t){return!(!this.isNull()&&!t.isNull())||(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}getHeight(){return this.isNull()?0:this._maxy-this._miny}maxExtent(){if(this.isNull())return 0;const t=this.getWidth(),e=this.getHeight();return t>e?t:e}expandBy(){if(1===arguments.length){const t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.isNull())return null;this._minx-=t,this._maxx+=t,this._miny-=e,this._maxy+=e,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}}contains(){if(1===arguments.length){if(arguments[0]instanceof O){const t=arguments[0];return this.covers(t)}if(arguments[0]instanceof S){const t=arguments[0];return this.covers(t)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.covers(t,e)}}centre(){return this.isNull()?null:new S((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)}init(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof S){const t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof O){const t=arguments[0];this._minx=t._minx,this._maxx=t._maxx,this._miny=t._miny,this._maxy=t._maxy}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.init(t.x,e.x,t.y,e.y)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t<e?(this._minx=t,this._maxx=e):(this._minx=e,this._maxx=t),n<i?(this._miny=n,this._maxy=i):(this._miny=i,this._maxy=n)}}getMaxY(){return this._maxy}distance(t){if(this.intersects(t))return 0;let e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);let n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)}hashCode(){let t=17;return t=37*t+S.hashCode(this._minx),t=37*t+S.hashCode(this._maxx),t=37*t+S.hashCode(this._miny),t=37*t+S.hashCode(this._maxy),t}get interfaces_(){return[g,m]}}class R{constructor(){R.constructor_.apply(this,arguments)}isGeometryCollection(){return this.getTypeCode()===R.TYPECODE_GEOMETRYCOLLECTION}getFactory(){return this._factory}getGeometryN(t){return this}getArea(){return 0}isRectangle(){return!1}equalsExact(t){return this===t||this.equalsExact(t,0)}geometryChanged(){this.apply(R.geometryChangedFilter)}geometryChangedAction(){this._envelope=null}equalsNorm(t){return null!==t&&this.norm().equalsExact(t.norm())}getLength(){return 0}getNumGeometries(){return 1}compareTo(){let t;if(1===arguments.length){const e=arguments[0];return t=e,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(e)}if(2===arguments.length){const e=arguments[0],n=arguments[1];return t=e,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(e,n)}}getUserData(){return this._userData}getSRID(){return this._SRID}getEnvelope(){return this.getFactory().toGeometry(this.getEnvelopeInternal())}checkNotGeometryCollection(t){if(t.getTypeCode()===R.TYPECODE_GEOMETRYCOLLECTION)throw new h("This method does not support GeometryCollection arguments")}equal(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n}norm(){const t=this.copy();return t.normalize(),t}reverse(){const t=this.reverseInternal();return null!=this.envelope&&(t.envelope=this.envelope.copy()),t.setSRID(this.getSRID()),t}copy(){const t=this.copyInternal();return t.envelope=null==this._envelope?null:this._envelope.copy(),t._SRID=this._SRID,t._userData=this._userData,t}getPrecisionModel(){return this._factory.getPrecisionModel()}getEnvelopeInternal(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new O(this._envelope)}setSRID(t){this._SRID=t}setUserData(t){this._userData=t}compare(t,e){const n=t.iterator(),i=e.iterator();for(;n.hasNext()&&i.hasNext();){const t=n.next(),e=i.next(),r=t.compareTo(e);if(0!==r)return r}return n.hasNext()?1:i.hasNext()?-1:0}hashCode(){return this.getEnvelopeInternal().hashCode()}isEquivalentClass(t){return this.getClass()===t.getClass()}isGeometryCollectionOrDerived(){return this.getTypeCode()===R.TYPECODE_GEOMETRYCOLLECTION||this.getTypeCode()===R.TYPECODE_MULTIPOINT||this.getTypeCode()===R.TYPECODE_MULTILINESTRING||this.getTypeCode()===R.TYPECODE_MULTIPOLYGON}get interfaces_(){return[f,g,m]}getClass(){return R}static hasNonEmptyElements(t){for(let e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1}static hasNullElements(t){for(let e=0;e<t.length;e++)if(null===t[e])return!0;return!1}}R.constructor_=function(t){t&&(this._envelope=null,this._userData=null,this._factory=t,this._SRID=t.getSRID())},R.TYPECODE_POINT=0,R.TYPECODE_MULTIPOINT=1,R.TYPECODE_LINESTRING=2,R.TYPECODE_LINEARRING=3,R.TYPECODE_MULTILINESTRING=4,R.TYPECODE_POLYGON=5,R.TYPECODE_MULTIPOLYGON=6,R.TYPECODE_GEOMETRYCOLLECTION=7,R.TYPENAME_POINT="Point",R.TYPENAME_MULTIPOINT="MultiPoint",R.TYPENAME_LINESTRING="LineString",R.TYPENAME_LINEARRING="LinearRing",R.TYPENAME_MULTILINESTRING="MultiLineString",R.TYPENAME_POLYGON="Polygon",R.TYPENAME_MULTIPOLYGON="MultiPolygon",R.TYPENAME_GEOMETRYCOLLECTION="GeometryCollection",R.geometryChangedFilter={get interfaces_(){return[v]},filter(t){t.geometryChangedAction()}};class L{filter(t){}}class D{}class P{static copyCoord(t,e,n,i){const r=Math.min(t.getDimension(),n.getDimension());for(let s=0;s<r;s++)n.setOrdinate(i,s,t.getOrdinate(e,s))}static isRing(t){const e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,T.X)===t.getOrdinate(e-1,T.X)&&t.getOrdinate(0,T.Y)===t.getOrdinate(e-1,T.Y))}static scroll(){if(2===arguments.length){if(N(arguments[0],T)&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1];P.scroll(t,e,P.isRing(t))}else if(N(arguments[0],T)&&arguments[1]instanceof S){const t=arguments[0],e=arguments[1],n=P.indexOf(e,t);if(n<=0)return null;P.scroll(t,n)}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(e<=0)return null;const i=t.copy(),r=n?t.size()-1:t.size();for(let n=0;n<r;n++)for(let s=0;s<t.getDimension();s++)t.setOrdinate(n,s,i.getOrdinate((e+n)%r,s));if(n)for(let e=0;e<t.getDimension();e++)t.setOrdinate(r,e,t.getOrdinate(0,e))}}static isEqual(t,e){const n=t.size();if(n!==e.size())return!1;const i=Math.min(t.getDimension(),e.getDimension());for(let r=0;r<n;r++)for(let n=0;n<i;n++){const i=t.getOrdinate(r,n),s=e.getOrdinate(r,n);if(t.getOrdinate(r,n)!==e.getOrdinate(r,n)&&(!d.isNaN(i)||!d.isNaN(s)))return!1}return!0}static minCoordinateIndex(){if(1===arguments.length){const t=arguments[0];return P.minCoordinateIndex(t,0,t.size()-1)}if(3===arguments.length){const t=arguments[0],e=arguments[2];let n=-1,i=null;for(let r=arguments[1];r<=e;r++){const e=t.getCoordinate(r);(null===i||i.compareTo(e)>0)&&(i=e,n=r)}return n}}static extend(t,e,n){const i=t.create(n,e.getDimension()),r=e.size();if(P.copy(e,0,i,0,r),r>0)for(let t=r;t<n;t++)P.copy(e,r-1,i,t,1);return i}static reverse(t){const e=t.size()-1,n=Math.trunc(e/2);for(let i=0;i<=n;i++)P.swap(t,i,e-i)}static swap(t,e,n){if(e===n)return null;for(let i=0;i<t.getDimension();i++){const r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}}static copy(t,e,n,i,r){for(let s=0;s<r;s++)P.copyCoord(t,e+s,n,i+s)}static ensureValidRing(t,e){const n=e.size();if(0===n)return e;if(n<=3)return P.createClosedRing(t,e,4);return e.getOrdinate(0,T.X)===e.getOrdinate(n-1,T.X)&&e.getOrdinate(0,T.Y)===e.getOrdinate(n-1,T.Y)?e:P.createClosedRing(t,e,n+1)}static indexOf(t,e){for(let n=0;n<e.size();n++)if(t.x===e.getOrdinate(n,T.X)&&t.y===e.getOrdinate(n,T.Y))return n;return-1}static createClosedRing(t,e,n){const i=t.create(n,e.getDimension()),r=e.size();P.copy(e,0,i,0,r);for(let t=r;t<n;t++)P.copy(e,0,i,t,1);return i}static minCoordinate(t){let e=null;for(let n=0;n<t.size();n++){const i=t.getCoordinate(n);(null===e||e.compareTo(i)>0)&&(e=i)}return e}}class A extends c{constructor(t){super(t),this.name=Object.keys({UnsupportedOperationException:A})[0]}}class F{static isWhitespace(t){return t<=32&&t>=0||127===t}static toUpperCase(t){return t.toUpperCase()}}class M{static toDimensionSymbol(t){switch(t){case M.FALSE:return M.SYM_FALSE;case M.TRUE:return M.SYM_TRUE;case M.DONTCARE:return M.SYM_DONTCARE;case M.P:return M.SYM_P;case M.L:return M.SYM_L;case M.A:return M.SYM_A}throw new h("Unknown dimension value: "+t)}static toDimensionValue(t){switch(F.toUpperCase(t)){case M.SYM_FALSE:return M.FALSE;case M.SYM_TRUE:return M.TRUE;case M.SYM_DONTCARE:return M.DONTCARE;case M.SYM_P:return M.P;case M.SYM_L:return M.L;case M.SYM_A:return M.A}throw new h("Unknown dimension symbol: "+t)}}M.P=0,M.L=1,M.A=2,M.FALSE=-1,M.TRUE=-2,M.DONTCARE=-3,M.SYM_FALSE="F",M.SYM_TRUE="T",M.SYM_DONTCARE="*",M.SYM_P="0",M.SYM_L="1",M.SYM_A="2";class G{filter(t){}}class z{filter(t,e){}isDone(){}isGeometryChanged(){}}class k extends R{constructor(){super(),k.constructor_.apply(this,arguments)}static constructor_(){if(this._points=null,0===arguments.length);else if(2===arguments.length){const t=arguments[0],e=arguments[1];R.constructor_.call(this,e),this.init(t)}}computeEnvelopeInternal(){return this.isEmpty()?new O:this._points.expandEnvelope(new O)}isRing(){return this.isClosed()&&this.isSimple()}getCoordinates(){return this._points.toCoordinateArray()}copyInternal(){return new k(this._points.copy(),this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof R){const t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;const n=t;if(this._points.size()!==n._points.size())return!1;for(let t=0;t<this._points.size();t++)if(!this.equal(this._points.getCoordinate(t),n._points.getCoordinate(t),e))return!1;return!0}return super.equalsExact.apply(this,arguments)}normalize(){for(let t=0;t<Math.trunc(this._points.size()/2);t++){const e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e))){if(this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0){const t=this._points.copy();P.reverse(t),this._points=t}return null}}}getCoordinate(){return this.isEmpty()?null:this._points.getCoordinate(0)}getBoundaryDimension(){return this.isClosed()?M.FALSE:0}isClosed(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))}reverseInternal(){const t=this._points.copy();return P.reverse(t),this.getFactory().createLineString(t)}getEndPoint(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)}getTypeCode(){return R.TYPECODE_LINESTRING}getDimension(){return 1}getLength(){return class{static ofLine(t){const e=t.size();if(e<=1)return 0;let n=0;const i=new S;t.getCoordinate(0,i);let r=i.x,s=i.y;for(let o=1;o<e;o++){t.getCoordinate(o,i);const e=i.x,l=i.y,a=e-r,c=l-s;n+=Math.sqrt(a*a+c*c),r=e,s=l}return n}}.ofLine(this._points)}getNumPoints(){return this._points.size()}compareToSameClass(){if(1===arguments.length){const t=arguments[0];let e=0,n=0;for(;e<this._points.size()&&n<t._points.size();){const i=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==i)return i;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){const t=arguments[0];return arguments[1].compare(this._points,t._points)}}apply(){if(N(arguments[0],L)){const t=arguments[0];for(let e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e))}else if(N(arguments[0],z)){const t=arguments[0];if(0===this._points.size())return null;for(let e=0;e<this._points.size()&&(t.filter(this._points,e),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],G)){arguments[0].filter(this)}else if(N(arguments[0],v)){arguments[0].filter(this)}}getBoundary(){throw new A}isEquivalentClass(t){return t instanceof k}getCoordinateN(t){return this._points.getCoordinate(t)}getGeometryType(){return R.TYPENAME_LINESTRING}getCoordinateSequence(){return this._points}isEmpty(){return 0===this._points.size()}init(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new h("Invalid number of points in LineString (found "+t.size()+" - must be 0 or >= 2)");this._points=t}isCoordinate(t){for(let e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1}getStartPoint(){return this.isEmpty()?null:this.getPointN(0)}getPointN(t){return this.getFactory().createPoint(this._points.getCoordinate(t))}get interfaces_(){return[D]}}class B{}class q extends R{constructor(){super(),q.constructor_.apply(this,arguments)}static constructor_(){this._coordinates=null;const t=arguments[0],e=arguments[1];R.constructor_.call(this,e),this.init(t)}computeEnvelopeInternal(){if(this.isEmpty())return new O;const t=new O;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t}getCoordinates(){return this.isEmpty()?[]:[this.getCoordinate()]}copyInternal(){return new q(this._coordinates.copy(),this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof R){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&(!(!this.isEmpty()||!t.isEmpty())||this.isEmpty()===t.isEmpty()&&this.equal(t.getCoordinate(),this.getCoordinate(),e))}return super.equalsExact.apply(this,arguments)}normalize(){}getCoordinate(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null}getBoundaryDimension(){return M.FALSE}reverseInternal(){return this.getFactory().createPoint(this._coordinates.copy())}getTypeCode(){return R.TYPECODE_POINT}getDimension(){return 0}getNumPoints(){return this.isEmpty()?0:1}getX(){if(null===this.getCoordinate())throw new IllegalStateException("getX called on empty Point");return this.getCoordinate().x}compareToSameClass(){if(1===arguments.length){const t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){const t=arguments[0];return arguments[1].compare(this._coordinates,t._coordinates)}}apply(){if(N(arguments[0],L)){const t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(N(arguments[0],z)){const t=arguments[0];if(this.isEmpty())return null;t.filter(this._coordinates,0),t.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],G)){arguments[0].filter(this)}else if(N(arguments[0],v)){arguments[0].filter(this)}}getBoundary(){return this.getFactory().createGeometryCollection()}getGeometryType(){return R.TYPENAME_POINT}getCoordinateSequence(){return this._coordinates}getY(){if(null===this.getCoordinate())throw new IllegalStateException("getY called on empty Point");return this.getCoordinate().y}isEmpty(){return 0===this._coordinates.size()}init(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),x.isTrue(t.size()<=1),this._coordinates=t}isSimple(){return!0}get interfaces_(){return[B]}}class Y{static ofRing(){if(arguments[0]instanceof Array){const t=arguments[0];return Math.abs(Y.ofRingSigned(t))}if(N(arguments[0],T)){const t=arguments[0];return Math.abs(Y.ofRingSigned(t))}}static ofRingSigned(){if(arguments[0]instanceof Array){const t=arguments[0];if(t.length<3)return 0;let e=0;const n=t[0].x;for(let i=1;i<t.length-1;i++){const r=t[i].x-n,s=t[i+1].y;e+=r*(t[i-1].y-s)}return e/2}if(N(arguments[0],T)){const t=arguments[0],e=t.size();if(e<3)return 0;const n=new S,i=new S,r=new S;t.getCoordinate(0,i),t.getCoordinate(1,r);const s=i.x;r.x-=s;let o=0;for(let l=1;l<e-1;l++)n.y=i.y,i.x=r.x,i.y=r.y,t.getCoordinate(l+1,r),r.x-=s,o+=i.x*(n.y-r.y);return o/2}}}class X{add(){}addAll(){}isEmpty(){}iterator(){}size(){}toArray(){}remove(){}}class j extends c{constructor(t){super(t),this.name=Object.keys({IndexOutOfBoundsException:j})[0]}}class U extends X{get(){}set(){}isEmpty(){}}class V extends c{constructor(t){super(t),this.name=Object.keys({NoSuchElementException:V})[0]}}class W extends U{constructor(t){super(),this.array=[],t instanceof X&&this.addAll(t)}get interfaces_(){return[U,X]}ensureCapacity(){}add(t){return 1===arguments.length?this.array.push(t):this.array.splice(arguments[0],0,arguments[1]),!0}clear(){this.array=[]}addAll(t){for(const e of t)this.array.push(e)}set(t,e){const n=this.array[t];return this.array[t]=e,n}iterator(){return new H(this)}get(t){if(t<0||t>=this.size())throw new j;return this.array[t]}isEmpty(){return 0===this.array.length}sort(t){t?this.array.sort(((e,n)=>t.compare(e,n))):this.array.sort()}size(){return this.array.length}toArray(){return this.array.slice()}remove(t){for(let e=0,n=this.array.length;e<n;e++)if(this.array[e]===t)return!!this.array.splice(e,1);return!1}[Symbol.iterator](){return this.array.values()}}class H{constructor(t){this.arrayList=t,this.position=0}next(){if(this.position===this.arrayList.size())throw new V;return this.arrayList.get(this.position++)}hasNext(){return this.position<this.arrayList.size()}set(t){return this.arrayList.set(this.position-1,t)}remove(){this.arrayList.remove(this.arrayList.get(this.position))}}class K{static sort(){const t=arguments[0];if(1===arguments.length)t.sort(((t,e)=>t.compareTo(e)));else if(2===arguments.length)t.sort(((t,e)=>arguments[1].compare(t,e)));else if(3===arguments.length){const e=t.slice(arguments[1],arguments[2]);e.sort();const n=t.slice(0,arguments[1]).concat(e,t.slice(arguments[2],t.length));t.splice(0,t.length);for(const e of n)t.push(e)}else if(4===arguments.length){const e=t.slice(arguments[1],arguments[2]);e.sort(((t,e)=>arguments[3].compare(t,e)));const n=t.slice(0,arguments[1]).concat(e,t.slice(arguments[2],t.length));t.splice(0,t.length);for(const e of n)t.push(e)}}static asList(t){const e=new W;for(const n of t)e.add(n);return e}static copyOf(t,e){return t.slice(0,e)}}class Z{constructor(t){this.str=t}append(t){this.str+=t}setCharAt(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}toString(){return this.str}}class J{constructor(t){this.value=t}intValue(){return this.value}compareTo(t){return this.value<t?-1:this.value>t?1:0}static compare(t,e){return t<e?-1:t>e?1:0}static isNan(t){return Number.isNaN(t)}static valueOf(t){return new J(t)}}class Q{constructor(){Q.constructor_.apply(this,arguments)}static constructor_(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){const t=arguments[0];this.init(t)}else if(arguments[0]instanceof Q){const t=arguments[0];this.init(t)}else if("string"==typeof arguments[0]){const t=arguments[0];Q.constructor_.call(this,Q.parse(t))}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.init(t,e)}}static determinant(){if("number"==typeof arguments[3]&&"number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];return Q.determinant(Q.valueOf(t),Q.valueOf(e),Q.valueOf(n),Q.valueOf(i))}if(arguments[3]instanceof Q&&arguments[2]instanceof Q&&arguments[0]instanceof Q&&arguments[1]instanceof Q){const t=arguments[1],e=arguments[2],n=arguments[3];return arguments[0].multiply(n).selfSubtract(t.multiply(e))}}static sqr(t){return Q.valueOf(t).selfMultiply(t)}static valueOf(){if("string"==typeof arguments[0]){const t=arguments[0];return Q.parse(t)}if("number"==typeof arguments[0]){return new Q(arguments[0])}}static sqrt(t){return Q.valueOf(t).sqrt()}static parse(t){let e=0;const n=t.length;for(;F.isWhitespace(t.charAt(e));)e++;let i=!1;if(e<n){const n=t.charAt(e);"-"!==n&&"+"!==n||(e++,"-"===n&&(i=!0))}const r=new Q;let s=0,o=0,l=0,a=!1;for(;!(e>=n);){const n=t.charAt(e);if(e++,F.isDigit(n)){const t=n-"0";r.selfMultiply(Q.TEN),r.selfAdd(t),s++}else{if("."!==n){if("e"===n||"E"===n){const n=t.substring(e);try{l=J.parseInt(n)}catch(e){throw e instanceof NumberFormatException?new NumberFormatException("Invalid exponent "+n+" in string "+t):e}break}throw new NumberFormatException("Unexpected character '"+n+"' at position "+e+" in string "+t)}o=s,a=!0}}let c=r;a||(o=s);const h=s-o-l;if(0===h)c=r;else if(h>0){const t=Q.TEN.pow(h);c=r.divide(t)}else if(h<0){const t=Q.TEN.pow(-h);c=r.multiply(t)}return i?c.negate():c}static createNaN(){return new Q(d.NaN,d.NaN)}static copy(t){return new Q(t)}static magnitude(t){const e=Math.abs(t),n=Math.log(e)/Math.log(10);let i=Math.trunc(Math.floor(n));return 10*Math.pow(10,i)<=e&&(i+=1),i}static stringOfChar(t,e){const n=new Z;for(let i=0;i<e;i++)n.append(t);return n.toString()}le(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<=t._lo}extractSignificantDigits(t,e){let n=this.abs(),i=Q.magnitude(n._hi);const r=Q.TEN.pow(i);n=n.divide(r),n.gt(Q.TEN)?(n=n.divide(Q.TEN),i+=1):n.lt(Q.ONE)&&(n=n.multiply(Q.TEN),i-=1);const s=i+1,o=new Z,l=Q.MAX_PRINT_DIGITS-1;for(let e=0;e<=l;e++){t&&e===s&&o.append(".");const i=Math.trunc(n._hi);if(i<0)break;let r=!1,a=0;i>9?(r=!0,a="9"):a="0"+i,o.append(a),n=n.subtract(Q.valueOf(i)).multiply(Q.TEN),r&&n.selfAdd(Q.TEN);let c=!0;const h=Q.magnitude(n._hi);if(h<0&&Math.abs(h)>=l-e&&(c=!1),!c)break}return e[0]=i,o.toString()}sqr(){return this.multiply(this)}doubleValue(){return this._hi+this._lo}subtract(){if(arguments[0]instanceof Q){const t=arguments[0];return this.add(t.negate())}if("number"==typeof arguments[0]){const t=arguments[0];return this.add(-t)}}equals(){if(1===arguments.length&&arguments[0]instanceof Q){const t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}}isZero(){return 0===this._hi&&0===this._lo}selfSubtract(){if(arguments[0]instanceof Q){const t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];return this.isNaN()?this:this.selfAdd(-t,0)}}getSpecialNumberString(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null}min(t){return this.le(t)?this:t}selfDivide(){if(1===arguments.length){if(arguments[0]instanceof Q){const t=arguments[0];return this.selfDivide(t._hi,t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];return this.selfDivide(t,0)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=null,i=null,r=null,s=null,o=null,l=null,a=null,c=null;return o=this._hi/t,l=Q.SPLIT*o,n=l-o,c=Q.SPLIT*t,n=l-n,i=o-n,r=c-t,a=o*t,r=c-r,s=t-r,c=n*r-a+n*s+i*r+i*s,l=(this._hi-a-c+this._lo-o*e)/t,c=o+l,this._hi=c,this._lo=o-c+l,this}}dump(){return"DD<"+this._hi+", "+this._lo+">"}divide(){if(arguments[0]instanceof Q){const t=arguments[0];let e=null,n=null,i=null,r=null,s=null,o=null,l=null,a=null;s=this._hi/t._hi,o=Q.SPLIT*s,e=o-s,a=Q.SPLIT*t._hi,e=o-e,n=s-e,i=a-t._hi,l=s*t._hi,i=a-i,r=t._hi-i,a=e*i-l+e*r+n*i+n*r,o=(this._hi-l-a+this._lo-s*t._lo)/t._hi,a=s+o;return new Q(a,s-a+o)}if("number"==typeof arguments[0]){const t=arguments[0];return d.isNaN(t)?Q.createNaN():Q.copy(this).selfDivide(t,0)}}ge(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>=t._lo}pow(t){if(0===t)return Q.valueOf(1);let e=new Q(this),n=Q.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2==1&&n.selfMultiply(e),i/=2,i>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n}ceil(){if(this.isNaN())return Q.NaN;const t=Math.ceil(this._hi);let e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new Q(t,e)}compareTo(t){const e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0}rint(){if(this.isNaN())return this;return this.add(.5).floor()}setValue(){if(arguments[0]instanceof Q){const t=arguments[0];return this.init(t),this}if("number"==typeof arguments[0]){const t=arguments[0];return this.init(t),this}}max(t){return this.ge(t)?this:t}sqrt(){if(this.isZero())return Q.valueOf(0);if(this.isNegative())return Q.NaN;const t=1/Math.sqrt(this._hi),e=this._hi*t,n=Q.valueOf(e),i=this.subtract(n.sqr())._hi*(.5*t);return n.add(i)}selfAdd(){if(1===arguments.length){if(arguments[0]instanceof Q){const t=arguments[0];return this.selfAdd(t._hi,t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];let e=null,n=null,i=null,r=null,s=null,o=null;return i=this._hi+t,s=i-this._hi,r=i-s,r=t-s+(this._hi-r),o=r+this._lo,e=i+o,n=o+(i-e),this._hi=e+n,this._lo=n+(e-this._hi),this}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=null,i=null,r=null,s=null,o=null,l=null,a=null,c=null;o=this._hi+t,r=this._lo+e,a=o-this._hi,c=r-this._lo,l=o-a,s=r-c,l=t-a+(this._hi-l),s=e-c+(this._lo-s),a=l+r,n=o+a,i=a+(o-n),a=s+i;const h=n+a,u=a+(n-h);return this._hi=h,this._lo=u,this}}selfMultiply(){if(1===arguments.length){if(arguments[0]instanceof Q){const t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if("number"==typeof arguments[0]){const t=arguments[0];return this.selfMultiply(t,0)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=null,i=null,r=null,s=null,o=null,l=null;o=Q.SPLIT*this._hi,n=o-this._hi,l=Q.SPLIT*t,n=o-n,i=this._hi-n,r=l-t,o=this._hi*t,r=l-r,s=t-r,l=n*r-o+n*s+i*r+i*s+(this._hi*e+this._lo*t);const a=o+l;n=o-a;const c=l+n;return this._hi=a,this._lo=c,this}}selfSqr(){return this.selfMultiply(this)}floor(){if(this.isNaN())return Q.NaN;const t=Math.floor(this._hi);let e=0;return t===this._hi&&(e=Math.floor(this._lo)),new Q(t,e)}negate(){return this.isNaN()?this:new Q(-this._hi,-this._lo)}clone(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return null;throw t}}multiply(){if(arguments[0]instanceof Q){const t=arguments[0];return t.isNaN()?Q.createNaN():Q.copy(this).selfMultiply(t)}if("number"==typeof arguments[0]){const t=arguments[0];return d.isNaN(t)?Q.createNaN():Q.copy(this).selfMultiply(t,0)}}isNaN(){return d.isNaN(this._hi)}intValue(){return Math.trunc(this._hi)}toString(){const t=Q.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()}toStandardNotation(){const t=this.getSpecialNumberString();if(null!==t)return t;const e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1;let r=n;if("."===n.charAt(0))r="0"+n;else if(i<0)r="0."+Q.stringOfChar("0",-i)+n;else if(-1===n.indexOf(".")){const t=i-n.length;r=n+Q.stringOfChar("0",t)+".0"}return this.isNegative()?"-"+r:r}reciprocal(){let t=null,e=null,n=null,i=null,r=null,s=null,o=null,l=null;r=1/this._hi,s=Q.SPLIT*r,t=s-r,l=Q.SPLIT*this._hi,t=s-t,e=r-t,n=l-this._hi,o=r*this._hi,n=l-n,i=this._hi-n,l=t*n-o+t*i+e*n+e*i,s=(1-o-l-r*this._lo)/this._hi;const a=r+s;return new Q(a,r-a+s)}toSciNotation(){if(this.isZero())return Q.SCI_NOT_ZERO;const t=this.getSpecialNumberString();if(null!==t)return t;const e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=Q.SCI_NOT_EXPONENT_CHAR+e[0];if("0"===n.charAt(0))throw new IllegalStateException("Found leading zero: "+n);let r="";n.length>1&&(r=n.substring(1));const s=n.charAt(0)+"."+r;return this.isNegative()?"-"+s+i:s+i}abs(){return this.isNaN()?Q.NaN:this.isNegative()?this.negate():new Q(this)}isPositive(){return this._hi>0||0===this._hi&&this._lo>0}lt(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<t._lo}add(){if(arguments[0]instanceof Q){const t=arguments[0];return Q.copy(this).selfAdd(t)}if("number"==typeof arguments[0]){const t=arguments[0];return Q.copy(this).selfAdd(t)}}init(){if(1===arguments.length){if("number"==typeof arguments[0]){const t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof Q){const t=arguments[0];this._hi=t._hi,this._lo=t._lo}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._hi=t,this._lo=e}}gt(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>t._lo}isNegative(){return this._hi<0||0===this._hi&&this._lo<0}trunc(){return this.isNaN()?Q.NaN:this.isPositive()?this.floor():this.ceil()}signum(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0}get interfaces_(){return[m,g,f]}}Q.PI=new Q(3.141592653589793,12246467991473532e-32),Q.TWO_PI=new Q(6.283185307179586,24492935982947064e-32),Q.PI_2=new Q(1.5707963267948966,6123233995736766e-32),Q.E=new Q(2.718281828459045,14456468917292502e-32),Q.NaN=new Q(d.NaN,d.NaN),Q.EPS=123259516440783e-46,Q.SPLIT=134217729,Q.MAX_PRINT_DIGITS=32,Q.TEN=Q.valueOf(10),Q.ONE=Q.valueOf(1),Q.SCI_NOT_EXPONENT_CHAR="E",Q.SCI_NOT_ZERO="0.0E0";class tt{static orientationIndex(t,e,n){const i=tt.orientationIndexFilter(t,e,n);if(i<=1)return i;const r=Q.valueOf(e.x).selfAdd(-t.x),s=Q.valueOf(e.y).selfAdd(-t.y),o=Q.valueOf(n.x).selfAdd(-e.x),l=Q.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(l).selfSubtract(s.selfMultiply(o)).signum()}static signOfDet2x2(){if(arguments[3]instanceof Q&&arguments[2]instanceof Q&&arguments[0]instanceof Q&&arguments[1]instanceof Q){const t=arguments[1],e=arguments[2],n=arguments[3];return arguments[0].multiply(n).selfSubtract(t.multiply(e)).signum()}if("number"==typeof arguments[3]&&"number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=Q.valueOf(t),s=Q.valueOf(e),o=Q.valueOf(n),l=Q.valueOf(i);return r.multiply(l).selfSubtract(s.multiply(o)).signum()}}static intersection(t,e,n,i){const r=new Q(t.y).selfSubtract(e.y),s=new Q(e.x).selfSubtract(t.x),o=new Q(t.x).selfMultiply(e.y).selfSubtract(new Q(e.x).selfMultiply(t.y)),l=new Q(n.y).selfSubtract(i.y),a=new Q(i.x).selfSubtract(n.x),c=new Q(n.x).selfMultiply(i.y).selfSubtract(new Q(i.x).selfMultiply(n.y)),h=s.multiply(c).selfSubtract(a.multiply(o)),u=l.multiply(o).selfSubtract(r.multiply(c)),g=r.multiply(a).selfSubtract(l.multiply(s)),f=h.selfDivide(g).doubleValue(),p=u.selfDivide(g).doubleValue();return d.isNaN(f)||d.isInfinite(f)||d.isNaN(p)||d.isInfinite(p)?null:new S(f,p)}static orientationIndexFilter(t,e,n){let i=null;const r=(t.x-n.x)*(e.y-n.y),s=(t.y-n.y)*(e.x-n.x),o=r-s;if(r>0){if(s<=0)return tt.signum(o);i=r+s}else{if(!(r<0))return tt.signum(o);if(s>=0)return tt.signum(o);i=-r-s}const l=tt.DP_SAFE_EPSILON*i;return o>=l||-o>=l?tt.signum(o):2}static signum(t){return t>0?1:t<0?-1:0}}tt.DP_SAFE_EPSILON=1e-15;class et{static index(t,e,n){return tt.orientationIndex(t,e,n)}static isCCW(){if(arguments[0]instanceof Array){const t=arguments[0],e=t.length-1;if(e<3)throw new h("Ring has fewer than 4 points, so orientation cannot be determined");let n=t[0],i=0;for(let r=1;r<=e;r++){const e=t[r];e.y>n.y&&(n=e,i=r)}let r=i;do{r-=1,r<0&&(r=e)}while(t[r].equals2D(n)&&r!==i);let s=i;do{s=(s+1)%e}while(t[s].equals2D(n)&&s!==i);const o=t[r],l=t[s];if(o.equals2D(n)||l.equals2D(n)||o.equals2D(l))return!1;const a=et.index(o,n,l);let c=null;return c=0===a?o.x>l.x:a>0,c}if(N(arguments[0],T)){const t=arguments[0],e=t.size()-1;if(e<3)throw new h("Ring has fewer than 4 points, so orientation cannot be determined");let n=t.getCoordinate(0),i=0;for(let r=1;r<=e;r++){const e=t.getCoordinate(r);e.y>n.y&&(n=e,i=r)}let r=null,s=i;do{s-=1,s<0&&(s=e),r=t.getCoordinate(s)}while(r.equals2D(n)&&s!==i);let o=null,l=i;do{l=(l+1)%e,o=t.getCoordinate(l)}while(o.equals2D(n)&&l!==i);if(r.equals2D(n)||o.equals2D(n)||r.equals2D(o))return!1;const a=et.index(r,n,o);let c=null;return c=0===a?r.x>o.x:a>0,c}}}et.CLOCKWISE=-1,et.RIGHT=et.CLOCKWISE,et.COUNTERCLOCKWISE=1,et.LEFT=et.COUNTERCLOCKWISE,et.COLLINEAR=0,et.STRAIGHT=et.COLLINEAR;class nt{}class it extends R{constructor(){super(),it.constructor_.apply(this,arguments)}static constructor_(){this._shell=null,this._holes=null;let t=arguments[0],e=arguments[1],n=arguments[2];if(R.constructor_.call(this,n),null===t&&(t=this.getFactory().createLinearRing()),null===e&&(e=[]),R.hasNullElements(e))throw new h("holes must not contain null elements");if(t.isEmpty()&&R.hasNonEmptyElements(e))throw new h("shell is empty but holes are not");this._shell=t,this._holes=e}computeEnvelopeInternal(){return this._shell.getEnvelopeInternal()}getCoordinates(){if(this.isEmpty())return[];const t=new Array(this.getNumPoints()).fill(null);let e=-1;const n=this._shell.getCoordinates();for(let i=0;i<n.length;i++)e++,t[e]=n[i];for(let n=0;n<this._holes.length;n++){const i=this._holes[n].getCoordinates();for(let n=0;n<i.length;n++)e++,t[e]=i[n]}return t}getArea(){let t=0;t+=Y.ofRing(this._shell.getCoordinateSequence());for(let e=0;e<this._holes.length;e++)t-=Y.ofRing(this._holes[e].getCoordinateSequence());return t}copyInternal(){const t=this._shell.copy(),e=new Array(this._holes.length).fill(null);for(let t=0;t<this._holes.length;t++)e[t]=this._holes[t].copy();return new it(t,e,this._factory)}isRectangle(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;const t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal();for(let n=0;n<5;n++){const i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;const r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}let n=t.getX(0),i=t.getY(0);for(let e=1;e<=4;e++){const r=t.getX(e),s=t.getY(e);if(r!==n===(s!==i))return!1;n=r,i=s}return!0}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof R){const t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;const n=t,i=this._shell,r=n._shell;if(!i.equalsExact(r,e))return!1;if(this._holes.length!==n._holes.length)return!1;for(let t=0;t<this._holes.length;t++)if(!this._holes[t].equalsExact(n._holes[t],e))return!1;return!0}return super.equalsExact.apply(this,arguments)}normalize(){if(0===arguments.length){this._shell=this.normalized(this._shell,!0);for(let t=0;t<this._holes.length;t++)this._holes[t]=this.normalized(this._holes[t],!1);K.sort(this._holes)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];if(t.isEmpty())return null;const n=t.getCoordinateSequence(),i=P.minCoordinateIndex(n,0,n.size()-2);P.scroll(n,i,!0),et.isCCW(n)===e&&P.reverse(n)}}getCoordinate(){return this._shell.getCoordinate()}getNumInteriorRing(){return this._holes.length}getBoundaryDimension(){return 1}reverseInternal(){const t=this.getExteriorRing().reverse(),e=new Array(this.getNumInteriorRing()).fill(null);for(let t=0;t<e.length;t++)e[t]=this.getInteriorRingN(t).reverse();return this.getFactory().createPolygon(t,e)}getTypeCode(){return R.TYPECODE_POLYGON}getDimension(){return 2}getLength(){let t=0;t+=this._shell.getLength();for(let e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t}getNumPoints(){let t=this._shell.getNumPoints();for(let e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t}convexHull(){return this.getExteriorRing().convexHull()}normalized(t,e){const n=t.copy();return this.normalize(n,e),n}compareToSameClass(){if(1===arguments.length){const t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){const t=arguments[1],e=arguments[0],n=this._shell,i=e._shell,r=n.compareToSameClass(i,t);if(0!==r)return r;const s=this.getNumInteriorRing(),o=e.getNumInteriorRing();let l=0;for(;l<s&&l<o;){const n=this.getInteriorRingN(l),i=e.getInteriorRingN(l),r=n.compareToSameClass(i,t);if(0!==r)return r;l++}return l<s?1:l<o?-1:0}}apply(){if(N(arguments[0],L)){const t=arguments[0];this._shell.apply(t);for(let e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(N(arguments[0],z)){const t=arguments[0];if(this._shell.apply(t),!t.isDone())for(let e=0;e<this._holes.length&&(this._holes[e].apply(t),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],G)){arguments[0].filter(this)}else if(N(arguments[0],v)){const t=arguments[0];t.filter(this),this._shell.apply(t);for(let e=0;e<this._holes.length;e++)this._holes[e].apply(t)}}getBoundary(){if(this.isEmpty())return this.getFactory().createMultiLineString();const t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(let e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)}getGeometryType(){return R.TYPENAME_POLYGON}getExteriorRing(){return this._shell}isEmpty(){return this._shell.isEmpty()}getInteriorRingN(t){return this._holes[t]}get interfaces_(){return[nt]}}class rt extends X{contains(){}}class st extends rt{}class ot extends st{constructor(t){super(),this.array=[],t instanceof X&&this.addAll(t)}contains(t){for(const e of this.array)if(0===e.compareTo(t))return!0;return!1}add(t){if(this.contains(t))return!1;for(let e=0,n=this.array.length;e<n;e++){if(1===this.array[e].compareTo(t))return!!this.array.splice(e,0,t)}return this.array.push(t),!0}addAll(t){for(const e of t)this.add(e);return!0}remove(){throw new A}size(){return this.array.length}isEmpty(){return 0===this.array.length}toArray(){return this.array.slice()}iterator(){return new lt(this.array)}}class lt{constructor(t){this.array=t,this.position=0}next(){if(this.position===this.array.length)throw new V;return this.array[this.position++]}hasNext(){return this.position<this.array.length}remove(){throw new A}}class at extends R{constructor(){super(),at.constructor_.apply(this,arguments)}static constructor_(){if(this._geometries=null,0===arguments.length);else if(2===arguments.length){let t=arguments[0],e=arguments[1];if(R.constructor_.call(this,e),null===t&&(t=[]),R.hasNullElements(t))throw new h("geometries must not contain null elements");this._geometries=t}}computeEnvelopeInternal(){const t=new O;for(let e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t}getGeometryN(t){return this._geometries[t]}getCoordinates(){const t=new Array(this.getNumPoints()).fill(null);let e=-1;for(let n=0;n<this._geometries.length;n++){const i=this._geometries[n].getCoordinates();for(let n=0;n<i.length;n++)e++,t[e]=i[n]}return t}getArea(){let t=0;for(let e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new at(t,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof R){const t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;const n=t;if(this._geometries.length!==n._geometries.length)return!1;for(let t=0;t<this._geometries.length;t++)if(!this._geometries[t].equalsExact(n._geometries[t],e))return!1;return!0}return super.equalsExact.apply(this,arguments)}normalize(){for(let t=0;t<this._geometries.length;t++)this._geometries[t].normalize();K.sort(this._geometries)}getCoordinate(){return this.isEmpty()?null:this._geometries[0].getCoordinate()}getBoundaryDimension(){let t=M.FALSE;for(let e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t}reverseInternal(){const t=this._geometries.length,e=new W(t);for(let n=0;n<t;n++)e.add(this._geometries[n].reverse());return this.getFactory().buildGeometry(e)}getTypeCode(){return R.TYPECODE_GEOMETRYCOLLECTION}getDimension(){let t=M.FALSE;for(let e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t}getLength(){let t=0;for(let e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t}getNumPoints(){let t=0;for(let e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t}getNumGeometries(){return this._geometries.length}compareToSameClass(){if(1===arguments.length){const t=arguments[0],e=new ot(K.asList(this._geometries)),n=new ot(K.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){const t=arguments[1],e=arguments[0],n=this.getNumGeometries(),i=e.getNumGeometries();let r=0;for(;r<n&&r<i;){const n=this.getGeometryN(r),i=e.getGeometryN(r),s=n.compareToSameClass(i,t);if(0!==s)return s;r++}return r<n?1:r<i?-1:0}}apply(){if(N(arguments[0],L)){const t=arguments[0];for(let e=0;e<this._geometries.length;e++)this._geometries[e].apply(t)}else if(N(arguments[0],z)){const t=arguments[0];if(0===this._geometries.length)return null;for(let e=0;e<this._geometries.length&&(this._geometries[e].apply(t),!t.isDone());e++);t.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],G)){const t=arguments[0];t.filter(this);for(let e=0;e<this._geometries.length;e++)this._geometries[e].apply(t)}else if(N(arguments[0],v)){const t=arguments[0];t.filter(this);for(let e=0;e<this._geometries.length;e++)this._geometries[e].apply(t)}}getBoundary(){return R.checkNotGeometryCollection(this),x.shouldNeverReachHere(),null}getGeometryType(){return R.TYPENAME_GEOMETRYCOLLECTION}isEmpty(){for(let t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0}}class ct extends at{constructor(){super(),ct.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];at.constructor_.call(this,t,e)}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new ct(t,this._factory)}isValid(){return!0}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof R){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&super.equalsExact.call(this,t,e)}return super.equalsExact.apply(this,arguments)}getCoordinate(){if(1===arguments.length&&Number.isInteger(arguments[0])){const t=arguments[0];return this._geometries[t].getCoordinate()}return super.getCoordinate.apply(this,arguments)}getBoundaryDimension(){return M.FALSE}getTypeCode(){return R.TYPECODE_MULTIPOINT}getDimension(){return 0}getBoundary(){return this.getFactory().createGeometryCollection()}getGeometryType(){return R.TYPENAME_MULTIPOINT}get interfaces_(){return[B]}}class ht extends k{constructor(){super(),ht.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];k.constructor_.call(this,t,e),this.validateConstruction()}copyInternal(){return new ht(this._points.copy(),this._factory)}getBoundaryDimension(){return M.FALSE}isClosed(){return!!this.isEmpty()||super.isClosed.call(this)}reverseInternal(){const t=this._points.copy();return P.reverse(t),this.getFactory().createLinearRing(t)}getTypeCode(){return R.TYPECODE_LINEARRING}validateConstruction(){if(!this.isEmpty()&&!super.isClosed.call(this))throw new h("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<ht.MINIMUM_VALID_SIZE)throw new h("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")}getGeometryType(){return R.TYPENAME_LINEARRING}}ht.MINIMUM_VALID_SIZE=4;class ut extends S{constructor(){super(),ut.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)S.constructor_.call(this);else if(1===arguments.length){if(arguments[0]instanceof ut){const t=arguments[0];S.constructor_.call(this,t.x,t.y)}else if(arguments[0]instanceof S){const t=arguments[0];S.constructor_.call(this,t.x,t.y)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];S.constructor_.call(this,t,e,S.NULL_ORDINATE)}}setOrdinate(t,e){switch(t){case ut.X:this.x=e;break;case ut.Y:this.y=e;break;default:throw new h("Invalid ordinate index: "+t)}}getZ(){return S.NULL_ORDINATE}getOrdinate(t){switch(t){case ut.X:return this.x;case ut.Y:return this.y}throw new h("Invalid ordinate index: "+t)}setZ(t){throw new h("CoordinateXY dimension 2 does not support z-ordinate")}copy(){return new ut(this)}toString(){return"("+this.x+", "+this.y+")"}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}}ut.X=0,ut.Y=1,ut.Z=-1,ut.M=-1;class dt extends S{constructor(){super(),dt.constructor_.apply(this,arguments)}static constructor_(){if(this._m=null,0===arguments.length)S.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof dt){const t=arguments[0];S.constructor_.call(this,t.x,t.y),this._m=t._m}else if(arguments[0]instanceof S){const t=arguments[0];S.constructor_.call(this,t.x,t.y),this._m=this.getM()}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];S.constructor_.call(this,t,e,S.NULL_ORDINATE),this._m=n}}getM(){return this._m}setOrdinate(t,e){switch(t){case dt.X:this.x=e;break;case dt.Y:this.y=e;break;case dt.M:this._m=e;break;default:throw new h("Invalid ordinate index: "+t)}}setM(t){this._m=t}getZ(){return S.NULL_ORDINATE}getOrdinate(t){switch(t){case dt.X:return this.x;case dt.Y:return this.y;case dt.M:return this._m}throw new h("Invalid ordinate index: "+t)}setZ(t){throw new h("CoordinateXY dimension 2 does not support z-ordinate")}copy(){return new dt(this)}toString(){return"("+this.x+", "+this.y+" m="+this.getM()+")"}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}}dt.X=0,dt.Y=1,dt.Z=-1,dt.M=2;class gt extends S{constructor(){super(),gt.constructor_.apply(this,arguments)}static constructor_(){if(this._m=null,0===arguments.length)S.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof gt){const t=arguments[0];S.constructor_.call(this,t),this._m=t._m}else if(arguments[0]instanceof S){const t=arguments[0];S.constructor_.call(this,t),this._m=this.getM()}}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];S.constructor_.call(this,t,e,n),this._m=i}}getM(){return this._m}setOrdinate(t,e){switch(t){case S.X:this.x=e;break;case S.Y:this.y=e;break;case S.Z:this.z=e;break;case S.M:this._m=e;break;default:throw new h("Invalid ordinate index: "+t)}}setM(t){this._m=t}getOrdinate(t){switch(t){case S.X:return this.x;case S.Y:return this.y;case S.Z:return this.getZ();case S.M:return this.getM()}throw new h("Invalid ordinate index: "+t)}copy(){return new gt(this)}toString(){return"("+this.x+", "+this.y+", "+this.getZ()+" m="+this.getM()+")"}setCoordinate(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}}class ft{static measures(t){return t instanceof ut?0:t instanceof dt||t instanceof gt?1:0}static dimension(t){return t instanceof ut?2:t instanceof dt?3:t instanceof gt?4:3}static create(){if(1===arguments.length){const t=arguments[0];return ft.create(t,0)}if(2===arguments.length){const t=arguments[0],e=arguments[1];return 2===t?new ut:3===t&&0===e?new S:3===t&&1===e?new dt:4===t&&1===e?new gt:new S}}}class pt extends W{constructor(){super(),pt.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.ensureCapacity(t.length),this.add(t,!0)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.ensureCapacity(t.length),this.add(t,e)}}getCoordinate(t){return this.get(t)}addAll(){if(2===arguments.length&&"boolean"==typeof arguments[1]&&N(arguments[0],X)){const t=arguments[1];let e=!1;for(let n=arguments[0].iterator();n.hasNext();)this.add(n.next(),t),e=!0;return e}return super.addAll.apply(this,arguments)}clone(){const t=super.clone.call(this);for(let e=0;e<this.size();e++)t.add(e,this.get(e).clone());return t}toCoordinateArray(){if(0===arguments.length)return this.toArray(pt.coordArrayType);if(1===arguments.length){if(arguments[0])return this.toArray(pt.coordArrayType);const t=this.size(),e=new Array(t).fill(null);for(let n=0;n<t;n++)e[n]=this.get(t-n-1);return e}}add(){if(1===arguments.length){const t=arguments[0];return super.add.call(this,t)}if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return this.add(t,e,!0),!0}if(arguments[0]instanceof S&&"boolean"==typeof arguments[1]){const t=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(t))return null}super.add.call(this,t)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return this.add(t,e),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(arguments[2])for(let n=0;n<t.length;n++)this.add(t[n],e);else for(let n=t.length-1;n>=0;n--)this.add(t[n],e);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof S){const t=arguments[0],e=arguments[1];if(!arguments[2]){const n=this.size();if(n>0){if(t>0){if(this.get(t-1).equals2D(e))return null}if(t<n){if(this.get(t).equals2D(e))return null}}}super.add.call(this,t,e)}}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];let r=1;n>i&&(r=-1);for(let s=n;s!==i;s+=r)this.add(t[s],e);return!0}}closeRing(){if(this.size()>0){const t=this.get(0).copy();this.add(t,!1)}}}pt.coordArrayType=new Array(0).fill(null);class mt{static log10(t){const e=Math.log(t);return d.isInfinite(e)||d.isNaN(e)?e:e/mt.LOG_10}static min(t,e,n,i){let r=t;return e<r&&(r=e),n<r&&(r=n),i<r&&(r=i),r}static clamp(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}}static wrap(t,e){return t<0?e- -t%e:t%e}static max(){if(3===arguments.length){const t=arguments[1],e=arguments[2];let n=arguments[0];return t>n&&(n=t),e>n&&(n=e),n}if(4===arguments.length){const t=arguments[1],e=arguments[2],n=arguments[3];let i=arguments[0];return t>i&&(i=t),e>i&&(i=e),n>i&&(i=n),i}}static average(t,e){return(t+e)/2}}mt.LOG_10=Math.log(10);class _t{static arraycopy(t,e,n,i,r){let s=0;for(let o=e;o<e+r;o++)n[i+s]=t[o],s++}static getProperty(t){return{"line.separator":"\n"}[t]}}class yt{static isRing(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])}static ptNotInList(t,e){for(let n=0;n<t.length;n++){const i=t[n];if(yt.indexOf(i,e)<0)return i}return null}static scroll(t,e){const n=yt.indexOf(e,t);if(n<0)return null;const i=new Array(t.length).fill(null);_t.arraycopy(t,n,i,0,t.length-n),_t.arraycopy(t,0,i,t.length-n,n),_t.arraycopy(i,0,t,0,t.length)}static equals(){if(2===arguments.length){const t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(let i=0;i<t.length;i++)if(0!==n.compare(t[i],e[i]))return!1;return!0}}static intersection(t,e){const n=new pt;for(let i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()}static measures(t){if(null===t||0===t.length)return 0;let e=0;for(const n of t)e=Math.max(e,ft.measures(n));return e}static hasRepeatedPoints(t){for(let e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1}static removeRepeatedPoints(t){if(!yt.hasRepeatedPoints(t))return t;return new pt(t,!1).toCoordinateArray()}static reverse(t){const e=t.length-1,n=Math.trunc(e/2);for(let i=0;i<=n;i++){const n=t[i];t[i]=t[e-i],t[e-i]=n}}static removeNull(t){let e=0;for(let n=0;n<t.length;n++)null!==t[n]&&e++;const n=new Array(e).fill(null);if(0===e)return n;let i=0;for(let e=0;e<t.length;e++)null!==t[e]&&(n[i++]=t[e]);return n}static copyDeep(){if(1===arguments.length){const t=arguments[0],e=new Array(t.length).fill(null);for(let n=0;n<t.length;n++)e[n]=t[n].copy();return e}if(5===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=arguments[4];for(let s=0;s<r;s++)n[i+s]=t[e+s].copy()}}static isEqualReversed(t,e){for(let n=0;n<t.length;n++){const i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0}static envelope(t){const e=new O;for(let n=0;n<t.length;n++)e.expandToInclude(t[n]);return e}static toCoordinateArray(t){return t.toArray(yt.coordArrayType)}static dimension(t){if(null===t||0===t.length)return 3;let e=0;for(const n of t)e=Math.max(e,ft.dimension(n));return e}static atLeastNCoordinatesOrNothing(t,e){return e.length>=t?e:[]}static indexOf(t,e){for(let n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1}static increasingDirection(t){for(let e=0;e<Math.trunc(t.length/2);e++){const n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1}static compare(t,e){let n=0;for(;n<t.length&&n<e.length;){const i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0}static minCoordinate(t){let e=null;for(let n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e}static extract(t,e,n){e=mt.clamp(e,0,t.length);let i=(n=mt.clamp(n,-1,t.length))-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);const r=new Array(i).fill(null);if(0===i)return r;let s=0;for(let i=e;i<=n;i++)r[s++]=t[i];return r}}yt.ForwardComparator=class{compare(t,e){const n=t,i=e;return yt.compare(n,i)}get interfaces_(){return[p]}},yt.BidirectionalComparator=class{compare(t,e){const n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;const r=yt.compare(n,i);return yt.isEqualReversed(n,i)?0:r}OLDcompare(t,e){const n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;const r=yt.increasingDirection(n),s=yt.increasingDirection(i);let o=r>0?0:n.length-1,l=s>0?0:n.length-1;for(let t=0;t<n.length;t++){const t=n[o].compareTo(i[l]);if(0!==t)return t;o+=r,l+=s}return 0}get interfaces_(){return[p]}},yt.coordArrayType=new Array(0).fill(null);class xt{constructor(t){this.str=t}append(t){this.str+=t}setCharAt(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}toString(){return this.str}}class It{constructor(){It.constructor_.apply(this,arguments)}static constructor_(){if(this._dimension=3,this._measures=0,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];It.constructor_.call(this,t,yt.dimension(t),yt.measures(t))}else if(Number.isInteger(arguments[0])){const t=arguments[0];this._coordinates=new Array(t).fill(null);for(let e=0;e<t;e++)this._coordinates[e]=new S}else if(N(arguments[0],T)){const t=arguments[0];if(null===t)return this._coordinates=new Array(0).fill(null),null;this._dimension=t.getDimension(),this._measures=t.getMeasures(),this._coordinates=new Array(t.size()).fill(null);for(let e=0;e<this._coordinates.length;e++)this._coordinates[e]=t.getCoordinateCopy(e)}}else if(2===arguments.length){if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1];It.constructor_.call(this,t,e,yt.measures(t))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1];this._coordinates=new Array(t).fill(null),this._dimension=e;for(let n=0;n<t;n++)this._coordinates[n]=ft.create(e)}}else if(3===arguments.length)if(Number.isInteger(arguments[2])&&arguments[0]instanceof Array&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1],n=arguments[2];this._dimension=e,this._measures=n,this._coordinates=null===t?new Array(0).fill(null):t}else if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const t=arguments[0],e=arguments[1],n=arguments[2];this._coordinates=new Array(t).fill(null),this._dimension=e,this._measures=n;for(let e=0;e<t;e++)this._coordinates[e]=this.createCoordinate()}}getM(t){return this.hasM()?this._coordinates[t].getM():d.NaN}setOrdinate(t,e,n){switch(e){case T.X:this._coordinates[t].x=n;break;case T.Y:this._coordinates[t].y=n;break;default:this._coordinates[t].setOrdinate(e,n)}}getZ(t){return this.hasZ()?this._coordinates[t].getZ():d.NaN}size(){return this._coordinates.length}getOrdinate(t,e){switch(e){case T.X:return this._coordinates[t].x;case T.Y:return this._coordinates[t].y;default:return this._coordinates[t].getOrdinate(e)}}getCoordinate(){if(1===arguments.length){const t=arguments[0];return this._coordinates[t]}if(2===arguments.length){const t=arguments[0];arguments[1].setCoordinate(this._coordinates[t])}}getCoordinateCopy(t){const e=this.createCoordinate();return e.setCoordinate(this._coordinates[t]),e}createCoordinate(){return ft.create(this.getDimension(),this.getMeasures())}getDimension(){return this._dimension}getX(t){return this._coordinates[t].x}getMeasures(){return this._measures}expandEnvelope(t){for(let e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t}copy(){const t=new Array(this.size()).fill(null);for(let e=0;e<this._coordinates.length;e++){const n=this.createCoordinate();n.setCoordinate(this._coordinates[e]),t[e]=n}return new It(t,this._dimension,this._measures)}toString(){if(this._coordinates.length>0){const t=new xt(17*this._coordinates.length);t.append("("),t.append(this._coordinates[0]);for(let e=1;e<this._coordinates.length;e++)t.append(", "),t.append(this._coordinates[e]);return t.append(")"),t.toString()}return"()"}getY(t){return this._coordinates[t].y}toCoordinateArray(){return this._coordinates}get interfaces_(){return[T,m]}}class Et{static instance(){return Et.instanceObject}readResolve(){return Et.instance()}create(){if(1===arguments.length){if(arguments[0]instanceof Array){return new It(arguments[0])}if(N(arguments[0],T)){return new It(arguments[0])}}else{if(2===arguments.length){let t=arguments[1];return t>3&&(t=3),t<2&&(t=2),new It(arguments[0],t)}if(3===arguments.length){let t=arguments[2],e=arguments[1]-t;return t>1&&(t=1),e>3&&(e=3),e<2&&(e=2),new It(arguments[0],e+t,t)}}}get interfaces_(){return[b,m]}}Et.instanceObject=new Et;class Ct extends at{constructor(){super(),Ct.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];at.constructor_.call(this,t,e)}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new Ct(t,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof R){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&super.equalsExact.call(this,t,e)}return super.equalsExact.apply(this,arguments)}getBoundaryDimension(){return 1}getTypeCode(){return R.TYPECODE_MULTIPOLYGON}getDimension(){return 2}getBoundary(){if(this.isEmpty())return this.getFactory().createMultiLineString();const t=new W;for(let e=0;e<this._geometries.length;e++){const n=this._geometries[e].getBoundary();for(let e=0;e<n.getNumGeometries();e++)t.add(n.getGeometryN(e))}const e=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(e))}getGeometryType(){return R.TYPENAME_MULTIPOLYGON}get interfaces_(){return[nt]}}class St{get(){}put(){}size(){}values(){}entrySet(){}}class wt extends rt{constructor(t){super(),this.map=new Map,t instanceof X&&this.addAll(t)}contains(t){const e=t.hashCode?t.hashCode():t;return!!this.map.has(e)}add(t){const e=t.hashCode?t.hashCode():t;return!this.map.has(e)&&!!this.map.set(e,t)}addAll(t){for(const e of t)this.add(e);return!0}remove(){throw new A}size(){return this.map.size}isEmpty(){return 0===this.map.size}toArray(){return Array.from(this.map.values())}iterator(){return new Nt(this.map)}[Symbol.iterator](){return this.map}}class Nt{constructor(t){this.iterator=t.values();const{done:e,value:n}=this.iterator.next();this.done=e,this.value=n}next(){if(this.done)throw new V;const t=this.value,{done:e,value:n}=this.iterator.next();return this.done=e,this.value=n,t}hasNext(){return!this.done}remove(){throw new A}}class Tt extends St{constructor(){super(),this.map=new Map}get(t){return this.map.get(t)||null}put(t,e){return this.map.set(t,e),e}values(){const t=new W,e=this.map.values();let n=e.next();for(;!n.done;)t.add(n.value),n=e.next();return t}entrySet(){const t=new wt;return this.map.entries().forEach((e=>t.add(e))),t}size(){return this.map.size()}}class bt{constructor(){bt.constructor_.apply(this,arguments)}static constructor_(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=bt.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof vt){const t=arguments[0];this._modelType=t,t===bt.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){const t=arguments[0];this._modelType=bt.FIXED,this.setScale(t)}else if(arguments[0]instanceof bt){const t=arguments[0];this._modelType=t._modelType,this._scale=t._scale}}static mostPrecise(t,e){return t.compareTo(e)>=0?t:e}equals(t){if(!(t instanceof bt))return!1;const e=t;return this._modelType===e._modelType&&this._scale===e._scale}compareTo(t){const e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return J.compare(n,i)}getScale(){return this._scale}isFloating(){return this._modelType===bt.FLOATING||this._modelType===bt.FLOATING_SINGLE}getType(){return this._modelType}toString(){let t="UNKNOWN";return this._modelType===bt.FLOATING?t="Floating":this._modelType===bt.FLOATING_SINGLE?t="Floating-Single":this._modelType===bt.FIXED&&(t="Fixed (Scale="+this.getScale()+")"),t}makePrecise(){if("number"==typeof arguments[0]){const t=arguments[0];if(d.isNaN(t))return t;if(this._modelType===bt.FLOATING_SINGLE){return t}return this._modelType===bt.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof S){const t=arguments[0];if(this._modelType===bt.FLOATING)return null;t.x=this.makePrecise(t.x),t.y=this.makePrecise(t.y)}}getMaximumSignificantDigits(){let t=16;return this._modelType===bt.FLOATING?t=16:this._modelType===bt.FLOATING_SINGLE?t=6:this._modelType===bt.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t}setScale(t){this._scale=Math.abs(t)}get interfaces_(){return[m,g]}}class vt{constructor(){vt.constructor_.apply(this,arguments)}static constructor_(){this._name=null;const t=arguments[0];this._name=t,vt.nameToTypeMap.put(t,this)}readResolve(){return vt.nameToTypeMap.get(this._name)}toString(){return this._name}get interfaces_(){return[m]}}vt.nameToTypeMap=new Tt,bt.Type=vt,bt.FIXED=new vt("FIXED"),bt.FLOATING=new vt("FLOATING"),bt.FLOATING_SINGLE=new vt("FLOATING SINGLE"),bt.maximumPreciseValue=9007199254740992;class Ot extends at{constructor(){super(),Ot.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];at.constructor_.call(this,t,e)}copyInternal(){const t=new Array(this._geometries.length).fill(null);for(let e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new Ot(t,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof R){const t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&super.equalsExact.call(this,t,e)}return super.equalsExact.apply(this,arguments)}getBoundaryDimension(){return this.isClosed()?M.FALSE:0}isClosed(){if(this.isEmpty())return!1;for(let t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0}getTypeCode(){return R.TYPECODE_MULTILINESTRING}getDimension(){return 1}getBoundary(){throw new A}getGeometryType(){return R.TYPENAME_MULTILINESTRING}get interfaces_(){return[D]}}class Rt{constructor(){Rt.constructor_.apply(this,arguments)}static constructor_(){if(this._precisionModel=null,this._coordinateSequenceFactory=null,this._SRID=null,0===arguments.length)Rt.constructor_.call(this,new bt,0);else if(1===arguments.length){if(N(arguments[0],b)){const t=arguments[0];Rt.constructor_.call(this,new bt,0,t)}else if(arguments[0]instanceof bt){const t=arguments[0];Rt.constructor_.call(this,t,0,Rt.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];Rt.constructor_.call(this,t,e,Rt.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._precisionModel=t,this._coordinateSequenceFactory=n,this._SRID=e}}static toMultiPolygonArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toGeometryArray(t){if(null===t)return null;const e=new Array(t.size()).fill(null);return t.toArray(e)}static getDefaultCoordinateSequenceFactory(){return Et.instance()}static toMultiLineStringArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toLineStringArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toMultiPointArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toLinearRingArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toPointArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static toPolygonArray(t){const e=new Array(t.size()).fill(null);return t.toArray(e)}static createPointFromInternalCoord(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)}createEmpty(t){switch(t){case-1:return this.createGeometryCollection();case 0:return this.createPoint();case 1:return this.createLineString();case 2:return this.createPolygon();default:throw new h("Invalid dimension: "+t)}}toGeometry(t){return t.isNull()?this.createPoint():t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new S(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new S(t.getMinX(),t.getMinY()),new S(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new S(t.getMinX(),t.getMinY()),new S(t.getMinX(),t.getMaxY()),new S(t.getMaxX(),t.getMaxY()),new S(t.getMaxX(),t.getMinY()),new S(t.getMinX(),t.getMinY())]),null)}createLineString(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];return this.createLineString(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(N(arguments[0],T)){return new k(arguments[0],this)}}}createMultiLineString(){if(0===arguments.length)return new Ot(null,this);if(1===arguments.length){return new Ot(arguments[0],this)}}buildGeometry(t){let e=null,n=!1,i=!1;for(let r=t.iterator();r.hasNext();){const t=r.next(),s=t.getTypeCode();null===e&&(e=s),s!==e&&(n=!0),t instanceof at&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(Rt.toGeometryArray(t));const r=t.iterator().next();if(t.size()>1){if(r instanceof it)return this.createMultiPolygon(Rt.toPolygonArray(t));if(r instanceof k)return this.createMultiLineString(Rt.toLineStringArray(t));if(r instanceof q)return this.createMultiPoint(Rt.toPointArray(t));x.shouldNeverReachHere("Unhandled geometry type: "+r.getGeometryType())}return r}createMultiPointFromCoords(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)}createPoint(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof S){const t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(N(arguments[0],T)){return new q(arguments[0],this)}}}getCoordinateSequenceFactory(){return this._coordinateSequenceFactory}createPolygon(){if(0===arguments.length)return this.createPolygon(null,null);if(1===arguments.length){if(N(arguments[0],T)){const t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){const t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof ht){const t=arguments[0];return this.createPolygon(t,null)}}else if(2===arguments.length){return new it(arguments[0],arguments[1],this)}}getSRID(){return this._SRID}createGeometryCollection(){if(0===arguments.length)return new at(null,this);if(1===arguments.length){return new at(arguments[0],this)}}getPrecisionModel(){return this._precisionModel}createLinearRing(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(N(arguments[0],T)){return new ht(arguments[0],this)}}}createMultiPolygon(){if(0===arguments.length)return new Ct(null,this);if(1===arguments.length){return new Ct(arguments[0],this)}}createMultiPoint(){if(0===arguments.length)return new ct(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){return new ct(arguments[0],this)}if(N(arguments[0],T)){const t=arguments[0];if(null===t)return this.createMultiPoint(new Array(0).fill(null));const e=new Array(t.size()).fill(null);for(let n=0;n<t.size();n++){const i=this.getCoordinateSequenceFactory().create(1,t.getDimension(),t.getMeasures());P.copy(t,n,i,0,1),e[n]=this.createPoint(i)}return this.createMultiPoint(e)}}}get interfaces_(){return[m]}}const Lt="XY",Dt="XYZ",Pt="XYM",At="XYZM",Ft={POINT:"Point",LINE_STRING:"LineString",LINEAR_RING:"LinearRing",POLYGON:"Polygon",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon",GEOMETRY_COLLECTION:"GeometryCollection",CIRCLE:"Circle"},Mt=1,Gt=2,zt=3,kt=4,Bt=5,qt=6,Yt={};for(const t in Ft)Yt[t]=Ft[t].toUpperCase();class Xt{constructor(t){this.wkt=t,this.index_=-1}isAlpha_(t){return t>="a"&&t<="z"||t>="A"&&t<="Z"}isNumeric_(t,e){return t>="0"&&t<="9"||"."==t&&!(void 0!==e&&e)}isWhiteSpace_(t){return" "==t||"\t"==t||"\r"==t||"\n"==t}nextChar_(){return this.wkt.charAt(++this.index_)}nextToken(){const t=this.nextChar_(),e=this.index_;let n,i=t;if("("==t)n=Gt;else if(","==t)n=Bt;else if(")"==t)n=zt;else if(this.isNumeric_(t)||"-"==t)n=kt,i=this.readNumber_();else if(this.isAlpha_(t))n=Mt,i=this.readText_();else{if(this.isWhiteSpace_(t))return this.nextToken();if(""!==t)throw new Error("Unexpected character: "+t);n=qt}return{position:e,value:i,type:n}}readNumber_(){let t;const e=this.index_;let n=!1,i=!1;do{"."==t?n=!0:"e"!=t&&"E"!=t||(i=!0),t=this.nextChar_()}while(this.isNumeric_(t,n)||!i&&("e"==t||"E"==t)||i&&("-"==t||"+"==t));return parseFloat(this.wkt.substring(e,this.index_--))}readText_(){let t;const e=this.index_;do{t=this.nextChar_()}while(this.isAlpha_(t));return this.wkt.substring(e,this.index_--).toUpperCase()}}class jt{constructor(t,e){this.lexer_=t,this.token_,this.layout_=Lt,this.factory=e}consume_(){this.token_=this.lexer_.nextToken()}isTokenType(t){return this.token_.type==t}match(t){const e=this.isTokenType(t);return e&&this.consume_(),e}parse(){this.consume_();return this.parseGeometry_()}parseGeometryLayout_(){let t=Lt;const e=this.token_;if(this.isTokenType(Mt)){const n=e.value;"Z"===n?t=Dt:"M"===n?t=Pt:"ZM"===n&&(t=At),t!==Lt&&this.consume_()}return t}parseGeometryCollectionText_(){if(this.match(Gt)){const t=[];do{t.push(this.parseGeometry_())}while(this.match(Bt));if(this.match(zt))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePointText_(){if(this.match(Gt)){const t=this.parsePoint_();if(this.match(zt))return t}else if(this.isEmptyGeometry_())return null;throw new Error(this.formatErrorMessage_())}parseLineStringText_(){if(this.match(Gt)){const t=this.parsePointList_();if(this.match(zt))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePolygonText_(){if(this.match(Gt)){const t=this.parseLineStringTextList_();if(this.match(zt))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPointText_(){if(this.match(Gt)){let t;if(t=this.token_.type==Gt?this.parsePointTextList_():this.parsePointList_(),this.match(zt))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiLineStringText_(){if(this.match(Gt)){const t=this.parseLineStringTextList_();if(this.match(zt))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPolygonText_(){if(this.match(Gt)){const t=this.parsePolygonTextList_();if(this.match(zt))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePoint_(){const t=[],e=this.layout_.length;for(let n=0;n<e;++n){const e=this.token_;if(!this.match(kt))break;t.push(e.value)}if(t.length==e)return t;throw new Error(this.formatErrorMessage_())}parsePointList_(){const t=[this.parsePoint_()];for(;this.match(Bt);)t.push(this.parsePoint_());return t}parsePointTextList_(){const t=[this.parsePointText_()];for(;this.match(Bt);)t.push(this.parsePointText_());return t}parseLineStringTextList_(){const t=[this.parseLineStringText_()];for(;this.match(Bt);)t.push(this.parseLineStringText_());return t}parsePolygonTextList_(){const t=[this.parsePolygonText_()];for(;this.match(Bt);)t.push(this.parsePolygonText_());return t}isEmptyGeometry_(){const t=this.isTokenType(Mt)&&"EMPTY"==this.token_.value;return t&&this.consume_(),t}formatErrorMessage_(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"}parseGeometry_(){const t=this.factory,e=t=>new S(...t),n=n=>{const i=n.map((n=>t.createLinearRing(n.map(e))));return i.length>1?t.createPolygon(i[0],i.slice(1)):t.createPolygon(i[0])},i=this.token_;if(this.match(Mt)){const r=i.value;if(this.layout_=this.parseGeometryLayout_(),"GEOMETRYCOLLECTION"==r){const e=this.parseGeometryCollectionText_();return t.createGeometryCollection(e)}switch(r){case"POINT":{const e=this.parsePointText_();return e?t.createPoint(new S(...e)):t.createPoint()}case"LINESTRING":{const n=this.parseLineStringText_().map(e);return t.createLineString(n)}case"LINEARRING":{const n=this.parseLineStringText_().map(e);return t.createLinearRing(n)}case"POLYGON":{const e=this.parsePolygonText_();return e&&0!==e.length?n(e):t.createPolygon()}case"MULTIPOINT":{const n=this.parseMultiPointText_();if(!n||0===n.length)return t.createMultiPoint();const i=n.map(e).map((e=>t.createPoint(e)));return t.createMultiPoint(i)}case"MULTILINESTRING":{const n=this.parseMultiLineStringText_().map((n=>t.createLineString(n.map(e))));return t.createMultiLineString(n)}case"MULTIPOLYGON":{const e=this.parseMultiPolygonText_();if(!e||0===e.length)return t.createMultiPolygon();const i=e.map(n);return t.createMultiPolygon(i)}default:throw new Error("Invalid geometry type: "+r)}}throw new Error(this.formatErrorMessage_())}}function Ut(t){if(t.isEmpty())return"";const e=t.getCoordinate(),n=[e.x,e.y];return void 0===e.z||Number.isNaN(e.z)||n.push(e.z),void 0===e.m||Number.isNaN(e.m)||n.push(e.m),n.join(" ")}function Vt(t){const e=t.getCoordinates().map((t=>{const e=[t.x,t.y];return void 0===t.z||Number.isNaN(t.z)||e.push(t.z),void 0===t.m||Number.isNaN(t.m)||e.push(t.m),e})),n=[];for(let t=0,i=e.length;t<i;++t)n.push(e[t].join(" "));return n.join(", ")}function Wt(t){const e=[];e.push("("+Vt(t.getExteriorRing())+")");for(let n=0,i=t.getNumInteriorRing();n<i;++n)e.push("("+Vt(t.getInteriorRingN(n))+")");return e.join(", ")}const Ht={Point:Ut,LineString:Vt,LinearRing:Vt,Polygon:Wt,MultiPoint:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push("("+Ut(t.getGeometryN(n))+")");return e.join(", ")},MultiLineString:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push("("+Vt(t.getGeometryN(n))+")");return e.join(", ")},MultiPolygon:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push("("+Wt(t.getGeometryN(n))+")");return e.join(", ")},GeometryCollection:function(t){const e=[];for(let n=0,i=t.getNumGeometries();n<i;++n)e.push(Kt(t.getGeometryN(n)));return e.join(", ")}};function Kt(t){let e=t.getGeometryType();const n=Ht[e];e=e.toUpperCase();const i=function(t){let e="";if(t.isEmpty())return e;const n=t.getCoordinate();return void 0===n.z||Number.isNaN(n.z)||(e+="Z"),void 0===n.m||Number.isNaN(n.m)||(e+="M"),e}(t);if(i.length>0&&(e+=" "+i),t.isEmpty())return e+" EMPTY";return e+" ("+n(t)+")"}class Zt{constructor(t){this.geometryFactory=t||new Rt,this.precisionModel=this.geometryFactory.getPrecisionModel()}read(t){const e=new Xt(t);return new jt(e,this.geometryFactory).parse()}write(t){return Kt(t)}}class Jt{constructor(t){this.parser=new Zt(t||new Rt)}read(t){return this.parser.read(t)}}class Qt{constructor(t){this.parser=new Zt(t)}write(t){return this.parser.write(t)}static toLineString(t,e){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+t.x+" "+t.y+", "+e.x+" "+e.y+" )"}}class $t{constructor(){$t.constructor_.apply(this,arguments)}static constructor_(){if(this._quadrantSegments=$t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=$t.CAP_ROUND,this._joinStyle=$t.JOIN_ROUND,this._mitreLimit=$t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=$t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.setQuadrantSegments(t),this.setEndCapStyle(e)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.setQuadrantSegments(t),this.setEndCapStyle(e),this.setJoinStyle(n),this.setMitreLimit(i)}}static bufferDistanceError(t){const e=Math.PI/2/t;return 1-Math.cos(e/2)}getEndCapStyle(){return this._endCapStyle}isSingleSided(){return this._isSingleSided}setQuadrantSegments(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=$t.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=$t.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==$t.JOIN_ROUND&&(this._quadrantSegments=$t.DEFAULT_QUADRANT_SEGMENTS)}getJoinStyle(){return this._joinStyle}setJoinStyle(t){this._joinStyle=t}setSimplifyFactor(t){this._simplifyFactor=t<0?0:t}getSimplifyFactor(){return this._simplifyFactor}getQuadrantSegments(){return this._quadrantSegments}setEndCapStyle(t){this._endCapStyle=t}getMitreLimit(){return this._mitreLimit}setMitreLimit(t){this._mitreLimit=t}setSingleSided(t){this._isSingleSided=t}}$t.CAP_ROUND=1,$t.CAP_FLAT=2,$t.CAP_SQUARE=3,$t.JOIN_ROUND=1,$t.JOIN_MITRE=2,$t.JOIN_BEVEL=3,$t.DEFAULT_QUADRANT_SEGMENTS=8,$t.DEFAULT_MITRE_LIMIT=5,$t.DEFAULT_SIMPLIFY_FACTOR=.01;class te{static toLocationSymbol(t){switch(t){case te.EXTERIOR:return"e";case te.BOUNDARY:return"b";case te.INTERIOR:return"i";case te.NONE:return"-"}throw new h("Unknown location value: "+t)}}te.INTERIOR=0,te.BOUNDARY=1,te.EXTERIOR=2,te.NONE=-1;class ee{static opposite(t){return t===ee.LEFT?ee.RIGHT:t===ee.RIGHT?ee.LEFT:t}}ee.ON=0,ee.LEFT=1,ee.RIGHT=2;class ne extends c{constructor(t){super(t),this.name=Object.keys({EmptyStackException:ne})[0]}}class ie extends U{constructor(){super(),this.array=[]}add(t){return this.array.push(t),!0}get(t){if(t<0||t>=this.size())throw new j;return this.array[t]}push(t){return this.array.push(t),t}pop(){if(0===this.array.length)throw new ne;return this.array.pop()}peek(){if(0===this.array.length)throw new ne;return this.array[this.array.length-1]}empty(){return 0===this.array.length}isEmpty(){return this.empty()}search(t){return this.array.indexOf(t)}size(){return this.array.length}toArray(){return this.array.slice()}}class re{constructor(){re.constructor_.apply(this,arguments)}static constructor_(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null}getCoordinate(){return this._minCoord}getRightmostSide(t,e){let n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n}findRightmostEdgeAtVertex(){const t=this._minDe.getEdge().getCoordinates();x.isTrue(this._minIndex>0&&this._minIndex<t.length,"rightmost point expected to be interior vertex of edge");const e=t[this._minIndex-1],n=t[this._minIndex+1],i=et.index(this._minCoord,n,e);let r=!1;(e.y<this._minCoord.y&&n.y<this._minCoord.y&&i===et.COUNTERCLOCKWISE||e.y>this._minCoord.y&&n.y>this._minCoord.y&&i===et.CLOCKWISE)&&(r=!0),r&&(this._minIndex=this._minIndex-1)}getRightmostSideOfSegment(t,e){const n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;let i=ee.LEFT;return n[e].y<n[e+1].y&&(i=ee.RIGHT),i}getEdge(){return this._orientedDe}checkForRightmostCoordinate(t){const e=t.getEdge().getCoordinates();for(let n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])}findRightmostEdgeAtNode(){const t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)}findEdge(t){for(let e=t.iterator();e.hasNext();){const t=e.next();t.isForward()&&this.checkForRightmostCoordinate(t)}x.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===ee.LEFT&&(this._orientedDe=this._minDe.getSym())}}class se extends _{constructor(t,e){super(e?t+" [ "+e+" ]":t),this.pt=e?new S(e):void 0,this.name=Object.keys({TopologyException:se})[0]}getCoordinate(){return this.pt}}class oe{constructor(){this.array=[]}addLast(t){this.array.push(t)}removeFirst(){return this.array.shift()}isEmpty(){return 0===this.array.length}}class le{constructor(){le.constructor_.apply(this,arguments)}static constructor_(){this._finder=null,this._dirEdgeList=new W,this._nodes=new W,this._rightMostCoord=null,this._env=null,this._finder=new re}clearVisitedEdges(){for(let t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}}getRightmostCoordinate(){return this._rightMostCoord}computeNodeDepth(t){let e=null;for(let n=t.getEdges().iterator();n.hasNext();){const t=n.next();if(t.isVisited()||t.getSym().isVisited()){e=t;break}}if(null===e)throw new se("unable to find edge to compute depths at "+t.getCoordinate());t.getEdges().computeDepths(e);for(let e=t.getEdges().iterator();e.hasNext();){const t=e.next();t.setVisited(!0),this.copySymDepths(t)}}computeDepth(t){this.clearVisitedEdges();const e=this._finder.getEdge();e.getNode(),e.getLabel(),e.setEdgeDepths(ee.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)}create(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()}findResultEdges(){for(let t=this._dirEdgeList.iterator();t.hasNext();){const e=t.next();e.getDepth(ee.RIGHT)>=1&&e.getDepth(ee.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}}computeDepths(t){const e=new wt,n=new oe,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){const t=n.removeFirst();e.add(t),this.computeNodeDepth(t);for(let i=t.getEdges().iterator();i.hasNext();){const t=i.next().getSym();if(t.isVisited())continue;const r=t.getNode();e.contains(r)||(n.addLast(r),e.add(r))}}}compareTo(t){const e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0}getEnvelope(){if(null===this._env){const t=new O;for(let e=this._dirEdgeList.iterator();e.hasNext();){const n=e.next().getEdge().getCoordinates();for(let e=0;e<n.length-1;e++)t.expandToInclude(n[e])}this._env=t}return this._env}addReachable(t){const e=new ie;for(e.add(t);!e.empty();){const t=e.pop();this.add(t,e)}}copySymDepths(t){const e=t.getSym();e.setDepth(ee.LEFT,t.getDepth(ee.RIGHT)),e.setDepth(ee.RIGHT,t.getDepth(ee.LEFT))}add(t,e){t.setVisited(!0),this._nodes.add(t);for(let n=t.getEdges().iterator();n.hasNext();){const t=n.next();this._dirEdgeList.add(t);const i=t.getSym().getNode();i.isVisited()||e.push(i)}}getNodes(){return this._nodes}getDirectedEdges(){return this._dirEdgeList}get interfaces_(){return[g]}}class ae{static intersection(t,e,n,i){const r=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,o=t.x>e.x?t.x:e.x,l=t.y>e.y?t.y:e.y,a=n.x<i.x?n.x:i.x,c=n.y<i.y?n.y:i.y,h=n.x>i.x?n.x:i.x,u=n.y>i.y?n.y:i.y,g=((r>a?r:a)+(o<h?o:h))/2,f=((s>c?s:c)+(l<u?l:u))/2,p=t.x-g,m=t.y-f,_=e.x-g,y=e.y-f,x=n.x-g,I=n.y-f,E=i.x-g,C=i.y-f,w=m-y,N=_-p,T=p*y-_*m,b=I-C,v=E-x,O=x*C-E*I,R=w*v-b*N,L=(N*O-v*T)/R,D=(b*T-w*O)/R;return d.isNaN(L)||d.isInfinite(L)||d.isNaN(D)||d.isInfinite(D)?null:new S(L+g,D+f)}}class ce{static segmentToSegment(t,e,n,i){if(t.equals(e))return ce.pointToSegment(t,n,i);if(n.equals(i))return ce.pointToSegment(i,t,e);let r=!1;if(O.intersects(t,e,n,i)){const s=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===s)r=!0;else{const o=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),l=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/s,a=o/s;(a<0||a>1||l<0||l>1)&&(r=!0)}}else r=!0;return r?mt.min(ce.pointToSegment(t,n,i),ce.pointToSegment(e,n,i),ce.pointToSegment(n,t,e),ce.pointToSegment(i,t,e)):0}static pointToSegment(t,e,n){if(e.x===n.x&&e.y===n.y)return t.distance(e);const i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((t.x-e.x)*(n.x-e.x)+(t.y-e.y)*(n.y-e.y))/i;if(r<=0)return t.distance(e);if(r>=1)return t.distance(n);const s=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(s)*Math.sqrt(i)}static pointToLinePerpendicular(t,e,n){const i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)}static pointToSegmentString(t,e){if(0===e.length)throw new h("Line array must contain at least one vertex");let n=t.distance(e[0]);for(let i=0;i<e.length-1;i++){const r=ce.pointToSegment(t,e[i],e[i+1]);r<n&&(n=r)}return n}}class he{constructor(){he.constructor_.apply(this,arguments)}static constructor_(){this._result=null,this._inputLines=Array(2).fill().map((()=>Array(2))),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new S,this._intPt[1]=new S,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0}static computeEdgeDistance(t,e,n){const i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y);let s=-1;if(t.equals(e))s=0;else if(t.equals(n))s=i>r?i:r;else{const n=Math.abs(t.x-e.x),o=Math.abs(t.y-e.y);s=i>r?n:o,0!==s||t.equals(e)||(s=Math.max(n,o))}return x.isTrue(!(0===s&&!t.equals(e)),"Bad distance calculation"),s}static nonRobustComputeEdgeDistance(t,e,n){const i=t.x-e.x,r=t.y-e.y,s=Math.sqrt(i*i+r*r);return x.isTrue(!(0===s&&!t.equals(e)),"Invalid distance calculation"),s}getIndexAlongSegment(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]}getTopologySummary(){const t=new xt;return this.isEndPoint()&&t.append(" endpoint"),this._isProper&&t.append(" proper"),this.isCollinear()&&t.append(" collinear"),t.toString()}computeIntersection(t,e,n,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,n,i)}getIntersectionNum(){return this._result}computeIntLineIndex(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((()=>Array(2))),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){const t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}}isProper(){return this.hasIntersection()&&this._isProper}setPrecisionModel(t){this._precisionModel=t}isInteriorIntersection(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){const t=arguments[0];for(let e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}}getIntersection(t){return this._intPt[t]}isEndPoint(){return this.hasIntersection()&&!this._isProper}hasIntersection(){return this._result!==he.NO_INTERSECTION}getEdgeDistance(t,e){return he.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])}isCollinear(){return this._result===he.COLLINEAR_INTERSECTION}toString(){return Qt.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+Qt.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()}getEndpoint(t,e){return this._inputLines[t][e]}isIntersection(t){for(let e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1}getIntersectionAlongSegment(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]}}he.DONT_INTERSECT=0,he.DO_INTERSECT=1,he.COLLINEAR=2,he.NO_INTERSECTION=0,he.POINT_INTERSECTION=1,he.COLLINEAR_INTERSECTION=2;class ue extends he{constructor(){super()}static nearestEndpoint(t,e,n,i){let r=t,s=ce.pointToSegment(t,n,i),o=ce.pointToSegment(e,n,i);return o<s&&(s=o,r=e),o=ce.pointToSegment(n,t,e),o<s&&(s=o,r=n),o=ce.pointToSegment(i,t,e),o<s&&(s=o,r=i),r}isInSegmentEnvelopes(t){const e=new O(this._inputLines[0][0],this._inputLines[0][1]),n=new O(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)}computeIntersection(){if(3!==arguments.length)return super.computeIntersection.apply(this,arguments);{const t=arguments[0],e=arguments[1],n=arguments[2];if(this._isProper=!1,O.intersects(e,n,t)&&0===et.index(e,n,t)&&0===et.index(n,e,t))return this._isProper=!0,(t.equals(e)||t.equals(n))&&(this._isProper=!1),this._result=he.POINT_INTERSECTION,null;this._result=he.NO_INTERSECTION}}intersection(t,e,n,i){let r=this.intersectionSafe(t,e,n,i);return this.isInSegmentEnvelopes(r)||(r=new S(ue.nearestEndpoint(t,e,n,i))),null!==this._precisionModel&&this._precisionModel.makePrecise(r),r}checkDD(t,e,n,i,r){const s=tt.intersection(t,e,n,i),o=this.isInSegmentEnvelopes(s);_t.out.println("DD in env = "+o+"  --------------------- "+s),r.distance(s)>1e-4&&_t.out.println("Distance = "+r.distance(s))}intersectionSafe(t,e,n,i){let r=ae.intersection(t,e,n,i);return null===r&&(r=ue.nearestEndpoint(t,e,n,i)),r}computeCollinearIntersection(t,e,n,i){const r=O.intersects(t,e,n),s=O.intersects(t,e,i),o=O.intersects(n,i,t),l=O.intersects(n,i,e);return r&&s?(this._intPt[0]=n,this._intPt[1]=i,he.COLLINEAR_INTERSECTION):o&&l?(this._intPt[0]=t,this._intPt[1]=e,he.COLLINEAR_INTERSECTION):r&&o?(this._intPt[0]=n,this._intPt[1]=t,!n.equals(t)||s||l?he.COLLINEAR_INTERSECTION:he.POINT_INTERSECTION):r&&l?(this._intPt[0]=n,this._intPt[1]=e,!n.equals(e)||s||o?he.COLLINEAR_INTERSECTION:he.POINT_INTERSECTION):s&&o?(this._intPt[0]=i,this._intPt[1]=t,!i.equals(t)||r||l?he.COLLINEAR_INTERSECTION:he.POINT_INTERSECTION):s&&l?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||r||o?he.COLLINEAR_INTERSECTION:he.POINT_INTERSECTION):he.NO_INTERSECTION}computeIntersect(t,e,n,i){if(this._isProper=!1,!O.intersects(t,e,n,i))return he.NO_INTERSECTION;const r=et.index(t,e,n),s=et.index(t,e,i);if(r>0&&s>0||r<0&&s<0)return he.NO_INTERSECTION;const o=et.index(n,i,t),l=et.index(n,i,e);if(o>0&&l>0||o<0&&l<0)return he.NO_INTERSECTION;return 0===r&&0===s&&0===o&&0===l?this.computeCollinearIntersection(t,e,n,i):(0===r||0===s||0===o||0===l?(this._isProper=!1,t.equals2D(n)||t.equals2D(i)?this._intPt[0]=t:e.equals2D(n)||e.equals2D(i)?this._intPt[0]=e:0===r?this._intPt[0]=new S(n):0===s?this._intPt[0]=new S(i):0===o?this._intPt[0]=new S(t):0===l&&(this._intPt[0]=new S(e))):(this._isProper=!0,this._intPt[0]=this.intersection(t,e,n,i)),he.POINT_INTERSECTION)}}class de{constructor(){de.constructor_.apply(this,arguments)}static constructor_(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;const t=arguments[0];this._p=t}static locatePointInRing(){if(arguments[0]instanceof S&&N(arguments[1],T)){const t=arguments[1],e=new de(arguments[0]),n=new S,i=new S;for(let r=1;r<t.size();r++)if(t.getCoordinate(r,n),t.getCoordinate(r-1,i),e.countSegment(n,i),e.isOnSegment())return e.getLocation();return e.getLocation()}if(arguments[0]instanceof S&&arguments[1]instanceof Array){const t=arguments[1],e=new de(arguments[0]);for(let n=1;n<t.length;n++){const i=t[n],r=t[n-1];if(e.countSegment(i,r),e.isOnSegment())return e.getLocation()}return e.getLocation()}}countSegment(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){let n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this._p.x>=n&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){let n=et.index(t,e,this._p);if(n===et.COLLINEAR)return this._isPointOnSegment=!0,null;e.y<t.y&&(n=-n),n===et.LEFT&&this._crossingCount++}}isPointInPolygon(){return this.getLocation()!==te.EXTERIOR}getLocation(){return this._isPointOnSegment?te.BOUNDARY:this._crossingCount%2==1?te.INTERIOR:te.EXTERIOR}isOnSegment(){return this._isPointOnSegment}}class ge{static isOnLine(){if(arguments[0]instanceof S&&N(arguments[1],T)){const t=arguments[0],e=arguments[1],n=new ue,i=new S,r=new S,s=e.size();for(let o=1;o<s;o++)if(e.getCoordinate(o-1,i),e.getCoordinate(o,r),n.computeIntersection(t,i,r),n.hasIntersection())return!0;return!1}if(arguments[0]instanceof S&&arguments[1]instanceof Array){const t=arguments[0],e=arguments[1],n=new ue;for(let i=1;i<e.length;i++){const r=e[i-1],s=e[i];if(n.computeIntersection(t,r,s),n.hasIntersection())return!0}return!1}}static locateInRing(t,e){return de.locatePointInRing(t,e)}static isInRing(t,e){return ge.locateInRing(t,e)!==te.EXTERIOR}}class fe{constructor(){fe.constructor_.apply(this,arguments)}static constructor_(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){const t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){const t=arguments[0];this.init(1),this.location[ee.ON]=t}else if(arguments[0]instanceof fe){const t=arguments[0];if(this.init(t.location.length),null!==t)for(let e=0;e<this.location.length;e++)this.location[e]=t.location[e]}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.init(3),this.location[ee.ON]=t,this.location[ee.LEFT]=e,this.location[ee.RIGHT]=n}}setAllLocations(t){for(let e=0;e<this.location.length;e++)this.location[e]=t}isNull(){for(let t=0;t<this.location.length;t++)if(this.location[t]!==te.NONE)return!1;return!0}setAllLocationsIfNull(t){for(let e=0;e<this.location.length;e++)this.location[e]===te.NONE&&(this.location[e]=t)}isLine(){return 1===this.location.length}merge(t){if(t.location.length>this.location.length){const t=new Array(3).fill(null);t[ee.ON]=this.location[ee.ON],t[ee.LEFT]=te.NONE,t[ee.RIGHT]=te.NONE,this.location=t}for(let e=0;e<this.location.length;e++)this.location[e]===te.NONE&&e<t.location.length&&(this.location[e]=t.location[e])}getLocations(){return this.location}flip(){if(this.location.length<=1)return null;const t=this.location[ee.LEFT];this.location[ee.LEFT]=this.location[ee.RIGHT],this.location[ee.RIGHT]=t}toString(){const t=new Z;return this.location.length>1&&t.append(te.toLocationSymbol(this.location[ee.LEFT])),t.append(te.toLocationSymbol(this.location[ee.ON])),this.location.length>1&&t.append(te.toLocationSymbol(this.location[ee.RIGHT])),t.toString()}setLocations(t,e,n){this.location[ee.ON]=t,this.location[ee.LEFT]=e,this.location[ee.RIGHT]=n}get(t){return t<this.location.length?this.location[t]:te.NONE}isArea(){return this.location.length>1}isAnyNull(){for(let t=0;t<this.location.length;t++)if(this.location[t]===te.NONE)return!0;return!1}setLocation(){if(1===arguments.length){const t=arguments[0];this.setLocation(ee.ON,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.location[t]=e}}init(t){this.location=new Array(t).fill(null),this.setAllLocations(te.NONE)}isEqualOnSide(t,e){return this.location[e]===t.location[e]}allPositionsEqual(t){for(let e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0}}class pe{constructor(){pe.constructor_.apply(this,arguments)}static constructor_(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){const t=arguments[0];this.elt[0]=new fe(t),this.elt[1]=new fe(t)}else if(arguments[0]instanceof pe){const t=arguments[0];this.elt[0]=new fe(t.elt[0]),this.elt[1]=new fe(t.elt[1])}}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[0]=new fe(te.NONE),this.elt[1]=new fe(te.NONE),this.elt[t].setLocation(e)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.elt[0]=new fe(t,e,n),this.elt[1]=new fe(t,e,n)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.elt[0]=new fe(te.NONE,te.NONE,te.NONE),this.elt[1]=new fe(te.NONE,te.NONE,te.NONE),this.elt[t].setLocations(e,n,i)}}static toLineLabel(t){const e=new pe(te.NONE);for(let n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e}getGeometryCount(){let t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t}setAllLocations(t,e){this.elt[t].setAllLocations(e)}isNull(t){return this.elt[t].isNull()}setAllLocationsIfNull(){if(1===arguments.length){const t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[t].setAllLocationsIfNull(e)}}isLine(t){return this.elt[t].isLine()}merge(t){for(let e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new fe(t.elt[e]):this.elt[e].merge(t.elt[e])}flip(){this.elt[0].flip(),this.elt[1].flip()}getLocation(){if(1===arguments.length){const t=arguments[0];return this.elt[t].get(ee.ON)}if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.elt[t].get(e)}}toString(){const t=new Z;return null!==this.elt[0]&&(t.append("A:"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(" B:"),t.append(this.elt[1].toString())),t.toString()}isArea(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){const t=arguments[0];return this.elt[t].isArea()}}isAnyNull(t){return this.elt[t].isAnyNull()}setLocation(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.elt[t].setLocation(ee.ON,e)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.elt[t].setLocation(e,n)}}isEqualOnSide(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)}allPositionsEqual(t,e){return this.elt[t].allPositionsEqual(e)}toLine(t){this.elt[t].isArea()&&(this.elt[t]=new fe(this.elt[t].location[0]))}}class me{constructor(){me.constructor_.apply(this,arguments)}static constructor_(){if(this._startDe=null,this._maxNodeDegree=-1,this._edges=new W,this._pts=new W,this._label=new pe(te.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new W,this._geometryFactory=null,0===arguments.length);else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()}}computeRing(){if(null!==this._ring)return null;const t=new Array(this._pts.size()).fill(null);for(let e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=et.isCCW(this._ring.getCoordinates())}isIsolated(){return 1===this._label.getGeometryCount()}computePoints(t){this._startDe=t;let e=t,n=!0;do{if(null===e)throw new se("Found null DirectedEdge");if(e.getEdgeRing()===this)throw new se("Directed Edge visited twice during ring-building at "+e.getCoordinate());this._edges.add(e);const t=e.getLabel();x.isTrue(t.isArea()),this.mergeLabel(t),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)}getLinearRing(){return this._ring}getCoordinate(t){return this._pts.get(t)}computeMaxNodeDegree(){this._maxNodeDegree=0;let t=this._startDe;do{const e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2}addPoints(t,e,n){const i=t.getCoordinates();if(e){let t=1;n&&(t=0);for(let e=t;e<i.length;e++)this._pts.add(i[e])}else{let t=i.length-2;n&&(t=i.length-1);for(let e=t;e>=0;e--)this._pts.add(i[e])}}isHole(){return this._isHole}setInResult(){let t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)}containsPoint(t){const e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!ge.isInRing(t,e.getCoordinates()))return!1;for(let e=this._holes.iterator();e.hasNext();){if(e.next().containsPoint(t))return!1}return!0}addHole(t){this._holes.add(t)}isShell(){return null===this._shell}getLabel(){return this._label}getEdges(){return this._edges}getMaxNodeDegree(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree}getShell(){return this._shell}mergeLabel(){if(1===arguments.length){const t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){const t=arguments[1],e=arguments[0].getLocation(t,ee.RIGHT);if(e===te.NONE)return null;if(this._label.getLocation(t)===te.NONE)return this._label.setLocation(t,e),null}}setShell(t){this._shell=t,null!==t&&t.addHole(this)}toPolygon(t){const e=new Array(this._holes.size()).fill(null);for(let t=0;t<this._holes.size();t++)e[t]=this._holes.get(t).getLinearRing();return t.createPolygon(this.getLinearRing(),e)}}class _e extends me{constructor(){super(),_e.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];me.constructor_.call(this,t,e)}setEdgeRing(t,e){t.setMinEdgeRing(e)}getNext(t){return t.getNextMin()}}class ye extends me{constructor(){super(),ye.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];me.constructor_.call(this,t,e)}buildMinimalRings(){const t=new W;let e=this._startDe;do{if(null===e.getMinEdgeRing()){const n=new _e(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t}setEdgeRing(t,e){t.setEdgeRing(e)}linkDirectedEdgesForMinimalEdgeRings(){let t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)}getNext(t){return t.getNext()}}class xe{constructor(){xe.constructor_.apply(this,arguments)}static constructor_(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this._label=t}}setVisited(t){this._isVisited=t}setInResult(t){this._isInResult=t}isCovered(){return this._isCovered}isCoveredSet(){return this._isCoveredSet}setLabel(t){this._label=t}getLabel(){return this._label}setCovered(t){this._isCovered=t,this._isCoveredSet=!0}updateIM(t){x.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(t)}isInResult(){return this._isInResult}isVisited(){return this._isVisited}}class Ie extends xe{constructor(){super(),Ie.constructor_.apply(this,arguments)}static constructor_(){this._coord=null,this._edges=null;const t=arguments[0],e=arguments[1];this._coord=t,this._edges=e,this._label=new pe(0,te.NONE)}isIncidentEdgeInResult(){for(let t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1}isIsolated(){return 1===this._label.getGeometryCount()}getCoordinate(){return this._coord}print(t){t.println("node "+this._coord+" lbl: "+this._label)}computeIM(t){}computeMergedLocation(t,e){let n=te.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){const i=t.getLocation(e);n!==te.BOUNDARY&&(n=i)}return n}setLabel(){if(2!==arguments.length||!Number.isInteger(arguments[1])||!Number.isInteger(arguments[0]))return super.setLabel.apply(this,arguments);{const t=arguments[0],e=arguments[1];null===this._label?this._label=new pe(t,e):this._label.setLocation(t,e)}}getEdges(){return this._edges}mergeLabel(){if(arguments[0]instanceof Ie){const t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof pe){const t=arguments[0];for(let e=0;e<2;e++){const n=this.computeMergedLocation(t,e);this._label.getLocation(e)===te.NONE&&this._label.setLocation(e,n)}}}add(t){this._edges.insert(t),t.setNode(this)}setLabelBoundary(t){if(null===this._label)return null;let e=te.NONE;null!==this._label&&(e=this._label.getLocation(t));let n=null;switch(e){case te.BOUNDARY:n=te.INTERIOR;break;case te.INTERIOR:default:n=te.BOUNDARY}this._label.setLocation(t,n)}}class Ee extends St{}function Ce(t){return null==t?0:t.color}function Se(t){return null==t?null:t.parent}function we(t,e){null!==t&&(t.color=e)}function Ne(t){return null==t?null:t.left}function Te(t){return null==t?null:t.right}class be extends Ee{constructor(){super(),this.root_=null,this.size_=0}get(t){let e=this.root_;for(;null!==e;){const n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null}put(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:0,getValue(){return this.value},getKey(){return this.key}},this.size_=1,null;let n,i,r=this.root_;do{if(n=r,i=t.compareTo(r.key),i<0)r=r.left;else{if(!(i>0)){const t=r.value;return r.value=e,t}r=r.right}}while(null!==r);const s={key:t,left:null,right:null,value:e,parent:n,color:0,getValue(){return this.value},getKey(){return this.key}};return i<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null}fixAfterInsertion(t){let e;for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)Se(t)===Ne(Se(Se(t)))?(e=Te(Se(Se(t))),1===Ce(e)?(we(Se(t),0),we(e,0),we(Se(Se(t)),1),t=Se(Se(t))):(t===Te(Se(t))&&(t=Se(t),this.rotateLeft(t)),we(Se(t),0),we(Se(Se(t)),1),this.rotateRight(Se(Se(t))))):(e=Ne(Se(Se(t))),1===Ce(e)?(we(Se(t),0),we(e,0),we(Se(Se(t)),1),t=Se(Se(t))):(t===Ne(Se(t))&&(t=Se(t),this.rotateRight(t)),we(Se(t),0),we(Se(Se(t)),1),this.rotateLeft(Se(Se(t)))));this.root_.color=0}values(){const t=new W;let e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=be.successor(e));)t.add(e.value);return t}entrySet(){const t=new wt;let e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=be.successor(e));)t.add(e);return t}rotateLeft(t){if(null!=t){const e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}}rotateRight(t){if(null!=t){const e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}}getFirstEntry(){let t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t}static successor(t){let e;if(null===t)return null;if(null!==t.right){for(e=t.right;null!==e.left;)e=e.left;return e}{e=t.parent;let n=t;for(;null!==e&&n===e.right;)n=e,e=e.parent;return e}}size(){return this.size_}containsKey(t){let e=this.root_;for(;null!==e;){const n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return!0;e=e.right}}return!1}}class ve{constructor(){ve.constructor_.apply(this,arguments)}static constructor_(){this.nodeMap=new be,this.nodeFact=null;const t=arguments[0];this.nodeFact=t}find(t){return this.nodeMap.get(t)}addNode(){if(arguments[0]instanceof S){const t=arguments[0];let e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Ie){const t=arguments[0],e=this.nodeMap.get(t.getCoordinate());return null===e?(this.nodeMap.put(t.getCoordinate(),t),t):(e.mergeLabel(t),e)}}print(t){for(let e=this.iterator();e.hasNext();){e.next().print(t)}}iterator(){return this.nodeMap.values().iterator()}values(){return this.nodeMap.values()}getBoundaryNodes(t){const e=new W;for(let n=this.iterator();n.hasNext();){const i=n.next();i.getLabel().getLocation(t)===te.BOUNDARY&&e.add(i)}return e}add(t){const e=t.getCoordinate();this.addNode(e).add(t)}}class Oe{static isNorthern(t){return t===Oe.NE||t===Oe.NW}static isOpposite(t,e){if(t===e)return!1;return 2===(t-e+4)%4}static commonHalfPlane(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;const n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n}static isInHalfPlane(t,e){return e===Oe.SE?t===Oe.SE||t===Oe.SW:t===e||t===e+1}static quadrant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new h("Cannot compute the quadrant for point ( "+t+", "+e+" )");return t>=0?e>=0?Oe.NE:Oe.SE:e>=0?Oe.NW:Oe.SW}if(arguments[0]instanceof S&&arguments[1]instanceof S){const t=arguments[0],e=arguments[1];if(e.x===t.x&&e.y===t.y)throw new h("Cannot compute the quadrant for two identical points "+t);return e.x>=t.x?e.y>=t.y?Oe.NE:Oe.SE:e.y>=t.y?Oe.NW:Oe.SW}}}Oe.NE=0,Oe.NW=1,Oe.SW=2,Oe.SE=3;class Re{constructor(){Re.constructor_.apply(this,arguments)}static constructor_(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){const t=arguments[0];this._edge=t}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];Re.constructor_.call(this,t,e,n,null)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];Re.constructor_.call(this,t),this.init(e,n),this._label=i}}compareDirection(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:et.index(t._p0,t._p1,this._p1)}getDy(){return this._dy}getCoordinate(){return this._p0}setNode(t){this._node=t}print(t){const e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),i=n.lastIndexOf("."),r=n.substring(i+1);t.print("  "+r+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+e+"   "+this._label)}compareTo(t){const e=t;return this.compareDirection(e)}getDirectedCoordinate(){return this._p1}getDx(){return this._dx}getLabel(){return this._label}getEdge(){return this._edge}getQuadrant(){return this._quadrant}getNode(){return this._node}toString(){const t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(".");return"  "+e.substring(n+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label}computeLabel(t){}init(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Oe.quadrant(this._dx,this._dy),x.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")}get interfaces_(){return[g]}}class Le extends Re{constructor(){super(),Le.constructor_.apply(this,arguments)}static constructor_(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999];const t=arguments[0],e=arguments[1];if(Re.constructor_.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{const e=t.getNumPoints()-1;this.init(t.getCoordinate(e),t.getCoordinate(e-1))}this.computeDirectedLabel()}static depthFactor(t,e){return t===te.EXTERIOR&&e===te.INTERIOR?1:t===te.INTERIOR&&e===te.EXTERIOR?-1:0}getNextMin(){return this._nextMin}getDepth(t){return this._depth[t]}setVisited(t){this._isVisited=t}computeDirectedLabel(){this._label=new pe(this._edge.getLabel()),this._isForward||this._label.flip()}getNext(){return this._next}setDepth(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new se("assigned depths do not match",this.getCoordinate());this._depth[t]=e}isInteriorAreaEdge(){let t=!0;for(let e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,ee.LEFT)===te.INTERIOR&&this._label.getLocation(e,ee.RIGHT)===te.INTERIOR||(t=!1);return t}setNextMin(t){this._nextMin=t}print(t){super.print.call(this,t),t.print(" "+this._depth[ee.LEFT]+"/"+this._depth[ee.RIGHT]),t.print(" ("+this.getDepthDelta()+")"),this._isInResult&&t.print(" inResult")}setMinEdgeRing(t){this._minEdgeRing=t}isLineEdge(){const t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,te.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,te.EXTERIOR);return t&&e&&n}setEdgeRing(t){this._edgeRing=t}getMinEdgeRing(){return this._minEdgeRing}getDepthDelta(){let t=this._edge.getDepthDelta();return this._isForward||(t=-t),t}setInResult(t){this._isInResult=t}getSym(){return this._sym}isForward(){return this._isForward}getEdge(){return this._edge}printEdge(t){this.print(t),t.print(" "),this._isForward?this._edge.print(t):this._edge.printReverse(t)}setSym(t){this._sym=t}setVisitedEdge(t){this.setVisited(t),this._sym.setVisited(t)}setEdgeDepths(t,e){let n=this.getEdge().getDepthDelta();this._isForward||(n=-n);let i=1;t===ee.LEFT&&(i=-1);const r=ee.opposite(t),s=e+n*i;this.setDepth(t,e),this.setDepth(r,s)}getEdgeRing(){return this._edgeRing}isInResult(){return this._isInResult}setNext(t){this._next=t}isVisited(){return this._isVisited}}class De{createNode(t){return new Ie(t,null)}}class Pe{constructor(){Pe.constructor_.apply(this,arguments)}static constructor_(){if(this._edges=new W,this._nodes=null,this._edgeEndList=new W,0===arguments.length)this._nodes=new ve(new De);else if(1===arguments.length){const t=arguments[0];this._nodes=new ve(t)}}static linkResultDirectedEdges(t){for(let e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}}printEdges(t){t.println("Edges:");for(let e=0;e<this._edges.size();e++){t.println("edge "+e+":");const n=this._edges.get(e);n.print(t),n.eiList.print(t)}}find(t){return this._nodes.find(t)}addNode(){if(arguments[0]instanceof Ie){const t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof S){const t=arguments[0];return this._nodes.addNode(t)}}getNodeIterator(){return this._nodes.iterator()}linkResultDirectedEdges(){for(let t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}}debugPrintln(t){_t.out.println(t)}isBoundaryNode(t,e){const n=this._nodes.find(e);if(null===n)return!1;const i=n.getLabel();return null!==i&&i.getLocation(t)===te.BOUNDARY}linkAllDirectedEdges(){for(let t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}}matchInSameDirection(t,e,n,i){return!!t.equals(n)&&(et.index(t,e,i)===et.COLLINEAR&&Oe.quadrant(t,e)===Oe.quadrant(n,i))}getEdgeEnds(){return this._edgeEndList}debugPrint(t){_t.out.print(t)}getEdgeIterator(){return this._edges.iterator()}findEdgeInSameDirection(t,e){for(let n=0;n<this._edges.size();n++){const i=this._edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null}insertEdge(t){this._edges.add(t)}findEdgeEnd(t){for(let e=this.getEdgeEnds().iterator();e.hasNext();){const n=e.next();if(n.getEdge()===t)return n}return null}addEdges(t){for(let e=t.iterator();e.hasNext();){const t=e.next();this._edges.add(t);const n=new Le(t,!0),i=new Le(t,!1);n.setSym(i),i.setSym(n),this.add(n),this.add(i)}}add(t){this._nodes.add(t),this._edgeEndList.add(t)}getNodes(){return this._nodes.values()}findEdge(t,e){for(let n=0;n<this._edges.size();n++){const i=this._edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null}}class Ae{constructor(){Ae.constructor_.apply(this,arguments)}static constructor_(){this._geometryFactory=null,this._shellList=new W;const t=arguments[0];this._geometryFactory=t}static findEdgeRingContaining(t,e){const n=t.getLinearRing(),i=n.getEnvelopeInternal();let r=n.getCoordinateN(0),s=null,o=null;for(let t=e.iterator();t.hasNext();){const e=t.next(),l=e.getLinearRing(),a=l.getEnvelopeInternal();if(a.equals(i))continue;if(!a.contains(i))continue;r=yt.ptNotInList(n.getCoordinates(),l.getCoordinates());let c=!1;ge.isInRing(r,l.getCoordinates())&&(c=!0),c&&(null===s||o.contains(a))&&(s=e,o=s.getLinearRing().getEnvelopeInternal())}return s}sortShellsAndHoles(t,e,n){for(let i=t.iterator();i.hasNext();){const t=i.next();t.isHole()?n.add(t):e.add(t)}}computePolygons(t){const e=new W;for(let n=t.iterator();n.hasNext();){const t=n.next().toPolygon(this._geometryFactory);e.add(t)}return e}placeFreeHoles(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next();if(null===e.getShell()){const n=Ae.findEdgeRingContaining(e,t);if(null===n)throw new se("unable to assign hole to a shell",e.getCoordinate(0));e.setShell(n)}}}buildMinimalEdgeRings(t,e,n){const i=new W;for(let r=t.iterator();r.hasNext();){const t=r.next();if(t.getMaxNodeDegree()>2){t.linkDirectedEdgesForMinimalEdgeRings();const i=t.buildMinimalRings(),r=this.findShell(i);null!==r?(this.placePolygonHoles(r,i),e.add(r)):n.addAll(i)}else i.add(t)}return i}buildMaximalEdgeRings(t){const e=new W;for(let n=t.iterator();n.hasNext();){const t=n.next();if(t.isInResult()&&t.getLabel().isArea()&&null===t.getEdgeRing()){const n=new ye(t,this._geometryFactory);e.add(n),n.setInResult()}}return e}placePolygonHoles(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next();e.isHole()&&e.setShell(t)}}getPolygons(){return this.computePolygons(this._shellList)}findShell(t){let e=0,n=null;for(let i=t.iterator();i.hasNext();){const t=i.next();t.isHole()||(n=t,e++)}return x.isTrue(e<=1,"found two shells in MinimalEdgeRing list"),n}add(){if(1===arguments.length){const t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){const t=arguments[0],e=arguments[1];Pe.linkResultDirectedEdges(e);const n=this.buildMaximalEdgeRings(t),i=new W,r=this.buildMinimalEdgeRings(n,this._shellList,i);this.sortShellsAndHoles(r,this._shellList,i),this.placeFreeHoles(this._shellList,i)}}}class Fe{getBounds(){}}class Me{constructor(){Me.constructor_.apply(this,arguments)}static constructor_(){this._bounds=null,this._item=null;const t=arguments[0],e=arguments[1];this._bounds=t,this._item=e}getItem(){return this._item}getBounds(){return this._bounds}get interfaces_(){return[Fe,m]}}class Ge{constructor(){Ge.constructor_.apply(this,arguments)}static constructor_(){this._size=null,this._items=null,this._size=0,this._items=new W,this._items.add(null)}poll(){if(this.isEmpty())return null;const t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t}size(){return this._size}reorder(t){let e=null;const n=this._items.get(t);for(;2*t<=this._size&&(e=2*t,e!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)}clear(){this._size=0,this._items.clear()}peek(){if(this.isEmpty())return null;return this._items.get(1)}isEmpty(){return 0===this._size}add(t){this._items.add(null),this._size+=1;let e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)}}class ze{insert(t,e){}remove(t,e){}query(){}}class ke{constructor(){ke.constructor_.apply(this,arguments)}static constructor_(){if(this._childBoundables=new W,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this._level=t}}getLevel(){return this._level}size(){return this._childBoundables.size()}getChildBoundables(){return this._childBoundables}addChildBoundable(t){x.isTrue(null===this._bounds),this._childBoundables.add(t)}isEmpty(){return this._childBoundables.isEmpty()}getBounds(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds}get interfaces_(){return[Fe,m]}}const Be={reverseOrder:function(){return{compare:(t,e)=>e.compareTo(t)}},min:function(t){return Be.sort(t),t.get(0)},sort:function(t,e){const n=t.toArray();e?K.sort(n,e):K.sort(n);const i=t.iterator();for(let t=0,e=n.length;t<e;t++)i.next(),i.set(n[t])},singletonList:function(t){const e=new W;return e.add(t),e}};class qe{static maxDistance(t,e,n,i,r,s,o,l){let a=qe.distance(t,e,r,s);return a=Math.max(a,qe.distance(t,e,o,l)),a=Math.max(a,qe.distance(n,i,r,s)),a=Math.max(a,qe.distance(n,i,o,l)),a}static distance(t,e,n,i){const r=n-t,s=i-e;return Math.sqrt(r*r+s*s)}static maximumDistance(t,e){const n=Math.min(t.getMinX(),e.getMinX()),i=Math.min(t.getMinY(),e.getMinY()),r=Math.max(t.getMaxX(),e.getMaxX()),s=Math.max(t.getMaxY(),e.getMaxY());return qe.distance(n,i,r,s)}static minMaxDistance(t,e){const n=t.getMinX(),i=t.getMinY(),r=t.getMaxX(),s=t.getMaxY(),o=e.getMinX(),l=e.getMinY(),a=e.getMaxX(),c=e.getMaxY();let h=qe.maxDistance(n,i,n,s,o,l,o,c);return h=Math.min(h,qe.maxDistance(n,i,n,s,o,l,a,l)),h=Math.min(h,qe.maxDistance(n,i,n,s,a,c,o,c)),h=Math.min(h,qe.maxDistance(n,i,n,s,a,c,a,l)),h=Math.min(h,qe.maxDistance(n,i,r,i,o,l,o,c)),h=Math.min(h,qe.maxDistance(n,i,r,i,o,l,a,l)),h=Math.min(h,qe.maxDistance(n,i,r,i,a,c,o,c)),h=Math.min(h,qe.maxDistance(n,i,r,i,a,c,a,l)),h=Math.min(h,qe.maxDistance(r,s,n,s,o,l,o,c)),h=Math.min(h,qe.maxDistance(r,s,n,s,o,l,a,l)),h=Math.min(h,qe.maxDistance(r,s,n,s,a,c,o,c)),h=Math.min(h,qe.maxDistance(r,s,n,s,a,c,a,l)),h=Math.min(h,qe.maxDistance(r,s,r,i,o,l,o,c)),h=Math.min(h,qe.maxDistance(r,s,r,i,o,l,a,l)),h=Math.min(h,qe.maxDistance(r,s,r,i,a,c,o,c)),h=Math.min(h,qe.maxDistance(r,s,r,i,a,c,a,l)),h}}class Ye{constructor(){Ye.constructor_.apply(this,arguments)}static constructor_(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;const t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()}static area(t){return t.getBounds().getArea()}static isComposite(t){return t instanceof ke}maximumDistance(){return qe.maximumDistance(this._boundable1.getBounds(),this._boundable2.getBounds())}expandToQueue(t,e){const n=Ye.isComposite(this._boundable1),i=Ye.isComposite(this._boundable2);if(n&&i)return Ye.area(this._boundable1)>Ye.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,!1,t,e),null):(this.expand(this._boundable2,this._boundable1,!0,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,!1,t,e),null;if(i)return this.expand(this._boundable2,this._boundable1,!0,t,e),null;throw new h("neither boundable is composite")}isLeaves(){return!(Ye.isComposite(this._boundable1)||Ye.isComposite(this._boundable2))}compareTo(t){const e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0}expand(t,e,n,i,r){for(let s=t.getChildBoundables().iterator();s.hasNext();){const t=s.next();let o=null;o=n?new Ye(e,t,this._itemDistance):new Ye(t,e,this._itemDistance),o.getDistance()<r&&i.add(o)}}getBoundable(t){return 0===t?this._boundable1:this._boundable2}getDistance(){return this._distance}distance(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())}get interfaces_(){return[g]}}class Xe{visitItem(t){}}class je{constructor(){je.constructor_.apply(this,arguments)}static constructor_(){if(this._root=null,this._built=!1,this._itemBoundables=new W,this._nodeCapacity=null,0===arguments.length)je.constructor_.call(this,je.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const t=arguments[0];x.isTrue(t>1,"Node capacity must be greater than 1"),this._nodeCapacity=t}}static compareDoubles(t,e){return t>e?1:t<e?-1:0}queryInternal(){if(N(arguments[2],Xe)&&arguments[0]instanceof Object&&arguments[1]instanceof ke){const t=arguments[0],e=arguments[2],n=arguments[1].getChildBoundables();for(let i=0;i<n.size();i++){const r=n.get(i);this.getIntersectsOp().intersects(r.getBounds(),t)&&(r instanceof ke?this.queryInternal(t,r,e):r instanceof Me?e.visitItem(r.getItem()):x.shouldNeverReachHere())}}else if(N(arguments[2],U)&&arguments[0]instanceof Object&&arguments[1]instanceof ke){const t=arguments[0],e=arguments[2],n=arguments[1].getChildBoundables();for(let i=0;i<n.size();i++){const r=n.get(i);this.getIntersectsOp().intersects(r.getBounds(),t)&&(r instanceof ke?this.queryInternal(t,r,e):r instanceof Me?e.add(r.getItem()):x.shouldNeverReachHere())}}}getNodeCapacity(){return this._nodeCapacity}lastNode(t){return t.get(t.size()-1)}size(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){let t=0;for(let e=arguments[0].getChildBoundables().iterator();e.hasNext();){const n=e.next();n instanceof ke?t+=this.size(n):n instanceof Me&&(t+=1)}return t}}removeItem(t,e){let n=null;for(let i=t.getChildBoundables().iterator();i.hasNext();){const t=i.next();t instanceof Me&&t.getItem()===e&&(n=t)}return null!==n&&(t.getChildBoundables().remove(n),!0)}itemsTree(){if(0===arguments.length){this.build();const t=this.itemsTree(this._root);return null===t?new W:t}if(1===arguments.length){const t=arguments[0],e=new W;for(let n=t.getChildBoundables().iterator();n.hasNext();){const t=n.next();if(t instanceof ke){const n=this.itemsTree(t);null!==n&&e.add(n)}else t instanceof Me?e.add(t.getItem()):x.shouldNeverReachHere()}return e.size()<=0?null:e}}insert(t,e){x.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new Me(t,e))}boundablesAtLevel(){if(1===arguments.length){const t=arguments[0],e=new W;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(x.isTrue(t>-2),e.getLevel()===t)return n.add(e),null;for(let i=e.getChildBoundables().iterator();i.hasNext();){const e=i.next();e instanceof ke?this.boundablesAtLevel(t,e,n):(x.isTrue(e instanceof Me),-1===t&&n.add(e))}return null}}query(){if(1===arguments.length){const t=arguments[0];this.build();const e=new W;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e),e}if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e)}}build(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0}getRoot(){return this.build(),this._root}remove(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];let i=this.removeItem(e,n);if(i)return!0;let r=null;for(let s=e.getChildBoundables().iterator();s.hasNext();){const e=s.next();if(this.getIntersectsOp().intersects(e.getBounds(),t)&&(e instanceof ke&&(i=this.remove(t,e,n),i))){r=e;break}}return null!==r&&r.getChildBoundables().isEmpty()&&e.getChildBoundables().remove(r),i}}createHigherLevels(t,e){x.isTrue(!t.isEmpty());const n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)}depth(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){let t=0;for(let e=arguments[0].getChildBoundables().iterator();e.hasNext();){const n=e.next();if(n instanceof ke){const e=this.depth(n);e>t&&(t=e)}}return t+1}}createParentBoundables(t,e){x.isTrue(!t.isEmpty());const n=new W;n.add(this.createNode(e));const i=new W(t);Be.sort(i,this.getComparator());for(let t=i.iterator();t.hasNext();){const i=t.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(i)}return n}isEmpty(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()}get interfaces_(){return[m]}}je.IntersectsOp=function(){},je.DEFAULT_NODE_CAPACITY=10;class Ue{distance(t,e){}}class Ve extends je{constructor(){super(),Ve.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)Ve.constructor_.call(this,Ve.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const t=arguments[0];je.constructor_.call(this,t)}}static centreX(t){return Ve.avg(t.getMinX(),t.getMaxX())}static avg(t,e){return(t+e)/2}static getItems(t){const e=new Array(t.size()).fill(null);let n=0;for(;!t.isEmpty();){const i=t.poll();e[n]=i.getBoundable(0).getItem(),n++}return e}static centreY(t){return Ve.avg(t.getMinY(),t.getMaxY())}createParentBoundablesFromVerticalSlices(t,e){x.isTrue(t.length>0);const n=new W;for(let i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n}nearestNeighbourK(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.nearestNeighbourK(t,d.POSITIVE_INFINITY,e)}if(3===arguments.length){const t=arguments[0],e=arguments[2];let n=arguments[1];const i=new Ge;i.add(t);const r=new Ge;for(;!i.isEmpty()&&n>=0;){const t=i.poll(),s=t.getDistance();if(s>=n)break;if(t.isLeaves())if(r.size()<e)r.add(t);else{r.peek().getDistance()>s&&(r.poll(),r.add(t));n=r.peek().getDistance()}else t.expandToQueue(i,n)}return Ve.getItems(r)}}createNode(t){return new We(t)}size(){return 0===arguments.length?super.size.call(this):super.size.apply(this,arguments)}insert(){if(!(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof O))return super.insert.apply(this,arguments);{const t=arguments[0],e=arguments[1];if(t.isNull())return null;super.insert.call(this,t,e)}}getIntersectsOp(){return Ve.intersectsOp}verticalSlices(t,e){const n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator();for(let t=0;t<e;t++){i[t]=new W;let e=0;for(;r.hasNext()&&e<n;){const n=r.next();i[t].add(n),e++}}return i}query(){if(1===arguments.length){const t=arguments[0];return super.query.call(this,t)}if(2===arguments.length){const t=arguments[0],e=arguments[1];super.query.call(this,t,e)}}getComparator(){return Ve.yComparator}createParentBoundablesFromVerticalSlice(t,e){return super.createParentBoundables.call(this,t,e)}remove(){if(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof O){const t=arguments[0],e=arguments[1];return super.remove.call(this,t,e)}return super.remove.apply(this,arguments)}depth(){return 0===arguments.length?super.depth.call(this):super.depth.apply(this,arguments)}createParentBoundables(t,e){x.isTrue(!t.isEmpty());const n=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),i=new W(t);Be.sort(i,Ve.xComparator);const r=this.verticalSlices(i,Math.trunc(Math.ceil(Math.sqrt(n))));return this.createParentBoundablesFromVerticalSlices(r,e)}nearestNeighbour(){if(1===arguments.length){if(N(arguments[0],Ue)){const t=arguments[0];if(this.isEmpty())return null;const e=new Ye(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof Ye){const t=arguments[0];let e=d.POSITIVE_INFINITY,n=null;const i=new Ge;for(i.add(t);!i.isEmpty()&&e>0;){const t=i.poll(),r=t.getDistance();if(r>=e)break;t.isLeaves()?(e=r,n=t):t.expandToQueue(i,e)}return null===n?null:[n.getBoundable(0).getItem(),n.getBoundable(1).getItem()]}}else{if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this.isEmpty()||t.isEmpty())return null;const n=new Ye(this.getRoot(),t.getRoot(),e);return this.nearestNeighbour(n)}if(3===arguments.length){const t=arguments[2],e=new Me(arguments[0],arguments[1]),n=new Ye(this.getRoot(),e,t);return this.nearestNeighbour(n)[0]}if(4===arguments.length){const t=arguments[2],e=arguments[3],n=new Me(arguments[0],arguments[1]),i=new Ye(this.getRoot(),n,t);return this.nearestNeighbourK(i,e)}}}isWithinDistance(){if(2===arguments.length){const t=arguments[0],e=arguments[1];let n=d.POSITIVE_INFINITY;const i=new Ge;for(i.add(t);!i.isEmpty();){const t=i.poll(),r=t.getDistance();if(r>e)return!1;if(t.maximumDistance()<=e)return!0;if(t.isLeaves()){if(n=r,n<=e)return!0}else t.expandToQueue(i,n)}return!1}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=new Ye(this.getRoot(),t.getRoot(),e);return this.isWithinDistance(i,n)}}get interfaces_(){return[ze,m]}}class We extends ke{constructor(){super(),We.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0];ke.constructor_.call(this,t)}computeBounds(){let t=null;for(let e=this.getChildBoundables().iterator();e.hasNext();){const n=e.next();null===t?t=new O(n.getBounds()):t.expandToInclude(n.getBounds())}return t}}Ve.STRtreeNode=We,Ve.xComparator=new class{get interfaces_(){return[p]}compare(t,e){return je.compareDoubles(Ve.centreX(t.getBounds()),Ve.centreX(e.getBounds()))}},Ve.yComparator=new class{get interfaces_(){return[p]}compare(t,e){return je.compareDoubles(Ve.centreY(t.getBounds()),Ve.centreY(e.getBounds()))}},Ve.intersectsOp=new class{get interfaces_(){return[IntersectsOp]}intersects(t,e){return t.intersects(e)}},Ve.DEFAULT_NODE_CAPACITY=10;class He{static relativeSign(t,e){return t<e?-1:t>e?1:0}static compare(t,e,n){if(e.equals2D(n))return 0;const i=He.relativeSign(e.x,n.x),r=He.relativeSign(e.y,n.y);switch(t){case 0:return He.compareValue(i,r);case 1:return He.compareValue(r,i);case 2:return He.compareValue(r,-i);case 3:return He.compareValue(-i,r);case 4:return He.compareValue(-i,-r);case 5:return He.compareValue(-r,-i);case 6:return He.compareValue(-r,i);case 7:return He.compareValue(i,-r)}return x.shouldNeverReachHere("invalid octant value"),0}static compareValue(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0}}class Ke{constructor(){Ke.constructor_.apply(this,arguments)}static constructor_(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._segString=t,this.coord=new S(e),this.segmentIndex=n,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))}getCoordinate(){return this.coord}print(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex)}compareTo(t){const e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:this._isInterior?e._isInterior?He.compare(this._segmentOctant,this.coord,e.coord):1:-1}isEndPoint(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t}toString(){return this.segmentIndex+":"+this.coord.toString()}isInterior(){return this._isInterior}get interfaces_(){return[g]}}class Ze{hasNext(){}next(){}remove(){}}class Je{constructor(){Je.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new be,this._edge=null;const t=arguments[0];this._edge=t}getSplitCoordinates(){const t=new pt;this.addEndpoints();const e=this.iterator();let n=e.next();for(;e.hasNext();){const i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()}addCollapsedNodes(){const t=new W;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(let e=t.iterator();e.hasNext();){const t=e.next().intValue();this.add(this._edge.getCoordinate(t),t)}}createSplitEdgePts(t,e){let n=e.segmentIndex-t.segmentIndex+2;if(2===n)return[new S(t.coord),new S(e.coord)];const i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;const s=new Array(n).fill(null);let o=0;s[o++]=new S(t.coord);for(let n=t.segmentIndex+1;n<=e.segmentIndex;n++)s[o++]=this._edge.getCoordinate(n);return r&&(s[o]=new S(e.coord)),s}print(t){t.println("Intersections:");for(let e=this.iterator();e.hasNext();){e.next().print(t)}}findCollapsesFromExistingVertices(t){for(let e=0;e<this._edge.size()-2;e++){const n=this._edge.getCoordinate(e);this._edge.getCoordinate(e+1);const i=this._edge.getCoordinate(e+2);n.equals2D(i)&&t.add(J.valueOf(e+1))}}addEdgeCoordinates(t,e,n){const i=this.createSplitEdgePts(t,e);n.add(i,!1)}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(t){this.addEndpoints(),this.addCollapsedNodes();const e=this.iterator();let n=e.next();for(;e.hasNext();){const i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}}findCollapseIndex(t,e,n){if(!t.coord.equals2D(e.coord))return!1;let i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)}findCollapsesFromInsertedNodes(t){const e=new Array(1).fill(null),n=this.iterator();let i=n.next();for(;n.hasNext();){const r=n.next();this.findCollapseIndex(i,r,e)&&t.add(J.valueOf(e[0])),i=r}}getEdge(){return this._edge}addEndpoints(){const t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)}createSplitEdge(t,e){const n=this.createSplitEdgePts(t,e);return new en(n,this._edge.getData())}add(t,e){const n=new Ke(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(n);return null!==i?(x.isTrue(i.coord.equals2D(t),"Found equal nodes with different coordinates"),i):(this._nodeMap.put(n,n),n)}checkSplitEdgesCorrectness(t){const e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new _("bad split edge start point at "+n);const i=t.get(t.size()-1).getCoordinates(),r=i[i.length-1];if(!r.equals2D(e[e.length-1]))throw new _("bad split edge end point at "+r)}}class Qe{static octant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new h("Cannot compute the octant for point ( "+t+", "+e+" )");const n=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?n>=i?0:1:n>=i?7:6:e>=0?n>=i?3:2:n>=i?4:5}if(arguments[0]instanceof S&&arguments[1]instanceof S){const t=arguments[0],e=arguments[1],n=e.x-t.x,i=e.y-t.y;if(0===n&&0===i)throw new h("Cannot compute the octant for two identical points "+t);return Qe.octant(n,i)}}}class $e{getCoordinates(){}size(){}getCoordinate(t){}isClosed(){}setData(t){}getData(){}}class tn{addIntersection(t,e){}get interfaces_(){return[$e]}}class en{constructor(){en.constructor_.apply(this,arguments)}static constructor_(){this._nodeList=new Je(this),this._pts=null,this._data=null;const t=arguments[0],e=arguments[1];this._pts=t,this._data=e}static getNodedSubstrings(){if(1===arguments.length){const t=arguments[0],e=new W;return en.getNodedSubstrings(t,e),e}if(2===arguments.length){const t=arguments[1];for(let e=arguments[0].iterator();e.hasNext();){e.next().getNodeList().addSplitEdges(t)}}}getCoordinates(){return this._pts}size(){return this._pts.length}getCoordinate(t){return this._pts[t]}isClosed(){return this._pts[0].equals(this._pts[this._pts.length-1])}getSegmentOctant(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))}setData(t){this._data=t}safeOctant(t,e){return t.equals2D(e)?0:Qe.octant(t,e)}getData(){return this._data}addIntersection(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){const t=arguments[1],e=arguments[3],n=new S(arguments[0].getIntersection(e));this.addIntersection(n,t)}}toString(){return Qt.toLineString(new It(this._pts))}getNodeList(){return this._nodeList}addIntersectionNode(t,e){let n=e;const i=n+1;if(i<this._pts.length){const e=this._pts[i];t.equals2D(e)&&(n=i)}return this._nodeList.add(t,n)}addIntersections(t,e,n){for(let i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)}get interfaces_(){return[tn]}}class nn{constructor(){nn.constructor_.apply(this,arguments)}static constructor_(){if(this.p0=null,this.p1=null,0===arguments.length)nn.constructor_.call(this,new S,new S);else if(1===arguments.length){const t=arguments[0];nn.constructor_.call(this,t.p0,t.p1)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.p0=t,this.p1=e}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];nn.constructor_.call(this,new S(t,e),new S(n,i))}}static midPoint(t,e){return new S((t.x+e.x)/2,(t.y+e.y)/2)}minX(){return Math.min(this.p0.x,this.p1.x)}orientationIndex(){if(arguments[0]instanceof nn){const t=arguments[0],e=et.index(this.p0,this.p1,t.p0),n=et.index(this.p0,this.p1,t.p1);return e>=0&&n>=0||e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof S){const t=arguments[0];return et.index(this.p0,this.p1,t)}}toGeometry(t){return t.createLineString([this.p0,this.p1])}isVertical(){return this.p0.x===this.p1.x}equals(t){if(!(t instanceof nn))return!1;const e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)}intersection(t){const e=new ue;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null}project(){if(arguments[0]instanceof S){const t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new S(t);const e=this.projectionFactor(t),n=new S;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof nn){const t=arguments[0],e=this.projectionFactor(t.p0),n=this.projectionFactor(t.p1);if(e>=1&&n>=1)return null;if(e<=0&&n<=0)return null;let i=this.project(t.p0);e<0&&(i=this.p0),e>1&&(i=this.p1);let r=this.project(t.p1);return n<0&&(r=this.p0),n>1&&(r=this.p1),new nn(i,r)}}normalize(){this.p1.compareTo(this.p0)<0&&this.reverse()}angle(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)}getCoordinate(t){return 0===t?this.p0:this.p1}distancePerpendicular(t){return ce.pointToLinePerpendicular(t,this.p0,this.p1)}minY(){return Math.min(this.p0.y,this.p1.y)}midPoint(){return nn.midPoint(this.p0,this.p1)}projectionFactor(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;const e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(i<=0)return d.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i}closestPoints(t){const e=this.intersection(t);if(null!==e)return[e,e];const n=new Array(2).fill(null);let i=d.MAX_VALUE,r=null;const s=this.closestPoint(t.p0);i=s.distance(t.p0),n[0]=s,n[1]=t.p0;const o=this.closestPoint(t.p1);r=o.distance(t.p1),r<i&&(i=r,n[0]=o,n[1]=t.p1);const l=t.closestPoint(this.p0);r=l.distance(this.p0),r<i&&(i=r,n[0]=this.p0,n[1]=l);const a=t.closestPoint(this.p1);return r=a.distance(this.p1),r<i&&(i=r,n[0]=this.p1,n[1]=a),n}closestPoint(t){const e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1}maxX(){return Math.max(this.p0.x,this.p1.x)}getLength(){return this.p0.distance(this.p1)}compareTo(t){const e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)}reverse(){const t=this.p0;this.p0=this.p1,this.p1=t}equalsTopo(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)}lineIntersection(t){return ae.intersection(this.p0,this.p1,t.p0,t.p1)}maxY(){return Math.max(this.p0.y,this.p1.y)}pointAlongOffset(t,e){const n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,s=this.p1.y-this.p0.y,o=Math.sqrt(r*r+s*s);let l=0,a=0;if(0!==e){if(o<=0)throw new IllegalStateException("Cannot compute offset from zero-length line segment");l=e*r/o,a=e*s/o}return new S(n-a,i+l)}setCoordinates(){if(1===arguments.length){const t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.p0.x=t.x,this.p0.y=t.y,this.p1.x=e.x,this.p1.y=e.y}}segmentFraction(t){let e=this.projectionFactor(t);return e<0?e=0:(e>1||d.isNaN(e))&&(e=1),e}toString(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"}isHorizontal(){return this.p0.y===this.p1.y}reflect(t){const e=this.p1.getY()-this.p0.getY(),n=this.p0.getX()-this.p1.getX(),i=this.p0.getY()*(this.p1.getX()-this.p0.getX())-this.p0.getX()*(this.p1.getY()-this.p0.getY()),r=e*e+n*n,s=e*e-n*n,o=t.getX(),l=t.getY();return new S((-s*o-2*e*n*l-2*e*i)/r,(s*l-2*e*n*o-2*n*i)/r)}distance(){if(arguments[0]instanceof nn){const t=arguments[0];return ce.segmentToSegment(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof S){const t=arguments[0];return ce.pointToSegment(t,this.p0,this.p1)}}pointAlong(t){const e=new S;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e}hashCode(){let t=d.doubleToLongBits(this.p0.x);t^=31*d.doubleToLongBits(this.p0.y);const e=Math.trunc(t)^Math.trunc(t>>32);let n=d.doubleToLongBits(this.p1.x);n^=31*d.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))}get interfaces_(){return[g,m]}}class rn{constructor(){rn.constructor_.apply(this,arguments)}static constructor_(){this._overlapSeg1=new nn,this._overlapSeg2=new nn}overlap(){if(2===arguments.length);else if(4===arguments.length){const t=arguments[1],e=arguments[2],n=arguments[3];arguments[0].getLineSegment(t,this._overlapSeg1),e.getLineSegment(n,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}}}class sn{constructor(){sn.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=i}getLineSegment(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]}computeSelect(t,e,n,i){const r=this._pts[e],s=this._pts[n];if(n-e==1)return i.select(this,e),null;if(!t.intersects(r,s))return null;const o=Math.trunc((e+n)/2);e<o&&this.computeSelect(t,e,o,i),o<n&&this.computeSelect(t,o,n,i)}getCoordinates(){const t=new Array(this._end-this._start+1).fill(null);let e=0;for(let n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t}computeOverlaps(){if(2===arguments.length){const t=arguments[0],e=arguments[1];this.computeOverlaps(this._start,this._end,t,t._start,t._end,e)}else if(6===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=arguments[4],s=arguments[5];if(e-t==1&&r-i==1)return s.overlap(this,t,n,i),null;if(!this.overlaps(t,e,n,i,r))return null;const o=Math.trunc((t+e)/2),l=Math.trunc((i+r)/2);t<o&&(i<l&&this.computeOverlaps(t,o,n,i,l,s),l<r&&this.computeOverlaps(t,o,n,l,r,s)),o<e&&(i<l&&this.computeOverlaps(o,e,n,i,l,s),l<r&&this.computeOverlaps(o,e,n,l,r,s))}}setId(t){this._id=t}select(t,e){this.computeSelect(t,this._start,this._end,e)}getEnvelope(){if(null===this._env){const t=this._pts[this._start],e=this._pts[this._end];this._env=new O(t,e)}return this._env}overlaps(t,e,n,i,r){return O.intersects(this._pts[t],this._pts[e],n._pts[i],n._pts[r])}getEndIndex(){return this._end}getStartIndex(){return this._start}getContext(){return this._context}getId(){return this._id}}class on{static findChainEnd(t,e){let n=e;for(;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;const i=Oe.quadrant(t[n],t[n+1]);let r=e+1;for(;r<t.length;){if(!t[r-1].equals2D(t[r])){if(Oe.quadrant(t[r-1],t[r])!==i)break}r++}return r-1}static getChains(){if(1===arguments.length){const t=arguments[0];return on.getChains(t,null)}if(2===arguments.length){const t=arguments[0],e=arguments[1],n=new W;let i=0;do{const r=on.findChainEnd(t,i),s=new sn(t,i,r,e);n.add(s),i=r}while(i<t.length-1);return n}}}class ln{computeNodes(t){}getNodedSubstrings(){}}class an{constructor(){an.constructor_.apply(this,arguments)}static constructor_(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];this.setSegmentIntersector(t)}}setSegmentIntersector(t){this._segInt=t}get interfaces_(){return[ln]}}class cn extends an{constructor(){super(),cn.constructor_.apply(this,arguments)}static constructor_(){if(this._monoChains=new W,this._index=new Ve,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0,0===arguments.length);else if(1===arguments.length){const t=arguments[0];an.constructor_.call(this,t)}}getMonotoneChains(){return this._monoChains}getNodedSubstrings(){return en.getNodedSubstrings(this._nodedSegStrings)}getIndex(){return this._index}add(t){for(let e=on.getChains(t.getCoordinates(),t).iterator();e.hasNext();){const t=e.next();t.setId(this._idCounter++),this._index.insert(t.getEnvelope(),t),this._monoChains.add(t)}}computeNodes(t){this._nodedSegStrings=t;for(let e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()}intersectChains(){const t=new hn(this._segInt);for(let e=this._monoChains.iterator();e.hasNext();){const n=e.next();for(let e=this._index.query(n.getEnvelope()).iterator();e.hasNext();){const i=e.next();if(i.getId()>n.getId()&&(n.computeOverlaps(i,t),this._nOverlaps++),this._segInt.isDone())return null}}}}class hn extends rn{constructor(){super(),hn.constructor_.apply(this,arguments)}static constructor_(){this._si=null;const t=arguments[0];this._si=t}overlap(){if(4!==arguments.length)return super.overlap.apply(this,arguments);{const t=arguments[1],e=arguments[2],n=arguments[3],i=arguments[0].getContext(),r=e.getContext();this._si.processIntersections(i,t,r,n)}}}cn.SegmentOverlapAction=hn;class un{constructor(){un.constructor_.apply(this,arguments)}static constructor_(){this._inputLine=null,this._distanceTol=null,this._isDeleted=null,this._angleOrientation=et.COUNTERCLOCKWISE;const t=arguments[0];this._inputLine=t}static simplify(t,e){return new un(t).simplify(e)}isDeletable(t,e,n,i){const r=this._inputLine[t],s=this._inputLine[e],o=this._inputLine[n];return!!this.isConcave(r,s,o)&&(!!this.isShallow(r,s,o,i)&&this.isShallowSampled(r,s,t,n,i))}deleteShallowConcavities(){let t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),i=!1;for(;n<this._inputLine.length;){let r=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=un.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i}isShallowConcavity(t,e,n,i){if(!(et.index(t,e,n)===this._angleOrientation))return!1;return ce.pointToSegment(e,t,n)<i}isShallowSampled(t,e,n,i,r){let s=Math.trunc((i-n)/un.NUM_PTS_TO_CHECK);s<=0&&(s=1);for(let o=n;o<i;o+=s)if(!this.isShallow(t,e,this._inputLine[o],r))return!1;return!0}isConcave(t,e,n){return et.index(t,e,n)===this._angleOrientation}simplify(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=et.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);let e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()}findNextNonDeletedIndex(t){let e=t+1;for(;e<this._inputLine.length&&this._isDeleted[e]===un.DELETE;)e++;return e}isShallow(t,e,n,i){return ce.pointToSegment(e,t,n)<i}collapseLine(){const t=new pt;for(let e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==un.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()}}un.INIT=0,un.DELETE=1,un.KEEP=1,un.NUM_PTS_TO_CHECK=10;class dn{constructor(){dn.constructor_.apply(this,arguments)}static constructor_(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new W}getCoordinates(){return this._ptList.toArray(dn.COORDINATE_ARRAY_TYPE)}setPrecisionModel(t){this._precisionModel=t}addPt(t){const e=new S(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)}reverse(){}addPts(t,e){if(e)for(let e=0;e<t.length;e++)this.addPt(t[e]);else for(let e=t.length-1;e>=0;e--)this.addPt(t[e])}isRedundant(t){if(this._ptList.size()<1)return!1;const e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance}toString(){return(new Rt).createLineString(this.getCoordinates()).toString()}closeRing(){if(this._ptList.size()<1)return null;const t=new S(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)}setMinimumVertexDistance(t){this._minimimVertexDistance=t}}dn.COORDINATE_ARRAY_TYPE=new Array(0).fill(null);class gn{static toDegrees(t){return 180*t/Math.PI}static normalize(t){for(;t>Math.PI;)t-=gn.PI_TIMES_2;for(;t<=-Math.PI;)t+=gn.PI_TIMES_2;return t}static angle(){if(1===arguments.length){const t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){const t=arguments[0],e=arguments[1],n=e.x-t.x,i=e.y-t.y;return Math.atan2(i,n)}}static isAcute(t,e,n){const i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)>0}static isObtuse(t,e,n){const i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)<0}static interiorAngle(t,e,n){const i=gn.angle(e,t),r=gn.angle(e,n);return Math.abs(r-i)}static normalizePositive(t){if(t<0){for(;t<0;)t+=gn.PI_TIMES_2;t>=gn.PI_TIMES_2&&(t=0)}else{for(;t>=gn.PI_TIMES_2;)t-=gn.PI_TIMES_2;t<0&&(t=0)}return t}static angleBetween(t,e,n){const i=gn.angle(e,t),r=gn.angle(e,n);return gn.diff(i,r)}static diff(t,e){let n=null;return n=t<e?e-t:t-e,n>Math.PI&&(n=2*Math.PI-n),n}static toRadians(t){return t*Math.PI/180}static getTurn(t,e){const n=Math.sin(e-t);return n>0?gn.COUNTERCLOCKWISE:n<0?gn.CLOCKWISE:gn.NONE}static angleBetweenOriented(t,e,n){const i=gn.angle(e,t),r=gn.angle(e,n)-i;return r<=-Math.PI?r+gn.PI_TIMES_2:r>Math.PI?r-gn.PI_TIMES_2:r}}gn.PI_TIMES_2=2*Math.PI,gn.PI_OVER_2=Math.PI/2,gn.PI_OVER_4=Math.PI/4,gn.COUNTERCLOCKWISE=et.COUNTERCLOCKWISE,gn.CLOCKWISE=et.CLOCKWISE,gn.NONE=et.COLLINEAR;class fn{constructor(){fn.constructor_.apply(this,arguments)}static constructor_(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new nn,this._seg1=new nn,this._offset0=new nn,this._offset1=new nn,this._side=0,this._hasNarrowConcaveAngle=!1;const t=arguments[0],e=arguments[1],n=arguments[2];this._precisionModel=t,this._bufParams=e,this._li=new ue,this._filletAngleQuantum=Math.PI/2/e.getQuadrantSegments(),e.getQuadrantSegments()>=8&&e.getJoinStyle()===$t.JOIN_ROUND&&(this._closingSegLengthFactor=fn.MAX_CLOSING_SEG_LEN_FACTOR),this.init(n)}addNextSegment(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;const n=et.index(this._s0,this._s1,this._s2),i=n===et.CLOCKWISE&&this._side===ee.LEFT||n===et.COUNTERCLOCKWISE&&this._side===ee.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)}addLineEndCap(t,e){const n=new nn(t,e),i=new nn;this.computeOffsetSegment(n,ee.LEFT,this._distance,i);const r=new nn;this.computeOffsetSegment(n,ee.RIGHT,this._distance,r);const s=e.x-t.x,o=e.y-t.y,l=Math.atan2(o,s);switch(this._bufParams.getEndCapStyle()){case $t.CAP_ROUND:this._segList.addPt(i.p1),this.addDirectedFillet(e,l+Math.PI/2,l-Math.PI/2,et.CLOCKWISE,this._distance),this._segList.addPt(r.p1);break;case $t.CAP_FLAT:this._segList.addPt(i.p1),this._segList.addPt(r.p1);break;case $t.CAP_SQUARE:const t=new S;t.x=Math.abs(this._distance)*Math.cos(l),t.y=Math.abs(this._distance)*Math.sin(l);const n=new S(i.p1.x+t.x,i.p1.y+t.y),s=new S(r.p1.x+t.x,r.p1.y+t.y);this._segList.addPt(n),this._segList.addPt(s)}}getCoordinates(){return this._segList.getCoordinates()}addMitreJoin(t,e,n,i){const r=ae.intersection(e.p0,e.p1,n.p0,n.p1);if(null!==r){if((i<=0?1:r.distance(t)/Math.abs(i))<=this._bufParams.getMitreLimit())return this._segList.addPt(r),null}this.addLimitedMitreJoin(e,n,i,this._bufParams.getMitreLimit())}addOutsideTurn(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*fn.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===$t.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===$t.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))}createSquare(t){this._segList.addPt(new S(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new S(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new S(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new S(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()}addSegments(t,e){this._segList.addPts(t,e)}addFirstSegment(){this._segList.addPt(this._offset1.p0)}addCornerFillet(t,e,n,i,r){const s=e.x-t.x,o=e.y-t.y;let l=Math.atan2(o,s);const a=n.x-t.x,c=n.y-t.y,h=Math.atan2(c,a);i===et.CLOCKWISE?l<=h&&(l+=2*Math.PI):l>=h&&(l-=2*Math.PI),this._segList.addPt(e),this.addDirectedFillet(t,l,h,i,r),this._segList.addPt(n)}addLastSegment(){this._segList.addPt(this._offset1.p1)}initSideSegments(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)}addLimitedMitreJoin(t,e,n,i){const r=this._seg0.p1,s=gn.angle(r,this._seg0.p0),o=gn.angleBetweenOriented(this._seg0.p0,r,this._seg1.p1)/2,l=gn.normalize(s+o),a=gn.normalize(l+Math.PI),c=i*n,h=n-c*Math.abs(Math.sin(o)),u=r.x+c*Math.cos(a),d=r.y+c*Math.sin(a),g=new S(u,d),f=new nn(r,g),p=f.pointAlongOffset(1,h),m=f.pointAlongOffset(1,-h);this._side===ee.LEFT?(this._segList.addPt(p),this._segList.addPt(m)):(this._segList.addPt(m),this._segList.addPt(p))}addDirectedFillet(t,e,n,i,r){const s=i===et.CLOCKWISE?-1:1,o=Math.abs(e-n),l=Math.trunc(o/this._filletAngleQuantum+.5);if(l<1)return null;const a=o/l,c=new S;for(let n=0;n<l;n++){const i=e+s*n*a;c.x=t.x+r*Math.cos(i),c.y=t.y+r*Math.sin(i),this._segList.addPt(c)}}computeOffsetSegment(t,e,n,i){const r=e===ee.LEFT?1:-1,s=t.p1.x-t.p0.x,o=t.p1.y-t.p0.y,l=Math.sqrt(s*s+o*o),a=r*n*s/l,c=r*n*o/l;i.p0.x=t.p0.x-c,i.p0.y=t.p0.y+a,i.p1.x=t.p1.x-c,i.p1.y=t.p1.y+a}addInsideTurn(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*fn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){const t=new S((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(t);const e=new S((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(e)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}}createCircle(t){const e=new S(t.x+this._distance,t.y);this._segList.addPt(e),this.addDirectedFillet(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()}addBevelJoin(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)}init(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new dn,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*fn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)}addCollinear(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===$t.JOIN_BEVEL||this._bufParams.getJoinStyle()===$t.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,et.CLOCKWISE,this._distance))}closeRing(){this._segList.closeRing()}hasNarrowConcaveAngle(){return this._hasNarrowConcaveAngle}}fn.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,fn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,fn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,fn.MAX_CLOSING_SEG_LEN_FACTOR=80;class pn{constructor(){pn.constructor_.apply(this,arguments)}static constructor_(){this._distance=0,this._precisionModel=null,this._bufParams=null;const t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e}static copyCoordinates(t){const e=new Array(t.length).fill(null);for(let n=0;n<e.length;n++)e[n]=new S(t[n]);return e}getOffsetCurve(t,e){if(this._distance=e,0===e)return null;const n=e<0,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);const s=r.getCoordinates();return n&&yt.reverse(s),s}computeSingleSidedBufferCurve(t,e,n){const i=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);const e=un.simplify(t,-i),r=e.length-1;n.initSideSegments(e[r],e[r-1],ee.LEFT),n.addFirstSegment();for(let t=r-2;t>=0;t--)n.addNextSegment(e[t],!0)}else{n.addSegments(t,!1);const e=un.simplify(t,i),r=e.length-1;n.initSideSegments(e[0],e[1],ee.LEFT),n.addFirstSegment();for(let t=2;t<=r;t++)n.addNextSegment(e[t],!0)}n.addLastSegment(),n.closeRing()}computeRingBufferCurve(t,e,n){let i=this.simplifyTolerance(this._distance);e===ee.RIGHT&&(i=-i);const r=un.simplify(t,i),s=r.length-1;n.initSideSegments(r[s-1],r[0],e);for(let t=1;t<=s;t++){const e=1!==t;n.addNextSegment(r[t],e)}n.closeRing()}computeLineBufferCurve(t,e){const n=this.simplifyTolerance(this._distance),i=un.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],ee.LEFT);for(let t=2;t<=r;t++)e.addNextSegment(i[t],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);const s=un.simplify(t,-n),o=s.length-1;e.initSideSegments(s[o],s[o-1],ee.LEFT);for(let t=o-2;t>=0;t--)e.addNextSegment(s[t],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()}computePointCurve(t,e){switch(this._bufParams.getEndCapStyle()){case $t.CAP_ROUND:e.createCircle(t);break;case $t.CAP_SQUARE:e.createSquare(t)}}getLineCurve(t,e){if(this._distance=e,this.isLineOffsetEmpty(e))return null;const n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){const n=e<0;this.computeSingleSidedBufferCurve(t,n,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()}getBufferParameters(){return this._bufParams}simplifyTolerance(t){return t*this._bufParams.getSimplifyFactor()}getRingCurve(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return pn.copyCoordinates(t);const i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()}computeOffsetCurve(t,e,n){const i=this.simplifyTolerance(this._distance);if(e){const e=un.simplify(t,-i),r=e.length-1;n.initSideSegments(e[r],e[r-1],ee.LEFT),n.addFirstSegment();for(let t=r-2;t>=0;t--)n.addNextSegment(e[t],!0)}else{const e=un.simplify(t,i),r=e.length-1;n.initSideSegments(e[0],e[1],ee.LEFT),n.addFirstSegment();for(let t=2;t<=r;t++)n.addNextSegment(e[t],!0)}n.addLastSegment()}isLineOffsetEmpty(t){return 0===t||t<0&&!this._bufParams.isSingleSided()}getSegGen(t){return new fn(this._precisionModel,this._bufParams,t)}}class mn{constructor(){mn.constructor_.apply(this,arguments)}static constructor_(){this._subgraphs=null,this._seg=new nn;const t=arguments[0];this._subgraphs=t}findStabbedSegments(){if(1===arguments.length){const t=arguments[0],e=new W;for(let n=this._subgraphs.iterator();n.hasNext();){const i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(N(arguments[2],U)&&arguments[0]instanceof S&&arguments[1]instanceof Le){const t=arguments[0],e=arguments[1],n=arguments[2],i=e.getEdge().getCoordinates();for(let r=0;r<i.length-1;r++){this._seg.p0=i[r],this._seg.p1=i[r+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(Math.max(this._seg.p0.x,this._seg.p1.x)<t.x)continue;if(this._seg.isHorizontal())continue;if(t.y<this._seg.p0.y||t.y>this._seg.p1.y)continue;if(et.index(this._seg.p0,this._seg.p1,t)===et.RIGHT)continue;let s=e.getDepth(ee.LEFT);this._seg.p0.equals(i[r])||(s=e.getDepth(ee.RIGHT));const o=new _n(this._seg,s);n.add(o)}}else if(N(arguments[2],U)&&arguments[0]instanceof S&&N(arguments[1],U)){const t=arguments[0],e=arguments[2];for(let n=arguments[1].iterator();n.hasNext();){const i=n.next();i.isForward()&&this.findStabbedSegments(t,i,e)}}}getDepth(t){const e=this.findStabbedSegments(t);if(0===e.size())return 0;return Be.min(e)._leftDepth}}class _n{constructor(){_n.constructor_.apply(this,arguments)}static constructor_(){this._upwardSeg=null,this._leftDepth=null;const t=arguments[0],e=arguments[1];this._upwardSeg=new nn(t),this._leftDepth=e}compareTo(t){const e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;let n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg),0!==n?n:this._upwardSeg.compareTo(e._upwardSeg))}compareX(t,e){const n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)}toString(){return this._upwardSeg.toString()}get interfaces_(){return[g]}}mn.DepthSegment=_n;class yn extends c{constructor(){super(),yn.constructor_.apply(this,arguments)}static constructor_(){c.constructor_.call(this,"Projective point not representable on the Cartesian plane.")}}class xn{constructor(){xn.constructor_.apply(this,arguments)}static constructor_(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){const t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];this.x=t,this.y=e,this.w=1}else if(arguments[0]instanceof xn&&arguments[1]instanceof xn){const t=arguments[0],e=arguments[1];this.x=t.y*e.w-e.y*t.w,this.y=e.x*t.w-t.x*e.w,this.w=t.x*e.y-e.x*t.y}else if(arguments[0]instanceof S&&arguments[1]instanceof S){const t=arguments[0],e=arguments[1];this.x=t.y-e.y,this.y=e.x-t.x,this.w=t.x*e.y-e.x*t.y}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this.x=t,this.y=e,this.w=n}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=t.y-e.y,s=e.x-t.x,o=t.x*e.y-e.x*t.y,l=n.y-i.y,a=i.x-n.x,c=n.x*i.y-i.x*n.y;this.x=s*c-a*o,this.y=l*o-r*c,this.w=r*a-l*s}}getY(){const t=this.y/this.w;if(d.isNaN(t)||d.isInfinite(t))throw new yn;return t}getX(){const t=this.x/this.w;if(d.isNaN(t)||d.isInfinite(t))throw new yn;return t}getCoordinate(){const t=new S;return t.x=this.getX(),t.y=this.getY(),t}}class In{constructor(){In.constructor_.apply(this,arguments)}static constructor_(){this.p0=null,this.p1=null,this.p2=null;const t=arguments[0],e=arguments[1],n=arguments[2];this.p0=t,this.p1=e,this.p2=n}static area(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)}static signedArea(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2}static det(t,e,n,i){return t*i-e*n}static interpolateZ(t,e,n,i){const r=e.x,s=e.y,o=n.x-r,l=i.x-r,a=n.y-s,c=i.y-s,h=o*c-l*a,u=t.x-r,d=t.y-s,g=(c*u-l*d)/h,f=(-a*u+o*d)/h;return e.getZ()+g*(n.getZ()-e.getZ())+f*(i.getZ()-e.getZ())}static longestSideLength(t,e,n){const i=t.distance(e),r=e.distance(n),s=n.distance(t);let o=i;return r>o&&(o=r),s>o&&(o=s),o}static circumcentreDD(t,e,n){const i=Q.valueOf(t.x).subtract(n.x),r=Q.valueOf(t.y).subtract(n.y),s=Q.valueOf(e.x).subtract(n.x),o=Q.valueOf(e.y).subtract(n.y),l=Q.determinant(i,r,s,o).multiply(2),a=i.sqr().add(r.sqr()),c=s.sqr().add(o.sqr()),h=Q.determinant(r,a,o,c),u=Q.determinant(i,a,s,c),d=Q.valueOf(n.x).subtract(h.divide(l)).doubleValue(),g=Q.valueOf(n.y).add(u.divide(l)).doubleValue();return new S(d,g)}static isAcute(t,e,n){return!!gn.isAcute(t,e,n)&&(!!gn.isAcute(e,n,t)&&!!gn.isAcute(n,t,e))}static circumcentre(t,e,n){const i=n.x,r=n.y,s=t.x-i,o=t.y-r,l=e.x-i,a=e.y-r,c=2*In.det(s,o,l,a),h=In.det(o,s*s+o*o,a,l*l+a*a),u=In.det(s,s*s+o*o,l,l*l+a*a);return new S(i-h/c,r+u/c)}static perpendicularBisector(t,e){const n=e.x-t.x,i=e.y-t.y,r=new xn(t.x+n/2,t.y+i/2,1),s=new xn(t.x-i+n/2,t.y+n+i/2,1);return new xn(r,s)}static angleBisector(t,e,n){const i=e.distance(t),r=i/(i+e.distance(n)),s=n.x-t.x,o=n.y-t.y;return new S(t.x+r*s,t.y+r*o)}static area3D(t,e,n){const i=e.x-t.x,r=e.y-t.y,s=e.getZ()-t.getZ(),o=n.x-t.x,l=n.y-t.y,a=n.getZ()-t.getZ(),c=r*a-s*l,h=s*o-i*a,u=i*l-r*o,d=c*c+h*h+u*u;return Math.sqrt(d)/2}static centroid(t,e,n){const i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new S(i,r)}static inCentre(t,e,n){const i=e.distance(n),r=t.distance(n),s=t.distance(e),o=i+r+s,l=(i*t.x+r*e.x+s*n.x)/o,a=(i*t.y+r*e.y+s*n.y)/o;return new S(l,a)}area(){return In.area(this.p0,this.p1,this.p2)}signedArea(){return In.signedArea(this.p0,this.p1,this.p2)}interpolateZ(t){if(null===t)throw new h("Supplied point is null.");return In.interpolateZ(t,this.p0,this.p1,this.p2)}longestSideLength(){return In.longestSideLength(this.p0,this.p1,this.p2)}isAcute(){return In.isAcute(this.p0,this.p1,this.p2)}circumcentre(){return In.circumcentre(this.p0,this.p1,this.p2)}area3D(){return In.area3D(this.p0,this.p1,this.p2)}centroid(){return In.centroid(this.p0,this.p1,this.p2)}inCentre(){return In.inCentre(this.p0,this.p1,this.p2)}}class En{constructor(){En.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new W;const t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n}addRingSide(t,e,n,i,r){if(0===e&&t.length<ht.MINIMUM_VALID_SIZE)return null;let s=i,o=r;t.length>=ht.MINIMUM_VALID_SIZE&&et.isCCW(t)&&(s=r,o=i,n=ee.opposite(n));const l=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(l,s,o)}addRingBothSides(t,e){this.addRingSide(t,e,ee.LEFT,te.EXTERIOR,te.INTERIOR),this.addRingSide(t,e,ee.RIGHT,te.INTERIOR,te.EXTERIOR)}addPoint(t){if(this._distance<=0)return null;const e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,te.EXTERIOR,te.INTERIOR)}addPolygon(t){let e=this._distance,n=ee.LEFT;this._distance<0&&(e=-this._distance,n=ee.RIGHT);const i=t.getExteriorRing(),r=yt.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&r.length<3)return null;this.addRingSide(r,e,n,te.EXTERIOR,te.INTERIOR);for(let i=0;i<t.getNumInteriorRing();i++){const r=t.getInteriorRingN(i),s=yt.removeRepeatedPoints(r.getCoordinates());this._distance>0&&this.isErodedCompletely(r,-this._distance)||this.addRingSide(s,e,ee.opposite(n),te.INTERIOR,te.EXTERIOR)}}isTriangleErodedCompletely(t,e){const n=new In(t[0],t[1],t[2]),i=n.inCentre();return ce.pointToSegment(i,n.p0,n.p1)<Math.abs(e)}addLineString(t){if(this._curveBuilder.isLineOffsetEmpty(this._distance))return null;const e=yt.removeRepeatedPoints(t.getCoordinates());if(yt.isRing(e)&&!this._curveBuilder.getBufferParameters().isSingleSided())this.addRingBothSides(e,this._distance);else{const t=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(t,te.EXTERIOR,te.INTERIOR)}}addCurve(t,e,n){if(null===t||t.length<2)return null;const i=new en(t,new pe(0,te.BOUNDARY,e,n));this._curveList.add(i)}getCurves(){return this.add(this._inputGeom),this._curveList}add(t){if(t.isEmpty())return null;if(t instanceof it)this.addPolygon(t);else if(t instanceof k)this.addLineString(t);else if(t instanceof q)this.addPoint(t);else if(t instanceof ct)this.addCollection(t);else if(t instanceof Ot)this.addCollection(t);else if(t instanceof Ct)this.addCollection(t);else{if(!(t instanceof at))throw new A(t.getGeometryType());this.addCollection(t)}}isErodedCompletely(t,e){const n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);const i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>r}addCollection(t){for(let e=0;e<t.getNumGeometries();e++){const n=t.getGeometryN(e);this.add(n)}}}class Cn{locate(t){}}class Sn{constructor(){Sn.constructor_.apply(this,arguments)}static constructor_(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;const t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()}static isAtomic(t){return!(t instanceof at)}next(){if(this._atStart)return this._atStart=!1,Sn.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new V;const t=this._parent.getGeometryN(this._index++);return t instanceof at?(this._subcollectionIterator=new Sn(t),this._subcollectionIterator.next()):t}remove(){throw new A(this.getClass().getName())}hasNext(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)}get interfaces_(){return[Ze]}}class wn{constructor(){wn.constructor_.apply(this,arguments)}static constructor_(){this._geom=null;const t=arguments[0];this._geom=t}static locatePointInPolygon(t,e){if(e.isEmpty())return te.EXTERIOR;const n=e.getExteriorRing(),i=wn.locatePointInRing(t,n);if(i!==te.INTERIOR)return i;for(let n=0;n<e.getNumInteriorRing();n++){const i=e.getInteriorRingN(n),r=wn.locatePointInRing(t,i);if(r===te.BOUNDARY)return te.BOUNDARY;if(r===te.INTERIOR)return te.EXTERIOR}return te.INTERIOR}static locatePointInRing(t,e){return e.getEnvelopeInternal().intersects(t)?ge.locateInRing(t,e.getCoordinates()):te.EXTERIOR}static containsPointInPolygon(t,e){return te.EXTERIOR!==wn.locatePointInPolygon(t,e)}static locateInGeometry(t,e){if(e instanceof it)return wn.locatePointInPolygon(t,e);if(e instanceof at){const n=new Sn(e);for(;n.hasNext();){const i=n.next();if(i!==e){const e=wn.locateInGeometry(t,i);if(e!==te.EXTERIOR)return e}}}return te.EXTERIOR}static isContained(t,e){return te.EXTERIOR!==wn.locate(t,e)}static locate(t,e){return e.isEmpty()?te.EXTERIOR:e.getEnvelopeInternal().intersects(t)?wn.locateInGeometry(t,e):te.EXTERIOR}locate(t){return wn.locate(t,this._geom)}get interfaces_(){return[Cn]}}class Nn{constructor(){Nn.constructor_.apply(this,arguments)}static constructor_(){this._edgeMap=new be,this._edgeList=null,this._ptInAreaLocation=[te.NONE,te.NONE]}getNextCW(t){this.getEdges();const e=this._edgeList.indexOf(t);let n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)}propagateSideLabels(t){let e=te.NONE;for(let n=this.iterator();n.hasNext();){const i=n.next().getLabel();i.isArea(t)&&i.getLocation(t,ee.LEFT)!==te.NONE&&(e=i.getLocation(t,ee.LEFT))}if(e===te.NONE)return null;let n=e;for(let e=this.iterator();e.hasNext();){const i=e.next(),r=i.getLabel();if(r.getLocation(t,ee.ON)===te.NONE&&r.setLocation(t,ee.ON,n),r.isArea(t)){const e=r.getLocation(t,ee.LEFT),s=r.getLocation(t,ee.RIGHT);if(s!==te.NONE){if(s!==n)throw new se("side location conflict",i.getCoordinate());e===te.NONE&&x.shouldNeverReachHere("found single null side (at "+i.getCoordinate()+")"),n=e}else x.isTrue(r.getLocation(t,ee.LEFT)===te.NONE,"found single null side"),r.setLocation(t,ee.RIGHT,n),r.setLocation(t,ee.LEFT,n)}}}getCoordinate(){const t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()}print(t){_t.out.println("EdgeEndStar:   "+this.getCoordinate());for(let e=this.iterator();e.hasNext();){e.next().print(t)}}isAreaLabelsConsistent(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)}checkAreaLabelsConsistent(t){const e=this.getEdges();if(e.size()<=0)return!0;const n=e.size()-1,i=e.get(n).getLabel().getLocation(t,ee.LEFT);x.isTrue(i!==te.NONE,"Found unlabelled area edge");let r=i;for(let e=this.iterator();e.hasNext();){const n=e.next().getLabel();x.isTrue(n.isArea(t),"Found non-area edge");const i=n.getLocation(t,ee.LEFT),s=n.getLocation(t,ee.RIGHT);if(i===s)return!1;if(s!==r)return!1;r=i}return!0}findIndex(t){this.iterator();for(let e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1}iterator(){return this.getEdges().iterator()}getEdges(){return null===this._edgeList&&(this._edgeList=new W(this._edgeMap.values())),this._edgeList}getLocation(t,e,n){return this._ptInAreaLocation[t]===te.NONE&&(this._ptInAreaLocation[t]=wn.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]}toString(){const t=new Z;t.append("EdgeEndStar:   "+this.getCoordinate()),t.append("\n");for(let e=this.iterator();e.hasNext();){const n=e.next();t.append(n),t.append("\n")}return t.toString()}computeEdgeEndLabels(t){for(let e=this.iterator();e.hasNext();){e.next().computeLabel(t)}}computeLabelling(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);const e=[!1,!1];for(let t=this.iterator();t.hasNext();){const n=t.next().getLabel();for(let t=0;t<2;t++)n.isLine(t)&&n.getLocation(t)===te.BOUNDARY&&(e[t]=!0)}for(let n=this.iterator();n.hasNext();){const i=n.next(),r=i.getLabel();for(let n=0;n<2;n++)if(r.isAnyNull(n)){let s=te.NONE;if(e[n])s=te.EXTERIOR;else{const e=i.getCoordinate();s=this.getLocation(n,e,t)}r.setAllLocationsIfNull(n,s)}}}getDegree(){return this._edgeMap.size()}insertEdgeEnd(t,e){this._edgeMap.put(t,e),this._edgeList=null}}class Tn extends Nn{constructor(){super(),Tn.constructor_.apply(this,arguments)}static constructor_(){this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}linkResultDirectedEdges(){this.getResultAreaEdges();let t=null,e=null,n=this._SCANNING_FOR_INCOMING;for(let i=0;i<this._resultAreaEdgeList.size();i++){const r=this._resultAreaEdgeList.get(i),s=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this._SCANNING_FOR_INCOMING:if(!s.isInResult())continue;e=s,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new se("no outgoing dirEdge found",this.getCoordinate());x.isTrue(t.isInResult(),"unable to link last incoming dirEdge"),e.setNext(t)}}insert(t){const e=t;this.insertEdgeEnd(e,e)}getRightmostEdge(){const t=this.getEdges(),e=t.size();if(e<1)return null;const n=t.get(0);if(1===e)return n;const i=t.get(e-1),r=n.getQuadrant(),s=i.getQuadrant();return Oe.isNorthern(r)&&Oe.isNorthern(s)?n:Oe.isNorthern(r)||Oe.isNorthern(s)?0!==n.getDy()?n:0!==i.getDy()?i:(x.shouldNeverReachHere("found two horizontal edges incident on node"),null):i}print(t){_t.out.println("DirectedEdgeStar: "+this.getCoordinate());for(let e=this.iterator();e.hasNext();){const n=e.next();t.print("out "),n.print(t),t.println(),t.print("in "),n.getSym().print(t),t.println()}}getResultAreaEdges(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new W;for(let t=this.iterator();t.hasNext();){const e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList}updateLabelling(t){for(let e=this.iterator();e.hasNext();){const n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}}linkAllDirectedEdges(){this.getEdges();let t=null,e=null;for(let n=this._edgeList.size()-1;n>=0;n--){const i=this._edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)}computeDepths(){if(1===arguments.length){const t=arguments[0],e=this.findIndex(t),n=t.getDepth(ee.LEFT),i=t.getDepth(ee.RIGHT),r=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,r)!==i)throw new se("depth mismatch at "+t.getCoordinate())}else if(3===arguments.length){const t=arguments[1];let e=arguments[2];for(let n=arguments[0];n<t;n++){const t=this._edgeList.get(n);t.setEdgeDepths(ee.RIGHT,e),e=t.getDepth(ee.LEFT)}return e}}mergeSymLabels(){for(let t=this.iterator();t.hasNext();){const e=t.next();e.getLabel().merge(e.getSym().getLabel())}}linkMinimalDirectedEdges(t){let e=null,n=null,i=this._SCANNING_FOR_INCOMING;for(let r=this._resultAreaEdgeList.size()-1;r>=0;r--){const s=this._resultAreaEdgeList.get(r),o=s.getSym();switch(null===e&&s.getEdgeRing()===t&&(e=s),i){case this._SCANNING_FOR_INCOMING:if(o.getEdgeRing()!==t)continue;n=o,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(s.getEdgeRing()!==t)continue;n.setNextMin(s),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(x.isTrue(null!==e,"found null for first outgoing dirEdge"),x.isTrue(e.getEdgeRing()===t,"unable to link last incoming dirEdge"),n.setNextMin(e))}getOutgoingDegree(){if(0===arguments.length){let t=0;for(let e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){const t=arguments[0];let e=0;for(let n=this.iterator();n.hasNext();){n.next().getEdgeRing()===t&&e++}return e}}getLabel(){return this._label}findCoveredLineEdges(){let t=te.NONE;for(let e=this.iterator();e.hasNext();){const n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=te.INTERIOR;break}if(i.isInResult()){t=te.EXTERIOR;break}}}if(t===te.NONE)return null;let e=t;for(let t=this.iterator();t.hasNext();){const n=t.next(),i=n.getSym();n.isLineEdge()?n.getEdge().setCovered(e===te.INTERIOR):(n.isInResult()&&(e=te.EXTERIOR),i.isInResult()&&(e=te.INTERIOR))}}computeLabelling(t){super.computeLabelling.call(this,t),this._label=new pe(te.NONE);for(let t=this.iterator();t.hasNext();){const e=t.next().getEdge().getLabel();for(let t=0;t<2;t++){const n=e.getLocation(t);n!==te.INTERIOR&&n!==te.BOUNDARY||this._label.setLocation(t,te.INTERIOR)}}}}class bn extends De{constructor(){super()}createNode(t){return new Ie(t,new Tn)}}class vn{constructor(){vn.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._orientation=null;const t=arguments[0];this._pts=t,this._orientation=vn.orientation(t)}static orientation(t){return 1===yt.increasingDirection(t)}static compareOriented(t,e,n,i){const r=e?1:-1,s=i?1:-1,o=e?t.length:-1,l=i?n.length:-1;let a=e?0:t.length-1,c=i?0:n.length-1;for(;;){const e=t[a].compareTo(n[c]);if(0!==e)return e;a+=r,c+=s;const i=a===o,h=c===l;if(i&&!h)return-1;if(!i&&h)return 1;if(i&&h)return 0}}compareTo(t){const e=t;return vn.compareOriented(this._pts,this._orientation,e._pts,e._orientation)}get interfaces_(){return[g]}}class On{constructor(){On.constructor_.apply(this,arguments)}static constructor_(){this._edges=new W,this._ocaMap=new be}print(t){t.print("MULTILINESTRING ( ");for(let e=0;e<this._edges.size();e++){const n=this._edges.get(e);e>0&&t.print(","),t.print("(");const i=n.getCoordinates();for(let e=0;e<i.length;e++)e>0&&t.print(","),t.print(i[e].x+" "+i[e].y);t.println(")")}t.print(")  ")}addAll(t){for(let e=t.iterator();e.hasNext();)this.add(e.next())}findEdgeIndex(t){for(let e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1}iterator(){return this._edges.iterator()}getEdges(){return this._edges}get(t){return this._edges.get(t)}findEqualEdge(t){const e=new vn(t.getCoordinates());return this._ocaMap.get(e)}add(t){this._edges.add(t);const e=new vn(t.getCoordinates());this._ocaMap.put(e,t)}}class Rn{processIntersections(t,e,n,i){}isDone(){}}class Ln{constructor(){Ln.constructor_.apply(this,arguments)}static constructor_(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;const t=arguments[0];this._li=t}static isAdjacentSegments(t,e){return 1===Math.abs(t-e)}isTrivialIntersection(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Ln.isAdjacentSegments(e,i))return!0;if(t.isClosed()){const n=t.size()-1;if(0===e&&i===n||0===i&&e===n)return!0}}return!1}getProperIntersectionPoint(){return this._properIntersectionPoint}hasProperInteriorIntersection(){return this._hasProperInterior}getLineIntersector(){return this._li}hasProperIntersection(){return this._hasProper}processIntersections(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;const r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],l=n.getCoordinates()[i+1];this._li.computeIntersection(r,s,o,l),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))}hasIntersection(){return this._hasIntersection}isDone(){return!1}hasInteriorIntersection(){return this._hasInterior}get interfaces_(){return[Rn]}}class Dn{constructor(){Dn.constructor_.apply(this,arguments)}static constructor_(){this.coord=null,this.segmentIndex=null,this.dist=null;const t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new S(t),this.segmentIndex=e,this.dist=n}getSegmentIndex(){return this.segmentIndex}getCoordinate(){return this.coord}print(t){t.print(this.coord),t.print(" seg # = "+this.segmentIndex),t.println(" dist = "+this.dist)}compareTo(t){const e=t;return this.compare(e.segmentIndex,e.dist)}isEndPoint(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t}toString(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist}getDistance(){return this.dist}compare(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0}get interfaces_(){return[g]}}class Pn{constructor(){Pn.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new be,this.edge=null;const t=arguments[0];this.edge=t}print(t){t.println("Intersections:");for(let e=this.iterator();e.hasNext();){e.next().print(t)}}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(t){this.addEndpoints();const e=this.iterator();let n=e.next();for(;e.hasNext();){const i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}}addEndpoints(){const t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)}createSplitEdge(t,e){let n=e.segmentIndex-t.segmentIndex+2;const i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;const s=new Array(n).fill(null);let o=0;s[o++]=new S(t.coord);for(let n=t.segmentIndex+1;n<=e.segmentIndex;n++)s[o++]=this.edge.pts[n];return r&&(s[o]=e.coord),new kn(s,new pe(this.edge._label))}add(t,e,n){const i=new Dn(t,e,n),r=this._nodeMap.get(i);return null!==r?r:(this._nodeMap.put(i,i),i)}isIntersection(t){for(let e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1}}class An{constructor(){An.constructor_.apply(this,arguments)}static constructor_(){if(this._matrix=null,0===arguments.length)this._matrix=Array(3).fill().map((()=>Array(3))),this.setAll(M.FALSE);else if(1===arguments.length)if("string"==typeof arguments[0]){const t=arguments[0];An.constructor_.call(this),this.set(t)}else if(arguments[0]instanceof An){const t=arguments[0];An.constructor_.call(this),this._matrix[te.INTERIOR][te.INTERIOR]=t._matrix[te.INTERIOR][te.INTERIOR],this._matrix[te.INTERIOR][te.BOUNDARY]=t._matrix[te.INTERIOR][te.BOUNDARY],this._matrix[te.INTERIOR][te.EXTERIOR]=t._matrix[te.INTERIOR][te.EXTERIOR],this._matrix[te.BOUNDARY][te.INTERIOR]=t._matrix[te.BOUNDARY][te.INTERIOR],this._matrix[te.BOUNDARY][te.BOUNDARY]=t._matrix[te.BOUNDARY][te.BOUNDARY],this._matrix[te.BOUNDARY][te.EXTERIOR]=t._matrix[te.BOUNDARY][te.EXTERIOR],this._matrix[te.EXTERIOR][te.INTERIOR]=t._matrix[te.EXTERIOR][te.INTERIOR],this._matrix[te.EXTERIOR][te.BOUNDARY]=t._matrix[te.EXTERIOR][te.BOUNDARY],this._matrix[te.EXTERIOR][te.EXTERIOR]=t._matrix[te.EXTERIOR][te.EXTERIOR]}}static matches(){if(Number.isInteger(arguments[0])&&"string"==typeof arguments[1]){const t=arguments[0],e=arguments[1];return e===M.SYM_DONTCARE||(e===M.SYM_TRUE&&(t>=0||t===M.TRUE)||(e===M.SYM_FALSE&&t===M.FALSE||(e===M.SYM_P&&t===M.P||(e===M.SYM_L&&t===M.L||e===M.SYM_A&&t===M.A))))}if("string"==typeof arguments[0]&&"string"==typeof arguments[1]){const t=arguments[1];return new An(arguments[0]).matches(t)}}static isTrue(t){return t>=0||t===M.TRUE}isIntersects(){return!this.isDisjoint()}isCovers(){return(An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])||An.isTrue(this._matrix[te.INTERIOR][te.BOUNDARY])||An.isTrue(this._matrix[te.BOUNDARY][te.INTERIOR])||An.isTrue(this._matrix[te.BOUNDARY][te.BOUNDARY]))&&this._matrix[te.EXTERIOR][te.INTERIOR]===M.FALSE&&this._matrix[te.EXTERIOR][te.BOUNDARY]===M.FALSE}isCoveredBy(){return(An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])||An.isTrue(this._matrix[te.INTERIOR][te.BOUNDARY])||An.isTrue(this._matrix[te.BOUNDARY][te.INTERIOR])||An.isTrue(this._matrix[te.BOUNDARY][te.BOUNDARY]))&&this._matrix[te.INTERIOR][te.EXTERIOR]===M.FALSE&&this._matrix[te.BOUNDARY][te.EXTERIOR]===M.FALSE}set(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<t.length;e++){const n=Math.trunc(e/3),i=e%3;this._matrix[n][i]=M.toDimensionValue(t.charAt(e))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._matrix[t][e]=n}}isContains(){return An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])&&this._matrix[te.EXTERIOR][te.INTERIOR]===M.FALSE&&this._matrix[te.EXTERIOR][te.BOUNDARY]===M.FALSE}setAtLeast(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<t.length;e++){const n=Math.trunc(e/3),i=e%3;this.setAtLeast(n,i,M.toDimensionValue(t.charAt(e)))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._matrix[t][e]<n&&(this._matrix[t][e]=n)}}setAtLeastIfValid(t,e,n){t>=0&&e>=0&&this.setAtLeast(t,e,n)}isWithin(){return An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])&&this._matrix[te.INTERIOR][te.EXTERIOR]===M.FALSE&&this._matrix[te.BOUNDARY][te.EXTERIOR]===M.FALSE}isTouches(t,e){return t>e?this.isTouches(e,t):(t===M.A&&e===M.A||t===M.L&&e===M.L||t===M.L&&e===M.A||t===M.P&&e===M.A||t===M.P&&e===M.L)&&(this._matrix[te.INTERIOR][te.INTERIOR]===M.FALSE&&(An.isTrue(this._matrix[te.INTERIOR][te.BOUNDARY])||An.isTrue(this._matrix[te.BOUNDARY][te.INTERIOR])||An.isTrue(this._matrix[te.BOUNDARY][te.BOUNDARY])))}isOverlaps(t,e){return t===M.P&&e===M.P||t===M.A&&e===M.A?An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])&&An.isTrue(this._matrix[te.INTERIOR][te.EXTERIOR])&&An.isTrue(this._matrix[te.EXTERIOR][te.INTERIOR]):t===M.L&&e===M.L&&(1===this._matrix[te.INTERIOR][te.INTERIOR]&&An.isTrue(this._matrix[te.INTERIOR][te.EXTERIOR])&&An.isTrue(this._matrix[te.EXTERIOR][te.INTERIOR]))}isEquals(t,e){return t===e&&(An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])&&this._matrix[te.INTERIOR][te.EXTERIOR]===M.FALSE&&this._matrix[te.BOUNDARY][te.EXTERIOR]===M.FALSE&&this._matrix[te.EXTERIOR][te.INTERIOR]===M.FALSE&&this._matrix[te.EXTERIOR][te.BOUNDARY]===M.FALSE)}toString(){const t=new xt("123456789");for(let e=0;e<3;e++)for(let n=0;n<3;n++)t.setCharAt(3*e+n,M.toDimensionSymbol(this._matrix[e][n]));return t.toString()}setAll(t){for(let e=0;e<3;e++)for(let n=0;n<3;n++)this._matrix[e][n]=t}get(t,e){return this._matrix[t][e]}transpose(){let t=this._matrix[1][0];return this._matrix[1][0]=this._matrix[0][1],this._matrix[0][1]=t,t=this._matrix[2][0],this._matrix[2][0]=this._matrix[0][2],this._matrix[0][2]=t,t=this._matrix[2][1],this._matrix[2][1]=this._matrix[1][2],this._matrix[1][2]=t,this}matches(t){if(9!==t.length)throw new h("Should be length 9: "+t);for(let e=0;e<3;e++)for(let n=0;n<3;n++)if(!An.matches(this._matrix[e][n],t.charAt(3*e+n)))return!1;return!0}add(t){for(let e=0;e<3;e++)for(let n=0;n<3;n++)this.setAtLeast(e,n,t.get(e,n))}isDisjoint(){return this._matrix[te.INTERIOR][te.INTERIOR]===M.FALSE&&this._matrix[te.INTERIOR][te.BOUNDARY]===M.FALSE&&this._matrix[te.BOUNDARY][te.INTERIOR]===M.FALSE&&this._matrix[te.BOUNDARY][te.BOUNDARY]===M.FALSE}isCrosses(t,e){return t===M.P&&e===M.L||t===M.P&&e===M.A||t===M.L&&e===M.A?An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])&&An.isTrue(this._matrix[te.INTERIOR][te.EXTERIOR]):t===M.L&&e===M.P||t===M.A&&e===M.P||t===M.A&&e===M.L?An.isTrue(this._matrix[te.INTERIOR][te.INTERIOR])&&An.isTrue(this._matrix[te.EXTERIOR][te.INTERIOR]):t===M.L&&e===M.L&&0===this._matrix[te.INTERIOR][te.INTERIOR]}get interfaces_(){return[f]}}class Fn{constructor(){Fn.constructor_.apply(this,arguments)}static constructor_(){if(this._data=null,this._size=0,0===arguments.length)Fn.constructor_.call(this,10);else if(1===arguments.length){const t=arguments[0];this._data=new Array(t).fill(null)}}size(){return this._size}addAll(t){return null===t||0===t.length?null:(this.ensureCapacity(this._size+t.length),_t.arraycopy(t,0,this._data,this._size,t.length),void(this._size+=t.length))}ensureCapacity(t){if(t<=this._data.length)return null;const e=Math.max(t,2*this._data.length);this._data=K.copyOf(this._data,e)}toArray(){const t=new Array(this._size).fill(null);return _t.arraycopy(this._data,0,t,0,this._size),t}add(t){this.ensureCapacity(this._size+1),this._data[this._size]=t,++this._size}}class Mn{static toIntArray(t){const e=new Array(t.size()).fill(null);for(let n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e}getChainStartIndices(t){let e=0;const n=new Fn(Math.trunc(t.length/2));n.add(e);do{const i=this.findChainEnd(t,e);n.add(i),e=i}while(e<t.length-1);return n.toArray()}findChainEnd(t,e){const n=Oe.quadrant(t[e],t[e+1]);let i=e+1;for(;i<t.length;){if(Oe.quadrant(t[i-1],t[i])!==n)break;i++}return i-1}OLDgetChainStartIndices(t){let e=0;const n=new W;n.add(e);do{const i=this.findChainEnd(t,e);n.add(i),e=i}while(e<t.length-1);return Mn.toIntArray(n)}}class Gn{constructor(){Gn.constructor_.apply(this,arguments)}static constructor_(){this.e=null,this.pts=null,this.startIndex=null;const t=arguments[0];this.e=t,this.pts=t.getCoordinates();const e=new Mn;this.startIndex=e.getChainStartIndices(this.pts)}getCoordinates(){return this.pts}getMaxX(t){const e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n}getMinX(t){const e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n}computeIntersectsForChain(){if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=arguments[4],s=arguments[5];if(e-t==1&&r-i==1)return s.addIntersections(this.e,t,n.e,i),null;if(!this.overlaps(t,e,n,i,r))return null;const o=Math.trunc((t+e)/2),l=Math.trunc((i+r)/2);t<o&&(i<l&&this.computeIntersectsForChain(t,o,n,i,l,s),l<r&&this.computeIntersectsForChain(t,o,n,l,r,s)),o<e&&(i<l&&this.computeIntersectsForChain(o,e,n,i,l,s),l<r&&this.computeIntersectsForChain(o,e,n,l,r,s))}}overlaps(t,e,n,i,r){return O.intersects(this.pts[t],this.pts[e],n.pts[i],n.pts[r])}getStartIndexes(){return this.startIndex}computeIntersects(t,e){for(let n=0;n<this.startIndex.length-1;n++)for(let i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)}}class zn{constructor(){zn.constructor_.apply(this,arguments)}static constructor_(){this._depth=Array(2).fill().map((()=>Array(3)));for(let t=0;t<2;t++)for(let e=0;e<3;e++)this._depth[t][e]=zn.NULL_VALUE}static depthAtLocation(t){return t===te.EXTERIOR?0:t===te.INTERIOR?1:zn.NULL_VALUE}getDepth(t,e){return this._depth[t][e]}setDepth(t,e,n){this._depth[t][e]=n}isNull(){if(0===arguments.length){for(let t=0;t<2;t++)for(let e=0;e<3;e++)if(this._depth[t][e]!==zn.NULL_VALUE)return!1;return!0}if(1===arguments.length){const t=arguments[0];return this._depth[t][1]===zn.NULL_VALUE}if(2===arguments.length){const t=arguments[0],e=arguments[1];return this._depth[t][e]===zn.NULL_VALUE}}normalize(){for(let t=0;t<2;t++)if(!this.isNull(t)){let e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(let n=1;n<3;n++){let i=0;this._depth[t][n]>e&&(i=1),this._depth[t][n]=i}}}getDelta(t){return this._depth[t][ee.RIGHT]-this._depth[t][ee.LEFT]}getLocation(t,e){return this._depth[t][e]<=0?te.EXTERIOR:te.INTERIOR}toString(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]}add(){if(1===arguments.length){const t=arguments[0];for(let e=0;e<2;e++)for(let n=1;n<3;n++){const i=t.getLocation(e,n);i!==te.EXTERIOR&&i!==te.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=zn.depthAtLocation(i):this._depth[e][n]+=zn.depthAtLocation(i))}}else if(3===arguments.length){const t=arguments[0],e=arguments[1];arguments[2]===te.INTERIOR&&this._depth[t][e]++}}}zn.NULL_VALUE=-1;class kn extends xe{constructor(){super(),kn.constructor_.apply(this,arguments)}static constructor_(){if(this.pts=null,this._env=null,this.eiList=new Pn(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new zn,this._depthDelta=0,1===arguments.length){const t=arguments[0];kn.constructor_.call(this,t,null)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this.pts=t,this._label=e}}static updateIM(){if(!(2===arguments.length&&arguments[1]instanceof An&&arguments[0]instanceof pe))return super.updateIM.apply(this,arguments);{const t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,ee.ON),t.getLocation(1,ee.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,ee.LEFT),t.getLocation(1,ee.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,ee.RIGHT),t.getLocation(1,ee.RIGHT),2))}}getDepth(){return this._depth}getCollapsedEdge(){const t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new kn(t,pe.toLineLabel(this._label))}isIsolated(){return this._isIsolated}getCoordinates(){return this.pts}setIsolated(t){this._isIsolated=t}setName(t){this._name=t}equals(t){if(!(t instanceof kn))return!1;const e=t;if(this.pts.length!==e.pts.length)return!1;let n=!0,i=!0,r=this.pts.length;for(let t=0;t<this.pts.length;t++)if(this.pts[t].equals2D(e.pts[t])||(n=!1),this.pts[t].equals2D(e.pts[--r])||(i=!1),!n&&!i)return!1;return!0}getCoordinate(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){const t=arguments[0];return this.pts[t]}}print(t){t.print("edge "+this._name+": "),t.print("LINESTRING (");for(let e=0;e<this.pts.length;e++)e>0&&t.print(","),t.print(this.pts[e].x+" "+this.pts[e].y);t.print(")  "+this._label+" "+this._depthDelta)}computeIM(t){kn.updateIM(this._label,t)}isCollapsed(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))}isClosed(){return this.pts[0].equals(this.pts[this.pts.length-1])}getMaximumSegmentIndex(){return this.pts.length-1}getDepthDelta(){return this._depthDelta}getNumPoints(){return this.pts.length}printReverse(t){t.print("edge "+this._name+": ");for(let e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+" ");t.println("")}getMonotoneChainEdge(){return null===this._mce&&(this._mce=new Gn(this)),this._mce}getEnvelope(){if(null===this._env){this._env=new O;for(let t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env}addIntersection(t,e,n,i){const r=new S(t.getIntersection(i));let s=e,o=t.getEdgeDistance(n,i);const l=s+1;if(l<this.pts.length){const t=this.pts[l];r.equals2D(t)&&(s=l,o=0)}this.eiList.add(r,s,o)}toString(){const t=new xt;t.append("edge "+this._name+": "),t.append("LINESTRING (");for(let e=0;e<this.pts.length;e++)e>0&&t.append(","),t.append(this.pts[e].x+" "+this.pts[e].y);return t.append(")  "+this._label+" "+this._depthDelta),t.toString()}isPointwiseEqual(t){if(this.pts.length!==t.pts.length)return!1;for(let e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0}setDepthDelta(t){this._depthDelta=t}getEdgeIntersectionList(){return this.eiList}addIntersections(t,e,n){for(let i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)}}class Bn{constructor(){Bn.constructor_.apply(this,arguments)}static constructor_(){this._bufParams=null,this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new On;const t=arguments[0];this._bufParams=t}static depthDelta(t){const e=t.getLocation(0,ee.LEFT),n=t.getLocation(0,ee.RIGHT);return e===te.INTERIOR&&n===te.EXTERIOR?1:e===te.EXTERIOR&&n===te.INTERIOR?-1:0}static convertSegStrings(t){const e=new Rt,n=new W;for(;t.hasNext();){const i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)}setWorkingPrecisionModel(t){this._workingPrecisionModel=t}insertUniqueEdge(t){const e=this._edgeList.findEqualEdge(t);if(null!==e){const n=e.getLabel();let i=t.getLabel();e.isPointwiseEqual(t)||(i=new pe(t.getLabel()),i.flip()),n.merge(i);const r=Bn.depthDelta(i),s=e.getDepthDelta()+r;e.setDepthDelta(s)}else this._edgeList.add(t),t.setDepthDelta(Bn.depthDelta(t.getLabel()))}buildSubgraphs(t,e){const n=new W;for(let i=t.iterator();i.hasNext();){const t=i.next(),r=t.getRightmostCoordinate(),s=new mn(n).getDepth(r);t.computeDepth(s),t.findResultEdges(),n.add(t),e.add(t.getDirectedEdges(),t.getNodes())}}createSubgraphs(t){const e=new W;for(let n=t.getNodes().iterator();n.hasNext();){const t=n.next();if(!t.isVisited()){const n=new le;n.create(t),e.add(n)}}return Be.sort(e,Be.reverseOrder()),e}createEmptyResultGeometry(){return this._geomFact.createPolygon()}getNoder(t){if(null!==this._workingNoder)return this._workingNoder;const e=new cn,n=new ue;return n.setPrecisionModel(t),e.setSegmentIntersector(new Ln(n)),e}buffer(t,e){let n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();const i=new pn(n,this._bufParams),r=new En(t,e,i).getCurves();if(r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,n),this._graph=new Pe(new bn),this._graph.addEdges(this._edgeList.getEdges());const s=this.createSubgraphs(this._graph),o=new Ae(this._geomFact);this.buildSubgraphs(s,o);const l=o.getPolygons();if(l.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(l)}computeNodedEdges(t,e){const n=this.getNoder(e);n.computeNodes(t);for(let t=n.getNodedSubstrings().iterator();t.hasNext();){const e=t.next(),n=e.getCoordinates();if(2===n.length&&n[0].equals2D(n[1]))continue;const i=e.getData(),r=new kn(e.getCoordinates(),new pe(i));this.insertUniqueEdge(r)}}setNoder(t){this._workingNoder=t}}class qn{constructor(){qn.constructor_.apply(this,arguments)}static constructor_(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){const t=arguments[0],e=arguments[1];qn.constructor_.call(this,t,e,0,0)}else if(4===arguments.length){const t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._isScaled=!this.isIntegerPrecision()}}rescale(){if(N(arguments[0],X)){for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.rescale(e.getCoordinates())}}else if(arguments[0]instanceof Array){const t=arguments[0];for(let e=0;e<t.length;e++)t[e].x=t[e].x/this._scaleFactor+this._offsetX,t[e].y=t[e].y/this._scaleFactor+this._offsetY;2===t.length&&t[0].equals2D(t[1])&&_t.out.println(t)}}scale(){if(N(arguments[0],X)){const t=arguments[0],e=new W(t.size());for(let n=t.iterator();n.hasNext();){const t=n.next();e.add(new en(this.scale(t.getCoordinates()),t.getData()))}return e}if(arguments[0]instanceof Array){const t=arguments[0],e=new Array(t.length).fill(null);for(let n=0;n<t.length;n++)e[n]=new S(Math.round((t[n].x-this._offsetX)*this._scaleFactor),Math.round((t[n].y-this._offsetY)*this._scaleFactor),t[n].getZ());return yt.removeRepeatedPoints(e)}}isIntegerPrecision(){return 1===this._scaleFactor}getNodedSubstrings(){const t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t}computeNodes(t){let e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)}get interfaces_(){return[ln]}}class Yn{constructor(){Yn.constructor_.apply(this,arguments)}static constructor_(){this._li=new ue,this._segStrings=null;const t=arguments[0];this._segStrings=t}checkEndPtVertexIntersections(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length){const t=arguments[0];for(let e=arguments[1].iterator();e.hasNext();){const n=e.next().getCoordinates();for(let e=1;e<n.length-1;e++)if(n[e].equals(t))throw new _("found endpt/interior pt intersection at index "+e+" :pt "+t)}}}checkInteriorIntersections(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next();for(let t=this._segStrings.iterator();t.hasNext();){const n=t.next();this.checkInteriorIntersections(e,n)}}else if(2===arguments.length){const t=arguments[0],e=arguments[1],n=t.getCoordinates(),i=e.getCoordinates();for(let r=0;r<n.length-1;r++)for(let n=0;n<i.length-1;n++)this.checkInteriorIntersections(t,r,e,n)}else if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];if(t===n&&e===i)return null;const r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],l=n.getCoordinates()[i+1];if(this._li.computeIntersection(r,s,o,l),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,r,s)||this.hasInteriorIntersection(this._li,o,l)))throw new _("found non-noded intersection at "+r+"-"+s+" and "+o+"-"+l)}}checkValid(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()}checkCollapses(){if(0===arguments.length)for(let t=this._segStrings.iterator();t.hasNext();){const e=t.next();this.checkCollapses(e)}else if(1===arguments.length){const t=arguments[0].getCoordinates();for(let e=0;e<t.length-2;e++)this.checkCollapse(t[e],t[e+1],t[e+2])}}hasInteriorIntersection(t,e,n){for(let i=0;i<t.getIntersectionNum();i++){const r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1}checkCollapse(t,e,n){if(t.equals(n))throw new _("found non-noded collapse at "+Yn.fact.createLineString([t,e,n]))}}Yn.fact=new Rt;class Xn{constructor(){Xn.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;const t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new h("Scale factor must be non-zero");1!==e&&(this._pt=new S(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new S,this._p1Scaled=new S),this.initCorners(this._pt)}intersectsScaled(t,e){const n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),s=Math.max(t.y,e.y),o=this._maxx<n||this._minx>i||this._maxy<r||this._miny>s;if(o)return!1;const l=this.intersectsToleranceSquare(t,e);return x.isTrue(!(o&&l),"Found bad envelope test"),l}initCorners(t){const e=.5;this._minx=t.x-e,this._maxx=t.x+e,this._miny=t.y-e,this._maxy=t.y+e,this._corner[0]=new S(this._maxx,this._maxy),this._corner[1]=new S(this._minx,this._maxy),this._corner[2]=new S(this._minx,this._miny),this._corner[3]=new S(this._maxx,this._miny)}intersects(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))}scale(t){return Math.round(t*this._scaleFactor)}getCoordinate(){return this._originalPt}copyScaled(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)}getSafeEnvelope(){if(null===this._safeEnv){const t=Xn.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new O(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv}intersectsPixelClosure(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))}intersectsToleranceSquare(t,e){let n=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!i)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))}addSnappedNode(t,e){const n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)}}Xn.SAFE_ENV_EXPANSION_FACTOR=.75;class jn{constructor(){jn.constructor_.apply(this,arguments)}static constructor_(){this.selectedSegment=new nn}select(){if(1===arguments.length);else if(2===arguments.length){const t=arguments[1];arguments[0].getLineSegment(t,this.selectedSegment),this.select(this.selectedSegment)}}}class Un{constructor(){Un.constructor_.apply(this,arguments)}static constructor_(){this._index=null;const t=arguments[0];this._index=t}snap(){if(1===arguments.length){const t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=t.getSafeEnvelope(),r=new Vn(t,e,n);return this._index.query(i,new class{get interfaces_(){return[Xe]}visitItem(t){t.select(i,r)}}),r.isNodeAdded()}}}class Vn extends jn{constructor(){super(),Vn.constructor_.apply(this,arguments)}static constructor_(){this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;const t=arguments[0],e=arguments[1],n=arguments[2];this._hotPixel=t,this._parentEdge=e,this._hotPixelVertexIndex=n}isNodeAdded(){return this._isNodeAdded}select(){if(!(2===arguments.length&&Number.isInteger(arguments[1])&&arguments[0]instanceof sn))return super.select.apply(this,arguments);{const t=arguments[1],e=arguments[0].getContext();if(this._parentEdge===e&&(t===this._hotPixelVertexIndex||t+1===this._hotPixelVertexIndex))return null;this._isNodeAdded|=this._hotPixel.addSnappedNode(e,t)}}}Un.HotPixelSnapAction=Vn;class Wn{constructor(){Wn.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._interiorIntersections=null;const t=arguments[0];this._li=t,this._interiorIntersections=new W}processIntersections(t,e,n,i){if(t===n&&e===i)return null;const r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],l=n.getCoordinates()[i+1];if(this._li.computeIntersection(r,s,o,l),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(let t=0;t<this._li.getIntersectionNum();t++)this._interiorIntersections.add(this._li.getIntersection(t));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)}}isDone(){return!1}getInteriorIntersections(){return this._interiorIntersections}get interfaces_(){return[Rn]}}class Hn{constructor(){Hn.constructor_.apply(this,arguments)}static constructor_(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;const t=arguments[0];this._pm=t,this._li=new ue,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()}checkCorrectness(t){const e=en.getNodedSubstrings(t),n=new Yn(e);try{n.checkValid()}catch(t){if(!(t instanceof c))throw t;t.printStackTrace()}}getNodedSubstrings(){return en.getNodedSubstrings(this._nodedSegStrings)}snapRound(t,e){const n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)}findInteriorIntersections(t,e){const n=new Wn(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()}computeVertexSnaps(){if(N(arguments[0],X)){for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.computeVertexSnaps(e)}}else if(arguments[0]instanceof en){const t=arguments[0],e=t.getCoordinates();for(let n=0;n<e.length;n++){const i=new Xn(e[n],this._scaleFactor,this._li);this._pointSnapper.snap(i,t,n)&&t.addIntersection(e[n],n)}}}computeNodes(t){this._nodedSegStrings=t,this._noder=new cn,this._pointSnapper=new Un(this._noder.getIndex()),this.snapRound(t,this._li)}computeIntersectionSnaps(t){for(let e=t.iterator();e.hasNext();){const t=e.next(),n=new Xn(t,this._scaleFactor,this._li);this._pointSnapper.snap(n)}}get interfaces_(){return[ln]}}class Kn{constructor(){Kn.constructor_.apply(this,arguments)}static constructor_(){if(this._argGeom=null,this._distance=null,this._bufParams=new $t,this._resultGeometry=null,this._saveException=null,1===arguments.length){const t=arguments[0];this._argGeom=t}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._argGeom=t,this._bufParams=e}}static bufferOp(){if(2===arguments.length){const t=arguments[1];return new Kn(arguments[0]).getResultGeometry(t)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof R&&"number"==typeof arguments[1]){const t=arguments[1],e=arguments[2],n=new Kn(arguments[0]);n.setQuadrantSegments(e);return n.getResultGeometry(t)}if(arguments[2]instanceof $t&&arguments[0]instanceof R&&"number"==typeof arguments[1]){const t=arguments[1];return new Kn(arguments[0],arguments[2]).getResultGeometry(t)}}else if(4===arguments.length){const t=arguments[1],e=arguments[2],n=arguments[3],i=new Kn(arguments[0]);i.setQuadrantSegments(e),i.setEndCapStyle(n);return i.getResultGeometry(t)}}static precisionScaleFactor(t,e,n){const i=t.getEnvelopeInternal(),r=mt.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),s=n-Math.trunc(Math.log(r)/Math.log(10)+1);return Math.pow(10,s)}bufferFixedPrecision(t){const e=new qn(new Hn(new bt(1)),t.getScale()),n=new Bn(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)}bufferReducedPrecision(){if(0===arguments.length){for(let t=Kn.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof se))throw t;this._saveException=t}if(null!==this._resultGeometry)return null}throw this._saveException}if(1===arguments.length){const t=arguments[0],e=Kn.precisionScaleFactor(this._argGeom,this._distance,t),n=new bt(e);this.bufferFixedPrecision(n)}}computeGeometry(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;const t=this._argGeom.getFactory().getPrecisionModel();t.getType()===bt.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()}setQuadrantSegments(t){this._bufParams.setQuadrantSegments(t)}bufferOriginalPrecision(){try{const t=new Bn(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof _))throw t;this._saveException=t}}getResultGeometry(t){return this._distance=t,this.computeGeometry(),this._resultGeometry}setEndCapStyle(t){this._bufParams.setEndCapStyle(t)}}Kn.CAP_ROUND=$t.CAP_ROUND,Kn.CAP_BUTT=$t.CAP_FLAT,Kn.CAP_FLAT=$t.CAP_FLAT,Kn.CAP_SQUARE=$t.CAP_SQUARE,Kn.MAX_PRECISION_DIGITS=12;class Zn{isInBoundary(t){}}class Jn{isInBoundary(t){return t%2==1}get interfaces_(){return[Zn]}}class Qn{isInBoundary(t){return t>0}get interfaces_(){return[Zn]}}class $n{isInBoundary(t){return t>1}get interfaces_(){return[Zn]}}class ti{isInBoundary(t){return 1===t}get interfaces_(){return[Zn]}}Zn.Mod2BoundaryNodeRule=Jn,Zn.EndPointBoundaryNodeRule=Qn,Zn.MultiValentEndPointBoundaryNodeRule=$n,Zn.MonoValentEndPointBoundaryNodeRule=ti,Zn.MOD2_BOUNDARY_RULE=new Jn,Zn.ENDPOINT_BOUNDARY_RULE=new Qn,Zn.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new $n,Zn.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new ti,Zn.OGC_SFS_BOUNDARY_RULE=Zn.MOD2_BOUNDARY_RULE;class ei{constructor(){ei.constructor_.apply(this,arguments)}static constructor_(){if(this._boundaryRule=Zn.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){const t=arguments[0];if(null===t)throw new h("Rule must be non-null");this._boundaryRule=t}}locateInPolygonRing(t,e){return e.getEnvelopeInternal().intersects(t)?ge.locateInRing(t,e.getCoordinates()):te.EXTERIOR}intersects(t,e){return this.locate(t,e)!==te.EXTERIOR}updateLocationInfo(t){t===te.INTERIOR&&(this._isIn=!0),t===te.BOUNDARY&&this._numBoundaries++}computeLocation(t,e){if(e instanceof q&&this.updateLocationInfo(this.locateOnPoint(t,e)),e instanceof k)this.updateLocationInfo(this.locateOnLineString(t,e));else if(e instanceof it)this.updateLocationInfo(this.locateInPolygon(t,e));else if(e instanceof Ot){const n=e;for(let e=0;e<n.getNumGeometries();e++){const i=n.getGeometryN(e);this.updateLocationInfo(this.locateOnLineString(t,i))}}else if(e instanceof Ct){const n=e;for(let e=0;e<n.getNumGeometries();e++){const i=n.getGeometryN(e);this.updateLocationInfo(this.locateInPolygon(t,i))}}else if(e instanceof at){const n=new Sn(e);for(;n.hasNext();){const i=n.next();i!==e&&this.computeLocation(t,i)}}}locateOnPoint(t,e){return e.getCoordinate().equals2D(t)?te.INTERIOR:te.EXTERIOR}locateOnLineString(t,e){if(!e.getEnvelopeInternal().intersects(t))return te.EXTERIOR;const n=e.getCoordinateSequence();return e.isClosed()||!t.equals(n.getCoordinate(0))&&!t.equals(n.getCoordinate(n.size()-1))?ge.isOnLine(t,n)?te.INTERIOR:te.EXTERIOR:te.BOUNDARY}locateInPolygon(t,e){if(e.isEmpty())return te.EXTERIOR;const n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===te.EXTERIOR)return te.EXTERIOR;if(i===te.BOUNDARY)return te.BOUNDARY;for(let n=0;n<e.getNumInteriorRing();n++){const i=e.getInteriorRingN(n),r=this.locateInPolygonRing(t,i);if(r===te.INTERIOR)return te.EXTERIOR;if(r===te.BOUNDARY)return te.BOUNDARY}return te.INTERIOR}locate(t,e){return e.isEmpty()?te.EXTERIOR:e instanceof k?this.locateOnLineString(t,e):e instanceof it?this.locateInPolygon(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?te.BOUNDARY:this._numBoundaries>0||this._isIn?te.INTERIOR:te.EXTERIOR)}}class ni{constructor(){ni.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._data=null;const t=arguments[0],e=arguments[1];this._pts=t,this._data=e}getCoordinates(){return this._pts}size(){return this._pts.length}getCoordinate(t){return this._pts[t]}isClosed(){return this._pts[0].equals(this._pts[this._pts.length-1])}getSegmentOctant(t){return t===this._pts.length-1?-1:Qe.octant(this.getCoordinate(t),this.getCoordinate(t+1))}setData(t){this._data=t}getData(){return this._data}toString(){return Qt.toLineString(new It(this._pts))}get interfaces_(){return[$e]}}class ii{constructor(){ii.constructor_.apply(this,arguments)}static constructor_(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._keepIntersections=!0,this._isInteriorIntersectionsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new W,this._intersectionCount=0;const t=arguments[0];this._li=t,this._interiorIntersection=null}static createAllIntersectionsFinder(t){const e=new ii(t);return e.setFindAllIntersections(!0),e}static isInteriorVertexIntersection(){if(4===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[3];return(!arguments[2]||!n)&&!!t.equals2D(e)}if(8===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3],r=arguments[4],s=arguments[5],o=arguments[6],l=arguments[7];return!!ii.isInteriorVertexIntersection(t,n,r,o)||(!!ii.isInteriorVertexIntersection(t,i,r,l)||(!!ii.isInteriorVertexIntersection(e,n,s,o)||!!ii.isInteriorVertexIntersection(e,i,s,l)))}}static createInteriorIntersectionCounter(t){const e=new ii(t);return e.setInteriorIntersectionsOnly(!0),e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e}static createIntersectionCounter(t){const e=new ii(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e}static isEndSegment(t,e){return 0===e||e>=t.size()-2}static createAnyIntersectionFinder(t){return new ii(t)}static createInteriorIntersectionsFinder(t){const e=new ii(t);return e.setFindAllIntersections(!0),e.setInteriorIntersectionsOnly(!0),e}setCheckEndSegmentsOnly(t){this._isCheckEndSegmentsOnly=t}getIntersectionSegments(){return this._intSegments}count(){return this._intersectionCount}getIntersections(){return this._intersections}setFindAllIntersections(t){this._findAllIntersections=t}setKeepIntersections(t){this._keepIntersections=t}getIntersection(){return this._interiorIntersection}processIntersections(t,e,n,i){if(!this._findAllIntersections&&this.hasIntersection())return null;const r=t===n;if(r&&e===i)return null;if(this._isCheckEndSegmentsOnly){if(!(ii.isEndSegment(t,e)||ii.isEndSegment(n,i)))return null}const s=t.getCoordinate(e),o=t.getCoordinate(e+1),l=n.getCoordinate(i),a=n.getCoordinate(i+1),c=0===e,h=e+2===t.size(),u=0===i,d=i+2===n.size();this._li.computeIntersection(s,o,l,a);const g=this._li.hasIntersection()&&this._li.isInteriorIntersection();let f=!1;if(!this._isInteriorIntersectionsOnly){f=!(r&&Math.abs(i-e)<=1)&&ii.isInteriorVertexIntersection(s,o,l,a,c,h,u,d)}(g||f)&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=s,this._intSegments[1]=o,this._intSegments[2]=l,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)}hasIntersection(){return null!==this._interiorIntersection}isDone(){return!this._findAllIntersections&&null!==this._interiorIntersection}setInteriorIntersectionsOnly(t){this._isInteriorIntersectionsOnly=t}get interfaces_(){return[Rn]}}class ri{constructor(){ri.constructor_.apply(this,arguments)}static constructor_(){this._li=new ue,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;const t=arguments[0];this._segStrings=t}static computeIntersections(t){const e=new ri(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()}execute(){if(null!==this._segInt)return null;this.checkInteriorIntersections()}getIntersections(){return this._segInt.getIntersections()}isValid(){return this.execute(),this._isValid}setFindAllIntersections(t){this._findAllIntersections=t}checkInteriorIntersections(){this._isValid=!0,this._segInt=new ii(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);const t=new cn;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null}checkValid(){if(this.execute(),!this._isValid)throw new se(this.getErrorMessage(),this._segInt.getIntersection())}getErrorMessage(){if(this._isValid)return"no intersections found";const t=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+Qt.toLineString(t[0],t[1])+" and "+Qt.toLineString(t[2],t[3])}}class si{constructor(){si.constructor_.apply(this,arguments)}static constructor_(){this._nv=null;const t=arguments[0];this._nv=new ri(si.toSegmentStrings(t))}static toSegmentStrings(t){const e=new W;for(let n=t.iterator();n.hasNext();){const t=n.next();e.add(new ni(t.getCoordinates(),t))}return e}static checkValid(t){new si(t).checkValid()}checkValid(){this._nv.checkValid()}}class oi{constructor(){oi.constructor_.apply(this,arguments)}static constructor_(){this._mapOp=null;const t=arguments[0];this._mapOp=t}static map(t,e){return new oi(e).map(t)}map(t){const e=new W;for(let n=0;n<t.getNumGeometries();n++){const i=this._mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(Rt.toGeometryArray(e))}}class li{constructor(){li.constructor_.apply(this,arguments)}static constructor_(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new W,this._resultLineList=new W;const t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n}collectLines(t){for(let e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){const n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}}labelIsolatedLine(t,e){const n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)}build(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList}collectLineEdge(t,e,n){const i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Ai.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))}findCoveredLineEdges(){for(let t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(let t=this._op.getGraph().getEdgeEnds().iterator();t.hasNext();){const e=t.next(),n=e.getEdge();if(e.isLineEdge()&&!n.isCoveredSet()){const t=this._op.isCoveredByA(e.getCoordinate());n.setCovered(t)}}}labelIsolatedLines(t){for(let e=t.iterator();e.hasNext();){const t=e.next(),n=t.getLabel();t.isIsolated()&&(n.isNull(0)?this.labelIsolatedLine(t,0):this.labelIsolatedLine(t,1))}}buildLines(t){for(let t=this._lineEdgesList.iterator();t.hasNext();){const e=t.next(),n=this._geometryFactory.createLineString(e.getCoordinates());this._resultLineList.add(n),e.setInResult(!0)}}collectBoundaryTouchEdge(t,e,n){const i=t.getLabel();return t.isLineEdge()||t.isVisited()||t.isInteriorAreaEdge()||t.getEdge().isInResult()?null:(x.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Ai.isResultOfOp(i,e)&&e===Ai.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))}}class ai{constructor(){ai.constructor_.apply(this,arguments)}static constructor_(){this._op=null,this._geometryFactory=null,this._resultPointList=new W;const t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e}filterCoveredNodeToPoint(t){const e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){const t=this._geometryFactory.createPoint(e);this._resultPointList.add(t)}}extractNonCoveredResultNodes(t){for(let e=this._op.getGraph().getNodes().iterator();e.hasNext();){const n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Ai.INTERSECTION))){const e=n.getLabel();Ai.isResultOfOp(e,t)&&this.filterCoveredNodeToPoint(n)}}}build(t){return this.extractNonCoveredResultNodes(t),this._resultPointList}}class ci{constructor(){ci.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1}transformPoint(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))}transformPolygon(t,e){let n=!0;const i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof ht&&!i.isEmpty()||(n=!1);const r=new W;for(let e=0;e<t.getNumInteriorRing();e++){const i=this.transformLinearRing(t.getInteriorRingN(e),t);null===i||i.isEmpty()||(i instanceof ht||(n=!1),r.add(i))}if(n)return this._factory.createPolygon(i,r.toArray([]));{const t=new W;return null!==i&&t.add(i),t.addAll(r),this._factory.buildGeometry(t)}}createCoordinateSequence(t){return this._factory.getCoordinateSequenceFactory().create(t)}getInputGeometry(){return this._inputGeom}transformMultiLineString(t,e){const n=new W;for(let e=0;e<t.getNumGeometries();e++){const i=this.transformLineString(t.getGeometryN(e),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)}transformCoordinates(t,e){return this.copy(t)}transformLineString(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))}transformMultiPoint(t,e){const n=new W;for(let e=0;e<t.getNumGeometries();e++){const i=this.transformPoint(t.getGeometryN(e),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)}transformMultiPolygon(t,e){const n=new W;for(let e=0;e<t.getNumGeometries();e++){const i=this.transformPolygon(t.getGeometryN(e),t);null!==i&&(i.isEmpty()||n.add(i))}return this._factory.buildGeometry(n)}copy(t){return t.copy()}transformGeometryCollection(t,e){const n=new W;for(let e=0;e<t.getNumGeometries();e++){const i=this.transform(t.getGeometryN(e));null!==i&&(this._pruneEmptyGeometry&&i.isEmpty()||n.add(i))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(Rt.toGeometryArray(n)):this._factory.buildGeometry(n)}transform(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof q)return this.transformPoint(t,null);if(t instanceof ct)return this.transformMultiPoint(t,null);if(t instanceof ht)return this.transformLinearRing(t,null);if(t instanceof k)return this.transformLineString(t,null);if(t instanceof Ot)return this.transformMultiLineString(t,null);if(t instanceof it)return this.transformPolygon(t,null);if(t instanceof Ct)return this.transformMultiPolygon(t,null);if(t instanceof at)return this.transformGeometryCollection(t,null);throw new h("Unknown Geometry subtype: "+t.getGeometryType())}transformLinearRing(t,e){const n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);const i=n.size();return i>0&&i<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)}}class hi{constructor(){hi.constructor_.apply(this,arguments)}static constructor_(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new nn,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof k&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];hi.constructor_.call(this,t.getCoordinates(),e)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){const t=arguments[0],e=arguments[1];this._srcPts=t,this._isClosed=hi.isClosed(t),this._snapTolerance=e}}static isClosed(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])}snapVertices(t,e){const n=this._isClosed?t.size()-1:t.size();for(let i=0;i<n;i++){const n=t.get(i),r=this.findSnapForVertex(n,e);null!==r&&(t.set(i,new S(r)),0===i&&this._isClosed&&t.set(t.size()-1,new S(r)))}}findSnapForVertex(t,e){for(let n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null}snapTo(t){const e=new pt(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()}snapSegments(t,e){if(0===e.length)return null;let n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(let i=0;i<n;i++){const n=e[i],r=this.findSegmentIndexToSnap(n,t);r>=0&&t.add(r+1,new S(n),!1)}}findSegmentIndexToSnap(t,e){let n=d.MAX_VALUE,i=-1;for(let r=0;r<e.size()-1;r++){if(this._seg.p0=e.get(r),this._seg.p1=e.get(r+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}const s=this._seg.distance(t);s<this._snapTolerance&&s<n&&(n=s,i=r)}return i}setAllowSnappingToSourceVertices(t){this._allowSnappingToSourceVertices=t}}class ui{constructor(){ui.constructor_.apply(this,arguments)}static constructor_(){this._srcGeom=null;const t=arguments[0];this._srcGeom=t}static snap(t,e,n){const i=new Array(2).fill(null),r=new ui(t);i[0]=r.snapTo(e,n);const s=new ui(e);return i[1]=s.snapTo(i[0],n),i}static computeOverlaySnapTolerance(){if(1===arguments.length){const t=arguments[0];let e=ui.computeSizeBasedSnapTolerance(t);const n=t.getPrecisionModel();if(n.getType()===bt.FIXED){const t=1/n.getScale()*2/1.415;t>e&&(e=t)}return e}if(2===arguments.length){const t=arguments[0],e=arguments[1];return Math.min(ui.computeOverlaySnapTolerance(t),ui.computeOverlaySnapTolerance(e))}}static computeSizeBasedSnapTolerance(t){const e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*ui.SNAP_PRECISION_FACTOR}static snapToSelf(t,e,n){return new ui(t).snapToSelf(e,n)}snapTo(t,e){const n=this.extractTargetCoordinates(t);return new di(e,n).transform(this._srcGeom)}snapToSelf(t,e){const n=this.extractTargetCoordinates(this._srcGeom),i=new di(t,n,!0).transform(this._srcGeom);let r=i;return e&&N(r,nt)&&(r=i.buffer(0)),r}computeSnapTolerance(t){return this.computeMinimumSegmentLength(t)/10}extractTargetCoordinates(t){const e=new ot,n=t.getCoordinates();for(let t=0;t<n.length;t++)e.add(n[t]);return e.toArray(new Array(0).fill(null))}computeMinimumSegmentLength(t){let e=d.MAX_VALUE;for(let n=0;n<t.length-1;n++){const i=t[n].distance(t[n+1]);i<e&&(e=i)}return e}}ui.SNAP_PRECISION_FACTOR=1e-9;class di extends ci{constructor(){super(),di.constructor_.apply(this,arguments)}static constructor_(){if(this._snapTolerance=null,this._snapPts=null,this._isSelfSnap=!1,2===arguments.length){const t=arguments[0],e=arguments[1];this._snapTolerance=t,this._snapPts=e}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._snapTolerance=t,this._snapPts=e,this._isSelfSnap=n}}snapLine(t,e){const n=new hi(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)}transformCoordinates(t,e){const n=t.toCoordinateArray(),i=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(i)}}class gi{constructor(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=new u,this._commonSignExp=null}getCommon(){return d.longBitsToDouble(this._commonBits)}add(t){const e=d.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=gi.signExpBits(this._commonBits),this._isFirst=!1,null;if(gi.signExpBits(e)!==this._commonSignExp)return this._commonBits.high=0,this._commonBits.low=0,null;this._commonMantissaBitsCount=gi.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=gi.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))}toString(){if(1===arguments.length){const t=arguments[0],e=d.longBitsToDouble(t),n="0000000000000000000000000000000000000000000000000000000000000000"+u.toBinaryString(t),i=n.substring(n.length-64);return i.substring(0,1)+"  "+i.substring(1,12)+"(exp) "+i.substring(12)+" [ "+e+" ]"}}getClass(){return gi}get interfaces_(){return[]}static getBit(t,e){const n=1<<e%32;return e<32?0!=(t.low&n)?1:0:0!=(t.high&n)?1:0}static signExpBits(t){return t.high>>>20}static zeroLowerBits(t,e){let n="low";if(e>32&&(t.low=0,e%=32,n="high"),e>0){const i=e<32?~((1<<e)-1):0;t[n]&=i}return t}static numCommonMostSigMantissaBits(t,e){let n=0;for(let i=52;i>=0;i--){if(gi.getBit(t,i)!==gi.getBit(e,i))return n;n++}return 52}}class fi{constructor(){fi.constructor_.apply(this,arguments)}static constructor_(){this._commonCoord=null,this._ccFilter=new pi}addCommonBits(t){const e=new mi(this._commonCoord);t.apply(e),t.geometryChanged()}removeCommonBits(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;const e=new S(this._commonCoord);e.x=-e.x,e.y=-e.y;const n=new mi(e);return t.apply(n),t.geometryChanged(),t}getCommonCoordinate(){return this._commonCoord}add(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()}}class pi{constructor(){pi.constructor_.apply(this,arguments)}static constructor_(){this._commonBitsX=new gi,this._commonBitsY=new gi}filter(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)}getCommonCoordinate(){return new S(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())}get interfaces_(){return[L]}}class mi{constructor(){mi.constructor_.apply(this,arguments)}static constructor_(){this.trans=null;const t=arguments[0];this.trans=t}filter(t,e){const n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)}isDone(){return!1}isGeometryChanged(){return!0}get interfaces_(){return[z]}}fi.CommonCoordinateFilter=pi,fi.Translater=mi;class _i{constructor(){_i.constructor_.apply(this,arguments)}static constructor_(){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null;const t=arguments[0],e=arguments[1];this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()}static overlayOp(t,e,n){return new _i(t,e).getResultGeometry(n)}static union(t,e){return _i.overlayOp(t,e,Ai.UNION)}static intersection(t,e){return _i.overlayOp(t,e,Ai.INTERSECTION)}static symDifference(t,e){return _i.overlayOp(t,e,Ai.SYMDIFFERENCE)}static difference(t,e){return _i.overlayOp(t,e,Ai.DIFFERENCE)}selfSnap(t){return new ui(t).snapTo(t,this._snapTolerance)}removeCommonBits(t){this._cbr=new fi,this._cbr.add(t[0]),this._cbr.add(t[1]);const e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e}prepareResult(t){return this._cbr.addCommonBits(t),t}getResultGeometry(t){const e=this.snap(this._geom),n=Ai.overlayOp(e[0],e[1],t);return this.prepareResult(n)}checkValid(t){t.isValid()||_t.out.println("Snapped geometry is invalid")}computeSnapTolerance(){this._snapTolerance=ui.computeOverlaySnapTolerance(this._geom[0],this._geom[1])}snap(t){const e=this.removeCommonBits(t);return ui.snap(e[0],e[1],this._snapTolerance)}}class yi{constructor(){yi.constructor_.apply(this,arguments)}static constructor_(){this._geom=new Array(2).fill(null);const t=arguments[0],e=arguments[1];this._geom[0]=t,this._geom[1]=e}static overlayOp(t,e,n){return new yi(t,e).getResultGeometry(n)}static union(t,e){return yi.overlayOp(t,e,Ai.UNION)}static intersection(t,e){return yi.overlayOp(t,e,Ai.INTERSECTION)}static symDifference(t,e){return yi.overlayOp(t,e,Ai.SYMDIFFERENCE)}static difference(t,e){return yi.overlayOp(t,e,Ai.DIFFERENCE)}getResultGeometry(t){let e=null,n=!1,i=null;try{e=Ai.overlayOp(this._geom[0],this._geom[1],t);!0&&(n=!0)}catch(t){if(!(t instanceof _))throw t;i=t}if(!n)try{e=_i.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof _?i:t}return e}}class xi{constructor(){xi.constructor_.apply(this,arguments)}static constructor_(){this.mce=null,this.chainIndex=null;const t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e}computeIntersections(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)}}class Ii{constructor(){Ii.constructor_.apply(this,arguments)}static constructor_(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){const t=arguments[0],e=arguments[1];this._eventType=Ii.DELETE,this._xValue=t,this._insertEvent=e}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._eventType=Ii.INSERT,this._label=t,this._xValue=e,this._obj=n}}isDelete(){return this._eventType===Ii.DELETE}setDeleteEventIndex(t){this._deleteEventIndex=t}getObject(){return this._obj}compareTo(t){const e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0}getInsertEvent(){return this._insertEvent}isInsert(){return this._eventType===Ii.INSERT}isSameLabel(t){return null!==this._label&&this._label===t._label}getDeleteEventIndex(){return this._deleteEventIndex}get interfaces_(){return[g]}}Ii.INSERT=1,Ii.DELETE=2;class Ei{constructor(){Ei.constructor_.apply(this,arguments)}static constructor_(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;const t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n}static isAdjacentSegments(t,e){return 1===Math.abs(t-e)}isTrivialIntersection(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Ei.isAdjacentSegments(e,i))return!0;if(t.isClosed()){const n=t.getNumPoints()-1;if(0===e&&i===n||0===i&&e===n)return!0}}return!1}getProperIntersectionPoint(){return this._properIntersectionPoint}setIsDoneIfProperInt(t){this._isDoneWhenProperInt=t}hasProperInteriorIntersection(){return this._hasProperInterior}isBoundaryPointInternal(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next().getCoordinate();if(t.isIntersection(e))return!0}return!1}hasProperIntersection(){return this._hasProper}hasIntersection(){return this._hasIntersection}isDone(){return this._isDone}isBoundaryPoint(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))}setBoundaryNodes(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e}addIntersections(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;const r=t.getCoordinates()[e],s=t.getCoordinates()[e+1],o=n.getCoordinates()[i],l=n.getCoordinates()[i+1];this._li.computeIntersection(r,s,o,l),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))}}class Ci extends class{}{constructor(){super(),Ci.constructor_.apply(this,arguments)}static constructor_(){this.events=new W,this.nOverlaps=null}prepareEvents(){Be.sort(this.events);for(let t=0;t<this.events.size();t++){const e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}}computeIntersections(){if(1===arguments.length){const t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(let e=0;e<this.events.size();e++){const n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof Ei&&N(arguments[0],U)&&N(arguments[1],U)){const t=arguments[0],e=arguments[1],n=arguments[2];this.addEdges(t,t),this.addEdges(e,e),this.computeIntersections(n)}else if("boolean"==typeof arguments[2]&&N(arguments[0],U)&&arguments[1]instanceof Ei){const t=arguments[0],e=arguments[1];arguments[2]?this.addEdges(t,null):this.addEdges(t),this.computeIntersections(e)}}addEdge(t,e){const n=t.getMonotoneChainEdge(),i=n.getStartIndexes();for(let t=0;t<i.length-1;t++){const i=new xi(n,t),r=new Ii(e,n.getMinX(t),i);this.events.add(r),this.events.add(new Ii(n.getMaxX(t),r))}}processOverlaps(t,e,n,i){const r=n.getObject();for(let s=t;s<e;s++){const t=this.events.get(s);if(t.isInsert()){const e=t.getObject();n.isSameLabel(t)||(r.computeIntersections(e,i),this.nOverlaps++)}}}addEdges(){if(1===arguments.length){for(let t=arguments[0].iterator();t.hasNext();){const e=t.next();this.addEdge(e,e)}}else if(2===arguments.length){const t=arguments[1];for(let e=arguments[0].iterator();e.hasNext();){const n=e.next();this.addEdge(n,t)}}}}class Si{constructor(){Si.constructor_.apply(this,arguments)}static constructor_(){this._min=d.POSITIVE_INFINITY,this._max=d.NEGATIVE_INFINITY}getMin(){return this._min}intersects(t,e){return!(this._min>e||this._max<t)}getMax(){return this._max}toString(){return Qt.toLineString(new S(this._min,0),new S(this._max,0))}}Si.NodeComparator=class{compare(t,e){const n=t,i=e,r=(n._min+n._max)/2,s=(i._min+i._max)/2;return r<s?-1:r>s?1:0}get interfaces_(){return[p]}};class wi extends Si{constructor(){super(),wi.constructor_.apply(this,arguments)}static constructor_(){this._item=null;const t=arguments[0],e=arguments[1],n=arguments[2];this._min=t,this._max=e,this._item=n}query(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)}}class Ni extends Si{constructor(){super(),Ni.constructor_.apply(this,arguments)}static constructor_(){this._node1=null,this._node2=null;const t=arguments[0],e=arguments[1];this._node1=t,this._node2=e,this.buildExtent(this._node1,this._node2)}buildExtent(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)}query(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)}}class Ti{constructor(){Ti.constructor_.apply(this,arguments)}static constructor_(){this._leaves=new W,this._root=null,this._level=0}buildTree(){Be.sort(this._leaves,new Si.NodeComparator);let t=this._leaves,e=null,n=new W;for(;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}}insert(t,e,n){if(null!==this._root)throw new IllegalStateException("Index cannot be added to once it has been queried");this._leaves.add(new wi(t,e,n))}query(t,e,n){if(this.init(),null===this._root)return null;this._root.query(t,e,n)}buildRoot(){if(null!==this._root)return null;this._root=this.buildTree()}printNode(t){_t.out.println(Qt.toLineString(new S(t._min,this._level),new S(t._max,this._level)))}init(){return null!==this._root||0===this._leaves.size()?null:void this.buildRoot()}buildLevel(t,e){this._level++,e.clear();for(let n=0;n<t.size();n+=2){const i=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(i);else{const i=new Ni(t.get(n),t.get(n+1));e.add(i)}}}}class bi{constructor(){bi.constructor_.apply(this,arguments)}static constructor_(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){const t=arguments[0];this._lines=t}else if(2===arguments.length){const t=arguments[0],e=arguments[1];this._lines=t,this._isForcedToLineString=e}}static getGeometry(){if(1===arguments.length){const t=arguments[0];return t.getFactory().buildGeometry(bi.getLines(t))}if(2===arguments.length){const t=arguments[0],e=arguments[1];return t.getFactory().buildGeometry(bi.getLines(t,e))}}static getLines(){if(1===arguments.length){const t=arguments[0];return bi.getLines(t,!1)}if(2===arguments.length){if(N(arguments[0],X)&&N(arguments[1],X)){const t=arguments[1];for(let e=arguments[0].iterator();e.hasNext();){const n=e.next();bi.getLines(n,t)}return t}if(arguments[0]instanceof R&&"boolean"==typeof arguments[1]){const t=arguments[0],e=arguments[1],n=new W;return t.apply(new bi(n,e)),n}if(arguments[0]instanceof R&&N(arguments[1],X)){const t=arguments[0],e=arguments[1];return t instanceof k?e.add(t):t.apply(new bi(e)),e}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&N(arguments[0],X)&&N(arguments[1],X)){const t=arguments[1],e=arguments[2];for(let n=arguments[0].iterator();n.hasNext();){const i=n.next();bi.getLines(i,t,e)}return t}if("boolean"==typeof arguments[2]&&arguments[0]instanceof R&&N(arguments[1],X)){const t=arguments[1],e=arguments[2];return arguments[0].apply(new bi(t,e)),t}}}filter(t){if(this._isForcedToLineString&&t instanceof ht){const e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof k&&this._lines.add(t)}setForceToLineString(t){this._isForcedToLineString=t}get interfaces_(){return[v]}}class vi{constructor(){vi.constructor_.apply(this,arguments)}static constructor_(){this._items=new W}visitItem(t){this._items.add(t)}getItems(){return this._items}get interfaces_(){return[Xe]}}class Oi{constructor(){Oi.constructor_.apply(this,arguments)}static constructor_(){this._geom=null,this._index=null;const t=arguments[0];if(!(N(t,nt)||t instanceof ht))throw new h("Argument must be Polygonal or LinearRing");this._geom=t}locate(t){null===this._index&&(this._index=new Li(this._geom),this._geom=null);const e=new de(t),n=new Ri(e);return this._index.query(t.y,t.y,n),e.getLocation()}get interfaces_(){return[Cn]}}class Ri{constructor(){Ri.constructor_.apply(this,arguments)}static constructor_(){this._counter=null;const t=arguments[0];this._counter=t}visitItem(t){const e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))}get interfaces_(){return[Xe]}}class Li{constructor(){Li.constructor_.apply(this,arguments)}static constructor_(){this._isEmpty=!1,this._index=new Ti;const t=arguments[0];t.isEmpty()?this._isEmpty=!0:this.init(t)}init(t){for(let e=bi.getLines(t).iterator();e.hasNext();){const t=e.next().getCoordinates();this.addLine(t)}}addLine(t){for(let e=1;e<t.length;e++){const n=new nn(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this._index.insert(i,r,n)}}query(){if(2===arguments.length){const t=arguments[0],e=arguments[1];if(this._isEmpty)return new W;const n=new vi;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];if(this._isEmpty)return null;this._index.query(t,e,n)}}}Oi.SegmentVisitor=Ri,Oi.IntervalIndexedGeometry=Li;class Di extends Pe{constructor(){super(),Di.constructor_.apply(this,arguments)}static constructor_(){if(this._parentGeom=null,this._lineEdgeMap=new Tt,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new ei,2===arguments.length){const t=arguments[0],e=arguments[1];Di.constructor_.call(this,t,e,Zn.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];this._argIndex=t,this._parentGeom=e,this._boundaryNodeRule=n,null!==e&&this.add(e)}}static determineBoundary(t,e){return t.isInBoundary(e)?te.BOUNDARY:te.INTERIOR}insertBoundaryPoint(t,e){const n=this._nodes.addNode(e).getLabel();let i=1,r=te.NONE;r=n.getLocation(t,ee.ON),r===te.BOUNDARY&&i++;const s=Di.determineBoundary(this._boundaryNodeRule,i);n.setLocation(t,s)}computeSelfNodes(){if(2===arguments.length){const t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){const t=arguments[1],e=arguments[2],n=new Ei(arguments[0],!0,!1);n.setIsDoneIfProperInt(e);const i=this.createEdgeSetIntersector(),r=this._parentGeom instanceof ht||this._parentGeom instanceof it||this._parentGeom instanceof Ct,s=t||!r;return i.computeIntersections(this._edges,n,s),this.addSelfIntersectionNodes(this._argIndex),n}}computeSplitEdges(t){for(let e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}}computeEdgeIntersections(t,e,n){const i=new Ei(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,i),i}getGeometry(){return this._parentGeom}getBoundaryNodeRule(){return this._boundaryNodeRule}hasTooFewPoints(){return this._hasTooFewPoints}addPoint(){if(arguments[0]instanceof q){const t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,te.INTERIOR)}else if(arguments[0]instanceof S){const t=arguments[0];this.insertPoint(this._argIndex,t,te.INTERIOR)}}addPolygon(t){this.addPolygonRing(t.getExteriorRing(),te.EXTERIOR,te.INTERIOR);for(let e=0;e<t.getNumInteriorRing();e++){const n=t.getInteriorRingN(e);this.addPolygonRing(n,te.INTERIOR,te.EXTERIOR)}}addEdge(t){this.insertEdge(t);const e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],te.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],te.BOUNDARY)}addLineString(t){const e=yt.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;const n=new kn(e,new pe(this._argIndex,te.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),x.isTrue(e.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])}getInvalidPoint(){return this._invalidPoint}getBoundaryPoints(){const t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null);let n=0;for(let i=t.iterator();i.hasNext();){const t=i.next();e[n++]=t.getCoordinate().copy()}return e}getBoundaryNodes(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes}addSelfIntersectionNode(t,e,n){if(this.isBoundaryNode(t,e))return null;n===te.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)}addPolygonRing(t,e,n){if(t.isEmpty())return null;const i=yt.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=i[0],null;let r=e,s=n;et.isCCW(i)&&(r=n,s=e);const o=new kn(i,new pe(this._argIndex,te.BOUNDARY,r,s));this._lineEdgeMap.put(t,o),this.insertEdge(o),this.insertPoint(this._argIndex,i[0],te.BOUNDARY)}insertPoint(t,e,n){const i=this._nodes.addNode(e),r=i.getLabel();null===r?i._label=new pe(t,n):r.setLocation(t,n)}createEdgeSetIntersector(){return new Ci}addSelfIntersectionNodes(t){for(let e=this._edges.iterator();e.hasNext();){const n=e.next(),i=n.getLabel().getLocation(t);for(let e=n.eiList.iterator();e.hasNext();){const n=e.next();this.addSelfIntersectionNode(t,n.coord,i)}}}add(){if(!(1===arguments.length&&arguments[0]instanceof R))return super.add.apply(this,arguments);{const t=arguments[0];if(t.isEmpty())return null;if(t instanceof Ct&&(this._useBoundaryDeterminationRule=!1),t instanceof it)this.addPolygon(t);else if(t instanceof k)this.addLineString(t);else if(t instanceof q)this.addPoint(t);else if(t instanceof ct)this.addCollection(t);else if(t instanceof Ot)this.addCollection(t);else if(t instanceof Ct)this.addCollection(t);else{if(!(t instanceof at))throw new A(t.getGeometryType());this.addCollection(t)}}}addCollection(t){for(let e=0;e<t.getNumGeometries();e++){const n=t.getGeometryN(e);this.add(n)}}locate(t){return N(this._parentGeom,nt)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new Oi(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)}findEdge(){if(1===arguments.length&&arguments[0]instanceof k){const t=arguments[0];return this._lineEdgeMap.get(t)}return super.findEdge.apply(this,arguments)}}class Pi{constructor(){Pi.constructor_.apply(this,arguments)}static constructor_(){if(this._li=new ue,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){const t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Di(0,t)}else if(2===arguments.length){const t=arguments[0],e=arguments[1];Pi.constructor_.call(this,t,e,Zn.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];t.getPrecisionModel().compareTo(e.getPrecisionModel())>=0?this.setComputationPrecision(t.getPrecisionModel()):this.setComputationPrecision(e.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Di(0,t,n),this._arg[1]=new Di(1,e,n)}}getArgGeometry(t){return this._arg[t].getGeometry()}setComputationPrecision(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)}}class Ai extends Pi{constructor(){super(),Ai.constructor_.apply(this,arguments)}static constructor_(){this._ptLocator=new ei,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new On,this._resultPolyList=new W,this._resultLineList=new W,this._resultPointList=new W;const t=arguments[0],e=arguments[1];Pi.constructor_.call(this,t,e),this._graph=new Pe(new bn),this._geomFact=t.getFactory()}static overlayOp(t,e,n){return new Ai(t,e).getResultGeometry(n)}static union(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Ai.createEmptyResult(Ai.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}if(t.isGeometryCollection()||e.isGeometryCollection())throw new h("This method does not support GeometryCollection arguments");return yi.overlayOp(t,e,Ai.UNION)}static intersection(t,e){if(t.isEmpty()||e.isEmpty())return Ai.createEmptyResult(Ai.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){const n=e;return oi.map(t,new class{get interfaces_(){return[MapOp]}map(t){return Ai.intersection(t,n)}})}return yi.overlayOp(t,e,Ai.INTERSECTION)}static symDifference(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Ai.createEmptyResult(Ai.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}if(t.isGeometryCollection()||e.isGeometryCollection())throw new h("This method does not support GeometryCollection arguments");return yi.overlayOp(t,e,Ai.SYMDIFFERENCE)}static resultDimension(t,e,n){const i=e.getDimension(),r=n.getDimension();let s=-1;switch(t){case Ai.INTERSECTION:s=Math.min(i,r);break;case Ai.UNION:s=Math.max(i,r);break;case Ai.DIFFERENCE:s=i;break;case Ai.SYMDIFFERENCE:s=Math.max(i,r)}return s}static createEmptyResult(t,e,n,i){const r=Ai.resultDimension(t,e,n);return i.createEmpty(r)}static difference(t,e){if(t.isEmpty())return Ai.createEmptyResult(Ai.DIFFERENCE,t,e,t.getFactory());if(e.isEmpty())return t.copy();if(t.isGeometryCollection()||e.isGeometryCollection())throw new h("This method does not support GeometryCollection arguments");return yi.overlayOp(t,e,Ai.DIFFERENCE)}static isResultOfOp(){if(2===arguments.length){const t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return Ai.isResultOfOp(n,i,e)}if(3===arguments.length){let t=arguments[0],e=arguments[1],n=arguments[2];switch(t===te.BOUNDARY&&(t=te.INTERIOR),e===te.BOUNDARY&&(e=te.INTERIOR),n){case Ai.INTERSECTION:return t===te.INTERIOR&&e===te.INTERIOR;case Ai.UNION:return t===te.INTERIOR||e===te.INTERIOR;case Ai.DIFFERENCE:return t===te.INTERIOR&&e!==te.INTERIOR;case Ai.SYMDIFFERENCE:return t===te.INTERIOR&&e!==te.INTERIOR||t!==te.INTERIOR&&e===te.INTERIOR}return!1}}insertUniqueEdge(t){const e=this._edgeList.findEqualEdge(t);if(null!==e){const n=e.getLabel();let i=t.getLabel();e.isPointwiseEqual(t)||(i=new pe(t.getLabel()),i.flip());const r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this._edgeList.add(t)}getGraph(){return this._graph}cancelDuplicateResultEdges(){for(let t=this._graph.getEdgeEnds().iterator();t.hasNext();){const e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}}isCoveredByLA(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)}computeGeometry(t,e,n,i){const r=new W;return r.addAll(t),r.addAll(e),r.addAll(n),r.isEmpty()?Ai.createEmptyResult(i,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(r)}mergeSymLabels(){for(let t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}}isCovered(t,e){for(let n=e.iterator();n.hasNext();){const e=n.next();if(this._ptLocator.locate(t,e)!==te.EXTERIOR)return!0}return!1}replaceCollapsedEdges(){const t=new W;for(let e=this._edgeList.iterator();e.hasNext();){const n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)}updateNodeLabelling(){for(let t=this._graph.getNodes().iterator();t.hasNext();){const e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}}getResultGeometry(t){return this.computeOverlay(t),this._resultGeom}insertUniqueEdges(t){for(let e=t.iterator();e.hasNext();){const t=e.next();this.insertUniqueEdge(t)}}computeOverlay(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);const e=new W;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),si.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();const n=new Ae(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();const i=new li(this,this._geomFact,this._ptLocator);this._resultLineList=i.build(t);const r=new ai(this,this._geomFact,this._ptLocator);this._resultPointList=r.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)}labelIncompleteNode(t,e){const n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)}copyPoints(t){for(let e=this._arg[t].getNodeIterator();e.hasNext();){const n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}}findResultAreaEdges(t){for(let e=this._graph.getEdgeEnds().iterator();e.hasNext();){const n=e.next(),i=n.getLabel();i.isArea()&&!n.isInteriorAreaEdge()&&Ai.isResultOfOp(i.getLocation(0,ee.RIGHT),i.getLocation(1,ee.RIGHT),t)&&n.setInResult(!0)}}computeLabelsFromDepths(){for(let t=this._edgeList.iterator();t.hasNext();){const e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(let t=0;t<2;t++)n.isNull(t)||!n.isArea()||i.isNull(t)||(0===i.getDelta(t)?n.toLine(t):(x.isTrue(!i.isNull(t,ee.LEFT),"depth of LEFT side has not been initialized"),n.setLocation(t,ee.LEFT,i.getLocation(t,ee.LEFT)),x.isTrue(!i.isNull(t,ee.RIGHT),"depth of RIGHT side has not been initialized"),n.setLocation(t,ee.RIGHT,i.getLocation(t,ee.RIGHT))))}}}computeLabelling(){for(let t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()}labelIncompleteNodes(){for(let t=this._graph.getNodes().iterator();t.hasNext();){const e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}}isCoveredByA(t){return!!this.isCovered(t,this._resultPolyList)}}Ai.INTERSECTION=1,Ai.UNION=2,Ai.DIFFERENCE=3,Ai.SYMDIFFERENCE=4;class Fi{createEdgeEndForNext(t,e,n,i){const r=n.segmentIndex+1;if(r>=t.getNumPoints()&&null===i)return null;let s=t.getCoordinate(r);null!==i&&i.segmentIndex===n.segmentIndex&&(s=i.coord);const o=new Re(t,n.coord,s,new pe(t.getLabel()));e.add(o)}createEdgeEndForPrev(t,e,n,i){let r=n.segmentIndex;if(0===n.dist){if(0===r)return null;r--}let s=t.getCoordinate(r);null!==i&&i.segmentIndex>=r&&(s=i.coord);const o=new pe(t.getLabel());o.flip();const l=new Re(t,n.coord,s,o);e.add(l)}computeEdgeEnds(){if(1===arguments.length){const t=arguments[0],e=new W;for(let n=t;n.hasNext();){const t=n.next();this.computeEdgeEnds(t,e)}return e}if(2===arguments.length){const t=arguments[0],e=arguments[1],n=t.getEdgeIntersectionList();n.addEndpoints();const i=n.iterator();let r=null,s=null;if(!i.hasNext())return null;let o=i.next();do{r=s,s=o,o=null,i.hasNext()&&(o=i.next()),null!==s&&(this.createEdgeEndForPrev(t,e,s,r),this.createEdgeEndForNext(t,e,s,o))}while(null!==s)}}}class Mi extends Re{constructor(){super(),Mi.constructor_.apply(this,arguments)}static constructor_(){if(this._edgeEnds=new W,1===arguments.length){const t=arguments[0];Mi.constructor_.call(this,null,t)}else if(2===arguments.length){const t=arguments[1];Re.constructor_.call(this,t.getEdge(),t.getCoordinate(),t.getDirectedCoordinate(),new pe(t.getLabel())),this.insert(t)}}insert(t){this._edgeEnds.add(t)}print(t){t.println("EdgeEndBundle--\x3e Label: "+this._label);for(let e=this.iterator();e.hasNext();){e.next().print(t),t.println()}}iterator(){return this._edgeEnds.iterator()}getEdgeEnds(){return this._edgeEnds}computeLabelOn(t,e){let n=0,i=!1;for(let e=this.iterator();e.hasNext();){const r=e.next().getLabel().getLocation(t);r===te.BOUNDARY&&n++,r===te.INTERIOR&&(i=!0)}let r=te.NONE;i&&(r=te.INTERIOR),n>0&&(r=Di.determineBoundary(e,n)),this._label.setLocation(t,r)}computeLabelSide(t,e){for(let n=this.iterator();n.hasNext();){const i=n.next();if(i.getLabel().isArea()){const n=i.getLabel().getLocation(t,e);if(n===te.INTERIOR)return this._label.setLocation(t,e,te.INTERIOR),null;n===te.EXTERIOR&&this._label.setLocation(t,e,te.EXTERIOR)}}}getLabel(){return this._label}computeLabelSides(t){this.computeLabelSide(t,ee.LEFT),this.computeLabelSide(t,ee.RIGHT)}updateIM(t){kn.updateIM(this._label,t)}computeLabel(t){let e=!1;for(let t=this.iterator();t.hasNext();){t.next().getLabel().isArea()&&(e=!0)}this._label=e?new pe(te.NONE,te.NONE,te.NONE):new pe(te.NONE);for(let n=0;n<2;n++)this.computeLabelOn(n,t),e&&this.computeLabelSides(n)}}class Gi extends Nn{constructor(){super()}updateIM(t){for(let e=this.iterator();e.hasNext();){e.next().updateIM(t)}}insert(t){let e=this._edgeMap.get(t);null===e?(e=new Mi(t),this.insertEdgeEnd(t,e)):e.insert(t)}}class zi extends Ie{constructor(){super(),zi.constructor_.apply(this,arguments)}static constructor_(){const t=arguments[0],e=arguments[1];Ie.constructor_.call(this,t,e)}updateIMFromEdges(t){this._edges.updateIM(t)}computeIM(t){t.setAtLeastIfValid(this._label.getLocation(0),this._label.getLocation(1),0)}}class ki extends De{constructor(){super()}createNode(t){return new zi(t,new Gi)}}class Bi{constructor(){Bi.constructor_.apply(this,arguments)}static constructor_(){this._li=new ue,this._ptLocator=new ei,this._arg=null,this._nodes=new ve(new ki),this._im=null,this._isolatedEdges=new W,this._invalidPoint=null;const t=arguments[0];this._arg=t}insertEdgeEnds(t){for(let e=t.iterator();e.hasNext();){const t=e.next();this._nodes.add(t)}}computeProperIntersectionIM(t,e){const n=this._arg[0].getGeometry().getDimension(),i=this._arg[1].getGeometry().getDimension(),r=t.hasProperIntersection(),s=t.hasProperInteriorIntersection();2===n&&2===i?r&&e.setAtLeast("212101212"):2===n&&1===i?(r&&e.setAtLeast("FFF0FFFF2"),s&&e.setAtLeast("1FFFFF1FF")):1===n&&2===i?(r&&e.setAtLeast("F0FFFFFF2"),s&&e.setAtLeast("1F1FFFFFF")):1===n&&1===i&&s&&e.setAtLeast("0FFFFFFFF")}labelIsolatedEdges(t,e){for(let n=this._arg[t].getEdgeIterator();n.hasNext();){const t=n.next();t.isIsolated()&&(this.labelIsolatedEdge(t,e,this._arg[e].getGeometry()),this._isolatedEdges.add(t))}}labelIsolatedEdge(t,e,n){if(n.getDimension()>0){const i=this._ptLocator.locate(t.getCoordinate(),n);t.getLabel().setAllLocations(e,i)}else t.getLabel().setAllLocations(e,te.EXTERIOR)}computeIM(){const t=new An;if(t.set(te.EXTERIOR,te.EXTERIOR,2),!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal()))return this.computeDisjointIM(t),t;this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1);const e=this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!1);this.computeIntersectionNodes(0),this.computeIntersectionNodes(1),this.copyNodesAndLabels(0),this.copyNodesAndLabels(1),this.labelIsolatedNodes(),this.computeProperIntersectionIM(e,t);const n=new Fi,i=n.computeEdgeEnds(this._arg[0].getEdgeIterator());this.insertEdgeEnds(i);const r=n.computeEdgeEnds(this._arg[1].getEdgeIterator());return this.insertEdgeEnds(r),this.labelNodeEdges(),this.labelIsolatedEdges(0,1),this.labelIsolatedEdges(1,0),this.updateIM(t),t}labelNodeEdges(){for(let t=this._nodes.iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}}copyNodesAndLabels(t){for(let e=this._arg[t].getNodeIterator();e.hasNext();){const n=e.next();this._nodes.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}}labelIntersectionNodes(t){for(let e=this._arg[t].getEdgeIterator();e.hasNext();){const n=e.next(),i=n.getLabel().getLocation(t);for(let e=n.getEdgeIntersectionList().iterator();e.hasNext();){const n=e.next(),r=this._nodes.find(n.coord);r.getLabel().isNull(t)&&(i===te.BOUNDARY?r.setLabelBoundary(t):r.setLabel(t,te.INTERIOR))}}}labelIsolatedNode(t,e){const n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setAllLocations(e,n)}computeIntersectionNodes(t){for(let e=this._arg[t].getEdgeIterator();e.hasNext();){const n=e.next(),i=n.getLabel().getLocation(t);for(let e=n.getEdgeIntersectionList().iterator();e.hasNext();){const n=e.next(),r=this._nodes.addNode(n.coord);i===te.BOUNDARY?r.setLabelBoundary(t):r.getLabel().isNull(t)&&r.setLabel(t,te.INTERIOR)}}}labelIsolatedNodes(){for(let t=this._nodes.iterator();t.hasNext();){const e=t.next(),n=e.getLabel();x.isTrue(n.getGeometryCount()>0,"node with empty label found"),e.isIsolated()&&(n.isNull(0)?this.labelIsolatedNode(e,0):this.labelIsolatedNode(e,1))}}updateIM(t){for(let e=this._isolatedEdges.iterator();e.hasNext();){e.next().updateIM(t)}for(let e=this._nodes.iterator();e.hasNext();){const n=e.next();n.updateIM(t),n.updateIMFromEdges(t)}}computeDisjointIM(t){const e=this._arg[0].getGeometry();e.isEmpty()||(t.set(te.INTERIOR,te.EXTERIOR,e.getDimension()),t.set(te.BOUNDARY,te.EXTERIOR,e.getBoundaryDimension()));const n=this._arg[1].getGeometry();n.isEmpty()||(t.set(te.EXTERIOR,te.INTERIOR,n.getDimension()),t.set(te.EXTERIOR,te.BOUNDARY,n.getBoundaryDimension()))}}class qi{constructor(){qi.constructor_.apply(this,arguments)}static constructor_(){this._rectEnv=null;const t=arguments[0];this._rectEnv=t.getEnvelopeInternal()}static contains(t,e){return new qi(t).contains(e)}isContainedInBoundary(t){if(t instanceof it)return!1;if(t instanceof q)return this.isPointContainedInBoundary(t);if(t instanceof k)return this.isLineStringContainedInBoundary(t);for(let e=0;e<t.getNumGeometries();e++){const n=t.getGeometryN(e);if(!this.isContainedInBoundary(n))return!1}return!0}isLineSegmentContainedInBoundary(t,e){if(t.equals(e))return this.isPointContainedInBoundary(t);if(t.x===e.x){if(t.x===this._rectEnv.getMinX()||t.x===this._rectEnv.getMaxX())return!0}else if(t.y===e.y&&(t.y===this._rectEnv.getMinY()||t.y===this._rectEnv.getMaxY()))return!0;return!1}isLineStringContainedInBoundary(t){const e=t.getCoordinateSequence(),n=new S,i=new S;for(let t=0;t<e.size()-1;t++)if(e.getCoordinate(t,n),e.getCoordinate(t+1,i),!this.isLineSegmentContainedInBoundary(n,i))return!1;return!0}isPointContainedInBoundary(){if(arguments[0]instanceof q){const t=arguments[0];return this.isPointContainedInBoundary(t.getCoordinate())}if(arguments[0]instanceof S){const t=arguments[0];return t.x===this._rectEnv.getMinX()||t.x===this._rectEnv.getMaxX()||t.y===this._rectEnv.getMinY()||t.y===this._rectEnv.getMaxY()}}contains(t){return!!this._rectEnv.contains(t.getEnvelopeInternal())&&!this.isContainedInBoundary(t)}}class Yi{constructor(){Yi.constructor_.apply(this,arguments)}static constructor_(){this._li=new ue,this._rectEnv=null,this._diagUp0=null,this._diagUp1=null,this._diagDown0=null,this._diagDown1=null;const t=arguments[0];this._rectEnv=t,this._diagUp0=new S(t.getMinX(),t.getMinY()),this._diagUp1=new S(t.getMaxX(),t.getMaxY()),this._diagDown0=new S(t.getMinX(),t.getMaxY()),this._diagDown1=new S(t.getMaxX(),t.getMinY())}intersects(t,e){const n=new O(t,e);if(!this._rectEnv.intersects(n))return!1;if(this._rectEnv.intersects(t))return!0;if(this._rectEnv.intersects(e))return!0;if(t.compareTo(e)>0){const n=t;t=e,e=n}let i=!1;return e.y>t.y&&(i=!0),i?this._li.computeIntersection(t,e,this._diagDown0,this._diagDown1):this._li.computeIntersection(t,e,this._diagUp0,this._diagUp1),!!this._li.hasIntersection()}}class Xi{constructor(){Xi.constructor_.apply(this,arguments)}static constructor_(){this._isDone=!1}applyTo(t){for(let e=0;e<t.getNumGeometries()&&!this._isDone;e++){const n=t.getGeometryN(e);if(n instanceof at)this.applyTo(n);else if(this.visit(n),this.isDone())return this._isDone=!0,null}}}class ji{constructor(){ji.constructor_.apply(this,arguments)}static constructor_(){this._rectangle=null,this._rectEnv=null;const t=arguments[0];this._rectangle=t,this._rectEnv=t.getEnvelopeInternal()}static intersects(t,e){return new ji(t).intersects(e)}intersects(t){if(!this._rectEnv.intersects(t.getEnvelopeInternal()))return!1;const e=new Ui(this._rectEnv);if(e.applyTo(t),e.intersects())return!0;const n=new Vi(this._rectangle);if(n.applyTo(t),n.containsPoint())return!0;const i=new Wi(this._rectangle);return i.applyTo(t),!!i.intersects()}}class Ui extends Xi{constructor(){super(),Ui.constructor_.apply(this,arguments)}static constructor_(){this._rectEnv=null,this._intersects=!1;const t=arguments[0];this._rectEnv=t}isDone(){return!0===this._intersects}visit(t){const e=t.getEnvelopeInternal();return this._rectEnv.intersects(e)?this._rectEnv.contains(e)||e.getMinX()>=this._rectEnv.getMinX()&&e.getMaxX()<=this._rectEnv.getMaxX()||e.getMinY()>=this._rectEnv.getMinY()&&e.getMaxY()<=this._rectEnv.getMaxY()?(this._intersects=!0,null):void 0:null}intersects(){return this._intersects}}class Vi extends Xi{constructor(){super(),Vi.constructor_.apply(this,arguments)}static constructor_(){this._rectSeq=null,this._rectEnv=null,this._containsPoint=!1;const t=arguments[0];this._rectSeq=t.getExteriorRing().getCoordinateSequence(),this._rectEnv=t.getEnvelopeInternal()}isDone(){return!0===this._containsPoint}visit(t){if(!(t instanceof it))return null;const e=t.getEnvelopeInternal();if(!this._rectEnv.intersects(e))return null;const n=new S;for(let i=0;i<4;i++)if(this._rectSeq.getCoordinate(i,n),e.contains(n)&&wn.containsPointInPolygon(n,t))return this._containsPoint=!0,null}containsPoint(){return this._containsPoint}}class Wi extends Xi{constructor(){super(),Wi.constructor_.apply(this,arguments)}static constructor_(){this._rectEnv=null,this._rectIntersector=null,this._hasIntersection=!1,this._p0=new S,this._p1=new S;const t=arguments[0];this._rectEnv=t.getEnvelopeInternal(),this._rectIntersector=new Yi(this._rectEnv)}intersects(){return this._hasIntersection}isDone(){return!0===this._hasIntersection}visit(t){const e=t.getEnvelopeInternal();if(!this._rectEnv.intersects(e))return null;const n=bi.getLines(t);this.checkIntersectionWithLineStrings(n)}checkIntersectionWithLineStrings(t){for(let e=t.iterator();e.hasNext();){const t=e.next();if(this.checkIntersectionWithSegments(t),this._hasIntersection)return null}}checkIntersectionWithSegments(t){const e=t.getCoordinateSequence();for(let t=1;t<e.size();t++)if(e.getCoordinate(t-1,this._p0),e.getCoordinate(t,this._p1),this._rectIntersector.intersects(this._p0,this._p1))return this._hasIntersection=!0,null}}class Hi extends Pi{constructor(){super(),Hi.constructor_.apply(this,arguments)}static constructor_(){if(this._relate=null,2===arguments.length){const t=arguments[0],e=arguments[1];Pi.constructor_.call(this,t,e),this._relate=new Bi(this._arg)}else if(3===arguments.length){const t=arguments[0],e=arguments[1],n=arguments[2];Pi.constructor_.call(this,t,e,n),this._relate=new Bi(this._arg)}}static covers(t,e){return!(2===e.getDimension()&&t.getDimension()<2)&&(!(1===e.getDimension()&&t.getDimension()<1&&e.getLength()>0)&&(!!t.getEnvelopeInternal().covers(e.getEnvelopeInternal())&&(!!t.isRectangle()||new Hi(t,e).getIntersectionMatrix().isCovers())))}static intersects(t,e){if(!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal()))return!1;if(t.isRectangle())return ji.intersects(t,e);if(e.isRectangle())return ji.intersects(e,t);if(t.isGeometryCollection()||e.isGeometryCollection()){for(let n=0;n<t.getNumGeometries();n++)for(let i=0;i<e.getNumGeometries();i++)if(t.getGeometryN(n).intersects(e.getGeometryN(i)))return!0;return!1}return new Hi(t,e).getIntersectionMatrix().isIntersects()}static touches(t,e){return!!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())&&new Hi(t,e).getIntersectionMatrix().isTouches(t.getDimension(),e.getDimension())}static equalsTopo(t,e){return!!t.getEnvelopeInternal().equals(e.getEnvelopeInternal())&&Hi.relate(t,e).isEquals(t.getDimension(),e.getDimension())}static relate(){if(2===arguments.length){return new Hi(arguments[0],arguments[1]).getIntersectionMatrix()}if(3===arguments.length){return new Hi(arguments[0],arguments[1],arguments[2]).getIntersectionMatrix()}}static overlaps(t,e){return!!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())&&new Hi(t,e).getIntersectionMatrix().isOverlaps(t.getDimension(),e.getDimension())}static crosses(t,e){return!!t.getEnvelopeInternal().intersects(e.getEnvelopeInternal())&&new Hi(t,e).getIntersectionMatrix().isCrosses(t.getDimension(),e.getDimension())}static contains(t,e){return!(2===e.getDimension()&&t.getDimension()<2)&&(!(1===e.getDimension()&&t.getDimension()<1&&e.getLength()>0)&&(!!t.getEnvelopeInternal().contains(e.getEnvelopeInternal())&&(t.isRectangle()?qi.contains(t,e):new Hi(t,e).getIntersectionMatrix().isContains())))}getIntersectionMatrix(){return this._relate.computeIM()}}class Ki{get interfaces_(){return[]}getClass(){return Ki}static union(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Ai.createEmptyResult(Ai.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),yi.overlayOp(t,e,Ai.UNION)}}const Zi=(t,e)=>Hi.intersects(t,e),Ji=(t,e)=>Hi.touches(t,e),Qi=(t,e)=>Hi.contains(t,e),$i=t=>t instanceof Ct,tr=t=>t instanceof Polygon,er=t=>{if(!t)return null;const e=new bt,n=new Rt(e);return new Qt(n).write(t)},nr=t=>{const e=new Jt,n=ir(t);return e.read(n)},ir=t=>{const e=[t.x,t.y,t.x+t.width,t.y,t.x+t.width,t.y+t.height,t.x,t.y+t.height,t.x,t.y];return`POLYGON((${e[0]} ${e[1]}, ${e[2]} ${e[3]}, ${e[4]} ${e[5]}, ${e[6]} ${e[7]}, ${e[8]} ${e[9]}))`},rr=(t,e,n,i)=>(new Rt).createLineString([new S(t,e),new S(n,i)]),sr=t=>{const e=t.map((t=>new S(t[0],t[1])));return(new Rt).createPolygon(e)},or=(t,e,n,i)=>Math.sqrt(Math.pow(n-t,2)+Math.pow(i-e,2)),lr=(t,e,n,i)=>t<n||t===n&&e<i?-1:t===n&&e===i?0:1,ar=(t,e,n,i)=>-1===lr(t,e,n,i)?[t,e]:[n,i],cr=(t,e,n,i)=>-1!==lr(t,e,n,i)?[t,e]:[n,i],hr=async()=>{try{const e=canvas.scene.getEmbeddedCollection("Wall"),n=[];for(const i of e){i.getFlag(t,"dungeonVersion")&&n.push(i.id)}await canvas.scene.deleteEmbeddedDocuments("Wall",n)}catch(t){console.error(t)}},ur=async t=>{for(let e=0;e<t.getNumGeometries();e++){const n=t.getGeometryN(e);await pr(n)}},dr=(t,e,n,i)=>({c:[t,e,n,i],flags:{"dungeon-draw":{dungeonVersion:"1.0"}}}),gr=(t,e,n,i)=>{const r=dr(t,e,n,i);return r.door=1,r},fr=(t,e,n,i)=>{const r=dr(t,e,n,i);return r.door=2,r},pr=async t=>{const e=[],n=t.getExteriorRing().getCoordinates();for(let t=0;t<n.length-1;t++){const i=dr(n[t].x,n[t].y,n[t+1].x,n[t+1].y);e.push(i)}const i=t.getNumInteriorRing();for(let n=0;n<i;n++){const i=t.getInteriorRingN(n).getCoordinates();for(let t=0;t<i.length-1;t++){const n=dr(i[t].x,i[t].y,i[t+1].x,i[t+1].y);e.push(n)}}e.length&&await canvas.scene.createEmbeddedDocuments("Wall",e)},mr=async t=>{const e=[];for(const n of t){const t=dr(n[0],n[1],n[2],n[3]);e.push(t)}e.length&&await canvas.scene.createEmbeddedDocuments("Wall",e)},_r=async t=>{const e=[];for(const n of t){const t=gr(n[0],n[1],n[2],n[3]);e.push(t)}e.length&&await canvas.scene.createEmbeddedDocuments("Wall",e)},yr=async t=>{const e=[];for(const n of t){const t=fr(n[0],n[1],n[2],n[3]);e.push(t)}e.length&&await canvas.scene.createEmbeddedDocuments("Wall",e)};class xr{static FLAG_KEY="dungeonState";constructor(t,e,n,i,r,s){this.geometry=t,this.themeAreas=e,this.doors=n,this.secretDoors=i,this.interiorWalls=r,this.config=s}static startState(){return new xr(null,[],[],[],[],{backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8})}clone(){return new xr(this.geometry?this.geometry.copy():null,JSON.parse(JSON.stringify(this.themeAreas)),JSON.parse(JSON.stringify(this.doors)),this.secretDoors?[...this.secretDoors]:[],this.interiorWalls?[...this.interiorWalls]:[],JSON.parse(JSON.stringify(this.config)))}toString(){return JSON.stringify({wkt:er(this.geometry),themeAreas:this.themeAreas,doors:this.doors,secretDoors:this.secretDoors,interiorWalls:this.interiorWalls,config:this.config})}static fromString(t){if(!t)return xr.startState();const e=JSON.parse(t),n=(i=e.wkt)?(new Jt).read(i):null;var i;const r=e.themeAreas?e.themeAreas:[],s=e.doors?e.doors:[],o=e.secretDoors?e.secretDoors:[],l=e.interiorWalls?e.interiorWalls:[],a=foundry.utils.mergeObject({backgroundImage:"",doorThickness:25,doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorTexture:"",floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",wallColor:"#000000",wallThickness:8},e.config);return new xr(n,r,s,o,l,a)}async saveToJournalEntry(t){const e=this.toString();await(async t=>{game.user.isGM&&(await hr(),t.geometry&&($i(t.geometry)?await ur(t.geometry):tr(t.geometry)&&await pr(t.geometry)),await mr(t.interiorWalls),await _r(t.doors),await yr(t.secretDoors))})(this),await t.update({content:e})}static async loadFromJournalEntry(t){return t.data.content?(console.log(`Loading dungeon from JournalEntry ${t.name}`),xr.fromString(t.data.content)):(console.log("Loading dungeon from start state"),xr.startState())}}
/*!
 * pixi-filters - v4.1.5
 * Compiled Wed, 29 Sep 2021 14:05:57 UTC
 *
 * pixi-filters is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */var Ir=function(t,e,n,i,r,s,o,l){var a=function(t,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function c(t,e){function n(){this.constructor=t}a(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var h=function(){return(h=Object.assign||function(t){for(var e,n=arguments,i=1,r=arguments.length;i<r;i++)for(var s in e=n[i])Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t}).apply(this,arguments)},u="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",d=function(t){function e(e){var n=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform float gamma;\nuniform float contrast;\nuniform float saturation;\nuniform float brightness;\nuniform float red;\nuniform float green;\nuniform float blue;\nuniform float alpha;\n\nvoid main(void)\n{\n    vec4 c = texture2D(uSampler, vTextureCoord);\n\n    if (c.a > 0.0) {\n        c.rgb /= c.a;\n\n        vec3 rgb = pow(c.rgb, vec3(1. / gamma));\n        rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb)), rgb, saturation), contrast);\n        rgb.r *= red;\n        rgb.g *= green;\n        rgb.b *= blue;\n        c.rgb = rgb * brightness;\n\n        c.rgb *= c.a;\n    }\n\n    gl_FragColor = c * alpha;\n}\n")||this;return n.gamma=1,n.saturation=1,n.contrast=1,n.brightness=1,n.red=1,n.green=1,n.blue=1,n.alpha=1,Object.assign(n,e),n}return c(e,t),e.prototype.apply=function(t,e,n,i){this.uniforms.gamma=Math.max(this.gamma,1e-4),this.uniforms.saturation=this.saturation,this.uniforms.contrast=this.contrast,this.uniforms.brightness=this.brightness,this.uniforms.red=this.red,this.uniforms.green=this.green,this.uniforms.blue=this.blue,this.uniforms.alpha=this.alpha,t.applyFilter(this,e,n,i)},e}(e.Filter),g=function(t){function e(e){void 0===e&&(e=.5);var n=t.call(this,u,"\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\n\nuniform float threshold;\n\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    // A simple & fast algorithm for getting brightness.\n    // It's inaccuracy , but good enought for this feature.\n    float _max = max(max(color.r, color.g), color.b);\n    float _min = min(min(color.r, color.g), color.b);\n    float brightness = (_max + _min) * 0.5;\n\n    if(brightness > threshold) {\n        gl_FragColor = color;\n    } else {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n}\n")||this;return n.threshold=e,n}return c(e,t),Object.defineProperty(e.prototype,"threshold",{get:function(){return this.uniforms.threshold},set:function(t){this.uniforms.threshold=t},enumerable:!1,configurable:!0}),e}(e.Filter),f=function(t){function e(e,i,r){void 0===e&&(e=4),void 0===i&&(i=3),void 0===r&&(r=!1);var s=t.call(this,u,r?"\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec2 uOffset;\nuniform vec4 filterClamp;\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n\n    // Sample top left pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Sample top right pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Sample bottom right pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Sample bottom left pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Average\n    color *= 0.25;\n\n    gl_FragColor = color;\n}\n":"\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec2 uOffset;\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n\n    // Sample top left pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));\n\n    // Sample top right pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));\n\n    // Sample bottom right pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));\n\n    // Sample bottom left pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));\n\n    // Average\n    color *= 0.25;\n\n    gl_FragColor = color;\n}")||this;return s._kernels=[],s._blur=4,s._quality=3,s.uniforms.uOffset=new Float32Array(2),s._pixelSize=new n.Point,s.pixelSize=1,s._clamp=r,Array.isArray(e)?s.kernels=e:(s._blur=e,s.quality=i),s}return c(e,t),e.prototype.apply=function(t,e,n,i){var r,s=this._pixelSize.x/e._frame.width,o=this._pixelSize.y/e._frame.height;if(1===this._quality||0===this._blur)r=this._kernels[0]+.5,this.uniforms.uOffset[0]=r*s,this.uniforms.uOffset[1]=r*o,t.applyFilter(this,e,n,i);else{for(var l=t.getFilterTexture(),a=e,c=l,h=void 0,u=this._quality-1,d=0;d<u;d++)r=this._kernels[d]+.5,this.uniforms.uOffset[0]=r*s,this.uniforms.uOffset[1]=r*o,t.applyFilter(this,a,c,1),h=a,a=c,c=h;r=this._kernels[u]+.5,this.uniforms.uOffset[0]=r*s,this.uniforms.uOffset[1]=r*o,t.applyFilter(this,a,n,i),t.returnFilterTexture(l)}},e.prototype._updatePadding=function(){this.padding=Math.ceil(this._kernels.reduce((function(t,e){return t+e+.5}),0))},e.prototype._generateKernels=function(){var t=this._blur,e=this._quality,n=[t];if(t>0)for(var i=t,r=t/e,s=1;s<e;s++)i-=r,n.push(i);this._kernels=n,this._updatePadding()},Object.defineProperty(e.prototype,"kernels",{get:function(){return this._kernels},set:function(t){Array.isArray(t)&&t.length>0?(this._kernels=t,this._quality=t.length,this._blur=Math.max.apply(Math,t)):(this._kernels=[0],this._quality=1)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"clamp",{get:function(){return this._clamp},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"pixelSize",{get:function(){return this._pixelSize},set:function(t){"number"==typeof t?(this._pixelSize.x=t,this._pixelSize.y=t):Array.isArray(t)?(this._pixelSize.x=t[0],this._pixelSize.y=t[1]):t instanceof n.Point?(this._pixelSize.x=t.x,this._pixelSize.y=t.y):(this._pixelSize.x=1,this._pixelSize.y=1)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"quality",{get:function(){return this._quality},set:function(t){this._quality=Math.max(1,Math.round(t)),this._generateKernels()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blur",{get:function(){return this._blur},set:function(t){this._blur=t,this._generateKernels()},enumerable:!1,configurable:!0}),e}(e.Filter),p=function(t){function e(n){var r=t.call(this,u,"uniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\n\nuniform sampler2D bloomTexture;\nuniform float bloomScale;\nuniform float brightness;\n\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    color.rgb *= brightness;\n    vec4 bloomColor = vec4(texture2D(bloomTexture, vTextureCoord).rgb, 0.0);\n    bloomColor.rgb *= bloomScale;\n    gl_FragColor = color + bloomColor;\n}\n")||this;r.bloomScale=1,r.brightness=1,r._resolution=i.settings.FILTER_RESOLUTION,"number"==typeof n&&(n={threshold:n});var s=Object.assign(e.defaults,n);r.bloomScale=s.bloomScale,r.brightness=s.brightness;var o=s.kernels,l=s.blur,a=s.quality,c=s.pixelSize,h=s.resolution;return r._extractFilter=new g(s.threshold),r._extractFilter.resolution=h,r._blurFilter=o?new f(o):new f(l,a),r.pixelSize=c,r.resolution=h,r}return c(e,t),e.prototype.apply=function(t,e,n,i,r){var s=t.getFilterTexture();this._extractFilter.apply(t,e,s,1,r);var o=t.getFilterTexture();this._blurFilter.apply(t,s,o,1),this.uniforms.bloomScale=this.bloomScale,this.uniforms.brightness=this.brightness,this.uniforms.bloomTexture=o,t.applyFilter(this,e,n,i),t.returnFilterTexture(o),t.returnFilterTexture(s)},Object.defineProperty(e.prototype,"resolution",{get:function(){return this._resolution},set:function(t){this._resolution=t,this._extractFilter&&(this._extractFilter.resolution=t),this._blurFilter&&(this._blurFilter.resolution=t)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"threshold",{get:function(){return this._extractFilter.threshold},set:function(t){this._extractFilter.threshold=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"kernels",{get:function(){return this._blurFilter.kernels},set:function(t){this._blurFilter.kernels=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blur",{get:function(){return this._blurFilter.blur},set:function(t){this._blurFilter.blur=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"quality",{get:function(){return this._blurFilter.quality},set:function(t){this._blurFilter.quality=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"pixelSize",{get:function(){return this._blurFilter.pixelSize},set:function(t){this._blurFilter.pixelSize=t},enumerable:!1,configurable:!0}),e.defaults={threshold:.5,bloomScale:1,brightness:1,kernels:null,blur:8,quality:4,pixelSize:1,resolution:i.settings.FILTER_RESOLUTION},e}(e.Filter),m=function(t){function e(e){void 0===e&&(e=8);var n=t.call(this,u,"varying vec2 vTextureCoord;\n\nuniform vec4 filterArea;\nuniform float pixelSize;\nuniform sampler2D uSampler;\n\nvec2 mapCoord( vec2 coord )\n{\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n\n    return coord;\n}\n\nvec2 unmapCoord( vec2 coord )\n{\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n\n    return coord;\n}\n\nvec2 pixelate(vec2 coord, vec2 size)\n{\n    return floor( coord / size ) * size;\n}\n\nvec2 getMod(vec2 coord, vec2 size)\n{\n    return mod( coord , size) / size;\n}\n\nfloat character(float n, vec2 p)\n{\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\n\n    if (clamp(p.x, 0.0, 4.0) == p.x)\n    {\n        if (clamp(p.y, 0.0, 4.0) == p.y)\n        {\n            if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\n        }\n    }\n    return 0.0;\n}\n\nvoid main()\n{\n    vec2 coord = mapCoord(vTextureCoord);\n\n    // get the rounded color..\n    vec2 pixCoord = pixelate(coord, vec2(pixelSize));\n    pixCoord = unmapCoord(pixCoord);\n\n    vec4 color = texture2D(uSampler, pixCoord);\n\n    // determine the character to use\n    float gray = (color.r + color.g + color.b) / 3.0;\n\n    float n =  65536.0;             // .\n    if (gray > 0.2) n = 65600.0;    // :\n    if (gray > 0.3) n = 332772.0;   // *\n    if (gray > 0.4) n = 15255086.0; // o\n    if (gray > 0.5) n = 23385164.0; // &\n    if (gray > 0.6) n = 15252014.0; // 8\n    if (gray > 0.7) n = 13199452.0; // @\n    if (gray > 0.8) n = 11512810.0; // #\n\n    // get the mod..\n    vec2 modd = getMod(coord, vec2(pixelSize));\n\n    gl_FragColor = color * character( n, vec2(-1.0) + modd * 2.0);\n\n}\n")||this;return n.size=e,n}return c(e,t),Object.defineProperty(e.prototype,"size",{get:function(){return this.uniforms.pixelSize},set:function(t){this.uniforms.pixelSize=t},enumerable:!1,configurable:!0}),e}(e.Filter),_=function(t){function e(e){var n=t.call(this,u,"precision mediump float;\n\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform float transformX;\nuniform float transformY;\nuniform vec3 lightColor;\nuniform float lightAlpha;\nuniform vec3 shadowColor;\nuniform float shadowAlpha;\n\nvoid main(void) {\n    vec2 transform = vec2(1.0 / filterArea) * vec2(transformX, transformY);\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    float light = texture2D(uSampler, vTextureCoord - transform).a;\n    float shadow = texture2D(uSampler, vTextureCoord + transform).a;\n\n    color.rgb = mix(color.rgb, lightColor, clamp((color.a - light) * lightAlpha, 0.0, 1.0));\n    color.rgb = mix(color.rgb, shadowColor, clamp((color.a - shadow) * shadowAlpha, 0.0, 1.0));\n    gl_FragColor = vec4(color.rgb * color.a, color.a);\n}\n")||this;return n._thickness=2,n._angle=0,n.uniforms.lightColor=new Float32Array(3),n.uniforms.shadowColor=new Float32Array(3),Object.assign(n,{rotation:45,thickness:2,lightColor:16777215,lightAlpha:.7,shadowColor:0,shadowAlpha:.7},e),n.padding=1,n}return c(e,t),e.prototype._updateTransform=function(){this.uniforms.transformX=this._thickness*Math.cos(this._angle),this.uniforms.transformY=this._thickness*Math.sin(this._angle)},Object.defineProperty(e.prototype,"rotation",{get:function(){return this._angle/n.DEG_TO_RAD},set:function(t){this._angle=t*n.DEG_TO_RAD,this._updateTransform()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thickness",{get:function(){return this._thickness},set:function(t){this._thickness=t,this._updateTransform()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lightColor",{get:function(){return r.rgb2hex(this.uniforms.lightColor)},set:function(t){r.hex2rgb(t,this.uniforms.lightColor)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lightAlpha",{get:function(){return this.uniforms.lightAlpha},set:function(t){this.uniforms.lightAlpha=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"shadowColor",{get:function(){return r.rgb2hex(this.uniforms.shadowColor)},set:function(t){r.hex2rgb(t,this.uniforms.shadowColor)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"shadowAlpha",{get:function(){return this.uniforms.shadowAlpha},set:function(t){this.uniforms.shadowAlpha=t},enumerable:!1,configurable:!0}),e}(e.Filter),y=function(t){function e(e,r,a,c){void 0===e&&(e=2),void 0===r&&(r=4),void 0===a&&(a=i.settings.FILTER_RESOLUTION),void 0===c&&(c=5);var h,u,d=t.call(this)||this;return"number"==typeof e?(h=e,u=e):e instanceof n.Point?(h=e.x,u=e.y):Array.isArray(e)&&(h=e[0],u=e[1]),d.blurXFilter=new l.BlurFilterPass(!0,h,r,a,c),d.blurYFilter=new l.BlurFilterPass(!1,u,r,a,c),d.blurYFilter.blendMode=s.BLEND_MODES.SCREEN,d.defaultFilter=new o.AlphaFilter,d}return c(e,t),e.prototype.apply=function(t,e,n,i){var r=t.getFilterTexture();this.defaultFilter.apply(t,e,n,i),this.blurXFilter.apply(t,e,r,1),this.blurYFilter.apply(t,r,n,0),t.returnFilterTexture(r)},Object.defineProperty(e.prototype,"blur",{get:function(){return this.blurXFilter.blur},set:function(t){this.blurXFilter.blur=this.blurYFilter.blur=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blurX",{get:function(){return this.blurXFilter.blur},set:function(t){this.blurXFilter.blur=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blurY",{get:function(){return this.blurYFilter.blur},set:function(t){this.blurYFilter.blur=t},enumerable:!1,configurable:!0}),e}(e.Filter),x=function(t){function e(n){var i=t.call(this,u,"uniform float radius;\nuniform float strength;\nuniform vec2 center;\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform vec2 dimensions;\n\nvoid main()\n{\n    vec2 coord = vTextureCoord * filterArea.xy;\n    coord -= center * dimensions.xy;\n    float distance = length(coord);\n    if (distance < radius) {\n        float percent = distance / radius;\n        if (strength > 0.0) {\n            coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\n        } else {\n            coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\n        }\n    }\n    coord += center * dimensions.xy;\n    coord /= filterArea.xy;\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\n    vec4 color = texture2D(uSampler, clampedCoord);\n    if (coord != clampedCoord) {\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\n    }\n\n    gl_FragColor = color;\n}\n")||this;return i.uniforms.dimensions=new Float32Array(2),Object.assign(i,e.defaults,n),i}return c(e,t),e.prototype.apply=function(t,e,n,i){var r=e.filterFrame,s=r.width,o=r.height;this.uniforms.dimensions[0]=s,this.uniforms.dimensions[1]=o,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"radius",{get:function(){return this.uniforms.radius},set:function(t){this.uniforms.radius=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"strength",{get:function(){return this.uniforms.strength},set:function(t){this.uniforms.strength=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"center",{get:function(){return this.uniforms.center},set:function(t){this.uniforms.center=t},enumerable:!1,configurable:!0}),e.defaults={center:[.5,.5],radius:100,strength:1},e}(e.Filter),I=function(t){function n(e,n,i){void 0===n&&(n=!1),void 0===i&&(i=1);var r=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform sampler2D colorMap;\nuniform float _mix;\nuniform float _size;\nuniform float _sliceSize;\nuniform float _slicePixelSize;\nuniform float _sliceInnerSize;\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord.xy);\n\n    vec4 adjusted;\n    if (color.a > 0.0) {\n        color.rgb /= color.a;\n        float innerWidth = _size - 1.0;\n        float zSlice0 = min(floor(color.b * innerWidth), innerWidth);\n        float zSlice1 = min(zSlice0 + 1.0, innerWidth);\n        float xOffset = _slicePixelSize * 0.5 + color.r * _sliceInnerSize;\n        float s0 = xOffset + (zSlice0 * _sliceSize);\n        float s1 = xOffset + (zSlice1 * _sliceSize);\n        float yOffset = _sliceSize * 0.5 + color.g * (1.0 - _sliceSize);\n        vec4 slice0Color = texture2D(colorMap, vec2(s0,yOffset));\n        vec4 slice1Color = texture2D(colorMap, vec2(s1,yOffset));\n        float zOffset = fract(color.b * innerWidth);\n        adjusted = mix(slice0Color, slice1Color, zOffset);\n\n        color.rgb *= color.a;\n    }\n    gl_FragColor = vec4(mix(color, adjusted, _mix).rgb, color.a);\n\n}")||this;return r.mix=1,r._size=0,r._sliceSize=0,r._slicePixelSize=0,r._sliceInnerSize=0,r._nearest=!1,r._scaleMode=null,r._colorMap=null,r._scaleMode=null,r.nearest=n,r.mix=i,r.colorMap=e,r}return c(n,t),n.prototype.apply=function(t,e,n,i){this.uniforms._mix=this.mix,t.applyFilter(this,e,n,i)},Object.defineProperty(n.prototype,"colorSize",{get:function(){return this._size},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"colorMap",{get:function(){return this._colorMap},set:function(t){var n;t&&(t instanceof e.Texture||(t=e.Texture.from(t)),(null===(n=t)||void 0===n?void 0:n.baseTexture)&&(t.baseTexture.scaleMode=this._scaleMode,t.baseTexture.mipmap=s.MIPMAP_MODES.OFF,this._size=t.height,this._sliceSize=1/this._size,this._slicePixelSize=this._sliceSize/this._size,this._sliceInnerSize=this._slicePixelSize*(this._size-1),this.uniforms._size=this._size,this.uniforms._sliceSize=this._sliceSize,this.uniforms._slicePixelSize=this._slicePixelSize,this.uniforms._sliceInnerSize=this._sliceInnerSize,this.uniforms.colorMap=t),this._colorMap=t)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"nearest",{get:function(){return this._nearest},set:function(t){this._nearest=t,this._scaleMode=t?s.SCALE_MODES.NEAREST:s.SCALE_MODES.LINEAR;var e=this._colorMap;e&&e.baseTexture&&(e.baseTexture._glTextures={},e.baseTexture.scaleMode=this._scaleMode,e.baseTexture.mipmap=s.MIPMAP_MODES.OFF,e._updateID++,e.baseTexture.emit("update",e.baseTexture))},enumerable:!1,configurable:!0}),n.prototype.updateColorMap=function(){var t=this._colorMap;t&&t.baseTexture&&(t._updateID++,t.baseTexture.emit("update",t.baseTexture),this.colorMap=t)},n.prototype.destroy=function(e){void 0===e&&(e=!1),this._colorMap&&this._colorMap.destroy(e),t.prototype.destroy.call(this)},n}(e.Filter),E=function(t){function e(e,n){void 0===e&&(e=0),void 0===n&&(n=1);var i=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec3 color;\nuniform float alpha;\n\nvoid main(void) {\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\n    gl_FragColor = vec4(mix(currentColor.rgb, color.rgb, currentColor.a * alpha), currentColor.a);\n}\n")||this;return i._color=0,i._alpha=1,i.uniforms.color=new Float32Array(3),i.color=e,i.alpha=n,i}return c(e,t),Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(t){var e=this.uniforms.color;"number"==typeof t?(r.hex2rgb(t,e),this._color=t):(e[0]=t[0],e[1]=t[1],e[2]=t[2],this._color=r.rgb2hex(e))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"alpha",{get:function(){return this._alpha},set:function(t){this.uniforms.alpha=t,this._alpha=t},enumerable:!1,configurable:!0}),e}(e.Filter),C=function(t){function e(e,n,i){void 0===e&&(e=16711680),void 0===n&&(n=0),void 0===i&&(i=.4);var r=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec3 originalColor;\nuniform vec3 newColor;\nuniform float epsilon;\nvoid main(void) {\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\n    vec3 colorDiff = originalColor - (currentColor.rgb / max(currentColor.a, 0.0000000001));\n    float colorDistance = length(colorDiff);\n    float doReplace = step(colorDistance, epsilon);\n    gl_FragColor = vec4(mix(currentColor.rgb, (newColor + colorDiff) * currentColor.a, doReplace), currentColor.a);\n}\n")||this;return r._originalColor=16711680,r._newColor=0,r.uniforms.originalColor=new Float32Array(3),r.uniforms.newColor=new Float32Array(3),r.originalColor=e,r.newColor=n,r.epsilon=i,r}return c(e,t),Object.defineProperty(e.prototype,"originalColor",{get:function(){return this._originalColor},set:function(t){var e=this.uniforms.originalColor;"number"==typeof t?(r.hex2rgb(t,e),this._originalColor=t):(e[0]=t[0],e[1]=t[1],e[2]=t[2],this._originalColor=r.rgb2hex(e))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"newColor",{get:function(){return this._newColor},set:function(t){var e=this.uniforms.newColor;"number"==typeof t?(r.hex2rgb(t,e),this._newColor=t):(e[0]=t[0],e[1]=t[1],e[2]=t[2],this._newColor=r.rgb2hex(e))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"epsilon",{get:function(){return this.uniforms.epsilon},set:function(t){this.uniforms.epsilon=t},enumerable:!1,configurable:!0}),e}(e.Filter),S=function(t){function e(e,n,i){void 0===n&&(n=200),void 0===i&&(i=200);var r=t.call(this,u,"precision mediump float;\n\nvarying mediump vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec2 texelSize;\nuniform float matrix[9];\n\nvoid main(void)\n{\n   vec4 c11 = texture2D(uSampler, vTextureCoord - texelSize); // top left\n   vec4 c12 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - texelSize.y)); // top center\n   vec4 c13 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y - texelSize.y)); // top right\n\n   vec4 c21 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y)); // mid left\n   vec4 c22 = texture2D(uSampler, vTextureCoord); // mid center\n   vec4 c23 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y)); // mid right\n\n   vec4 c31 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y + texelSize.y)); // bottom left\n   vec4 c32 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + texelSize.y)); // bottom center\n   vec4 c33 = texture2D(uSampler, vTextureCoord + texelSize); // bottom right\n\n   gl_FragColor =\n       c11 * matrix[0] + c12 * matrix[1] + c13 * matrix[2] +\n       c21 * matrix[3] + c22 * matrix[4] + c23 * matrix[5] +\n       c31 * matrix[6] + c32 * matrix[7] + c33 * matrix[8];\n\n   gl_FragColor.a = c22.a;\n}\n")||this;return r.uniforms.texelSize=new Float32Array(2),r.uniforms.matrix=new Float32Array(9),void 0!==e&&(r.matrix=e),r.width=n,r.height=i,r}return c(e,t),Object.defineProperty(e.prototype,"matrix",{get:function(){return this.uniforms.matrix},set:function(t){var e=this;t.forEach((function(t,n){e.uniforms.matrix[n]=t}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"width",{get:function(){return 1/this.uniforms.texelSize[0]},set:function(t){this.uniforms.texelSize[0]=1/t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return 1/this.uniforms.texelSize[1]},set:function(t){this.uniforms.texelSize[1]=1/t},enumerable:!1,configurable:!0}),e}(e.Filter),w=function(t){function e(){return t.call(this,u,"precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\n\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\n    if (lum < 1.00)\n    {\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.75)\n    {\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.50)\n    {\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.3)\n    {\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n}\n")||this}return c(e,t),e}(e.Filter),N=function(t){function e(n){var i=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\nuniform vec2 dimensions;\n\nconst float SQRT_2 = 1.414213;\n\nconst float light = 1.0;\n\nuniform float curvature;\nuniform float lineWidth;\nuniform float lineContrast;\nuniform bool verticalLine;\nuniform float noise;\nuniform float noiseSize;\n\nuniform float vignetting;\nuniform float vignettingAlpha;\nuniform float vignettingBlur;\n\nuniform float seed;\nuniform float time;\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main(void)\n{\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\n    vec2 dir = vec2(vTextureCoord.xy - vec2(0.5, 0.5)) * filterArea.xy / dimensions;\n\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n    vec3 rgb = gl_FragColor.rgb;\n\n    if (noise > 0.0 && noiseSize > 0.0)\n    {\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\n        rgb += _noise * noise;\n    }\n\n    if (lineWidth > 0.0)\n    {\n        float _c = curvature > 0. ? curvature : 1.;\n        float k = curvature > 0. ?(length(dir * dir) * 0.25 * _c * _c + 0.935 * _c) : 1.;\n        vec2 uv = dir * k;\n\n        float v = (verticalLine ? uv.x * dimensions.x : uv.y * dimensions.y) * min(1.0, 2.0 / lineWidth ) / _c;\n        float j = 1. + cos(v * 1.2 - time) * 0.5 * lineContrast;\n        rgb *= j;\n        float segment = verticalLine ? mod((dir.x + .5) * dimensions.x, 4.) : mod((dir.y + .5) * dimensions.y, 4.);\n        rgb *= 0.99 + ceil(segment) * 0.015;\n    }\n\n    if (vignetting > 0.0)\n    {\n        float outter = SQRT_2 - vignetting * SQRT_2;\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\n        rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\n    }\n\n    gl_FragColor.rgb = rgb;\n}\n")||this;return i.time=0,i.seed=0,i.uniforms.dimensions=new Float32Array(2),Object.assign(i,e.defaults,n),i}return c(e,t),e.prototype.apply=function(t,e,n,i){var r=e.filterFrame,s=r.width,o=r.height;this.uniforms.dimensions[0]=s,this.uniforms.dimensions[1]=o,this.uniforms.seed=this.seed,this.uniforms.time=this.time,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"curvature",{get:function(){return this.uniforms.curvature},set:function(t){this.uniforms.curvature=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lineWidth",{get:function(){return this.uniforms.lineWidth},set:function(t){this.uniforms.lineWidth=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lineContrast",{get:function(){return this.uniforms.lineContrast},set:function(t){this.uniforms.lineContrast=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"verticalLine",{get:function(){return this.uniforms.verticalLine},set:function(t){this.uniforms.verticalLine=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"noise",{get:function(){return this.uniforms.noise},set:function(t){this.uniforms.noise=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"noiseSize",{get:function(){return this.uniforms.noiseSize},set:function(t){this.uniforms.noiseSize=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"vignetting",{get:function(){return this.uniforms.vignetting},set:function(t){this.uniforms.vignetting=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"vignettingAlpha",{get:function(){return this.uniforms.vignettingAlpha},set:function(t){this.uniforms.vignettingAlpha=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"vignettingBlur",{get:function(){return this.uniforms.vignettingBlur},set:function(t){this.uniforms.vignettingBlur=t},enumerable:!1,configurable:!0}),e.defaults={curvature:1,lineWidth:1,lineContrast:.25,verticalLine:!1,noise:0,noiseSize:1,seed:0,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3,time:0},e}(e.Filter),T=function(t){function e(e,n){void 0===e&&(e=1),void 0===n&&(n=5);var i=t.call(this,u,"precision mediump float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;\n\nuniform float angle;\nuniform float scale;\n\nfloat pattern()\n{\n   float s = sin(angle), c = cos(angle);\n   vec2 tex = vTextureCoord * filterArea.xy;\n   vec2 point = vec2(\n       c * tex.x - s * tex.y,\n       s * tex.x + c * tex.y\n   ) * scale;\n   return (sin(point.x) * sin(point.y)) * 4.0;\n}\n\nvoid main()\n{\n   vec4 color = texture2D(uSampler, vTextureCoord);\n   float average = (color.r + color.g + color.b) / 3.0;\n   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\n}\n")||this;return i.scale=e,i.angle=n,i}return c(e,t),Object.defineProperty(e.prototype,"scale",{get:function(){return this.uniforms.scale},set:function(t){this.uniforms.scale=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"angle",{get:function(){return this.uniforms.angle},set:function(t){this.uniforms.angle=t},enumerable:!1,configurable:!0}),e}(e.Filter),b=function(t){function s(r){var o=t.call(this)||this;o.angle=45,o._distance=5,o._resolution=i.settings.FILTER_RESOLUTION;var l=r?h(h({},s.defaults),r):s.defaults,a=l.kernels,c=l.blur,d=l.quality,g=l.pixelSize,p=l.resolution;o._tintFilter=new e.Filter(u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float alpha;\nuniform vec3 color;\n\nuniform vec2 shift;\nuniform vec4 inputSize;\n\nvoid main(void){\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\n\n    // Premultiply alpha\n    sample.rgb = color.rgb * sample.a;\n\n    // alpha user alpha\n    sample *= alpha;\n\n    gl_FragColor = sample;\n}"),o._tintFilter.uniforms.color=new Float32Array(4),o._tintFilter.uniforms.shift=new n.Point,o._tintFilter.resolution=p,o._blurFilter=a?new f(a):new f(c,d),o.pixelSize=g,o.resolution=p;var m=l.shadowOnly,_=l.rotation,y=l.distance,x=l.alpha,I=l.color;return o.shadowOnly=m,o.rotation=_,o.distance=y,o.alpha=x,o.color=I,o._updatePadding(),o}return c(s,t),s.prototype.apply=function(t,e,n,i){var r=t.getFilterTexture();this._tintFilter.apply(t,e,r,1),this._blurFilter.apply(t,r,n,i),!0!==this.shadowOnly&&t.applyFilter(this,e,n,0),t.returnFilterTexture(r)},s.prototype._updatePadding=function(){this.padding=this.distance+2*this.blur},s.prototype._updateShift=function(){this._tintFilter.uniforms.shift.set(this.distance*Math.cos(this.angle),this.distance*Math.sin(this.angle))},Object.defineProperty(s.prototype,"resolution",{get:function(){return this._resolution},set:function(t){this._resolution=t,this._tintFilter&&(this._tintFilter.resolution=t),this._blurFilter&&(this._blurFilter.resolution=t)},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"distance",{get:function(){return this._distance},set:function(t){this._distance=t,this._updatePadding(),this._updateShift()},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"rotation",{get:function(){return this.angle/n.DEG_TO_RAD},set:function(t){this.angle=t*n.DEG_TO_RAD,this._updateShift()},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"alpha",{get:function(){return this._tintFilter.uniforms.alpha},set:function(t){this._tintFilter.uniforms.alpha=t},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"color",{get:function(){return r.rgb2hex(this._tintFilter.uniforms.color)},set:function(t){r.hex2rgb(t,this._tintFilter.uniforms.color)},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"kernels",{get:function(){return this._blurFilter.kernels},set:function(t){this._blurFilter.kernels=t},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"blur",{get:function(){return this._blurFilter.blur},set:function(t){this._blurFilter.blur=t,this._updatePadding()},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"quality",{get:function(){return this._blurFilter.quality},set:function(t){this._blurFilter.quality=t},enumerable:!1,configurable:!0}),Object.defineProperty(s.prototype,"pixelSize",{get:function(){return this._blurFilter.pixelSize},set:function(t){this._blurFilter.pixelSize=t},enumerable:!1,configurable:!0}),s.defaults={rotation:45,distance:5,color:0,alpha:.5,shadowOnly:!1,kernels:null,blur:2,quality:3,pixelSize:1,resolution:i.settings.FILTER_RESOLUTION},s}(e.Filter),v=function(t){function e(e){void 0===e&&(e=5);var n=t.call(this,u,"precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float strength;\nuniform vec4 filterArea;\n\n\nvoid main(void)\n{\n\tvec2 onePixel = vec2(1.0 / filterArea);\n\n\tvec4 color;\n\n\tcolor.rgb = vec3(0.5);\n\n\tcolor -= texture2D(uSampler, vTextureCoord - onePixel) * strength;\n\tcolor += texture2D(uSampler, vTextureCoord + onePixel) * strength;\n\n\tcolor.rgb = vec3((color.r + color.g + color.b) / 3.0);\n\n\tfloat alpha = texture2D(uSampler, vTextureCoord).a;\n\n\tgl_FragColor = vec4(color.rgb * alpha, alpha);\n}\n")||this;return n.strength=e,n}return c(e,t),Object.defineProperty(e.prototype,"strength",{get:function(){return this.uniforms.strength},set:function(t){this.uniforms.strength=t},enumerable:!1,configurable:!0}),e}(e.Filter),O=function(t){function i(n){var r=t.call(this,u,"// precision highp float;\n\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform vec2 dimensions;\nuniform float aspect;\n\nuniform sampler2D displacementMap;\nuniform float offset;\nuniform float sinDir;\nuniform float cosDir;\nuniform int fillMode;\n\nuniform float seed;\nuniform vec2 red;\nuniform vec2 green;\nuniform vec2 blue;\n\nconst int TRANSPARENT = 0;\nconst int ORIGINAL = 1;\nconst int LOOP = 2;\nconst int CLAMP = 3;\nconst int MIRROR = 4;\n\nvoid main(void)\n{\n    vec2 coord = (vTextureCoord * filterArea.xy) / dimensions;\n\n    if (coord.x > 1.0 || coord.y > 1.0) {\n        return;\n    }\n\n    float cx = coord.x - 0.5;\n    float cy = (coord.y - 0.5) * aspect;\n    float ny = (-sinDir * cx + cosDir * cy) / aspect + 0.5;\n\n    // displacementMap: repeat\n    // ny = ny > 1.0 ? ny - 1.0 : (ny < 0.0 ? 1.0 + ny : ny);\n\n    // displacementMap: mirror\n    ny = ny > 1.0 ? 2.0 - ny : (ny < 0.0 ? -ny : ny);\n\n    vec4 dc = texture2D(displacementMap, vec2(0.5, ny));\n\n    float displacement = (dc.r - dc.g) * (offset / filterArea.x);\n\n    coord = vTextureCoord + vec2(cosDir * displacement, sinDir * displacement * aspect);\n\n    if (fillMode == CLAMP) {\n        coord = clamp(coord, filterClamp.xy, filterClamp.zw);\n    } else {\n        if( coord.x > filterClamp.z ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.x -= filterClamp.z;\n            } else if (fillMode == MIRROR) {\n                coord.x = filterClamp.z * 2.0 - coord.x;\n            }\n        } else if( coord.x < filterClamp.x ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.x += filterClamp.z;\n            } else if (fillMode == MIRROR) {\n                coord.x *= -filterClamp.z;\n            }\n        }\n\n        if( coord.y > filterClamp.w ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.y -= filterClamp.w;\n            } else if (fillMode == MIRROR) {\n                coord.y = filterClamp.w * 2.0 - coord.y;\n            }\n        } else if( coord.y < filterClamp.y ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.y += filterClamp.w;\n            } else if (fillMode == MIRROR) {\n                coord.y *= -filterClamp.w;\n            }\n        }\n    }\n\n    gl_FragColor.r = texture2D(uSampler, coord + red * (1.0 - seed * 0.4) / filterArea.xy).r;\n    gl_FragColor.g = texture2D(uSampler, coord + green * (1.0 - seed * 0.3) / filterArea.xy).g;\n    gl_FragColor.b = texture2D(uSampler, coord + blue * (1.0 - seed * 0.2) / filterArea.xy).b;\n    gl_FragColor.a = texture2D(uSampler, coord).a;\n}\n")||this;return r.offset=100,r.fillMode=i.TRANSPARENT,r.average=!1,r.seed=0,r.minSize=8,r.sampleSize=512,r._slices=0,r._offsets=new Float32Array(1),r._sizes=new Float32Array(1),r._direction=-1,r.uniforms.dimensions=new Float32Array(2),r._canvas=document.createElement("canvas"),r._canvas.width=4,r._canvas.height=r.sampleSize,r.texture=e.Texture.from(r._canvas,{scaleMode:s.SCALE_MODES.NEAREST}),Object.assign(r,i.defaults,n),r}return c(i,t),i.prototype.apply=function(t,e,n,i){var r=e.filterFrame,s=r.width,o=r.height;this.uniforms.dimensions[0]=s,this.uniforms.dimensions[1]=o,this.uniforms.aspect=o/s,this.uniforms.seed=this.seed,this.uniforms.offset=this.offset,this.uniforms.fillMode=this.fillMode,t.applyFilter(this,e,n,i)},i.prototype._randomizeSizes=function(){var t=this._sizes,e=this._slices-1,n=this.sampleSize,i=Math.min(this.minSize/n,.9/this._slices);if(this.average){for(var r=this._slices,s=1,o=0;o<e;o++){var l=s/(r-o),a=Math.max(l*(1-.6*Math.random()),i);t[o]=a,s-=a}t[e]=s}else{s=1;var c=Math.sqrt(1/this._slices);for(o=0;o<e;o++)a=Math.max(c*s*Math.random(),i),t[o]=a,s-=a;t[e]=s}this.shuffle()},i.prototype.shuffle=function(){for(var t=this._sizes,e=this._slices-1;e>0;e--){var n=Math.random()*e>>0,i=t[e];t[e]=t[n],t[n]=i}},i.prototype._randomizeOffsets=function(){for(var t=0;t<this._slices;t++)this._offsets[t]=Math.random()*(Math.random()<.5?-1:1)},i.prototype.refresh=function(){this._randomizeSizes(),this._randomizeOffsets(),this.redraw()},i.prototype.redraw=function(){var t,e=this.sampleSize,n=this.texture,i=this._canvas.getContext("2d");i.clearRect(0,0,8,e);for(var r=0,s=0;s<this._slices;s++){t=Math.floor(256*this._offsets[s]);var o=this._sizes[s]*e,l=t>0?t:0,a=t<0?-t:0;i.fillStyle="rgba("+l+", "+a+", 0, 1)",i.fillRect(0,r>>0,e,o+1>>0),r+=o}n.baseTexture.update(),this.uniforms.displacementMap=n},Object.defineProperty(i.prototype,"sizes",{get:function(){return this._sizes},set:function(t){for(var e=Math.min(this._slices,t.length),n=0;n<e;n++)this._sizes[n]=t[n]},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"offsets",{get:function(){return this._offsets},set:function(t){for(var e=Math.min(this._slices,t.length),n=0;n<e;n++)this._offsets[n]=t[n]},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"slices",{get:function(){return this._slices},set:function(t){this._slices!==t&&(this._slices=t,this.uniforms.slices=t,this._sizes=this.uniforms.slicesWidth=new Float32Array(t),this._offsets=this.uniforms.slicesOffset=new Float32Array(t),this.refresh())},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"direction",{get:function(){return this._direction},set:function(t){if(this._direction!==t){this._direction=t;var e=t*n.DEG_TO_RAD;this.uniforms.sinDir=Math.sin(e),this.uniforms.cosDir=Math.cos(e)}},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"red",{get:function(){return this.uniforms.red},set:function(t){this.uniforms.red=t},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"green",{get:function(){return this.uniforms.green},set:function(t){this.uniforms.green=t},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,"blue",{get:function(){return this.uniforms.blue},set:function(t){this.uniforms.blue=t},enumerable:!1,configurable:!0}),i.prototype.destroy=function(){var t;null===(t=this.texture)||void 0===t||t.destroy(!0),this.texture=this._canvas=this.red=this.green=this.blue=this._sizes=this._offsets=null},i.defaults={slices:5,offset:100,direction:0,fillMode:0,average:!1,seed:0,red:[0,0],green:[0,0],blue:[0,0],minSize:8,sampleSize:512},i.TRANSPARENT=0,i.ORIGINAL=1,i.LOOP=2,i.CLAMP=3,i.MIRROR=4,i}(e.Filter),R=function(t){function e(n){var i=this,r=Object.assign({},e.defaults,n),s=r.outerStrength,o=r.innerStrength,l=r.color,a=r.knockout,c=r.quality,h=Math.round(r.distance);return(i=t.call(this,u,"varying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nuniform float outerStrength;\nuniform float innerStrength;\n\nuniform vec4 glowColor;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform bool knockout;\n\nconst float PI = 3.14159265358979323846264;\n\nconst float DIST = __DIST__;\nconst float ANGLE_STEP_SIZE = min(__ANGLE_STEP_SIZE__, PI * 2.0);\nconst float ANGLE_STEP_NUM = ceil(PI * 2.0 / ANGLE_STEP_SIZE);\n\nconst float MAX_TOTAL_ALPHA = ANGLE_STEP_NUM * DIST * (DIST + 1.0) / 2.0;\n\nvoid main(void) {\n    vec2 px = vec2(1.0 / filterArea.x, 1.0 / filterArea.y);\n\n    float totalAlpha = 0.0;\n\n    vec2 direction;\n    vec2 displaced;\n    vec4 curColor;\n\n    for (float angle = 0.0; angle < PI * 2.0; angle += ANGLE_STEP_SIZE) {\n       direction = vec2(cos(angle), sin(angle)) * px;\n\n       for (float curDistance = 0.0; curDistance < DIST; curDistance++) {\n           displaced = clamp(vTextureCoord + direction * \n                   (curDistance + 1.0), filterClamp.xy, filterClamp.zw);\n\n           curColor = texture2D(uSampler, displaced);\n\n           totalAlpha += (DIST - curDistance) * curColor.a;\n       }\n    }\n    \n    curColor = texture2D(uSampler, vTextureCoord);\n\n    float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\n\n    float innerGlowAlpha = (1.0 - alphaRatio) * innerStrength * curColor.a;\n    float innerGlowStrength = min(1.0, innerGlowAlpha);\n    \n    vec4 innerColor = mix(curColor, glowColor, innerGlowStrength);\n\n    float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\n    float outerGlowStrength = min(1.0 - innerColor.a, outerGlowAlpha);\n\n    vec4 outerGlowColor = outerGlowStrength * glowColor.rgba;\n    \n    if (knockout) {\n      float resultAlpha = outerGlowAlpha + innerGlowAlpha;\n      gl_FragColor = vec4(glowColor.rgb * resultAlpha, resultAlpha);\n    }\n    else {\n      gl_FragColor = innerColor + outerGlowColor;\n    }\n}\n".replace(/__ANGLE_STEP_SIZE__/gi,""+(1/c/h).toFixed(7)).replace(/__DIST__/gi,h.toFixed(0)+".0"))||this).uniforms.glowColor=new Float32Array([0,0,0,1]),Object.assign(i,{color:l,outerStrength:s,innerStrength:o,padding:h,knockout:a}),i}return c(e,t),Object.defineProperty(e.prototype,"color",{get:function(){return r.rgb2hex(this.uniforms.glowColor)},set:function(t){r.hex2rgb(t,this.uniforms.glowColor)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"outerStrength",{get:function(){return this.uniforms.outerStrength},set:function(t){this.uniforms.outerStrength=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"innerStrength",{get:function(){return this.uniforms.innerStrength},set:function(t){this.uniforms.innerStrength=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"knockout",{get:function(){return this.uniforms.knockout},set:function(t){this.uniforms.knockout=t},enumerable:!1,configurable:!0}),e.defaults={distance:10,outerStrength:4,innerStrength:0,color:16777215,quality:.1,knockout:!1},e}(e.Filter),L=function(t){function e(i){var r=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec2 dimensions;\n\nuniform vec2 light;\nuniform bool parallel;\nuniform float aspect;\n\nuniform float gain;\nuniform float lacunarity;\nuniform float time;\nuniform float alpha;\n\n${perlin}\n\nvoid main(void) {\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\n\n    float d;\n\n    if (parallel) {\n        float _cos = light.x;\n        float _sin = light.y;\n        d = (_cos * coord.x) + (_sin * coord.y * aspect);\n    } else {\n        float dx = coord.x - light.x / dimensions.x;\n        float dy = (coord.y - light.y / dimensions.y) * aspect;\n        float dis = sqrt(dx * dx + dy * dy) + 0.00001;\n        d = dy / dis;\n    }\n\n    vec3 dir = vec3(d, d, 0.0);\n\n    float noise = turb(dir + vec3(time, 0.0, 62.1 + time) * 0.05, vec3(480.0, 320.0, 480.0), lacunarity, gain);\n    noise = mix(noise, 0.0, 0.3);\n    //fade vertically.\n    vec4 mist = vec4(noise, noise, noise, 1.0) * (1.0 - coord.y);\n    mist.a = 1.0;\n    // apply user alpha\n    mist *= alpha;\n\n    gl_FragColor = texture2D(uSampler, vTextureCoord) + mist;\n\n}\n".replace("${perlin}","vec3 mod289(vec3 x)\n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec4 mod289(vec4 x)\n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec4 permute(vec4 x)\n{\n    return mod289(((x * 34.0) + 1.0) * x);\n}\nvec4 taylorInvSqrt(vec4 r)\n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\nvec3 fade(vec3 t)\n{\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n    vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n    Pi0 = mod289(Pi0);\n    Pi1 = mod289(Pi1);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n    vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n    vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n    vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n    vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n    vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n    vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n    vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n    vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n    return 2.2 * n_xyz;\n}\nfloat turb(vec3 P, vec3 rep, float lacunarity, float gain)\n{\n    float sum = 0.0;\n    float sc = 1.0;\n    float totalgain = 1.0;\n    for (float i = 0.0; i < 6.0; i++)\n    {\n        sum += totalgain * pnoise(P * sc, rep);\n        sc *= lacunarity;\n        totalgain *= gain;\n    }\n    return abs(sum);\n}\n"))||this;r.parallel=!0,r.time=0,r._angle=0,r.uniforms.dimensions=new Float32Array(2);var s=Object.assign(e.defaults,i);return r._angleLight=new n.Point,r.angle=s.angle,r.gain=s.gain,r.lacunarity=s.lacunarity,r.alpha=s.alpha,r.parallel=s.parallel,r.center=s.center,r.time=s.time,r}return c(e,t),e.prototype.apply=function(t,e,n,i){var r=e.filterFrame,s=r.width,o=r.height;this.uniforms.light=this.parallel?this._angleLight:this.center,this.uniforms.parallel=this.parallel,this.uniforms.dimensions[0]=s,this.uniforms.dimensions[1]=o,this.uniforms.aspect=o/s,this.uniforms.time=this.time,this.uniforms.alpha=this.alpha,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"angle",{get:function(){return this._angle},set:function(t){this._angle=t;var e=t*n.DEG_TO_RAD;this._angleLight.x=Math.cos(e),this._angleLight.y=Math.sin(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"gain",{get:function(){return this.uniforms.gain},set:function(t){this.uniforms.gain=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"lacunarity",{get:function(){return this.uniforms.lacunarity},set:function(t){this.uniforms.lacunarity=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"alpha",{get:function(){return this.uniforms.alpha},set:function(t){this.uniforms.alpha=t},enumerable:!1,configurable:!0}),e.defaults={angle:30,gain:.5,lacunarity:2.5,time:0,parallel:!0,center:[0,0],alpha:1},e}(e.Filter),D=function(t){function e(e,i,r){void 0===e&&(e=[0,0]),void 0===i&&(i=5),void 0===r&&(r=0);var s=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform vec2 uVelocity;\nuniform int uKernelSize;\nuniform float uOffset;\n\nconst int MAX_KERNEL_SIZE = 2048;\n\n// Notice:\n// the perfect way:\n//    int kernelSize = min(uKernelSize, MAX_KERNELSIZE);\n// BUT in real use-case , uKernelSize < MAX_KERNELSIZE almost always.\n// So use uKernelSize directly.\n\nvoid main(void)\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    if (uKernelSize == 0)\n    {\n        gl_FragColor = color;\n        return;\n    }\n\n    vec2 velocity = uVelocity / filterArea.xy;\n    float offset = -uOffset / length(uVelocity) - 0.5;\n    int k = uKernelSize - 1;\n\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\n        if (i == k) {\n            break;\n        }\n        vec2 bias = velocity * (float(i) / float(k) + offset);\n        color += texture2D(uSampler, vTextureCoord + bias);\n    }\n    gl_FragColor = color / float(uKernelSize);\n}\n")||this;return s.kernelSize=5,s.uniforms.uVelocity=new Float32Array(2),s._velocity=new n.ObservablePoint(s.velocityChanged,s),s.setVelocity(e),s.kernelSize=i,s.offset=r,s}return c(e,t),e.prototype.apply=function(t,e,n,i){var r=this.velocity,s=r.x,o=r.y;this.uniforms.uKernelSize=0!==s||0!==o?this.kernelSize:0,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"velocity",{get:function(){return this._velocity},set:function(t){this.setVelocity(t)},enumerable:!1,configurable:!0}),e.prototype.setVelocity=function(t){if(Array.isArray(t)){var e=t[0],n=t[1];this._velocity.set(e,n)}else this._velocity.copyFrom(t)},e.prototype.velocityChanged=function(){this.uniforms.uVelocity[0]=this._velocity.x,this.uniforms.uVelocity[1]=this._velocity.y,this.padding=1+(Math.max(Math.abs(this._velocity.x),Math.abs(this._velocity.y))>>0)},Object.defineProperty(e.prototype,"offset",{get:function(){return this.uniforms.uOffset},set:function(t){this.uniforms.uOffset=t},enumerable:!1,configurable:!0}),e}(e.Filter),P=function(t){function e(e,n,i){void 0===n&&(n=.05),void 0===i&&(i=e.length);var r=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform float epsilon;\n\nconst int MAX_COLORS = %maxColors%;\n\nuniform vec3 originalColors[MAX_COLORS];\nuniform vec3 targetColors[MAX_COLORS];\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n\n    float alpha = gl_FragColor.a;\n    if (alpha < 0.0001)\n    {\n      return;\n    }\n\n    vec3 color = gl_FragColor.rgb / alpha;\n\n    for(int i = 0; i < MAX_COLORS; i++)\n    {\n      vec3 origColor = originalColors[i];\n      if (origColor.r < 0.0)\n      {\n        break;\n      }\n      vec3 colorDiff = origColor - color;\n      if (length(colorDiff) < epsilon)\n      {\n        vec3 targetColor = targetColors[i];\n        gl_FragColor = vec4((targetColor + colorDiff) * alpha, alpha);\n        return;\n      }\n    }\n}\n".replace(/%maxColors%/g,i.toFixed(0)))||this;return r._replacements=[],r._maxColors=0,r.epsilon=n,r._maxColors=i,r.uniforms.originalColors=new Float32Array(3*i),r.uniforms.targetColors=new Float32Array(3*i),r.replacements=e,r}return c(e,t),Object.defineProperty(e.prototype,"replacements",{get:function(){return this._replacements},set:function(t){var e=this.uniforms.originalColors,n=this.uniforms.targetColors,i=t.length;if(i>this._maxColors)throw new Error("Length of replacements ("+i+") exceeds the maximum colors length ("+this._maxColors+")");e[3*i]=-1;for(var s=0;s<i;s++){var o=t[s],l=o[0];"number"==typeof l?l=r.hex2rgb(l):o[0]=r.rgb2hex(l),e[3*s]=l[0],e[3*s+1]=l[1],e[3*s+2]=l[2];var a=o[1];"number"==typeof a?a=r.hex2rgb(a):o[1]=r.rgb2hex(a),n[3*s]=a[0],n[3*s+1]=a[1],n[3*s+2]=a[2]}this._replacements=t},enumerable:!1,configurable:!0}),e.prototype.refresh=function(){this.replacements=this._replacements},Object.defineProperty(e.prototype,"maxColors",{get:function(){return this._maxColors},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"epsilon",{get:function(){return this.uniforms.epsilon},set:function(t){this.uniforms.epsilon=t},enumerable:!1,configurable:!0}),e}(e.Filter),A=function(t){function e(n,i){void 0===i&&(i=0);var r=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec2 dimensions;\n\nuniform float sepia;\nuniform float noise;\nuniform float noiseSize;\nuniform float scratch;\nuniform float scratchDensity;\nuniform float scratchWidth;\nuniform float vignetting;\nuniform float vignettingAlpha;\nuniform float vignettingBlur;\nuniform float seed;\n\nconst float SQRT_2 = 1.414213;\nconst vec3 SEPIA_RGB = vec3(112.0 / 255.0, 66.0 / 255.0, 20.0 / 255.0);\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 Overlay(vec3 src, vec3 dst)\n{\n    // if (dst <= 0.5) then: 2 * src * dst\n    // if (dst > 0.5) then: 1 - 2 * (1 - dst) * (1 - src)\n    return vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\n                (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\n                (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)));\n}\n\n\nvoid main()\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n    vec3 color = gl_FragColor.rgb;\n\n    if (sepia > 0.0)\n    {\n        float gray = (color.x + color.y + color.z) / 3.0;\n        vec3 grayscale = vec3(gray);\n\n        color = Overlay(SEPIA_RGB, grayscale);\n\n        color = grayscale + sepia * (color - grayscale);\n    }\n\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\n\n    if (vignetting > 0.0)\n    {\n        float outter = SQRT_2 - vignetting * SQRT_2;\n        vec2 dir = vec2(vec2(0.5, 0.5) - coord);\n        dir.y *= dimensions.y / dimensions.x;\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\n        color.rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\n    }\n\n    if (scratchDensity > seed && scratch != 0.0)\n    {\n        float phase = seed * 256.0;\n        float s = mod(floor(phase), 2.0);\n        float dist = 1.0 / scratchDensity;\n        float d = distance(coord, vec2(seed * dist, abs(s - seed * dist)));\n        if (d < seed * 0.6 + 0.4)\n        {\n            highp float period = scratchDensity * 10.0;\n\n            float xx = coord.x * period + phase;\n            float aa = abs(mod(xx, 0.5) * 4.0);\n            float bb = mod(floor(xx / 0.5), 2.0);\n            float yy = (1.0 - bb) * aa + bb * (2.0 - aa);\n\n            float kk = 2.0 * period;\n            float dw = scratchWidth / dimensions.x * (0.75 + seed);\n            float dh = dw * kk;\n\n            float tine = (yy - (2.0 - dh));\n\n            if (tine > 0.0) {\n                float _sign = sign(scratch);\n\n                tine = s * tine / period + scratch + 0.1;\n                tine = clamp(tine + 1.0, 0.5 + _sign * 0.5, 1.5 + _sign * 0.5);\n\n                color.rgb *= tine;\n            }\n        }\n    }\n\n    if (noise > 0.0 && noiseSize > 0.0)\n    {\n        vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\n        // vec2 d = pixelCoord * noiseSize * vec2(1024.0 + seed * 512.0, 1024.0 - seed * 512.0);\n        // float _noise = snoise(d) * 0.5;\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\n        color += _noise * noise;\n    }\n\n    gl_FragColor.rgb = color;\n}\n")||this;return r.seed=0,r.uniforms.dimensions=new Float32Array(2),"number"==typeof n?(r.seed=n,n=void 0):r.seed=i,Object.assign(r,e.defaults,n),r}return c(e,t),e.prototype.apply=function(t,e,n,i){var r,s;this.uniforms.dimensions[0]=null===(r=e.filterFrame)||void 0===r?void 0:r.width,this.uniforms.dimensions[1]=null===(s=e.filterFrame)||void 0===s?void 0:s.height,this.uniforms.seed=this.seed,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"sepia",{get:function(){return this.uniforms.sepia},set:function(t){this.uniforms.sepia=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"noise",{get:function(){return this.uniforms.noise},set:function(t){this.uniforms.noise=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"noiseSize",{get:function(){return this.uniforms.noiseSize},set:function(t){this.uniforms.noiseSize=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"scratch",{get:function(){return this.uniforms.scratch},set:function(t){this.uniforms.scratch=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"scratchDensity",{get:function(){return this.uniforms.scratchDensity},set:function(t){this.uniforms.scratchDensity=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"scratchWidth",{get:function(){return this.uniforms.scratchWidth},set:function(t){this.uniforms.scratchWidth=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"vignetting",{get:function(){return this.uniforms.vignetting},set:function(t){this.uniforms.vignetting=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"vignettingAlpha",{get:function(){return this.uniforms.vignettingAlpha},set:function(t){this.uniforms.vignettingAlpha=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"vignettingBlur",{get:function(){return this.uniforms.vignettingBlur},set:function(t){this.uniforms.vignettingBlur=t},enumerable:!1,configurable:!0}),e.defaults={sepia:.3,noise:.3,noiseSize:1,scratch:.5,scratchDensity:.3,scratchWidth:1,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3},e}(e.Filter),F=function(t){function e(n,i,r){void 0===n&&(n=1),void 0===i&&(i=0),void 0===r&&(r=.1);var s=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec2 thickness;\nuniform vec4 outlineColor;\nuniform vec4 filterClamp;\n\nconst float DOUBLE_PI = 3.14159265358979323846264 * 2.;\n\nvoid main(void) {\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\n    vec4 curColor;\n    float maxAlpha = 0.;\n    vec2 displaced;\n    for (float angle = 0.; angle <= DOUBLE_PI; angle += ${angleStep}) {\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\n        curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\n        maxAlpha = max(maxAlpha, curColor.a);\n    }\n    float resultAlpha = max(maxAlpha, ownColor.a);\n    gl_FragColor = vec4((ownColor.rgb + outlineColor.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\n}\n".replace(/\$\{angleStep\}/,e.getAngleStep(r)))||this;return s._thickness=1,s.uniforms.thickness=new Float32Array([0,0]),s.uniforms.outlineColor=new Float32Array([0,0,0,1]),Object.assign(s,{thickness:n,color:i,quality:r}),s}return c(e,t),e.getAngleStep=function(t){var n=Math.max(t*e.MAX_SAMPLES,e.MIN_SAMPLES);return(2*Math.PI/n).toFixed(7)},e.prototype.apply=function(t,e,n,i){this.uniforms.thickness[0]=this._thickness/e._frame.width,this.uniforms.thickness[1]=this._thickness/e._frame.height,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"color",{get:function(){return r.rgb2hex(this.uniforms.outlineColor)},set:function(t){r.hex2rgb(t,this.uniforms.outlineColor)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thickness",{get:function(){return this._thickness},set:function(t){this._thickness=t,this.padding=t},enumerable:!1,configurable:!0}),e.MIN_SAMPLES=1,e.MAX_SAMPLES=100,e}(e.Filter),M=function(t){function e(e){void 0===e&&(e=10);var n=t.call(this,u,"precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform vec2 size;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\n\nvec2 mapCoord( vec2 coord )\n{\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n\n    return coord;\n}\n\nvec2 unmapCoord( vec2 coord )\n{\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n\n    return coord;\n}\n\nvec2 pixelate(vec2 coord, vec2 size)\n{\n\treturn floor( coord / size ) * size;\n}\n\nvoid main(void)\n{\n    vec2 coord = mapCoord(vTextureCoord);\n\n    coord = pixelate(coord, size);\n\n    coord = unmapCoord(coord);\n\n    gl_FragColor = texture2D(uSampler, coord);\n}\n")||this;return n.size=e,n}return c(e,t),Object.defineProperty(e.prototype,"size",{get:function(){return this.uniforms.size},set:function(t){"number"==typeof t&&(t=[t,t]),this.uniforms.size=t},enumerable:!1,configurable:!0}),e}(e.Filter),G=function(t){function e(e,n,i,r){void 0===e&&(e=0),void 0===n&&(n=[0,0]),void 0===i&&(i=5),void 0===r&&(r=-1);var s=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform float uRadian;\nuniform vec2 uCenter;\nuniform float uRadius;\nuniform int uKernelSize;\n\nconst int MAX_KERNEL_SIZE = 2048;\n\nvoid main(void)\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    if (uKernelSize == 0)\n    {\n        gl_FragColor = color;\n        return;\n    }\n\n    float aspect = filterArea.y / filterArea.x;\n    vec2 center = uCenter.xy / filterArea.xy;\n    float gradient = uRadius / filterArea.x * 0.3;\n    float radius = uRadius / filterArea.x - gradient * 0.5;\n    int k = uKernelSize - 1;\n\n    vec2 coord = vTextureCoord;\n    vec2 dir = vec2(center - coord);\n    float dist = length(vec2(dir.x, dir.y * aspect));\n\n    float radianStep = uRadian;\n    if (radius >= 0.0 && dist > radius) {\n        float delta = dist - radius;\n        float gap = gradient;\n        float scale = 1.0 - abs(delta / gap);\n        if (scale <= 0.0) {\n            gl_FragColor = color;\n            return;\n        }\n        radianStep *= scale;\n    }\n    radianStep /= float(k);\n\n    float s = sin(radianStep);\n    float c = cos(radianStep);\n    mat2 rotationMatrix = mat2(vec2(c, -s), vec2(s, c));\n\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\n        if (i == k) {\n            break;\n        }\n\n        coord -= center;\n        coord.y *= aspect;\n        coord = rotationMatrix * coord;\n        coord.y /= aspect;\n        coord += center;\n\n        vec4 sample = texture2D(uSampler, coord);\n\n        // switch to pre-multiplied alpha to correctly blur transparent images\n        // sample.rgb *= sample.a;\n\n        color += sample;\n    }\n\n    gl_FragColor = color / float(uKernelSize);\n}\n")||this;return s._angle=0,s.angle=e,s.center=n,s.kernelSize=i,s.radius=r,s}return c(e,t),e.prototype.apply=function(t,e,n,i){this.uniforms.uKernelSize=0!==this._angle?this.kernelSize:0,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"angle",{get:function(){return this._angle},set:function(t){this._angle=t,this.uniforms.uRadian=t*Math.PI/180},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"center",{get:function(){return this.uniforms.uCenter},set:function(t){this.uniforms.uCenter=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){return this.uniforms.uRadius},set:function(t){(t<0||t===1/0)&&(t=-1),this.uniforms.uRadius=t},enumerable:!1,configurable:!0}),e}(e.Filter),z=function(t){function e(n){var i=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform vec2 dimensions;\n\nuniform bool mirror;\nuniform float boundary;\nuniform vec2 amplitude;\nuniform vec2 waveLength;\nuniform vec2 alpha;\nuniform float time;\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main(void)\n{\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\n    vec2 coord = pixelCoord / dimensions;\n\n    if (coord.y < boundary) {\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\n        return;\n    }\n\n    float k = (coord.y - boundary) / (1. - boundary + 0.0001);\n    float areaY = boundary * dimensions.y / filterArea.y;\n    float v = areaY + areaY - vTextureCoord.y;\n    float y = mirror ? v : vTextureCoord.y;\n\n    float _amplitude = ((amplitude.y - amplitude.x) * k + amplitude.x ) / filterArea.x;\n    float _waveLength = ((waveLength.y - waveLength.x) * k + waveLength.x) / filterArea.y;\n    float _alpha = (alpha.y - alpha.x) * k + alpha.x;\n\n    float x = vTextureCoord.x + cos(v * 6.28 / _waveLength - time) * _amplitude;\n    x = clamp(x, filterClamp.x, filterClamp.z);\n\n    vec4 color = texture2D(uSampler, vec2(x, y));\n\n    gl_FragColor = color * _alpha;\n}\n")||this;return i.time=0,i.uniforms.amplitude=new Float32Array(2),i.uniforms.waveLength=new Float32Array(2),i.uniforms.alpha=new Float32Array(2),i.uniforms.dimensions=new Float32Array(2),Object.assign(i,e.defaults,n),i}return c(e,t),e.prototype.apply=function(t,e,n,i){var r,s;this.uniforms.dimensions[0]=null===(r=e.filterFrame)||void 0===r?void 0:r.width,this.uniforms.dimensions[1]=null===(s=e.filterFrame)||void 0===s?void 0:s.height,this.uniforms.time=this.time,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"mirror",{get:function(){return this.uniforms.mirror},set:function(t){this.uniforms.mirror=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"boundary",{get:function(){return this.uniforms.boundary},set:function(t){this.uniforms.boundary=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"amplitude",{get:function(){return this.uniforms.amplitude},set:function(t){this.uniforms.amplitude[0]=t[0],this.uniforms.amplitude[1]=t[1]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"waveLength",{get:function(){return this.uniforms.waveLength},set:function(t){this.uniforms.waveLength[0]=t[0],this.uniforms.waveLength[1]=t[1]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"alpha",{get:function(){return this.uniforms.alpha},set:function(t){this.uniforms.alpha[0]=t[0],this.uniforms.alpha[1]=t[1]},enumerable:!1,configurable:!0}),e.defaults={mirror:!0,boundary:.5,amplitude:[0,20],waveLength:[30,100],alpha:[1,1],time:0},e}(e.Filter),k=function(t){function e(e,n,i){void 0===e&&(e=[-10,0]),void 0===n&&(n=[0,10]),void 0===i&&(i=[0,0]);var r=t.call(this,u,"precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec2 red;\nuniform vec2 green;\nuniform vec2 blue;\n\nvoid main(void)\n{\n   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/filterArea.xy).r;\n   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/filterArea.xy).g;\n   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/filterArea.xy).b;\n   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\n}\n")||this;return r.red=e,r.green=n,r.blue=i,r}return c(e,t),Object.defineProperty(e.prototype,"red",{get:function(){return this.uniforms.red},set:function(t){this.uniforms.red=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"green",{get:function(){return this.uniforms.green},set:function(t){this.uniforms.green=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"blue",{get:function(){return this.uniforms.blue},set:function(t){this.uniforms.blue=t},enumerable:!1,configurable:!0}),e}(e.Filter),B=function(t){function e(n,i,r){void 0===n&&(n=[0,0]),void 0===r&&(r=0);var s=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\n\nuniform vec2 center;\n\nuniform float amplitude;\nuniform float wavelength;\n// uniform float power;\nuniform float brightness;\nuniform float speed;\nuniform float radius;\n\nuniform float time;\n\nconst float PI = 3.14159;\n\nvoid main()\n{\n    float halfWavelength = wavelength * 0.5 / filterArea.x;\n    float maxRadius = radius / filterArea.x;\n    float currentRadius = time * speed / filterArea.x;\n\n    float fade = 1.0;\n\n    if (maxRadius > 0.0) {\n        if (currentRadius > maxRadius) {\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\n            return;\n        }\n        fade = 1.0 - pow(currentRadius / maxRadius, 2.0);\n    }\n\n    vec2 dir = vec2(vTextureCoord - center / filterArea.xy);\n    dir.y *= filterArea.y / filterArea.x;\n    float dist = length(dir);\n\n    if (dist <= 0.0 || dist < currentRadius - halfWavelength || dist > currentRadius + halfWavelength) {\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\n        return;\n    }\n\n    vec2 diffUV = normalize(dir);\n\n    float diff = (dist - currentRadius) / halfWavelength;\n\n    float p = 1.0 - pow(abs(diff), 2.0);\n\n    // float powDiff = diff * pow(p, 2.0) * ( amplitude * fade );\n    float powDiff = 1.25 * sin(diff * PI) * p * ( amplitude * fade );\n\n    vec2 offset = diffUV * powDiff / filterArea.xy;\n\n    // Do clamp :\n    vec2 coord = vTextureCoord + offset;\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\n    vec4 color = texture2D(uSampler, clampedCoord);\n    if (coord != clampedCoord) {\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\n    }\n\n    // No clamp :\n    // gl_FragColor = texture2D(uSampler, vTextureCoord + offset);\n\n    color.rgb *= 1.0 + (brightness - 1.0) * p * fade;\n\n    gl_FragColor = color;\n}\n")||this;return s.center=n,Object.assign(s,e.defaults,i),s.time=r,s}return c(e,t),e.prototype.apply=function(t,e,n,i){this.uniforms.time=this.time,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"center",{get:function(){return this.uniforms.center},set:function(t){this.uniforms.center=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"amplitude",{get:function(){return this.uniforms.amplitude},set:function(t){this.uniforms.amplitude=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"wavelength",{get:function(){return this.uniforms.wavelength},set:function(t){this.uniforms.wavelength=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"brightness",{get:function(){return this.uniforms.brightness},set:function(t){this.uniforms.brightness=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"speed",{get:function(){return this.uniforms.speed},set:function(t){this.uniforms.speed=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){return this.uniforms.radius},set:function(t){this.uniforms.radius=t},enumerable:!1,configurable:!0}),e.defaults={amplitude:30,wavelength:160,brightness:1,speed:500,radius:-1},e}(e.Filter),q=function(t){function e(e,n,i){void 0===n&&(n=0),void 0===i&&(i=1);var r=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform sampler2D uLightmap;\nuniform vec4 filterArea;\nuniform vec2 dimensions;\nuniform vec4 ambientColor;\nvoid main() {\n    vec4 diffuseColor = texture2D(uSampler, vTextureCoord);\n    vec2 lightCoord = (vTextureCoord * filterArea.xy) / dimensions;\n    vec4 light = texture2D(uLightmap, lightCoord);\n    vec3 ambient = ambientColor.rgb * ambientColor.a;\n    vec3 intensity = ambient + light.rgb;\n    vec3 finalColor = diffuseColor.rgb * intensity;\n    gl_FragColor = vec4(finalColor, diffuseColor.a);\n}\n")||this;return r._color=0,r.uniforms.dimensions=new Float32Array(2),r.uniforms.ambientColor=new Float32Array([0,0,0,i]),r.texture=e,r.color=n,r}return c(e,t),e.prototype.apply=function(t,e,n,i){var r,s;this.uniforms.dimensions[0]=null===(r=e.filterFrame)||void 0===r?void 0:r.width,this.uniforms.dimensions[1]=null===(s=e.filterFrame)||void 0===s?void 0:s.height,t.applyFilter(this,e,n,i)},Object.defineProperty(e.prototype,"texture",{get:function(){return this.uniforms.uLightmap},set:function(t){this.uniforms.uLightmap=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"color",{get:function(){return this._color},set:function(t){var e=this.uniforms.ambientColor;"number"==typeof t?(r.hex2rgb(t,e),this._color=t):(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],this._color=r.rgb2hex(e))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"alpha",{get:function(){return this.uniforms.ambientColor[3]},set:function(t){this.uniforms.ambientColor[3]=t},enumerable:!1,configurable:!0}),e}(e.Filter),Y=function(t){function e(e,i,r,s){void 0===e&&(e=100),void 0===i&&(i=600);var o=t.call(this,u,"varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float blur;\nuniform float gradientBlur;\nuniform vec2 start;\nuniform vec2 end;\nuniform vec2 delta;\nuniform vec2 texSize;\n\nfloat random(vec3 scale, float seed)\n{\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n    float total = 0.0;\n\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\n\n    for (float t = -30.0; t <= 30.0; t++)\n    {\n        float percent = (t + offset - 0.5) / 30.0;\n        float weight = 1.0 - abs(percent);\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\n        sample.rgb *= sample.a;\n        color += sample * weight;\n        total += weight;\n    }\n\n    color /= total;\n    color.rgb /= color.a + 0.00001;\n\n    gl_FragColor = color;\n}\n")||this;return o.uniforms.blur=e,o.uniforms.gradientBlur=i,o.uniforms.start=r||new n.Point(0,window.innerHeight/2),o.uniforms.end=s||new n.Point(600,window.innerHeight/2),o.uniforms.delta=new n.Point(30,30),o.uniforms.texSize=new n.Point(window.innerWidth,window.innerHeight),o.updateDelta(),o}return c(e,t),e.prototype.updateDelta=function(){this.uniforms.delta.x=0,this.uniforms.delta.y=0},Object.defineProperty(e.prototype,"blur",{get:function(){return this.uniforms.blur},set:function(t){this.uniforms.blur=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"gradientBlur",{get:function(){return this.uniforms.gradientBlur},set:function(t){this.uniforms.gradientBlur=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"start",{get:function(){return this.uniforms.start},set:function(t){this.uniforms.start=t,this.updateDelta()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return this.uniforms.end},set:function(t){this.uniforms.end=t,this.updateDelta()},enumerable:!1,configurable:!0}),e}(e.Filter),X=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return c(e,t),e.prototype.updateDelta=function(){var t=this.uniforms.end.x-this.uniforms.start.x,e=this.uniforms.end.y-this.uniforms.start.y,n=Math.sqrt(t*t+e*e);this.uniforms.delta.x=t/n,this.uniforms.delta.y=e/n},e}(Y),j=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return c(e,t),e.prototype.updateDelta=function(){var t=this.uniforms.end.x-this.uniforms.start.x,e=this.uniforms.end.y-this.uniforms.start.y,n=Math.sqrt(t*t+e*e);this.uniforms.delta.x=-e/n,this.uniforms.delta.y=t/n},e}(Y),U=function(t){function e(e,n,i,r){void 0===e&&(e=100),void 0===n&&(n=600);var s=t.call(this)||this;return s.tiltShiftXFilter=new X(e,n,i,r),s.tiltShiftYFilter=new j(e,n,i,r),s}return c(e,t),e.prototype.apply=function(t,e,n,i){var r=t.getFilterTexture();this.tiltShiftXFilter.apply(t,e,r,1),this.tiltShiftYFilter.apply(t,r,n,i),t.returnFilterTexture(r)},Object.defineProperty(e.prototype,"blur",{get:function(){return this.tiltShiftXFilter.blur},set:function(t){this.tiltShiftXFilter.blur=this.tiltShiftYFilter.blur=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"gradientBlur",{get:function(){return this.tiltShiftXFilter.gradientBlur},set:function(t){this.tiltShiftXFilter.gradientBlur=this.tiltShiftYFilter.gradientBlur=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"start",{get:function(){return this.tiltShiftXFilter.start},set:function(t){this.tiltShiftXFilter.start=this.tiltShiftYFilter.start=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return this.tiltShiftXFilter.end},set:function(t){this.tiltShiftXFilter.end=this.tiltShiftYFilter.end=t},enumerable:!1,configurable:!0}),e}(e.Filter),V=function(t){function e(n){var i=t.call(this,u,"varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform vec4 filterArea;\n\nvec2 mapCoord( vec2 coord )\n{\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n\n    return coord;\n}\n\nvec2 unmapCoord( vec2 coord )\n{\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n\n    return coord;\n}\n\nvec2 twist(vec2 coord)\n{\n    coord -= offset;\n\n    float dist = length(coord);\n\n    if (dist < radius)\n    {\n        float ratioDist = (radius - dist) / radius;\n        float angleMod = ratioDist * ratioDist * angle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\n    }\n\n    coord += offset;\n\n    return coord;\n}\n\nvoid main(void)\n{\n\n    vec2 coord = mapCoord(vTextureCoord);\n\n    coord = twist(coord);\n\n    coord = unmapCoord(coord);\n\n    gl_FragColor = texture2D(uSampler, coord );\n\n}\n")||this;return Object.assign(i,e.defaults,n),i}return c(e,t),Object.defineProperty(e.prototype,"offset",{get:function(){return this.uniforms.offset},set:function(t){this.uniforms.offset=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){return this.uniforms.radius},set:function(t){this.uniforms.radius=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"angle",{get:function(){return this.uniforms.angle},set:function(t){this.uniforms.angle=t},enumerable:!1,configurable:!0}),e.defaults={radius:200,angle:4,padding:20,offset:new n.Point},e}(e.Filter),W=function(t){function e(n){var i,r=Object.assign(e.defaults,n),s=r.maxKernelSize,o=function(t,e){var n={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(n[i]=t[i]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(i=Object.getOwnPropertySymbols(t);r<i.length;r++)e.indexOf(i[r])<0&&Object.prototype.propertyIsEnumerable.call(t,i[r])&&(n[i[r]]=t[i[r]])}return n}(r,["maxKernelSize"]);return i=t.call(this,u,"varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform vec2 uCenter;\nuniform float uStrength;\nuniform float uInnerRadius;\nuniform float uRadius;\n\nconst float MAX_KERNEL_SIZE = ${maxKernelSize};\n\n// author: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand(vec2 co, float seed) {\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n    highp float dt = dot(co + seed, vec2(a, b)), sn = mod(dt, 3.14159);\n    return fract(sin(sn) * c + seed);\n}\n\nvoid main() {\n\n    float minGradient = uInnerRadius * 0.3;\n    float innerRadius = (uInnerRadius + minGradient * 0.5) / filterArea.x;\n\n    float gradient = uRadius * 0.3;\n    float radius = (uRadius - gradient * 0.5) / filterArea.x;\n\n    float countLimit = MAX_KERNEL_SIZE;\n\n    vec2 dir = vec2(uCenter.xy / filterArea.xy - vTextureCoord);\n    float dist = length(vec2(dir.x, dir.y * filterArea.y / filterArea.x));\n\n    float strength = uStrength;\n\n    float delta = 0.0;\n    float gap;\n    if (dist < innerRadius) {\n        delta = innerRadius - dist;\n        gap = minGradient;\n    } else if (radius >= 0.0 && dist > radius) { // radius < 0 means it's infinity\n        delta = dist - radius;\n        gap = gradient;\n    }\n\n    if (delta > 0.0) {\n        float normalCount = gap / filterArea.x;\n        delta = (normalCount - delta) / normalCount;\n        countLimit *= delta;\n        strength *= delta;\n        if (countLimit < 1.0)\n        {\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\n            return;\n        }\n    }\n\n    // randomize the lookup values to hide the fixed number of samples\n    float offset = rand(vTextureCoord, 0.0);\n\n    float total = 0.0;\n    vec4 color = vec4(0.0);\n\n    dir *= strength;\n\n    for (float t = 0.0; t < MAX_KERNEL_SIZE; t++) {\n        float percent = (t + offset) / MAX_KERNEL_SIZE;\n        float weight = 4.0 * (percent - percent * percent);\n        vec2 p = vTextureCoord + dir * percent;\n        vec4 sample = texture2D(uSampler, p);\n\n        // switch to pre-multiplied alpha to correctly blur transparent images\n        // sample.rgb *= sample.a;\n\n        color += sample * weight;\n        total += weight;\n\n        if (t > countLimit){\n            break;\n        }\n    }\n\n    color /= total;\n    // switch back from pre-multiplied alpha\n    // color.rgb /= color.a + 0.00001;\n\n    gl_FragColor = color;\n}\n".replace("${maxKernelSize}",s.toFixed(1)))||this,Object.assign(i,o),i}return c(e,t),Object.defineProperty(e.prototype,"center",{get:function(){return this.uniforms.uCenter},set:function(t){this.uniforms.uCenter=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"strength",{get:function(){return this.uniforms.uStrength},set:function(t){this.uniforms.uStrength=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"innerRadius",{get:function(){return this.uniforms.uInnerRadius},set:function(t){this.uniforms.uInnerRadius=t},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"radius",{get:function(){return this.uniforms.uRadius},set:function(t){(t<0||t===1/0)&&(t=-1),this.uniforms.uRadius=t},enumerable:!1,configurable:!0}),e.defaults={strength:.1,center:[0,0],innerRadius:0,radius:-1,maxKernelSize:32},e}(e.Filter);return t.AdjustmentFilter=d,t.AdvancedBloomFilter=p,t.AsciiFilter=m,t.BevelFilter=_,t.BloomFilter=y,t.BulgePinchFilter=x,t.CRTFilter=N,t.ColorMapFilter=I,t.ColorOverlayFilter=E,t.ColorReplaceFilter=C,t.ConvolutionFilter=S,t.CrossHatchFilter=w,t.DotFilter=T,t.DropShadowFilter=b,t.EmbossFilter=v,t.GlitchFilter=O,t.GlowFilter=R,t.GodrayFilter=L,t.KawaseBlurFilter=f,t.MotionBlurFilter=D,t.MultiColorReplaceFilter=P,t.OldFilmFilter=A,t.OutlineFilter=F,t.PixelateFilter=M,t.RGBSplitFilter=k,t.RadialBlurFilter=G,t.ReflectionFilter=z,t.ShockwaveFilter=B,t.SimpleLightmapFilter=q,t.TiltShiftAxisFilter=Y,t.TiltShiftFilter=U,t.TiltShiftXFilter=X,t.TiltShiftYFilter=j,t.TwistFilter=V,t.ZoomBlurFilter=W,Object.defineProperty(t,"__esModule",{value:!0}),t}({},PIXI,PIXI,PIXI,PIXI.utils,PIXI,PIXI.filters,PIXI.filters);Object.assign(PIXI.filters,Ir);const Er=async(t,n)=>{for(let i of n.themeAreas){const r=e(i.themeKey);if(!r){console.log(`No such ${i.themeType} theme: ${i.themeKey}`);continue}const s=n.clone();s.config=r.config,s.config.doorColor=n.config.doorColor,s.config.doorFillColor=n.config.doorFillColor,s.config.doorFillOpacity=n.config.doorFillOpacity,s.config.doorThickness=n.config.doorThickness,s.config.wallColor=n.config.wallColor,s.config.wallThickness=n.config.wallThickness,s.config.exteriorShadowOpacity=0;const o=new PIXI.Container,l=new PIXI.Graphics;l.beginFill(16777215,1),l.drawPolygon(i.points.flat()),l.endFill(),o.mask=l;const a=sr(i.points);await Cr(o,s,{clipPoly:a}),t.addChild(l),t.addChild(o)}},Cr=async(t,e,n={})=>{const i=new PIXI.Graphics,r=new PIXI.Graphics,s=new PIXI.Graphics;if(e.geometry){Tr(t,e.config,e.geometry);const o=new PIXI.Graphics;$i(e.geometry)?Lr(o,e.geometry):tr(e.geometry)&&Rr(o,e.geometry),t.addChild(o),r.mask=o;const l=new PIXI.filters.AlphaFilter(e.config.interiorShadowOpacity),a=new PIXI.filters.BlurFilter;r.filters=[l,a],e.config.floorTexture&&await vr(t,o,e.config,e.geometry,n.clipPoly),$i(e.geometry)?Dr(i,r,s,e.config,e.geometry):tr(e.geometry)&&Pr(i,r,s,e.config,e.geometry)}for(let t of e.interiorWalls)Ar(r,s,e.config,t);for(let t of e.doors)Mr(r,s,e.config,t);for(let t of e.secretDoors)Gr(r,s,e.config,t);t.addChild(i),t.addChild(r),t.addChild(s)},Sr=async t=>{try{return await loadTexture(t)}catch(t){console.log(t)}},wr=async(t,e)=>{if(e.backgroundImage){const n=await Sr(e.backgroundImage);if(n?.valid){const e=canvas.dimensions,i=new PIXI.Sprite(n);i.position.set(e.paddingX-e.shiftX,e.paddingY-e.shiftY),i.width=e.sceneWidth,i.height=e.sceneHeight,Nr(i),t.addChild(i)}}},Nr=t=>{const e=t.texture.baseTexture.resource.source;e&&"VIDEO"===e.tagName&&(e.loop=!0,e.volume=game.settings.get("core","globalAmbientVolume"),game.video.play(e))},Tr=(t,e,n)=>{if(e.exteriorShadowThickness&&e.exteriorShadowOpacity&&n)if($i(n))for(let i=0;i<n.getNumGeometries();i++){const r=n.getGeometryN(i);br(t,e,r)}else tr(n)&&br(t,e,n)},br=(t,e,n)=>{const i=new PIXI.Graphics,r=(s=n,o=e.exteriorShadowThickness,Kn.bufferOp(s,o).norm());var s,o;i.beginFill(PIXI.utils.string2hex(e.exteriorShadowColor),e.exteriorShadowOpacity),i.drawPolygon(r.getCoordinates().map((t=>[t.x,t.y])).flat()),i.endFill();const l=new PIXI.filters.BlurFilter;i.filters=[l],t.addChild(i)},vr=async(t,e,n,i,r)=>{const s=await Sr(n.floorTexture);if(!s?.valid)return;const o=s.width,l=canvas.scene.data.height*(1+2*canvas.scene.data.padding),a=canvas.scene.data.width*(1+2*canvas.scene.data.padding),c=Math.ceil(l/o),h=Math.ceil(a/o),u=new PIXI.Container;for(let t=0;t<c;t++)for(let e=0;e<h;e++){const l=sr([[e*o,t*o],[(e+1)*o,t*o],[(e+1)*o,(t+1)*o],[e*o,(t+1)*o],[e*o,t*o]]);if((!r||Zi(r,l))&&Zi(i,l)&&!Ji(i,l)){const i=new PIXI.TilingSprite(s,o,o);i.x=e*o,i.y=t*o,n.floorTextureTint&&(i.tint=foundry.utils.colorStringToHex(n.floorTextureTint)),Nr(i),u.addChild(i)}}u.mask=e,t.addChild(u)},Or=(t,e,n,i,r)=>{const s=((t,e,n,i)=>t===n?1/0:(i-e)/(n-t))(e,n,i,r),o=t/2;if(0===s)return[e,n+o,i,n+o,i,n-o,e,n-o];if(s===1/0)return[e-o,n,e-o,r,i+o,r,i+o,n];const l=Math.atan(s),a=o*Math.cos(l),c=o*Math.sin(l);return[e-c,n+a,i-c,r+a,i+c,r-a,e+c,n-a,e+a,n-c]},Rr=(t,e)=>{const n=e.getExteriorRing().getCoordinates().map((t=>[t.x,t.y])).flat();t.beginFill(16777215,1),t.drawPolygon(n),t.endFill();const i=e.getNumInteriorRing();for(let n=0;n<i;n++){const i=e.getInteriorRingN(n).getCoordinates().map((t=>[t.x,t.y])).flat();t.lineStyle(0,0,1,1,.5),t.beginHole(),t.drawPolygon(i),t.endHole()}},Lr=(t,e)=>{for(let n=0;n<e.getNumGeometries();n++){const i=e.getGeometryN(n);Rr(t,i)}},Dr=(t,e,n,i,r)=>{for(let s=0;s<r.getNumGeometries();s++){const o=r.getGeometryN(s);Pr(t,e,n,i,o)}},Pr=(t,e,n,i,r)=>{const s=r.getExteriorRing().getCoordinates().map((t=>[t.x,t.y])).flat();i.floorTexture||(t.beginFill(PIXI.utils.string2hex(i.floorColor),1),t.drawPolygon(s),t.endFill());const o=r.getNumInteriorRing();for(let e=0;e<o;e++){const n=r.getInteriorRingN(e).getCoordinates().map((t=>[t.x,t.y])).flat();t.lineStyle(0,0,1,1,.5),t.beginHole(),t.drawPolygon(n),t.endHole()}i.interiorShadowOpacity&&(e.lineStyle({width:i.wallThickness+i.interiorShadowThickness,color:PIXI.utils.string2hex(i.interiorShadowColor),alignment:.5,join:"round"}),e.drawPolygon(s)),n.lineStyle(i.wallThickness,PIXI.utils.string2hex(i.wallColor),1,.5),n.drawPolygon(s);for(let t=0;t<o;t++){const s=r.getInteriorRingN(t).getCoordinates().map((t=>[t.x,t.y])).flat();e.drawPolygon(s),n.lineStyle(i.wallThickness,PIXI.utils.string2hex(i.wallColor),1),n.drawPolygon(s)}},Ar=(t,e,n,i)=>{Fr(t,n,i),e.lineStyle({width:n.wallThickness,color:PIXI.utils.string2hex(n.wallColor),alpha:1,alignment:.5,cap:"round"}),e.moveTo(i[0],i[1]),e.lineTo(i[2],i[3])},Fr=(t,e,n)=>{t.lineStyle({width:e.wallThickness+e.interiorShadowThickness,color:PIXI.utils.string2hex(e.interiorShadowColor),alignment:.5,join:"round",cap:"round"}),t.moveTo(n[2],n[3]),t.lineTo(n[0],n[1])},Mr=(t,e,n,i)=>{const r=or(i[0],i[1],i[2],i[3]),s=20/r,o=s+(r-40)/r,l=i[2]-i[0],a=i[3]-i[1],c=[i[0]+l*s,i[1]+a*s],h=[i[0]+l*o,i[1]+a*o],u=Or(n.doorThickness,c[0],c[1],h[0],h[1]);zr(t,n,i),e.lineStyle({width:n.wallThickness,color:PIXI.utils.string2hex(n.wallColor),alpha:1,alignment:.5,cap:"round"}),e.moveTo(i[0],i[1]),e.lineTo(c[0],c[1]),e.moveTo(h[0],h[1]),e.lineTo(i[2],i[3]),n.doorFillOpacity&&e.beginFill(PIXI.utils.string2hex(n.doorFillColor),n.doorFillOpacity),e.lineStyle(n.wallThickness,PIXI.utils.string2hex(n.doorColor),1,.5),e.drawPolygon(u[0],u[1],u[2],u[3],u[4],u[5],u[6],u[7],u[0],u[1]),n.doorFillColor&&e.endFill()},Gr=(t,e,n,i)=>{const r=game.user.isGM;if(r&&"door"===n.secretDoorStyleGM||!r&&"door"===n.secretDoorStylePlayer)return void Mr(t,e,n,i);const s=or(i[0],i[1],i[2],i[3]),o=(s-40)/2/s,l=o+40/s,a=i[2]-i[0],c=i[3]-i[1],h=[i[0]+a*o,i[1]+c*o],u=[i[0]+.5*a,i[1]+.5*c],d=[i[0]+a*l,i[1]+c*l],g=Or(30,h[0],h[1],d[0],d[1]);if(Fr(t,n,i),e.lineStyle({width:n.wallThickness,color:PIXI.utils.string2hex(n.wallColor),alpha:1,alignment:.5,cap:"round"}),e.moveTo(i[0],i[1]),e.lineTo(i[2],i[3]),r&&"secret"===n.secretDoorStyleGM||!r&&"secret"===n.secretDoorStylePlayer){const t=Or(50,h[0],h[1],u[0],u[1]),i=Or(50,u[0],u[1],d[0],d[1]);e.lineStyle({width:5,color:PIXI.utils.string2hex(n.secretDoorSColor),alpha:1,alignment:.5,cap:"round"}),e.moveTo(g[6],g[7]),e.bezierCurveTo(t[0],t[1],t[2],t[3],u[0],u[1]),e.bezierCurveTo(i[6],i[7],i[4],i[5],g[2],g[3])}},zr=(t,e,n)=>{const i=or(n[0],n[1],n[2],n[3]),r=20/i,s=r+(i-40)/i,o=n[2]-n[0],l=n[3]-n[1],a=[n[0]+o*r,n[1]+l*r],c=[n[0]+o*s,n[1]+l*s],h=Or(e.doorThickness,a[0],a[1],c[0],c[1]);t.lineStyle({width:e.wallThickness+e.interiorShadowThickness,color:PIXI.utils.string2hex(e.interiorShadowColor),alignment:.5,join:"round"}),t.moveTo(n[2],n[3]),t.lineTo(c[0],c[1]),t.moveTo(a[0],a[1]),t.lineTo(n[0],n[1]),t.drawPolygon(h[0],h[1],h[2],h[3],h[4],h[5],h[6],h[7],h[0],h[1])};class kr extends PlaceableObject{constructor(t,e){super(e),this.journalEntry=t,this.history=[xr.startState()],this.historyIndex=0}static embeddedName="Drawing";deleteAll(){const t=this.state(),e=xr.startState();e.config=t.config,this.history=[e],this.historyIndex=0,this.history[this.historyIndex].saveToJournalEntry(this.journalEntry),this.refresh()}state(){return this.history[this.historyIndex]}draw(){return this.refresh(),this}refresh(){(async(t,e)=>{t.clear(),await wr(t,e.config),await Cr(t,e),await Er(t,e)})(this,this.state())}async maybeRefresh(t){if(t.id===this.journalEntry.id){const t=await xr.loadFromJournalEntry(this.journalEntry);await this.pushState(t,!1)}}async loadFromJournalEntry(){const t=await xr.loadFromJournalEntry(this.journalEntry);this.history=[t],this.historyIndex=0,await this.refresh()}async undo(){this.historyIndex=Math.max(0,this.historyIndex-1),await this.history[this.historyIndex].saveToJournalEntry(this.journalEntry),await this.refresh()}async redo(){this.historyIndex=Math.min(this.history.length-1,this.historyIndex+1),await this.history[this.historyIndex].saveToJournalEntry(this.journalEntry),await this.refresh()}async pushState(t,e=!0){for(let t=this.history.length-1;t>this.historyIndex;t--)this.history.pop();this.history.push(t),this.historyIndex++,e&&await t.saveToJournalEntry(this.journalEntry),await this.refresh()}async setConfig(t){const e=this.state().clone();e.config=t,await this.pushState(e)}async addDoor(t,e,n,i){await this._addDoor(t,e,n,i,"doors")}async addSecretDoor(t,e,n,i){await this._addDoor(t,e,n,i,"secretDoors")}async _addDoor(t,e,n,i,r){const s=this.history[this.historyIndex].clone(),o=rr(t,e,n,i),l=[],a=[];for(let r of s.interiorWalls){const s=rr(r[0],r[1],r[2],r[3]);if(Qi(s,o)){l.push(r);const s=ar(r[0],r[1],r[2],r[3]),o=cr(r[0],r[1],r[2],r[3]),c=ar(t,e,n,i),h=cr(t,e,n,i);a.push([s[0],s[1],c[0],c[1]]),a.push([h[0],h[1],o[0],o[1]])}}s.interiorWalls=s.interiorWalls.filter((t=>-1===l.indexOf(t))),s.interiorWalls=s.interiorWalls.concat(a),s[r].push([t,e,n,i]),await this.pushState(s)}async subtractDoors(t){const e=nr(t),n=this.history[this.historyIndex].doors.filter((t=>{const n=rr(t[0],t[1],t[2],t[3]);return!e.intersects(n)}));if(n.length!=this.history[this.historyIndex].doors.length){const t=this.history[this.historyIndex].clone();t.doors=n,await this.pushState(t)}}_maybeSplitWall(t,e,n,i,r){const s=rr(t,e,n,i);for(let o of r){const r=rr(o[0],o[1],o[2],o[3]);if(Qi(s,r)){const r=ar(t,e,n,i),s=cr(t,e,n,i),l=ar(o[0],o[1],o[2],o[3]),a=cr(o[0],o[1],o[2],o[3]);return[[r[0],r[1],l[0],l[1]],[a[0],a[1],s[0],s[1]]]}}return[[t,e,n,i]]}async addInteriorWall(t,e,n,i){const r=this.history[this.historyIndex].clone(),s=this._maybeSplitWall(t,e,n,i,r.doors);r.interiorWalls=r.interiorWalls.concat(s),await this.pushState(r)}async subtractInteriorWalls(t){const e=nr(t),n=this.history[this.historyIndex].interiorWalls.filter((t=>{const n=rr(t[0],t[1],t[2],t[3]);return!e.intersects(n)}));if(n.length!=this.history[this.historyIndex].interiorWalls.length){const t=this.history[this.historyIndex].clone();t.interiorWalls=n,await this.pushState(t)}}async subtractDoorsAndInteriorWalls(t){const e=nr(t),n=this.history[this.historyIndex],i=n.doors.filter((t=>{const n=rr(t[0],t[1],t[2],t[3]);return!e.intersects(n)})),r=n.secretDoors.filter((t=>{const n=rr(t[0],t[1],t[2],t[3]);return!e.intersects(n)})),s=n.interiorWalls.filter((t=>{const n=rr(t[0],t[1],t[2],t[3]);return!e.intersects(n)}));if(i.length!=n.doors.length||r.length!=n.secretDoors.length||s.length!=n.interiorWalls.length){const t=n.clone();t.doors=i,t.secretDoors=r,t.interiorWalls=s,await this.pushState(t)}}async _addPoly(t){const e=this.history[this.historyIndex],n=e.clone();if(n.geometry){n.geometry=(i=n.geometry,r=t,Ki.union(i,r));if(Ji(e.geometry,t)){const i=((t,e)=>Ai.intersection(t,e))(e.geometry,t),r=i.getCoordinates();if(r.length>1&&r.length%2==0)for(let t=0;t<r.length;t+=2){const e=this._maybeSplitWall(r[t].x,r[t].y,r[t+1].x,r[t+1].y,n.doors);n.interiorWalls=n.interiorWalls.concat(e)}}else{const e=n.interiorWalls.filter((e=>{const n=rr(e[0],e[1],e[2],e[3]);return!t.intersects(n)}));e.length!=n.interiorWalls.length&&(n.interiorWalls=e)}}else n.geometry=t;var i,r;await this.pushState(n)}async addRectangle(t){const e=nr(t);this._addPoly(e)}async subtractRectangle(t){if(!this.history[this.historyIndex].geometry)return;const e=nr(t);if(!this.history[this.historyIndex].geometry.intersects(e))return;const n=this.history[this.historyIndex].clone();n.geometry=n.geometry.difference(e),await this.pushState(n)}async addPolygon(t){try{const e=sr(t);await this._addPoly(e)}catch(t){console.log(t)}}async addThemeArea(t){try{sr(t)}catch(t){return void console.log(t)}const e={points:t,themeKey:r()},n=this.history[this.historyIndex].clone();n.themeAreas.push(e),await this.pushState(n)}async removeThemeAreas(t){const e=nr(t),n=this.history[this.historyIndex].themeAreas.filter((t=>{try{const n=sr(t.points);return!e.intersects(n)}catch(t){return console.log(t),!1}}));if(n.length!=this.history[this.historyIndex].themeAreas.length){const t=this.history[this.historyIndex].clone();t.themeAreas=n,await this.pushState(t)}}}const Br=async()=>{let t=game.folders.filter((t=>"JournalEntry"===t.data.type&&"Dungeon Draw"===t.name)).pop();t||(t=await Folder.create({name:"Dungeon Draw",type:"JournalEntry"}));return await JournalEntry.create({name:canvas.scene.name,folder:t.id,flags:{"dungeon-draw":{dungeonVersion:"1.0"}}})},qr=async t=>{await canvas.scene.createEmbeddedDocuments("Note",[{entryId:t.id,fontSize:20,icon:"icons/svg/cave.svg",iconSize:32,textAnchor:1,textColor:"#FFFFFF",x:50,y:50,iconTint:"",text:"Dungeon Draw",flags:{}}])};class Yr extends PlaceablesLayer{static LAYER_NAME="dungeon";constructor(){super(),this.dungeonContainer=null,this.dungeon=null}static get layerOptions(){return foundry.utils.mergeObject(super.layerOptions,{name:Yr.LAYER_NAME,canDragCreate:!0,zIndex:-1})}static documentName="Drawing";_getNewDrawingData(t){const e=game.activeTool,n={fillColor:game.user.color,strokeColor:game.user.color,strokeWidth:8};switch(n.x=t.x,n.y=t.y,n.author=game.user.id,e){case"addrect":case"subtractdoor":case"subtractrect":case"themeeraser":n.type=CONST.DRAWING_TYPES.RECTANGLE,n.points=[];break;case"adddoor":case"addpoly":case"addsecretdoor":case"addwall":case"themepainter":n.type=CONST.DRAWING_TYPES.POLYGON,n.points=[[0,0]];break;case"ellipse":n.type=CONST.DRAWING_TYPES.ELLIPSE,n.points=[]}return n}async deleteAll(){const t=this.constructor.documentName;if(!game.user.isGM)throw new Error(`You do not have permission to delete ${t} objects from the Scene.`);return Dialog.confirm({title:game.i18n.localize("CONTROLS.ClearAll"),content:`<p>${game.i18n.format("CONTROLS.ClearAllHint",{type:t})}</p>`,yes:()=>this._deleteAll()})}async _deleteAll(){this.dungeon?.deleteAll()}async loadDungeon(){const{journalEntry:e,note:n}=await(()=>{for(const[e,n]of canvas.scene.notes.entries()){const e=game.journal.get(n.data.entryId);if(e&&e.getFlag(t,"dungeonVersion"))return{journalEntry:e,note:n}}return{journalEntry:null,note:null}})();e?(this.dungeon=new kr(e,n),await this.dungeon.loadFromJournalEntry(),this.addChildAt(this.dungeon,0)):this.dungeon=null}async createNewDungeon(){await(async()=>{const t=await Br();return{journalEntry:t,note:await qr(t)}})(),await this.loadDungeon()}async draw(){return await super.draw(),this}async _onClickLeft(t){const{preview:e,createState:n,originalEvent:i}=t.data;if(n>=1&&e.isPolygon){let n=t.data.destination;return i.shiftKey||(n=canvas.grid.getSnappedPosition(n.x,n.y,this.gridPrecision)),e._addPoint(n,!1),e._chain=!0,e.refresh()}await super._onClickLeft(t)}_onClickLeft2(t){const{createState:e,preview:n}=t.data;if(e>=1&&n.isPolygon)return t.data.createState=2,this._onDragLeftDrop(t);super._onClickLeft2(t)}async _onDragLeftStart(t){await super._onDragLeftStart(t);const e=this._getNewDrawingData(t.data.origin),n=new DrawingDocument(e,{parent:canvas.scene}),i=new Drawing(n);return t.data.preview=this.preview.addChild(i),i.draw()}_onDragLeftMove(t){const{preview:e,createState:n}=t.data;e&&(null===e.parent&&this.preview.addChild(e),n>=1&&(e._onMouseDraw(t),e.data.type===CONST.DRAWING_TYPES.POLYGON&&"adddoor"!==game.activeTool&&"addsecretdoor"!==game.activeTool&&"addwall"!==game.activeTool||(t.data.createState=2)))}async _onDragLeftDrop(t){const{createState:e,destination:n,origin:i,preview:r}=t.data;if(2===e){this.dungeon||await this.createNewDungeon();const e=Math.hypot(n.x-i.x,n.y-i.y)>=canvas.dimensions.size/8,s=r.isPolygon&&r.data.points.length>2;if("adddoor"===game.activeTool){t.data.createState=0;const e=r.data.toObject(!1);r._chain=!1,await this.dungeon.addDoor(e.x,e.y,e.x+e.points[1][0],e.y+e.points[1][1])}if("addsecretdoor"===game.activeTool){t.data.createState=0;const e=r.data.toObject(!1);r._chain=!1,await this.dungeon.addSecretDoor(e.x,e.y,e.x+e.points[1][0],e.y+e.points[1][1])}else if("addwall"===game.activeTool){t.data.createState=0;const e=r.data.toObject(!1);r._chain=!1,await this.dungeon.addInteriorWall(e.x,e.y,e.x+e.points[1][0],e.y+e.points[1][1])}else if(e||s){t.data.createState=0;const e=r.data.toObject(!1);r._chain=!1;const n=this.constructor.placeableClass.normalizeShape(e);if("addpoly"===game.activeTool){const t=n.points.length;t>2&&(n.points[0][0]!==n.points[t-1][0]||n.points[0][1]!==n.points[t-1][1])&&n.points.push(n.points[0]);const e=n.points.map((t=>[t[0]+n.x,t[1]+n.y]));await this.dungeon.addPolygon(e)}else if("addrect"===game.activeTool){const t={x:n.x,y:n.y,height:n.height,width:n.width};await this.dungeon.addRectangle(t)}else if("subtractdoor"===game.activeTool){const t={x:n.x,y:n.y,height:n.height,width:n.width};await this.dungeon.subtractDoorsAndInteriorWalls(t)}else if("themeeraser"===game.activeTool){const t={x:n.x,y:n.y,height:n.height,width:n.width};await this.dungeon.removeThemeAreas(t)}else if("themepainter"===game.activeTool){const t=n.points.length;t>2&&(n.points[0][0]!==n.points[t-1][0]||n.points[0][1]!==n.points[t-1][1])&&n.points.push(n.points[0]);const e=n.points.map((t=>[t[0]+n.x,t[1]+n.y]));await this.dungeon.addThemeArea(e)}else if("subtractrect"===game.activeTool){const t={x:n.x,y:n.y,height:n.height,width:n.width};await this.dungeon.subtractRectangle(t)}}return this._onDragLeftCancel(t)}if(1===e&&r.isPolygon){if(t.data.originalEvent.preventDefault(),r._chain)return;return this._onClickLeft(t)}return this._onDragLeftCancel(t)}}class Xr{static init(){console.log("***** DUNGEON DRAW *****"),game.settings.register(t,"releaseNotesVersion",{name:"Last version we showed release notes.",scope:"client",default:"",type:String,config:!1}),game.settings.register(t,"customThemes",{name:"Custom themes.",scope:"client",default:"{}",type:String,config:!1}),game.settings.register(t,"themePainterTheme",{name:"Theme painter theme key.",scope:"client",default:"module.cavern",type:String,config:!1})}static ready(){Xr.maybeShowReleaseNotes()}static async maybeShowReleaseNotes(){if(!game.user.isGM)return;const e=game.modules.get(t).data.version;if(e===game.settings.get(t,"releaseNotesVersion"))return;const n=await fetch("modules/dungeon-draw/CHANGELOG.md"),i="#"+(await n.text()).split("#")[1],r=await renderTemplate("modules/dungeon-draw/templates/release-notes.html",{data:{version:e,changelog:i}});new Dialog({title:game.i18n.localize("DD.ReleaseNotes"),content:r,buttons:{roll:{icon:'<i class="fas fa-check"></i>',label:"OK"}}},{width:600}).render(!0),await game.settings.set(t,"releaseNotesVersion",e)}static getSceneControlButtons(t){CONFIG.Canvas.layers.dungeon=Yr,CONFIG.Dungeon={layerClass:Yr},t.push({name:"dungeondraw",title:"DD.SceneControlTitle",layer:Yr.LAYER_NAME,icon:"fas fa-dungeon",visible:game.user.isTrusted,tools:[{name:"addrect",title:"DD.ButtonTitleAddRect",icon:"fas fa-plus-square"},{name:"subtractrect",title:"DD.ButtonTitleSubtractRect",icon:"fas fa-minus-square"},{name:"addpoly",title:"DD.ButtonTitleAddPoly",icon:"fas fa-draw-polygon"},{name:"addwall",title:"DD.ButtonTitleAddWall",icon:"fas fa-bars"},{name:"adddoor",title:"DD.ButtonTitleAddDoor",icon:"fas fa-door-open"},{name:"addsecretdoor",title:"DD.ButtonTitleAddSecretDoor",icon:"fas fa-mask"},{name:"subtractdoor",title:"DD.ButtonTitleSubtractDoorsAndWalls",icon:"fas fa-window-close"},{name:"themepainter",title:"DD.ButtonTitleThemePainter",icon:"fas fa-brush"},{name:"themeeraser",title:"DD.ButtonTitleThemeEraser",icon:"fas fa-eraser"},{name:"undo",title:"DD.ButtonTitleUndo",icon:"fas fa-undo",onClick:async()=>{await canvas.dungeon.dungeon.undo()},button:!0},{name:"redo",title:"DD.ButtonTitleRedo",icon:"fas fa-redo",onClick:async()=>{await canvas.dungeon.dungeon.redo()},button:!0},{name:"config",title:"DD.ButtonTitleConfig",icon:"fas fa-cog",onClick:()=>(new l).render(!0),button:!0},{name:"clear",title:"DD.ButtonTitleClear",icon:"fas fa-trash",visible:!0,onClick:()=>canvas.dungeon.deleteAll(),button:!0}],activeTool:"addrect"})}static async canvasReady(t){await t.dungeon.loadDungeon()}static async updateJournalEntry(t,e,n,i){game.user.id!==i&&await(canvas.dungeon.dungeon?.maybeRefresh(t))}}Hooks.on("init",Xr.init),Hooks.on("ready",Xr.ready),Hooks.on("getSceneControlButtons",Xr.getSceneControlButtons),Hooks.on("canvasReady",Xr.canvasReady),Hooks.on("updateJournalEntry",Xr.updateJournalEntry);export{Xr as DungeonDraw};
//# sourceMappingURL=dungeondraw-bundle.min.js.map
