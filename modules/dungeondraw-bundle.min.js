const e="dungeon-draw";class t{static register(){game.settings.register(e,"allowTrustedPlayer",{name:game.i18n.localize("DD.SettingAllowTrustedPlayers"),scope:"world",default:!0,type:Boolean,config:!0}),game.settings.register(e,"3DCanvasEnabled",{name:game.i18n.localize("DD.SettingSupport3DCanvas"),scope:"world",default:!0,type:Boolean,config:!0}),game.settings.register(e,"snapToGrid",{name:game.i18n.localize("DD.SettingSnapToGrid"),scope:"client",default:!0,type:Boolean,config:!0,onChange:e=>{canvas.dungeon.options.snapToGrid=e}}),game.settings.register(e,"releaseNotesVersion",{name:"Last version we showed release notes.",scope:"client",default:"",type:String,config:!1}),game.settings.register(e,"customThemes",{name:"Custom themes data.",scope:"client",default:"{}",type:String,config:!1}),game.settings.register(e,"themePainterTheme",{name:"Theme painter theme key.",scope:"client",default:"module.cavern",type:String,config:!1}),game.settings.register(e,"makeFoundryWalls",{name:game.i18n.localize("DD.SettingMakeFoundryWalls"),scope:"world",default:!0,type:Boolean,config:!0})}static threeDCanvasEnabled(){return game.settings.get(e,"3DCanvasEnabled")}static snapToGrid(){return game.settings.get(e,"snapToGrid")}static makeFoundryWalls(){return game.settings.get(e,"makeFoundryWalls")}}const i=()=>{try{const t=game.settings.get(e,"customThemes"),i=JSON.parse(t);return Object.keys(i).forEach((e=>{i[e].config=foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},i[e].config)})),i}catch(e){return console.log(e),{}}},n=t=>{const i=JSON.stringify(t);game.settings.set(e,"customThemes",i)},r=()=>game.settings.get(e,"themePainterTheme"),o=t=>game.settings.set(e,"themePainterTheme",t),s={default:{name:"Default",config:{doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8}},arcPavement:{name:"Arc Pavement",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#111111",floorTexture:"modules/dungeon-draw/assets/textures/Arc_Pavement_001_basecolor.jpg",invisibleWallThickness:10,wallColor:"#111111",wallThickness:12})},basicBlack:{name:"Basic Black",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#0D0D0D",doorFillOpacity:0,exteriorShadowOpacity:0,interiorShadowOpacity:0,invisibleWallColor:"#0D0D0D",floorColor:"#FFFFFF",sceneBackgroundColor:"#0D0D0D",sceneGridOpacity:1,secretDoorSColor:"#0D0D0D",wallColor:"#0D0D0D"})},cavern:{name:"Cavern",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#2B2D2F",invisibleWallThickness:10,floorTexture:"modules/dungeon-draw/assets/textures/Stylized_Stone_Floor_002_bw.jpg",wallColor:"#2B2D2F",wallThickness:12})},checkerboard:{name:"Checkerboard",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorFillColor:"#C2BFB0",floorTexture:"modules/dungeon-draw/assets/textures/sci_fi_texture_150_by_llexandro_d939vk9.png",invisibleWallFillColor:"#C2BFB0",invisibleWallThickness:8,secretDoorSColor:"#C2BFB0",wallThickness:10})},cobblestone:{name:"Cobblestone",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#222222",doorFillColor:"#FFFFFF",floorTexture:"modules/dungeon-draw/assets/textures/Cobblestone_001_COLOR.jpg",invisibleWallColor:"#222222",invisibleWallFillColor:"#FFFFFF",invisibleWallThickness:10,secretDoorSColor:"#FFFFFF",wallColor:"#222222",wallThickness:12})},dirt:{name:"Dirt",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#1a1714",doorFillColor:"#8d7862",floorTexture:"modules/dungeon-draw/assets/textures/Ground_Dirt_007_basecolor.jpg",invisibleWallColor:"#1a1714",invisibleWallFillColor:"#8d7862",invisibleWallThickness:8,secretDoorSColor:"#8d7862",wallColor:"#1a1714",wallThickness:10})},dungeonSquares:{name:"Dungeon Squares",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#111111",floorTexture:"modules/dungeon-draw/assets/textures/outdoor+stone+tiles+pavement.jpg",invisibleWallColor:"#111111",invisibleWallThickness:10,wallColor:"#111111",wallThickness:12})},grass:{name:"Grass",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#72471d",doorFillColor:"#eee8c1",floorTexture:"modules/dungeon-draw/assets/textures/Grass_001_COLOR.jpg",invisibleWallColor:"#72471d",invisibleWallFillColor:"#eee8c1",invisibleWallThickness:10,secretDoorSColor:"#eee8c1",wallColor:"#72471d",wallThickness:10})},groovyCarpet:{name:"Groovy Carpet",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#2B2D2F",floorTexture:"modules/dungeon-draw/assets/textures/Fabric_Rug_006_basecolor.jpg",invisibleWallColor:"#2B2D2F",invisibleWallThickness:10,wallColor:"#2B2D2F",wallThickness:12})},hexagon:{name:"Hexagons",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#282828",doorFillColor:"#D1BD8A",floorTexture:"modules/dungeon-draw/assets/textures/Rocks_Hexagons_002_basecolor.jpg",invisibleWallColor:"#282828",invisibleWallFillColor:"#D1BD8A",invisibleWallThickness:10,secretDoorSColor:"#D1BD8A",wallColor:"#282828",wallThickness:12})},marble:{name:"Marble",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#686882",floorTexture:"modules/dungeon-draw/assets/textures/Marble_Tiles_001_basecolor.jpg",invisibleWallColor:"#686882",wallColor:"#686882"})},metalGrid:{name:"Metal Grid",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#27251A",doorFillColor:"#AAAAAA",floorTexture:"modules/dungeon-draw/assets/textures/Sci-fi_Floor_002_basecolor.jpg",invisibleWallColor:"#27251A",invisibleWallFillColor:"#AAAAAA",secretDoorSColor:"#AAAAAA",wallColor:"#27251A"})},metalSquares:{name:"Metal Squares",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorFillColor:"#C0C0C0",floorTexture:"modules/dungeon-draw/assets/textures/sci_fi_texture_212_by_llexandro_dcuxgum.png",invisibleWallFillColor:"#C0C0C0",secretDoorSColor:"#C0C0C0"})},moldvayBlue:{name:"Moldvay Blue",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#3A9FF2",doorFillOpacity:0,doorThickness:35,exteriorShadowOpacity:0,floorColor:"#FFFFFF",interiorShadowOpacity:0,invisibleWallColor:"#3A9FF2",invisibleWallFillOpacity:0,sceneBackgroundColor:"#3A9FF2",sceneGridColor:"#3A9FF2",sceneGridOpacity:1,secretDoorSColor:"#3A9FF2",wallColor:"#3A9FF2"})},neonBlueprint:{name:"Neon Blueprint",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#3A9FF2",doorFillOpacity:0,doorThickness:35,exteriorShadowColor:"#18495E",floorColor:"#142A3B",interiorShadowColor:"#1B7FAB",invisibleWallColor:"#3A9FF2",invisibleWallFillOpacity:0,invisibleWallLineThickness:1,invisibleWallThickness:6,sceneBackgroundColor:"#171008",sceneGridColor:"#4C89A1",sceneGridOpacity:1,secretDoorSColor:"#3A9FF2",wallColor:"#63C9E6",wallThickness:4})},ruddyPaper:{name:"Ruddy Paper",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#913B55",doorFillColor:"#FADEE6",floorTexture:"modules/dungeon-draw/assets/textures/Paper_Recycled_001_COLOR.jpg",floorTextureTint:"#F9FAE6",exteriorShadowOpacity:0,interiorShadowOpacity:0,invisibleWallColor:"#913B55",invisibleWallFillColor:"#FADEE6",sceneBackgroundColor:"#EBD3BC",sceneGridColor:"#594026",sceneGridOpacity:1,secretDoorSColor:"#913B55",wallColor:"#9A6D54"})},water:{name:"Water",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#203246",floorTexture:"modules/dungeon-draw/assets/textures/Water_001_COLOR.jpg",invisibleWallColor:"#203246",invisibleWallLineThickness:1,invisibleWallThickness:4,wallColor:"#203246",wallThickness:5})},woodPlanks:{name:"Wood Planks",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#332211",floorTexture:"modules/dungeon-draw/assets/textures/Old_Wooden_Plank_Seamless_Texture_765.jpg",invisibleWallColor:"#332211",invisibleWallThickness:13,wallColor:"#332211",wallTexture:"modules/dungeon-draw/assets/textures/Bark_002_bw.jpg",wallTextureTint:"#7e5935",wallThickness:15})},xenomorph:{name:"Xenomorph",config:foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},{doorColor:"#8AF0F0",doorFillColor:"#255151",doorLineThickness:5,doorThickness:20,exteriorShadowColor:"#00838C",floorColor:"#255151",interiorShadowColor:"#00838C",invisibleWallColor:"#8AF0F0",invisibleWallFillColor:"#255151",invisibleWallLineThickness:1,invisibleWallThickness:6,sceneBackgroundColor:"#002222",sceneGridColor:"#ffffff",sceneGridOpacity:1,secretDoorSColor:"#8AF0F0",wallColor:"#8AF0F0",wallThickness:4})}};class a extends FormApplication{constructor(e){super(),this.themeKey=e}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"dd-theme-sheet",classes:["sheet"],template:"modules/dungeon-draw/templates/theme-sheet.html",width:480,height:t.threeDCanvasEnabled()?1160:1040,tabs:[{navSelector:".tabs",contentSelector:"form",initial:"position"}]})}get title(){return game.i18n.localize("DD.ThemeSheetTitle")}getData(){const e=i()[this.themeKey],n=t.threeDCanvasEnabled();return{config:e.config,themeName:e.name,threeDCanvasEnabled:n}}async _updateObject(e,t){const r=i(),o=t.themeName;delete t.themeName,r[this.themeKey]={name:o,config:t},n(r),await(canvas.dungeon.dungeon?.refresh())}}class l extends FormApplication{constructor(e="settings"){super(),this._tabs[0].active=e}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"dd-config-sheet",classes:["sheet"],template:"modules/dungeon-draw/templates/config-sheet.html",width:480,height:t.threeDCanvasEnabled()?1220:1100,tabs:[{navSelector:".tabs",contentSelector:"form",initial:"position"}]})}get title(){return game.i18n.localize("DD.ConfigSheetTitle")}getData(){let e=canvas.dungeon.dungeon?.state().config;e||(e={doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8});const n=i(),o=Object.keys(n).sort(),a=Object.keys(s).sort(),l=r(),c=t.threeDCanvasEnabled();return{config:e,customThemes:n,customThemeKeys:o,themes:s,themeKeys:a,themePainterThemeKey:l,threeDCanvasEnabled:c}}async _updateObject(e,t){delete t.customThemeName,delete t.themePainterTheme,canvas.dungeon.dungeon?.setConfig(t),game.user.isGM&&await canvas.scene.update({backgroundColor:t.sceneBackgroundColor,gridAlpha:t.sceneGridAlpha,gridColor:t.sceneGridColor})}async close(e){await super.close(e),this.preview&&(this.preview.removeChildren(),this.preview=null)}activateListeners(e){super.activateListeners(e),e.find('button[name="resetDefault"]').click(this._onResetDefaults.bind(this)),e.find(".dd-theme-name").click(this._onThemeNameClick.bind(this)),e.find(".dd-save-as-theme-button").click(this._onSaveAsThemeClick.bind(this)),e.find(".dd-theme-edit").click(this._onEditThemeClick.bind(this)),e.find(".dd-theme-copy").click(this._onCopyThemeClick.bind(this)),e.find(".dd-theme-delete").click(this._onDeleteThemeClick.bind(this)),e.find('select[name="themePainterThemeKey"]').change(this._onThemePainterThemeSelect.bind(this)),e.find(".dd-export-themes-button").click(this._onExportThemesClick.bind(this)),e.find(".dd-import-themes-button").click(this._onImportThemesClick.bind(this))}_onResetDefaults(e){e.preventDefault(),canvas.dungeon.dungeon?.setConfig({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8}),canvas.dungeon.dungeon.refresh(),this.render()}async _onThemeNameClick(e){e.preventDefault();const t=$(e.currentTarget).parent(".dd-theme-row"),n=t.data("theme");let r;if("custom"===t.data("themetype")){r=i()[n]}else r=s[n];const o={...r.config};await(canvas.dungeon.dungeon?.setConfig(o)),game.user.isGM&&await canvas.scene.update({backgroundColor:o.sceneBackgroundColor,gridAlpha:o.sceneGridAlpha,gridColor:o.sceneGridColor}),this.render()}async _onSaveAsThemeClick(e){e.preventDefault();const t=$(e.currentTarget).closest(".form-fields").children(".saveAsThemeName").val(),r=this._getSubmitData();delete r.saveAsThemeName,delete r.themePainterThemeKey;const o=i();o[t]={name:t,config:r},n(o),this._tabs[0].active="themes",this.render()}async _onEditThemeClick(e){e.preventDefault();const t=$(e.currentTarget).closest(".dd-theme-row").data("theme");new a(t).render(!0)}_onCopyThemeClick(e){e.preventDefault();const t=$(e.currentTarget).closest(".dd-theme-row").data("theme"),r=i(),o=r[t],s=JSON.parse(JSON.stringify(o));let a,l=1,c=!1;for(;!c;)a=`${o.name} (${l})`,a in r?l++:c=!0;s.name=a,r[a]=s,n(r),this.render()}_onDeleteThemeClick(e){e.preventDefault();const t=$(e.currentTarget).closest(".dd-theme-row").data("theme"),r=i();delete r[t],n(r),this.render()}_onExportThemesClick(e){e.preventDefault();const t=JSON.stringify(i(),null,2);saveDataToFile(t,"application/json","dd-custom-themes.json")}async _onImportThemesClick(e){e.preventDefault(),new Dialog({title:game.i18n.localize("DD.ImportCustomThemes"),content:await renderTemplate("modules/dungeon-draw/templates/import-data.html",{hint:game.i18n.localize("DD.ImportCustomThemesHint")}),buttons:{import:{icon:'<i class="fas fa-file-import"></i>',label:game.i18n.localize("DD.Import"),callback:e=>{const t=e.find("form")[0];if(!t.data.files.length)return ui.notifications.error("You did not upload a data file!");readTextFromFile(t.data.files[0]).then((e=>{const r=JSON.parse(e);if(t.wipe.checked)n(r);else{const e=i(),t=foundry.utils.mergeObject(e,r);n(t)}this.render()}))}},no:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("DD.Cancel")}},default:"import"},{width:400}).render(!0)}_onThemePainterThemeSelect(e){const t=$(e.currentTarget).val();o(t)}}class c extends Error{constructor(e){super(e),this.name=Object.keys({Exception:c})[0]}toString(){return this.message}}class h extends c{constructor(e){super(e),this.name=Object.keys({IllegalArgumentException:h})[0]}}class u{filter(e){}}function d(){}function g(){}function m(){}class p{static equalsWithTolerance(e,t,i){return Math.abs(e-t)<=i}}class f{constructor(e,t){this.low=t||0,this.high=e||0}static toBinaryString(e){let t,i="";for(t=2147483648;t>0;t>>>=1)i+=(e.high&t)===t?"1":"0";for(t=2147483648;t>0;t>>>=1)i+=(e.low&t)===t?"1":"0";return i}}function _(){}function y(){}_.NaN=NaN,_.isNaN=e=>Number.isNaN(e),_.isInfinite=e=>!Number.isFinite(e),_.MAX_VALUE=Number.MAX_VALUE,_.POSITIVE_INFINITY=Number.POSITIVE_INFINITY,_.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,"function"==typeof Float64Array&&"function"==typeof Int32Array?function(){const e=2146435072,t=new Float64Array(1),i=new Int32Array(t.buffer);_.doubleToLongBits=function(n){t[0]=n;let r=0|i[0],o=0|i[1];return(o&e)===e&&0!=(1048575&o)&&0!==r&&(r=0,o=2146959360),new f(o,r)},_.longBitsToDouble=function(e){return i[0]=e.low,i[1]=e.high,t[0]}}():function(){const e=1023,t=Math.log2,i=Math.floor,n=Math.pow,r=function(){for(let e=53;e>0;e--){const r=n(2,e)-1;if(i(t(r))+1===e)return r}return 0}();_.doubleToLongBits=function(o){let s,a,l,c,h,u,d,g,m;if(o<0||1/o===Number.NEGATIVE_INFINITY?(u=1<<31,o=-o):u=0,0===o)return m=0,g=u,new f(g,m);if(o===1/0)return m=0,g=2146435072|u,new f(g,m);if(o!=o)return m=0,g=2146959360,new f(g,m);if(c=0,m=0,s=i(o),s>1)if(s<=r)c=i(t(s)),c<=20?(m=0,g=s<<20-c&1048575):(l=c-20,a=n(2,l),m=s%a<<32-l,g=s/a&1048575);else for(l=s,m=0;a=l/2,l=i(a),0!==l;)c++,m>>>=1,m|=(1&g)<<31,g>>>=1,a!==l&&(g|=524288);if(d=c+e,h=0===s,s=o-s,c<52&&0!==s)for(l=0;;){if(a=2*s,a>=1?(s=a-1,h?(d--,h=!1):(l<<=1,l|=1,c++)):(s=a,h?0==--d&&(c++,h=!1):(l<<=1,c++)),20===c)g|=l,l=0;else if(52===c){m|=l;break}if(1===a){c<20?g|=l<<20-c:c<52&&(m|=l<<52-c);break}}return g|=d<<20,g|=u,new f(g,m)},_.longBitsToDouble=function(t){let i,r,o,s;const a=t.high,l=t.low,c=a&1<<31?-1:1;for(o=((2146435072&a)>>20)-e,s=0,r=1<<19,i=1;i<=20;i++)a&r&&(s+=n(2,-i)),r>>>=1;for(r=1<<31,i=21;i<=52;i++)l&r&&(s+=n(2,-i)),r>>>=1;if(-1023===o){if(0===s)return 0*c;o=-1022}else{if(1024===o)return 0===s?c/0:NaN;s+=1}return c*s*n(2,o)}}();class b extends c{constructor(e){super(e),this.name=Object.keys({RuntimeException:b})[0]}}class C extends b{constructor(){super(),C.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)b.constructor_.call(this);else if(1===arguments.length){const e=arguments[0];b.constructor_.call(this,e)}}}class x{static shouldNeverReachHere(){if(0===arguments.length)x.shouldNeverReachHere(null);else if(1===arguments.length){const e=arguments[0];throw new C("Should never reach here"+(null!==e?": "+e:""))}}static isTrue(){if(1===arguments.length){const e=arguments[0];x.isTrue(e,null)}else if(2===arguments.length){const e=arguments[1];if(!arguments[0])throw null===e?new C:new C(e)}}static equals(){if(2===arguments.length){const e=arguments[0],t=arguments[1];x.equals(e,t,null)}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];if(!t.equals(e))throw new C("Expected "+e+" but encountered "+t+(null!==i?": "+i:""))}}}const S=new ArrayBuffer(8),I=new Float64Array(S),T=new Int32Array(S);class v{constructor(){v.constructor_.apply(this,arguments)}static constructor_(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)v.constructor_.call(this,0,0);else if(1===arguments.length){const e=arguments[0];v.constructor_.call(this,e.x,e.y,e.getZ())}else if(2===arguments.length){const e=arguments[0],t=arguments[1];v.constructor_.call(this,e,t,v.NULL_ORDINATE)}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this.x=e,this.y=t,this.z=i}}static hashCode(e){return I[0]=e,T[0]^T[1]}getM(){return _.NaN}setOrdinate(e,t){switch(e){case v.X:this.x=t;break;case v.Y:this.y=t;break;case v.Z:this.setZ(t);break;default:throw new h("Invalid ordinate index: "+e)}}equals2D(){if(1===arguments.length){const e=arguments[0];return this.x===e.x&&this.y===e.y}if(2===arguments.length){const e=arguments[0],t=arguments[1];return!!p.equalsWithTolerance(this.x,e.x,t)&&!!p.equalsWithTolerance(this.y,e.y,t)}}setM(e){throw new h("Invalid ordinate index: "+v.M)}getZ(){return this.z}getOrdinate(e){switch(e){case v.X:return this.x;case v.Y:return this.y;case v.Z:return this.getZ()}throw new h("Invalid ordinate index: "+e)}equals3D(e){return this.x===e.x&&this.y===e.y&&(this.getZ()===e.getZ()||_.isNaN(this.getZ())&&_.isNaN(e.getZ()))}equals(e){return e instanceof v&&this.equals2D(e)}equalInZ(e,t){return p.equalsWithTolerance(this.getZ(),e.getZ(),t)}setX(e){this.x=e}compareTo(e){const t=e;return this.x<t.x?-1:this.x>t.x?1:this.y<t.y?-1:this.y>t.y?1:0}getX(){return this.x}setZ(e){this.z=e}clone(){try{return null}catch(e){if(e instanceof CloneNotSupportedException)return x.shouldNeverReachHere("this shouldn't happen because this class is Cloneable"),null;throw e}}copy(){return new v(this)}toString(){return"("+this.x+", "+this.y+", "+this.getZ()+")"}distance3D(e){const t=this.x-e.x,i=this.y-e.y,n=this.getZ()-e.getZ();return Math.sqrt(t*t+i*i+n*n)}getY(){return this.y}setY(e){this.y=e}distance(e){const t=this.x-e.x,i=this.y-e.y;return Math.sqrt(t*t+i*i)}hashCode(){let e=17;return e=37*e+v.hashCode(this.x),e=37*e+v.hashCode(this.y),e}setCoordinate(e){this.x=e.x,this.y=e.y,this.z=e.getZ()}get interfaces_(){return[d,g,m]}}class w{constructor(){w.constructor_.apply(this,arguments)}static constructor_(){if(this._dimensionsToTest=2,0===arguments.length)w.constructor_.call(this,2);else if(1===arguments.length){const e=arguments[0];if(2!==e&&3!==e)throw new h("only 2 or 3 dimensions may be specified");this._dimensionsToTest=e}}static compare(e,t){return e<t?-1:e>t?1:_.isNaN(e)?_.isNaN(t)?0:-1:_.isNaN(t)?1:0}compare(e,t){const i=w.compare(e.x,t.x);if(0!==i)return i;const n=w.compare(e.y,t.y);if(0!==n)return n;if(this._dimensionsToTest<=2)return 0;return w.compare(e.getZ(),t.getZ())}get interfaces_(){return[y]}}v.DimensionalComparator=w,v.NULL_ORDINATE=_.NaN,v.X=0,v.Y=1,v.Z=2,v.M=3;class E{constructor(){E.constructor_.apply(this,arguments)}static constructor_(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof v){const e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof E){const e=arguments[0];this.init(e)}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.init(e.x,t.x,e.y,t.y)}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];this.init(e,t,i,n)}}static intersects(){if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];return i.x>=(e.x<t.x?e.x:t.x)&&i.x<=(e.x>t.x?e.x:t.x)&&i.y>=(e.y<t.y?e.y:t.y)&&i.y<=(e.y>t.y?e.y:t.y)}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];let r=Math.min(i.x,n.x),o=Math.max(i.x,n.x),s=Math.min(e.x,t.x),a=Math.max(e.x,t.x);return!(s>o)&&(!(a<r)&&(r=Math.min(i.y,n.y),o=Math.max(i.y,n.y),s=Math.min(e.y,t.y),a=Math.max(e.y,t.y),!(s>o)&&!(a<r)))}}getArea(){return this.getWidth()*this.getHeight()}equals(e){if(!(e instanceof E))return!1;const t=e;return this.isNull()?t.isNull():this._maxx===t.getMaxX()&&this._maxy===t.getMaxY()&&this._minx===t.getMinX()&&this._miny===t.getMinY()}intersection(e){if(this.isNull()||e.isNull()||!this.intersects(e))return new E;const t=this._minx>e._minx?this._minx:e._minx,i=this._miny>e._miny?this._miny:e._miny,n=this._maxx<e._maxx?this._maxx:e._maxx,r=this._maxy<e._maxy?this._maxy:e._maxy;return new E(t,n,i,r)}isNull(){return this._maxx<this._minx}getMaxX(){return this._maxx}covers(){if(1===arguments.length){if(arguments[0]instanceof v){const e=arguments[0];return this.covers(e.x,e.y)}if(arguments[0]instanceof E){const e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];return!this.isNull()&&(e>=this._minx&&e<=this._maxx&&t>=this._miny&&t<=this._maxy)}}intersects(){if(1===arguments.length){if(arguments[0]instanceof E){const e=arguments[0];return!this.isNull()&&!e.isNull()&&!(e._minx>this._maxx||e._maxx<this._minx||e._miny>this._maxy||e._maxy<this._miny)}if(arguments[0]instanceof v){const e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){if(arguments[0]instanceof v&&arguments[1]instanceof v){const e=arguments[0],t=arguments[1];if(this.isNull())return!1;if((e.x<t.x?e.x:t.x)>this._maxx)return!1;if((e.x>t.x?e.x:t.x)<this._minx)return!1;if((e.y<t.y?e.y:t.y)>this._maxy)return!1;return!((e.y>t.y?e.y:t.y)<this._miny)}if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1];return!this.isNull()&&!(e>this._maxx||e<this._minx||t>this._maxy||t<this._miny)}}}getMinY(){return this._miny}getDiameter(){if(this.isNull())return 0;const e=this.getWidth(),t=this.getHeight();return Math.sqrt(e*e+t*t)}getMinX(){return this._minx}expandToInclude(){if(1===arguments.length){if(arguments[0]instanceof v){const e=arguments[0];this.expandToInclude(e.x,e.y)}else if(arguments[0]instanceof E){const e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.isNull()?(this._minx=e,this._maxx=e,this._miny=t,this._maxy=t):(e<this._minx&&(this._minx=e),e>this._maxx&&(this._maxx=e),t<this._miny&&(this._miny=t),t>this._maxy&&(this._maxy=t))}}minExtent(){if(this.isNull())return 0;const e=this.getWidth(),t=this.getHeight();return e<t?e:t}getWidth(){return this.isNull()?0:this._maxx-this._minx}compareTo(e){const t=e;return this.isNull()?t.isNull()?0:-1:t.isNull()?1:this._minx<t._minx?-1:this._minx>t._minx?1:this._miny<t._miny?-1:this._miny>t._miny?1:this._maxx<t._maxx?-1:this._maxx>t._maxx?1:this._maxy<t._maxy?-1:this._maxy>t._maxy?1:0}translate(e,t){if(this.isNull())return null;this.init(this.getMinX()+e,this.getMaxX()+e,this.getMinY()+t,this.getMaxY()+t)}copy(){return new E(this)}toString(){return"Env["+this._minx+" : "+this._maxx+", "+this._miny+" : "+this._maxy+"]"}setToNull(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1}disjoint(e){return!(!this.isNull()&&!e.isNull())||(e._minx>this._maxx||e._maxx<this._minx||e._miny>this._maxy||e._maxy<this._miny)}getHeight(){return this.isNull()?0:this._maxy-this._miny}maxExtent(){if(this.isNull())return 0;const e=this.getWidth(),t=this.getHeight();return e>t?e:t}expandBy(){if(1===arguments.length){const e=arguments[0];this.expandBy(e,e)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=t,this._maxy+=t,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}}contains(){if(1===arguments.length){if(arguments[0]instanceof E){const e=arguments[0];return this.covers(e)}if(arguments[0]instanceof v){const e=arguments[0];return this.covers(e)}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];return this.covers(e,t)}}centre(){return this.isNull()?null:new v((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)}init(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof v){const e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof E){const e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.init(e.x,t.x,e.y,t.y)}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];e<t?(this._minx=e,this._maxx=t):(this._minx=t,this._maxx=e),i<n?(this._miny=i,this._maxy=n):(this._miny=n,this._maxy=i)}}getMaxY(){return this._maxy}distance(e){if(this.intersects(e))return 0;let t=0;this._maxx<e._minx?t=e._minx-this._maxx:this._minx>e._maxx&&(t=this._minx-e._maxx);let i=0;return this._maxy<e._miny?i=e._miny-this._maxy:this._miny>e._maxy&&(i=this._miny-e._maxy),0===t?i:0===i?t:Math.sqrt(t*t+i*i)}hashCode(){let e=17;return e=37*e+v.hashCode(this._minx),e=37*e+v.hashCode(this._maxx),e=37*e+v.hashCode(this._miny),e=37*e+v.hashCode(this._maxy),e}get interfaces_(){return[d,m]}}class A{constructor(){A.constructor_.apply(this,arguments)}isGeometryCollection(){return this.getTypeCode()===A.TYPECODE_GEOMETRYCOLLECTION}getFactory(){return this._factory}getGeometryN(e){return this}getArea(){return 0}isRectangle(){return!1}equalsExact(e){return this===e||this.equalsExact(e,0)}geometryChanged(){this.apply(A.geometryChangedFilter)}geometryChangedAction(){this._envelope=null}equalsNorm(e){return null!==e&&this.norm().equalsExact(e.norm())}getLength(){return 0}getNumGeometries(){return 1}compareTo(){let e;if(1===arguments.length){const t=arguments[0];return e=t,this.getTypeCode()!==e.getTypeCode()?this.getTypeCode()-e.getTypeCode():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){const t=arguments[0],i=arguments[1];return e=t,this.getTypeCode()!==e.getTypeCode()?this.getTypeCode()-e.getTypeCode():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t,i)}}getUserData(){return this._userData}getSRID(){return this._SRID}getEnvelope(){return this.getFactory().toGeometry(this.getEnvelopeInternal())}checkNotGeometryCollection(e){if(e.getTypeCode()===A.TYPECODE_GEOMETRYCOLLECTION)throw new h("This method does not support GeometryCollection arguments")}equal(e,t,i){return 0===i?e.equals(t):e.distance(t)<=i}norm(){const e=this.copy();return e.normalize(),e}reverse(){const e=this.reverseInternal();return null!=this.envelope&&(e.envelope=this.envelope.copy()),e.setSRID(this.getSRID()),e}copy(){const e=this.copyInternal();return e.envelope=null==this._envelope?null:this._envelope.copy(),e._SRID=this._SRID,e._userData=this._userData,e}getPrecisionModel(){return this._factory.getPrecisionModel()}getEnvelopeInternal(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new E(this._envelope)}setSRID(e){this._SRID=e}setUserData(e){this._userData=e}compare(e,t){const i=e.iterator(),n=t.iterator();for(;i.hasNext()&&n.hasNext();){const e=i.next(),t=n.next(),r=e.compareTo(t);if(0!==r)return r}return i.hasNext()?1:n.hasNext()?-1:0}hashCode(){return this.getEnvelopeInternal().hashCode()}isEquivalentClass(e){return this.getClass()===e.getClass()}isGeometryCollectionOrDerived(){return this.getTypeCode()===A.TYPECODE_GEOMETRYCOLLECTION||this.getTypeCode()===A.TYPECODE_MULTIPOINT||this.getTypeCode()===A.TYPECODE_MULTILINESTRING||this.getTypeCode()===A.TYPECODE_MULTIPOLYGON}get interfaces_(){return[g,d,m]}getClass(){return A}static hasNonEmptyElements(e){for(let t=0;t<e.length;t++)if(!e[t].isEmpty())return!0;return!1}static hasNullElements(e){for(let t=0;t<e.length;t++)if(null===e[t])return!0;return!1}}A.constructor_=function(e){e&&(this._envelope=null,this._userData=null,this._factory=e,this._SRID=e.getSRID())},A.TYPECODE_POINT=0,A.TYPECODE_MULTIPOINT=1,A.TYPECODE_LINESTRING=2,A.TYPECODE_LINEARRING=3,A.TYPECODE_MULTILINESTRING=4,A.TYPECODE_POLYGON=5,A.TYPECODE_MULTIPOLYGON=6,A.TYPECODE_GEOMETRYCOLLECTION=7,A.TYPENAME_POINT="Point",A.TYPENAME_MULTIPOINT="MultiPoint",A.TYPENAME_LINESTRING="LineString",A.TYPENAME_LINEARRING="LinearRing",A.TYPENAME_MULTILINESTRING="MultiLineString",A.TYPENAME_POLYGON="Polygon",A.TYPENAME_MULTIPOLYGON="MultiPolygon",A.TYPENAME_GEOMETRYCOLLECTION="GeometryCollection",A.geometryChangedFilter={get interfaces_(){return[u]},filter(e){e.geometryChangedAction()}};class M{filter(e){}}function N(e,t){return e.interfaces_&&e.interfaces_.indexOf(t)>-1}class D{}class R{getM(e){if(this.hasM()){const t=this.getDimension()-this.getMeasures();return this.getOrdinate(e,t)}return _.NaN}setOrdinate(e,t,i){}getZ(e){return this.hasZ()?this.getOrdinate(e,2):_.NaN}size(){}getOrdinate(e,t){}getCoordinate(){}getCoordinateCopy(e){}createCoordinate(){}getDimension(){}hasM(){return this.getMeasures()>0}getX(e){}hasZ(){return this.getDimension()-this.getMeasures()>2}getMeasures(){return 0}expandEnvelope(e){}copy(){}getY(e){}toCoordinateArray(){}get interfaces_(){return[g]}}R.X=0,R.Y=1,R.Z=2,R.M=3;class L{static copyCoord(e,t,i,n){const r=Math.min(e.getDimension(),i.getDimension());for(let o=0;o<r;o++)i.setOrdinate(n,o,e.getOrdinate(t,o))}static isRing(e){const t=e.size();return 0===t||!(t<=3)&&(e.getOrdinate(0,R.X)===e.getOrdinate(t-1,R.X)&&e.getOrdinate(0,R.Y)===e.getOrdinate(t-1,R.Y))}static scroll(){if(2===arguments.length){if(N(arguments[0],R)&&Number.isInteger(arguments[1])){const e=arguments[0],t=arguments[1];L.scroll(e,t,L.isRing(e))}else if(N(arguments[0],R)&&arguments[1]instanceof v){const e=arguments[0],t=arguments[1],i=L.indexOf(t,e);if(i<=0)return null;L.scroll(e,i)}}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];if(t<=0)return null;const n=e.copy(),r=i?e.size()-1:e.size();for(let i=0;i<r;i++)for(let o=0;o<e.getDimension();o++)e.setOrdinate(i,o,n.getOrdinate((t+i)%r,o));if(i)for(let t=0;t<e.getDimension();t++)e.setOrdinate(r,t,e.getOrdinate(0,t))}}static isEqual(e,t){const i=e.size();if(i!==t.size())return!1;const n=Math.min(e.getDimension(),t.getDimension());for(let r=0;r<i;r++)for(let i=0;i<n;i++){const n=e.getOrdinate(r,i),o=t.getOrdinate(r,i);if(e.getOrdinate(r,i)!==t.getOrdinate(r,i)&&(!_.isNaN(n)||!_.isNaN(o)))return!1}return!0}static minCoordinateIndex(){if(1===arguments.length){const e=arguments[0];return L.minCoordinateIndex(e,0,e.size()-1)}if(3===arguments.length){const e=arguments[0],t=arguments[2];let i=-1,n=null;for(let r=arguments[1];r<=t;r++){const t=e.getCoordinate(r);(null===n||n.compareTo(t)>0)&&(n=t,i=r)}return i}}static extend(e,t,i){const n=e.create(i,t.getDimension()),r=t.size();if(L.copy(t,0,n,0,r),r>0)for(let e=r;e<i;e++)L.copy(t,r-1,n,e,1);return n}static reverse(e){const t=e.size()-1,i=Math.trunc(t/2);for(let n=0;n<=i;n++)L.swap(e,n,t-n)}static swap(e,t,i){if(t===i)return null;for(let n=0;n<e.getDimension();n++){const r=e.getOrdinate(t,n);e.setOrdinate(t,n,e.getOrdinate(i,n)),e.setOrdinate(i,n,r)}}static copy(e,t,i,n,r){for(let o=0;o<r;o++)L.copyCoord(e,t+o,i,n+o)}static ensureValidRing(e,t){const i=t.size();if(0===i)return t;if(i<=3)return L.createClosedRing(e,t,4);return t.getOrdinate(0,R.X)===t.getOrdinate(i-1,R.X)&&t.getOrdinate(0,R.Y)===t.getOrdinate(i-1,R.Y)?t:L.createClosedRing(e,t,i+1)}static indexOf(e,t){for(let i=0;i<t.size();i++)if(e.x===t.getOrdinate(i,R.X)&&e.y===t.getOrdinate(i,R.Y))return i;return-1}static createClosedRing(e,t,i){const n=e.create(i,t.getDimension()),r=t.size();L.copy(t,0,n,0,r);for(let e=r;e<i;e++)L.copy(t,0,n,e,1);return n}static minCoordinate(e){let t=null;for(let i=0;i<e.size();i++){const n=e.getCoordinate(i);(null===t||t.compareTo(n)>0)&&(t=n)}return t}}class P extends c{constructor(e){super(e),this.name=Object.keys({UnsupportedOperationException:P})[0]}}class O{static isWhitespace(e){return e<=32&&e>=0||127===e}static toUpperCase(e){return e.toUpperCase()}}class k{static toDimensionSymbol(e){switch(e){case k.FALSE:return k.SYM_FALSE;case k.TRUE:return k.SYM_TRUE;case k.DONTCARE:return k.SYM_DONTCARE;case k.P:return k.SYM_P;case k.L:return k.SYM_L;case k.A:return k.SYM_A}throw new h("Unknown dimension value: "+e)}static toDimensionValue(e){switch(O.toUpperCase(e)){case k.SYM_FALSE:return k.FALSE;case k.SYM_TRUE:return k.TRUE;case k.SYM_DONTCARE:return k.DONTCARE;case k.SYM_P:return k.P;case k.SYM_L:return k.L;case k.SYM_A:return k.A}throw new h("Unknown dimension symbol: "+e)}}k.P=0,k.L=1,k.A=2,k.FALSE=-1,k.TRUE=-2,k.DONTCARE=-3,k.SYM_FALSE="F",k.SYM_TRUE="T",k.SYM_DONTCARE="*",k.SYM_P="0",k.SYM_L="1",k.SYM_A="2";class B{filter(e){}}class F{filter(e,t){}isDone(){}isGeometryChanged(){}}class G extends A{constructor(){super(),G.constructor_.apply(this,arguments)}static constructor_(){if(this._points=null,0===arguments.length);else if(2===arguments.length){const e=arguments[0],t=arguments[1];A.constructor_.call(this,t),this.init(e)}}computeEnvelopeInternal(){return this.isEmpty()?new E:this._points.expandEnvelope(new E)}isRing(){return this.isClosed()&&this.isSimple()}getCoordinates(){return this._points.toCoordinateArray()}copyInternal(){return new G(this._points.copy(),this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof A){const e=arguments[0],t=arguments[1];if(!this.isEquivalentClass(e))return!1;const i=e;if(this._points.size()!==i._points.size())return!1;for(let e=0;e<this._points.size();e++)if(!this.equal(this._points.getCoordinate(e),i._points.getCoordinate(e),t))return!1;return!0}return super.equalsExact.apply(this,arguments)}normalize(){for(let e=0;e<Math.trunc(this._points.size()/2);e++){const t=this._points.size()-1-e;if(!this._points.getCoordinate(e).equals(this._points.getCoordinate(t))){if(this._points.getCoordinate(e).compareTo(this._points.getCoordinate(t))>0){const e=this._points.copy();L.reverse(e),this._points=e}return null}}}getCoordinate(){return this.isEmpty()?null:this._points.getCoordinate(0)}getBoundaryDimension(){return this.isClosed()?k.FALSE:0}isClosed(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))}reverseInternal(){const e=this._points.copy();return L.reverse(e),this.getFactory().createLineString(e)}getEndPoint(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)}getTypeCode(){return A.TYPECODE_LINESTRING}getDimension(){return 1}getLength(){return class{static ofLine(e){const t=e.size();if(t<=1)return 0;let i=0;const n=new v;e.getCoordinate(0,n);let r=n.x,o=n.y;for(let s=1;s<t;s++){e.getCoordinate(s,n);const t=n.x,a=n.y,l=t-r,c=a-o;i+=Math.sqrt(l*l+c*c),r=t,o=a}return i}}.ofLine(this._points)}getNumPoints(){return this._points.size()}compareToSameClass(){if(1===arguments.length){const e=arguments[0];let t=0,i=0;for(;t<this._points.size()&&i<e._points.size();){const n=this._points.getCoordinate(t).compareTo(e._points.getCoordinate(i));if(0!==n)return n;t++,i++}return t<this._points.size()?1:i<e._points.size()?-1:0}if(2===arguments.length){const e=arguments[0];return arguments[1].compare(this._points,e._points)}}apply(){if(N(arguments[0],M)){const e=arguments[0];for(let t=0;t<this._points.size();t++)e.filter(this._points.getCoordinate(t))}else if(N(arguments[0],F)){const e=arguments[0];if(0===this._points.size())return null;for(let t=0;t<this._points.size()&&(e.filter(this._points,t),!e.isDone());t++);e.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],B)){arguments[0].filter(this)}else if(N(arguments[0],u)){arguments[0].filter(this)}}getBoundary(){throw new P}isEquivalentClass(e){return e instanceof G}getCoordinateN(e){return this._points.getCoordinate(e)}getGeometryType(){return A.TYPENAME_LINESTRING}getCoordinateSequence(){return this._points}isEmpty(){return 0===this._points.size()}init(e){if(null===e&&(e=this.getFactory().getCoordinateSequenceFactory().create([])),1===e.size())throw new h("Invalid number of points in LineString (found "+e.size()+" - must be 0 or >= 2)");this._points=e}isCoordinate(e){for(let t=0;t<this._points.size();t++)if(this._points.getCoordinate(t).equals(e))return!0;return!1}getStartPoint(){return this.isEmpty()?null:this.getPointN(0)}getPointN(e){return this.getFactory().createPoint(this._points.getCoordinate(e))}get interfaces_(){return[D]}}class W{add(){}addAll(){}isEmpty(){}iterator(){}size(){}toArray(){}remove(){}}class z extends c{constructor(e){super(e),this.name=Object.keys({IndexOutOfBoundsException:z})[0]}}class H extends W{get(){}set(){}isEmpty(){}}class U extends c{constructor(e){super(e),this.name=Object.keys({NoSuchElementException:U})[0]}}class V extends H{constructor(e){super(),this.array=[],e instanceof W&&this.addAll(e)}get interfaces_(){return[H,W]}ensureCapacity(){}add(e){return 1===arguments.length?this.array.push(e):this.array.splice(arguments[0],0,arguments[1]),!0}clear(){this.array=[]}addAll(e){for(const t of e)this.array.push(t)}set(e,t){const i=this.array[e];return this.array[e]=t,i}iterator(){return new Y(this)}get(e){if(e<0||e>=this.size())throw new z;return this.array[e]}isEmpty(){return 0===this.array.length}sort(e){e?this.array.sort(((t,i)=>e.compare(t,i))):this.array.sort()}size(){return this.array.length}toArray(){return this.array.slice()}remove(e){for(let t=0,i=this.array.length;t<i;t++)if(this.array[t]===e)return!!this.array.splice(t,1);return!1}[Symbol.iterator](){return this.array.values()}}class Y{constructor(e){this.arrayList=e,this.position=0}next(){if(this.position===this.arrayList.size())throw new U;return this.arrayList.get(this.position++)}hasNext(){return this.position<this.arrayList.size()}set(e){return this.arrayList.set(this.position-1,e)}remove(){this.arrayList.remove(this.arrayList.get(this.position))}}class q extends V{constructor(){super(),q.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length);else if(1===arguments.length){const e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.ensureCapacity(e.length),this.add(e,t)}}getCoordinate(e){return this.get(e)}addAll(){if(2===arguments.length&&"boolean"==typeof arguments[1]&&N(arguments[0],W)){const e=arguments[1];let t=!1;for(let i=arguments[0].iterator();i.hasNext();)this.add(i.next(),e),t=!0;return t}return super.addAll.apply(this,arguments)}clone(){const e=super.clone.call(this);for(let t=0;t<this.size();t++)e.add(t,this.get(t).clone());return e}toCoordinateArray(){if(0===arguments.length)return this.toArray(q.coordArrayType);if(1===arguments.length){if(arguments[0])return this.toArray(q.coordArrayType);const e=this.size(),t=new Array(e).fill(null);for(let i=0;i<e;i++)t[i]=this.get(e-i-1);return t}}add(){if(1===arguments.length){const e=arguments[0];return super.add.call(this,e)}if(2===arguments.length){if(arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){const e=arguments[0],t=arguments[1];return this.add(e,t,!0),!0}if(arguments[0]instanceof v&&"boolean"==typeof arguments[1]){const e=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(e))return null}super.add.call(this,e)}else if(arguments[0]instanceof Object&&"boolean"==typeof arguments[1]){const e=arguments[0],t=arguments[1];return this.add(e,t),!0}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&arguments[0]instanceof Array&&"boolean"==typeof arguments[1]){const e=arguments[0],t=arguments[1];if(arguments[2])for(let i=0;i<e.length;i++)this.add(e[i],t);else for(let i=e.length-1;i>=0;i--)this.add(e[i],t);return!0}if("boolean"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof v){const e=arguments[0],t=arguments[1];if(!arguments[2]){const i=this.size();if(i>0){if(e>0){if(this.get(e-1).equals2D(t))return null}if(e<i){if(this.get(e).equals2D(t))return null}}}super.add.call(this,e,t)}}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];let r=1;i>n&&(r=-1);for(let o=i;o!==n;o+=r)this.add(e[o],t);return!0}}closeRing(){if(this.size()>0){const e=this.get(0).copy();this.add(e,!1)}}}q.coordArrayType=new Array(0).fill(null);class j{create(){if(1===arguments.length)arguments[0]instanceof Array||N(arguments[0],R);else if(2===arguments.length);else if(3===arguments.length){const e=arguments[0],t=arguments[1];return this.create(e,t)}}}class K{}class X extends A{constructor(){super(),X.constructor_.apply(this,arguments)}static constructor_(){this._coordinates=null;const e=arguments[0],t=arguments[1];A.constructor_.call(this,t),this.init(e)}computeEnvelopeInternal(){if(this.isEmpty())return new E;const e=new E;return e.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),e}getCoordinates(){return this.isEmpty()?[]:[this.getCoordinate()]}copyInternal(){return new X(this._coordinates.copy(),this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof A){const e=arguments[0],t=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),t))}return super.equalsExact.apply(this,arguments)}normalize(){}getCoordinate(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null}getBoundaryDimension(){return k.FALSE}reverseInternal(){return this.getFactory().createPoint(this._coordinates.copy())}getTypeCode(){return A.TYPECODE_POINT}getDimension(){return 0}getNumPoints(){return this.isEmpty()?0:1}getX(){if(null===this.getCoordinate())throw new IllegalStateException("getX called on empty Point");return this.getCoordinate().x}compareToSameClass(){if(1===arguments.length){const e=arguments[0];return this.getCoordinate().compareTo(e.getCoordinate())}if(2===arguments.length){const e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}}apply(){if(N(arguments[0],M)){const e=arguments[0];if(this.isEmpty())return null;e.filter(this.getCoordinate())}else if(N(arguments[0],F)){const e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],B)){arguments[0].filter(this)}else if(N(arguments[0],u)){arguments[0].filter(this)}}getBoundary(){return this.getFactory().createGeometryCollection()}getGeometryType(){return A.TYPENAME_POINT}getCoordinateSequence(){return this._coordinates}getY(){if(null===this.getCoordinate())throw new IllegalStateException("getY called on empty Point");return this.getCoordinate().y}isEmpty(){return 0===this._coordinates.size()}init(e){null===e&&(e=this.getFactory().getCoordinateSequenceFactory().create([])),x.isTrue(e.size()<=1),this._coordinates=e}isSimple(){return!0}get interfaces_(){return[K]}}class J{static ofRing(){if(arguments[0]instanceof Array){const e=arguments[0];return Math.abs(J.ofRingSigned(e))}if(N(arguments[0],R)){const e=arguments[0];return Math.abs(J.ofRingSigned(e))}}static ofRingSigned(){if(arguments[0]instanceof Array){const e=arguments[0];if(e.length<3)return 0;let t=0;const i=e[0].x;for(let n=1;n<e.length-1;n++){const r=e[n].x-i,o=e[n+1].y;t+=r*(e[n-1].y-o)}return t/2}if(N(arguments[0],R)){const e=arguments[0],t=e.size();if(t<3)return 0;const i=new v,n=new v,r=new v;e.getCoordinate(0,n),e.getCoordinate(1,r);const o=n.x;r.x-=o;let s=0;for(let a=1;a<t-1;a++)i.y=n.y,n.x=r.x,n.y=r.y,e.getCoordinate(a+1,r),r.x-=o,s+=n.x*(i.y-r.y);return s/2}}}class Z{static sort(){const e=arguments[0];if(1===arguments.length)e.sort(((e,t)=>e.compareTo(t)));else if(2===arguments.length)e.sort(((e,t)=>arguments[1].compare(e,t)));else if(3===arguments.length){const t=e.slice(arguments[1],arguments[2]);t.sort();const i=e.slice(0,arguments[1]).concat(t,e.slice(arguments[2],e.length));e.splice(0,e.length);for(const t of i)e.push(t)}else if(4===arguments.length){const t=e.slice(arguments[1],arguments[2]);t.sort(((e,t)=>arguments[3].compare(e,t)));const i=e.slice(0,arguments[1]).concat(t,e.slice(arguments[2],e.length));e.splice(0,e.length);for(const t of i)e.push(t)}}static asList(e){const t=new V;for(const i of e)t.add(i);return t}static copyOf(e,t){return e.slice(0,t)}}class Q{constructor(e){this.str=e}append(e){this.str+=e}setCharAt(e,t){this.str=this.str.substr(0,e)+t+this.str.substr(e+1)}toString(){return this.str}}class ee{constructor(e){this.value=e}intValue(){return this.value}compareTo(e){return this.value<e?-1:this.value>e?1:0}static compare(e,t){return e<t?-1:e>t?1:0}static isNan(e){return Number.isNaN(e)}static valueOf(e){return new ee(e)}}class te{constructor(){te.constructor_.apply(this,arguments)}static constructor_(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if("number"==typeof arguments[0]){const e=arguments[0];this.init(e)}else if(arguments[0]instanceof te){const e=arguments[0];this.init(e)}else if("string"==typeof arguments[0]){const e=arguments[0];te.constructor_.call(this,te.parse(e))}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.init(e,t)}}static determinant(){if("number"==typeof arguments[3]&&"number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];return te.determinant(te.valueOf(e),te.valueOf(t),te.valueOf(i),te.valueOf(n))}if(arguments[3]instanceof te&&arguments[2]instanceof te&&arguments[0]instanceof te&&arguments[1]instanceof te){const e=arguments[1],t=arguments[2],i=arguments[3];return arguments[0].multiply(i).selfSubtract(e.multiply(t))}}static sqr(e){return te.valueOf(e).selfMultiply(e)}static valueOf(){if("string"==typeof arguments[0]){const e=arguments[0];return te.parse(e)}if("number"==typeof arguments[0]){return new te(arguments[0])}}static sqrt(e){return te.valueOf(e).sqrt()}static parse(e){let t=0;const i=e.length;for(;O.isWhitespace(e.charAt(t));)t++;let n=!1;if(t<i){const i=e.charAt(t);"-"!==i&&"+"!==i||(t++,"-"===i&&(n=!0))}const r=new te;let o=0,s=0,a=0,l=!1;for(;!(t>=i);){const i=e.charAt(t);if(t++,O.isDigit(i)){const e=i-"0";r.selfMultiply(te.TEN),r.selfAdd(e),o++}else{if("."!==i){if("e"===i||"E"===i){const i=e.substring(t);try{a=ee.parseInt(i)}catch(t){throw t instanceof NumberFormatException?new NumberFormatException("Invalid exponent "+i+" in string "+e):t}break}throw new NumberFormatException("Unexpected character '"+i+"' at position "+t+" in string "+e)}s=o,l=!0}}let c=r;l||(s=o);const h=o-s-a;if(0===h)c=r;else if(h>0){const e=te.TEN.pow(h);c=r.divide(e)}else if(h<0){const e=te.TEN.pow(-h);c=r.multiply(e)}return n?c.negate():c}static createNaN(){return new te(_.NaN,_.NaN)}static copy(e){return new te(e)}static magnitude(e){const t=Math.abs(e),i=Math.log(t)/Math.log(10);let n=Math.trunc(Math.floor(i));return 10*Math.pow(10,n)<=t&&(n+=1),n}static stringOfChar(e,t){const i=new Q;for(let n=0;n<t;n++)i.append(e);return i.toString()}le(e){return this._hi<e._hi||this._hi===e._hi&&this._lo<=e._lo}extractSignificantDigits(e,t){let i=this.abs(),n=te.magnitude(i._hi);const r=te.TEN.pow(n);i=i.divide(r),i.gt(te.TEN)?(i=i.divide(te.TEN),n+=1):i.lt(te.ONE)&&(i=i.multiply(te.TEN),n-=1);const o=n+1,s=new Q,a=te.MAX_PRINT_DIGITS-1;for(let t=0;t<=a;t++){e&&t===o&&s.append(".");const n=Math.trunc(i._hi);if(n<0)break;let r=!1,l=0;n>9?(r=!0,l="9"):l="0"+n,s.append(l),i=i.subtract(te.valueOf(n)).multiply(te.TEN),r&&i.selfAdd(te.TEN);let c=!0;const h=te.magnitude(i._hi);if(h<0&&Math.abs(h)>=a-t&&(c=!1),!c)break}return t[0]=n,s.toString()}sqr(){return this.multiply(this)}doubleValue(){return this._hi+this._lo}subtract(){if(arguments[0]instanceof te){const e=arguments[0];return this.add(e.negate())}if("number"==typeof arguments[0]){const e=arguments[0];return this.add(-e)}}equals(){if(1===arguments.length&&arguments[0]instanceof te){const e=arguments[0];return this._hi===e._hi&&this._lo===e._lo}}isZero(){return 0===this._hi&&0===this._lo}selfSubtract(){if(arguments[0]instanceof te){const e=arguments[0];return this.isNaN()?this:this.selfAdd(-e._hi,-e._lo)}if("number"==typeof arguments[0]){const e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}}getSpecialNumberString(){return this.isZero()?"0.0":this.isNaN()?"NaN ":null}min(e){return this.le(e)?this:e}selfDivide(){if(1===arguments.length){if(arguments[0]instanceof te){const e=arguments[0];return this.selfDivide(e._hi,e._lo)}if("number"==typeof arguments[0]){const e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];let i=null,n=null,r=null,o=null,s=null,a=null,l=null,c=null;return s=this._hi/e,a=te.SPLIT*s,i=a-s,c=te.SPLIT*e,i=a-i,n=s-i,r=c-e,l=s*e,r=c-r,o=e-r,c=i*r-l+i*o+n*r+n*o,a=(this._hi-l-c+this._lo-s*t)/e,c=s+a,this._hi=c,this._lo=s-c+a,this}}dump(){return"DD<"+this._hi+", "+this._lo+">"}divide(){if(arguments[0]instanceof te){const e=arguments[0];let t=null,i=null,n=null,r=null,o=null,s=null,a=null,l=null;o=this._hi/e._hi,s=te.SPLIT*o,t=s-o,l=te.SPLIT*e._hi,t=s-t,i=o-t,n=l-e._hi,a=o*e._hi,n=l-n,r=e._hi-n,l=t*n-a+t*r+i*n+i*r,s=(this._hi-a-l+this._lo-o*e._lo)/e._hi,l=o+s;return new te(l,o-l+s)}if("number"==typeof arguments[0]){const e=arguments[0];return _.isNaN(e)?te.createNaN():te.copy(this).selfDivide(e,0)}}ge(e){return this._hi>e._hi||this._hi===e._hi&&this._lo>=e._lo}pow(e){if(0===e)return te.valueOf(1);let t=new te(this),i=te.valueOf(1),n=Math.abs(e);if(n>1)for(;n>0;)n%2==1&&i.selfMultiply(t),n/=2,n>0&&(t=t.sqr());else i=t;return e<0?i.reciprocal():i}ceil(){if(this.isNaN())return te.NaN;const e=Math.ceil(this._hi);let t=0;return e===this._hi&&(t=Math.ceil(this._lo)),new te(e,t)}compareTo(e){const t=e;return this._hi<t._hi?-1:this._hi>t._hi?1:this._lo<t._lo?-1:this._lo>t._lo?1:0}rint(){if(this.isNaN())return this;return this.add(.5).floor()}setValue(){if(arguments[0]instanceof te){const e=arguments[0];return this.init(e),this}if("number"==typeof arguments[0]){const e=arguments[0];return this.init(e),this}}max(e){return this.ge(e)?this:e}sqrt(){if(this.isZero())return te.valueOf(0);if(this.isNegative())return te.NaN;const e=1/Math.sqrt(this._hi),t=this._hi*e,i=te.valueOf(t),n=this.subtract(i.sqr())._hi*(.5*e);return i.add(n)}selfAdd(){if(1===arguments.length){if(arguments[0]instanceof te){const e=arguments[0];return this.selfAdd(e._hi,e._lo)}if("number"==typeof arguments[0]){const e=arguments[0];let t=null,i=null,n=null,r=null,o=null,s=null;return n=this._hi+e,o=n-this._hi,r=n-o,r=e-o+(this._hi-r),s=r+this._lo,t=n+s,i=s+(n-t),this._hi=t+i,this._lo=i+(t-this._hi),this}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];let i=null,n=null,r=null,o=null,s=null,a=null,l=null,c=null;s=this._hi+e,r=this._lo+t,l=s-this._hi,c=r-this._lo,a=s-l,o=r-c,a=e-l+(this._hi-a),o=t-c+(this._lo-o),l=a+r,i=s+l,n=l+(s-i),l=o+n;const h=i+l,u=l+(i-h);return this._hi=h,this._lo=u,this}}selfMultiply(){if(1===arguments.length){if(arguments[0]instanceof te){const e=arguments[0];return this.selfMultiply(e._hi,e._lo)}if("number"==typeof arguments[0]){const e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];let i=null,n=null,r=null,o=null,s=null,a=null;s=te.SPLIT*this._hi,i=s-this._hi,a=te.SPLIT*e,i=s-i,n=this._hi-i,r=a-e,s=this._hi*e,r=a-r,o=e-r,a=i*r-s+i*o+n*r+n*o+(this._hi*t+this._lo*e);const l=s+a;i=s-l;const c=a+i;return this._hi=l,this._lo=c,this}}selfSqr(){return this.selfMultiply(this)}floor(){if(this.isNaN())return te.NaN;const e=Math.floor(this._hi);let t=0;return e===this._hi&&(t=Math.floor(this._lo)),new te(e,t)}negate(){return this.isNaN()?this:new te(-this._hi,-this._lo)}clone(){try{return null}catch(e){if(e instanceof CloneNotSupportedException)return null;throw e}}multiply(){if(arguments[0]instanceof te){const e=arguments[0];return e.isNaN()?te.createNaN():te.copy(this).selfMultiply(e)}if("number"==typeof arguments[0]){const e=arguments[0];return _.isNaN(e)?te.createNaN():te.copy(this).selfMultiply(e,0)}}isNaN(){return _.isNaN(this._hi)}intValue(){return Math.trunc(this._hi)}toString(){const e=te.magnitude(this._hi);return e>=-3&&e<=20?this.toStandardNotation():this.toSciNotation()}toStandardNotation(){const e=this.getSpecialNumberString();if(null!==e)return e;const t=new Array(1).fill(null),i=this.extractSignificantDigits(!0,t),n=t[0]+1;let r=i;if("."===i.charAt(0))r="0"+i;else if(n<0)r="0."+te.stringOfChar("0",-n)+i;else if(-1===i.indexOf(".")){const e=n-i.length;r=i+te.stringOfChar("0",e)+".0"}return this.isNegative()?"-"+r:r}reciprocal(){let e=null,t=null,i=null,n=null,r=null,o=null,s=null,a=null;r=1/this._hi,o=te.SPLIT*r,e=o-r,a=te.SPLIT*this._hi,e=o-e,t=r-e,i=a-this._hi,s=r*this._hi,i=a-i,n=this._hi-i,a=e*i-s+e*n+t*i+t*n,o=(1-s-a-r*this._lo)/this._hi;const l=r+o;return new te(l,r-l+o)}toSciNotation(){if(this.isZero())return te.SCI_NOT_ZERO;const e=this.getSpecialNumberString();if(null!==e)return e;const t=new Array(1).fill(null),i=this.extractSignificantDigits(!1,t),n=te.SCI_NOT_EXPONENT_CHAR+t[0];if("0"===i.charAt(0))throw new IllegalStateException("Found leading zero: "+i);let r="";i.length>1&&(r=i.substring(1));const o=i.charAt(0)+"."+r;return this.isNegative()?"-"+o+n:o+n}abs(){return this.isNaN()?te.NaN:this.isNegative()?this.negate():new te(this)}isPositive(){return this._hi>0||0===this._hi&&this._lo>0}lt(e){return this._hi<e._hi||this._hi===e._hi&&this._lo<e._lo}add(){if(arguments[0]instanceof te){const e=arguments[0];return te.copy(this).selfAdd(e)}if("number"==typeof arguments[0]){const e=arguments[0];return te.copy(this).selfAdd(e)}}init(){if(1===arguments.length){if("number"==typeof arguments[0]){const e=arguments[0];this._hi=e,this._lo=0}else if(arguments[0]instanceof te){const e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this._hi=e,this._lo=t}}gt(e){return this._hi>e._hi||this._hi===e._hi&&this._lo>e._lo}isNegative(){return this._hi<0||0===this._hi&&this._lo<0}trunc(){return this.isNaN()?te.NaN:this.isPositive()?this.floor():this.ceil()}signum(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0}get interfaces_(){return[m,d,g]}}te.PI=new te(3.141592653589793,12246467991473532e-32),te.TWO_PI=new te(6.283185307179586,24492935982947064e-32),te.PI_2=new te(1.5707963267948966,6123233995736766e-32),te.E=new te(2.718281828459045,14456468917292502e-32),te.NaN=new te(_.NaN,_.NaN),te.EPS=123259516440783e-46,te.SPLIT=134217729,te.MAX_PRINT_DIGITS=32,te.TEN=te.valueOf(10),te.ONE=te.valueOf(1),te.SCI_NOT_EXPONENT_CHAR="E",te.SCI_NOT_ZERO="0.0E0";class ie{static orientationIndex(e,t,i){const n=ie.orientationIndexFilter(e,t,i);if(n<=1)return n;const r=te.valueOf(t.x).selfAdd(-e.x),o=te.valueOf(t.y).selfAdd(-e.y),s=te.valueOf(i.x).selfAdd(-t.x),a=te.valueOf(i.y).selfAdd(-t.y);return r.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()}static signOfDet2x2(){if(arguments[3]instanceof te&&arguments[2]instanceof te&&arguments[0]instanceof te&&arguments[1]instanceof te){const e=arguments[1],t=arguments[2],i=arguments[3];return arguments[0].multiply(i).selfSubtract(e.multiply(t)).signum()}if("number"==typeof arguments[3]&&"number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=te.valueOf(e),o=te.valueOf(t),s=te.valueOf(i),a=te.valueOf(n);return r.multiply(a).selfSubtract(o.multiply(s)).signum()}}static intersection(e,t,i,n){const r=new te(e.y).selfSubtract(t.y),o=new te(t.x).selfSubtract(e.x),s=new te(e.x).selfMultiply(t.y).selfSubtract(new te(t.x).selfMultiply(e.y)),a=new te(i.y).selfSubtract(n.y),l=new te(n.x).selfSubtract(i.x),c=new te(i.x).selfMultiply(n.y).selfSubtract(new te(n.x).selfMultiply(i.y)),h=o.multiply(c).selfSubtract(l.multiply(s)),u=a.multiply(s).selfSubtract(r.multiply(c)),d=r.multiply(l).selfSubtract(a.multiply(o)),g=h.selfDivide(d).doubleValue(),m=u.selfDivide(d).doubleValue();return _.isNaN(g)||_.isInfinite(g)||_.isNaN(m)||_.isInfinite(m)?null:new v(g,m)}static orientationIndexFilter(e,t,i){let n=null;const r=(e.x-i.x)*(t.y-i.y),o=(e.y-i.y)*(t.x-i.x),s=r-o;if(r>0){if(o<=0)return ie.signum(s);n=r+o}else{if(!(r<0))return ie.signum(s);if(o>=0)return ie.signum(s);n=-r-o}const a=ie.DP_SAFE_EPSILON*n;return s>=a||-s>=a?ie.signum(s):2}static signum(e){return e>0?1:e<0?-1:0}}ie.DP_SAFE_EPSILON=1e-15;class ne{static index(e,t,i){return ie.orientationIndex(e,t,i)}static isCCW(){if(arguments[0]instanceof Array){const e=arguments[0],t=e.length-1;if(t<3)throw new h("Ring has fewer than 4 points, so orientation cannot be determined");let i=e[0],n=0;for(let r=1;r<=t;r++){const t=e[r];t.y>i.y&&(i=t,n=r)}let r=n;do{r-=1,r<0&&(r=t)}while(e[r].equals2D(i)&&r!==n);let o=n;do{o=(o+1)%t}while(e[o].equals2D(i)&&o!==n);const s=e[r],a=e[o];if(s.equals2D(i)||a.equals2D(i)||s.equals2D(a))return!1;const l=ne.index(s,i,a);let c=null;return c=0===l?s.x>a.x:l>0,c}if(N(arguments[0],R)){const e=arguments[0],t=e.size()-1;if(t<3)throw new h("Ring has fewer than 4 points, so orientation cannot be determined");let i=e.getCoordinate(0),n=0;for(let r=1;r<=t;r++){const t=e.getCoordinate(r);t.y>i.y&&(i=t,n=r)}let r=null,o=n;do{o-=1,o<0&&(o=t),r=e.getCoordinate(o)}while(r.equals2D(i)&&o!==n);let s=null,a=n;do{a=(a+1)%t,s=e.getCoordinate(a)}while(s.equals2D(i)&&a!==n);if(r.equals2D(i)||s.equals2D(i)||r.equals2D(s))return!1;const l=ne.index(r,i,s);let c=null;return c=0===l?r.x>s.x:l>0,c}}}ne.CLOCKWISE=-1,ne.RIGHT=ne.CLOCKWISE,ne.COUNTERCLOCKWISE=1,ne.LEFT=ne.COUNTERCLOCKWISE,ne.COLLINEAR=0,ne.STRAIGHT=ne.COLLINEAR;class re{}class oe extends A{constructor(){super(),oe.constructor_.apply(this,arguments)}static constructor_(){this._shell=null,this._holes=null;let e=arguments[0],t=arguments[1],i=arguments[2];if(A.constructor_.call(this,i),null===e&&(e=this.getFactory().createLinearRing()),null===t&&(t=[]),A.hasNullElements(t))throw new h("holes must not contain null elements");if(e.isEmpty()&&A.hasNonEmptyElements(t))throw new h("shell is empty but holes are not");this._shell=e,this._holes=t}computeEnvelopeInternal(){return this._shell.getEnvelopeInternal()}getCoordinates(){if(this.isEmpty())return[];const e=new Array(this.getNumPoints()).fill(null);let t=-1;const i=this._shell.getCoordinates();for(let n=0;n<i.length;n++)t++,e[t]=i[n];for(let i=0;i<this._holes.length;i++){const n=this._holes[i].getCoordinates();for(let i=0;i<n.length;i++)t++,e[t]=n[i]}return e}getArea(){let e=0;e+=J.ofRing(this._shell.getCoordinateSequence());for(let t=0;t<this._holes.length;t++)e-=J.ofRing(this._holes[t].getCoordinateSequence());return e}copyInternal(){const e=this._shell.copy(),t=new Array(this._holes.length).fill(null);for(let e=0;e<this._holes.length;e++)t[e]=this._holes[e].copy();return new oe(e,t,this._factory)}isRectangle(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;const e=this._shell.getCoordinateSequence(),t=this.getEnvelopeInternal();for(let i=0;i<5;i++){const n=e.getX(i);if(n!==t.getMinX()&&n!==t.getMaxX())return!1;const r=e.getY(i);if(r!==t.getMinY()&&r!==t.getMaxY())return!1}let i=e.getX(0),n=e.getY(0);for(let t=1;t<=4;t++){const r=e.getX(t),o=e.getY(t);if(r!==i===(o!==n))return!1;i=r,n=o}return!0}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof A){const e=arguments[0],t=arguments[1];if(!this.isEquivalentClass(e))return!1;const i=e,n=this._shell,r=i._shell;if(!n.equalsExact(r,t))return!1;if(this._holes.length!==i._holes.length)return!1;for(let e=0;e<this._holes.length;e++)if(!this._holes[e].equalsExact(i._holes[e],t))return!1;return!0}return super.equalsExact.apply(this,arguments)}normalize(){if(0===arguments.length){this._shell=this.normalized(this._shell,!0);for(let e=0;e<this._holes.length;e++)this._holes[e]=this.normalized(this._holes[e],!1);Z.sort(this._holes)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];if(e.isEmpty())return null;const i=e.getCoordinateSequence(),n=L.minCoordinateIndex(i,0,i.size()-2);L.scroll(i,n,!0),ne.isCCW(i)===t&&L.reverse(i)}}getCoordinate(){return this._shell.getCoordinate()}getNumInteriorRing(){return this._holes.length}getBoundaryDimension(){return 1}reverseInternal(){const e=this.getExteriorRing().reverse(),t=new Array(this.getNumInteriorRing()).fill(null);for(let e=0;e<t.length;e++)t[e]=this.getInteriorRingN(e).reverse();return this.getFactory().createPolygon(e,t)}getTypeCode(){return A.TYPECODE_POLYGON}getDimension(){return 2}getLength(){let e=0;e+=this._shell.getLength();for(let t=0;t<this._holes.length;t++)e+=this._holes[t].getLength();return e}getNumPoints(){let e=this._shell.getNumPoints();for(let t=0;t<this._holes.length;t++)e+=this._holes[t].getNumPoints();return e}convexHull(){return this.getExteriorRing().convexHull()}normalized(e,t){const i=e.copy();return this.normalize(i,t),i}compareToSameClass(){if(1===arguments.length){const e=arguments[0],t=this._shell,i=e._shell;return t.compareToSameClass(i)}if(2===arguments.length){const e=arguments[1],t=arguments[0],i=this._shell,n=t._shell,r=i.compareToSameClass(n,e);if(0!==r)return r;const o=this.getNumInteriorRing(),s=t.getNumInteriorRing();let a=0;for(;a<o&&a<s;){const i=this.getInteriorRingN(a),n=t.getInteriorRingN(a),r=i.compareToSameClass(n,e);if(0!==r)return r;a++}return a<o?1:a<s?-1:0}}apply(){if(N(arguments[0],M)){const e=arguments[0];this._shell.apply(e);for(let t=0;t<this._holes.length;t++)this._holes[t].apply(e)}else if(N(arguments[0],F)){const e=arguments[0];if(this._shell.apply(e),!e.isDone())for(let t=0;t<this._holes.length&&(this._holes[t].apply(e),!e.isDone());t++);e.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],B)){arguments[0].filter(this)}else if(N(arguments[0],u)){const e=arguments[0];e.filter(this),this._shell.apply(e);for(let t=0;t<this._holes.length;t++)this._holes[t].apply(e)}}getBoundary(){if(this.isEmpty())return this.getFactory().createMultiLineString();const e=new Array(this._holes.length+1).fill(null);e[0]=this._shell;for(let t=0;t<this._holes.length;t++)e[t+1]=this._holes[t];return e.length<=1?this.getFactory().createLinearRing(e[0].getCoordinateSequence()):this.getFactory().createMultiLineString(e)}getGeometryType(){return A.TYPENAME_POLYGON}getExteriorRing(){return this._shell}isEmpty(){return this._shell.isEmpty()}getInteriorRingN(e){return this._holes[e]}get interfaces_(){return[re]}}class se extends W{contains(){}}class ae extends se{}class le extends ae{constructor(e){super(),this.array=[],e instanceof W&&this.addAll(e)}contains(e){for(const t of this.array)if(0===t.compareTo(e))return!0;return!1}add(e){if(this.contains(e))return!1;for(let t=0,i=this.array.length;t<i;t++){if(1===this.array[t].compareTo(e))return!!this.array.splice(t,0,e)}return this.array.push(e),!0}addAll(e){for(const t of e)this.add(t);return!0}remove(){throw new P}size(){return this.array.length}isEmpty(){return 0===this.array.length}toArray(){return this.array.slice()}iterator(){return new ce(this.array)}}class ce{constructor(e){this.array=e,this.position=0}next(){if(this.position===this.array.length)throw new U;return this.array[this.position++]}hasNext(){return this.position<this.array.length}remove(){throw new P}}class he extends A{constructor(){super(),he.constructor_.apply(this,arguments)}static constructor_(){if(this._geometries=null,0===arguments.length);else if(2===arguments.length){let e=arguments[0],t=arguments[1];if(A.constructor_.call(this,t),null===e&&(e=[]),A.hasNullElements(e))throw new h("geometries must not contain null elements");this._geometries=e}}computeEnvelopeInternal(){const e=new E;for(let t=0;t<this._geometries.length;t++)e.expandToInclude(this._geometries[t].getEnvelopeInternal());return e}getGeometryN(e){return this._geometries[e]}getCoordinates(){const e=new Array(this.getNumPoints()).fill(null);let t=-1;for(let i=0;i<this._geometries.length;i++){const n=this._geometries[i].getCoordinates();for(let i=0;i<n.length;i++)t++,e[t]=n[i]}return e}getArea(){let e=0;for(let t=0;t<this._geometries.length;t++)e+=this._geometries[t].getArea();return e}copyInternal(){const e=new Array(this._geometries.length).fill(null);for(let t=0;t<e.length;t++)e[t]=this._geometries[t].copy();return new he(e,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof A){const e=arguments[0],t=arguments[1];if(!this.isEquivalentClass(e))return!1;const i=e;if(this._geometries.length!==i._geometries.length)return!1;for(let e=0;e<this._geometries.length;e++)if(!this._geometries[e].equalsExact(i._geometries[e],t))return!1;return!0}return super.equalsExact.apply(this,arguments)}normalize(){for(let e=0;e<this._geometries.length;e++)this._geometries[e].normalize();Z.sort(this._geometries)}getCoordinate(){return this.isEmpty()?null:this._geometries[0].getCoordinate()}getBoundaryDimension(){let e=k.FALSE;for(let t=0;t<this._geometries.length;t++)e=Math.max(e,this._geometries[t].getBoundaryDimension());return e}reverseInternal(){const e=this._geometries.length,t=new V(e);for(let i=0;i<e;i++)t.add(this._geometries[i].reverse());return this.getFactory().buildGeometry(t)}getTypeCode(){return A.TYPECODE_GEOMETRYCOLLECTION}getDimension(){let e=k.FALSE;for(let t=0;t<this._geometries.length;t++)e=Math.max(e,this._geometries[t].getDimension());return e}getLength(){let e=0;for(let t=0;t<this._geometries.length;t++)e+=this._geometries[t].getLength();return e}getNumPoints(){let e=0;for(let t=0;t<this._geometries.length;t++)e+=this._geometries[t].getNumPoints();return e}getNumGeometries(){return this._geometries.length}compareToSameClass(){if(1===arguments.length){const e=arguments[0],t=new le(Z.asList(this._geometries)),i=new le(Z.asList(e._geometries));return this.compare(t,i)}if(2===arguments.length){const e=arguments[1],t=arguments[0],i=this.getNumGeometries(),n=t.getNumGeometries();let r=0;for(;r<i&&r<n;){const i=this.getGeometryN(r),n=t.getGeometryN(r),o=i.compareToSameClass(n,e);if(0!==o)return o;r++}return r<i?1:r<n?-1:0}}apply(){if(N(arguments[0],M)){const e=arguments[0];for(let t=0;t<this._geometries.length;t++)this._geometries[t].apply(e)}else if(N(arguments[0],F)){const e=arguments[0];if(0===this._geometries.length)return null;for(let t=0;t<this._geometries.length&&(this._geometries[t].apply(e),!e.isDone());t++);e.isGeometryChanged()&&this.geometryChanged()}else if(N(arguments[0],B)){const e=arguments[0];e.filter(this);for(let t=0;t<this._geometries.length;t++)this._geometries[t].apply(e)}else if(N(arguments[0],u)){const e=arguments[0];e.filter(this);for(let t=0;t<this._geometries.length;t++)this._geometries[t].apply(e)}}getBoundary(){return A.checkNotGeometryCollection(this),x.shouldNeverReachHere(),null}getGeometryType(){return A.TYPENAME_GEOMETRYCOLLECTION}isEmpty(){for(let e=0;e<this._geometries.length;e++)if(!this._geometries[e].isEmpty())return!1;return!0}}class ue extends he{constructor(){super(),ue.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0],t=arguments[1];he.constructor_.call(this,e,t)}copyInternal(){const e=new Array(this._geometries.length).fill(null);for(let t=0;t<e.length;t++)e[t]=this._geometries[t].copy();return new ue(e,this._factory)}isValid(){return!0}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof A){const e=arguments[0],t=arguments[1];return!!this.isEquivalentClass(e)&&super.equalsExact.call(this,e,t)}return super.equalsExact.apply(this,arguments)}getCoordinate(){if(1===arguments.length&&Number.isInteger(arguments[0])){const e=arguments[0];return this._geometries[e].getCoordinate()}return super.getCoordinate.apply(this,arguments)}getBoundaryDimension(){return k.FALSE}getTypeCode(){return A.TYPECODE_MULTIPOINT}getDimension(){return 0}getBoundary(){return this.getFactory().createGeometryCollection()}getGeometryType(){return A.TYPENAME_MULTIPOINT}get interfaces_(){return[K]}}class de extends G{constructor(){super(),de.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0],t=arguments[1];G.constructor_.call(this,e,t),this.validateConstruction()}copyInternal(){return new de(this._points.copy(),this._factory)}getBoundaryDimension(){return k.FALSE}isClosed(){return!!this.isEmpty()||super.isClosed.call(this)}reverseInternal(){const e=this._points.copy();return L.reverse(e),this.getFactory().createLinearRing(e)}getTypeCode(){return A.TYPECODE_LINEARRING}validateConstruction(){if(!this.isEmpty()&&!super.isClosed.call(this))throw new h("Points of LinearRing do not form a closed linestring");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<de.MINIMUM_VALID_SIZE)throw new h("Invalid number of points in LinearRing (found "+this.getCoordinateSequence().size()+" - must be 0 or >= 4)")}getGeometryType(){return A.TYPENAME_LINEARRING}}de.MINIMUM_VALID_SIZE=4;class ge extends v{constructor(){super(),ge.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)v.constructor_.call(this);else if(1===arguments.length){if(arguments[0]instanceof ge){const e=arguments[0];v.constructor_.call(this,e.x,e.y)}else if(arguments[0]instanceof v){const e=arguments[0];v.constructor_.call(this,e.x,e.y)}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];v.constructor_.call(this,e,t,v.NULL_ORDINATE)}}setOrdinate(e,t){switch(e){case ge.X:this.x=t;break;case ge.Y:this.y=t;break;default:throw new h("Invalid ordinate index: "+e)}}getZ(){return v.NULL_ORDINATE}getOrdinate(e){switch(e){case ge.X:return this.x;case ge.Y:return this.y}throw new h("Invalid ordinate index: "+e)}setZ(e){throw new h("CoordinateXY dimension 2 does not support z-ordinate")}copy(){return new ge(this)}toString(){return"("+this.x+", "+this.y+")"}setCoordinate(e){this.x=e.x,this.y=e.y,this.z=e.getZ()}}ge.X=0,ge.Y=1,ge.Z=-1,ge.M=-1;class me extends v{constructor(){super(),me.constructor_.apply(this,arguments)}static constructor_(){if(this._m=null,0===arguments.length)v.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof me){const e=arguments[0];v.constructor_.call(this,e.x,e.y),this._m=e._m}else if(arguments[0]instanceof v){const e=arguments[0];v.constructor_.call(this,e.x,e.y),this._m=this.getM()}}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];v.constructor_.call(this,e,t,v.NULL_ORDINATE),this._m=i}}getM(){return this._m}setOrdinate(e,t){switch(e){case me.X:this.x=t;break;case me.Y:this.y=t;break;case me.M:this._m=t;break;default:throw new h("Invalid ordinate index: "+e)}}setM(e){this._m=e}getZ(){return v.NULL_ORDINATE}getOrdinate(e){switch(e){case me.X:return this.x;case me.Y:return this.y;case me.M:return this._m}throw new h("Invalid ordinate index: "+e)}setZ(e){throw new h("CoordinateXY dimension 2 does not support z-ordinate")}copy(){return new me(this)}toString(){return"("+this.x+", "+this.y+" m="+this.getM()+")"}setCoordinate(e){this.x=e.x,this.y=e.y,this.z=e.getZ(),this._m=e.getM()}}me.X=0,me.Y=1,me.Z=-1,me.M=2;class pe extends v{constructor(){super(),pe.constructor_.apply(this,arguments)}static constructor_(){if(this._m=null,0===arguments.length)v.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof pe){const e=arguments[0];v.constructor_.call(this,e),this._m=e._m}else if(arguments[0]instanceof v){const e=arguments[0];v.constructor_.call(this,e),this._m=this.getM()}}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];v.constructor_.call(this,e,t,i),this._m=n}}getM(){return this._m}setOrdinate(e,t){switch(e){case v.X:this.x=t;break;case v.Y:this.y=t;break;case v.Z:this.z=t;break;case v.M:this._m=t;break;default:throw new h("Invalid ordinate index: "+e)}}setM(e){this._m=e}getOrdinate(e){switch(e){case v.X:return this.x;case v.Y:return this.y;case v.Z:return this.getZ();case v.M:return this.getM()}throw new h("Invalid ordinate index: "+e)}copy(){return new pe(this)}toString(){return"("+this.x+", "+this.y+", "+this.getZ()+" m="+this.getM()+")"}setCoordinate(e){this.x=e.x,this.y=e.y,this.z=e.getZ(),this._m=e.getM()}}class fe{static measures(e){return e instanceof ge?0:e instanceof me||e instanceof pe?1:0}static dimension(e){return e instanceof ge?2:e instanceof me?3:e instanceof pe?4:3}static create(){if(1===arguments.length){const e=arguments[0];return fe.create(e,0)}if(2===arguments.length){const e=arguments[0],t=arguments[1];return 2===e?new ge:3===e&&0===t?new v:3===e&&1===t?new me:4===e&&1===t?new pe:new v}}}class _e{static log10(e){const t=Math.log(e);return _.isInfinite(t)||_.isNaN(t)?t:t/_e.LOG_10}static min(e,t,i,n){let r=e;return t<r&&(r=t),i<r&&(r=i),n<r&&(r=n),r}static clamp(){if("number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1],i=arguments[2];return e<t?t:e>i?i:e}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const e=arguments[0],t=arguments[1],i=arguments[2];return e<t?t:e>i?i:e}}static wrap(e,t){return e<0?t- -e%t:e%t}static max(){if(3===arguments.length){const e=arguments[1],t=arguments[2];let i=arguments[0];return e>i&&(i=e),t>i&&(i=t),i}if(4===arguments.length){const e=arguments[1],t=arguments[2],i=arguments[3];let n=arguments[0];return e>n&&(n=e),t>n&&(n=t),i>n&&(n=i),n}}static average(e,t){return(e+t)/2}}_e.LOG_10=Math.log(10);class ye{static arraycopy(e,t,i,n,r){let o=0;for(let s=t;s<t+r;s++)i[n+o]=e[s],o++}static getProperty(e){return{"line.separator":"\n"}[e]}}class be{static isRing(e){return!(e.length<4)&&!!e[0].equals2D(e[e.length-1])}static ptNotInList(e,t){for(let i=0;i<e.length;i++){const n=e[i];if(be.indexOf(n,t)<0)return n}return null}static scroll(e,t){const i=be.indexOf(t,e);if(i<0)return null;const n=new Array(e.length).fill(null);ye.arraycopy(e,i,n,0,e.length-i),ye.arraycopy(e,0,n,e.length-i,i),ye.arraycopy(n,0,e,0,e.length)}static equals(){if(2===arguments.length){const e=arguments[0],t=arguments[1];if(e===t)return!0;if(null===e||null===t)return!1;if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(!e[i].equals(t[i]))return!1;return!0}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];if(e===t)return!0;if(null===e||null===t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(0!==i.compare(e[n],t[n]))return!1;return!0}}static intersection(e,t){const i=new q;for(let n=0;n<e.length;n++)t.intersects(e[n])&&i.add(e[n],!0);return i.toCoordinateArray()}static measures(e){if(null===e||0===e.length)return 0;let t=0;for(const i of e)t=Math.max(t,fe.measures(i));return t}static hasRepeatedPoints(e){for(let t=1;t<e.length;t++)if(e[t-1].equals(e[t]))return!0;return!1}static removeRepeatedPoints(e){if(!be.hasRepeatedPoints(e))return e;return new q(e,!1).toCoordinateArray()}static reverse(e){const t=e.length-1,i=Math.trunc(t/2);for(let n=0;n<=i;n++){const i=e[n];e[n]=e[t-n],e[t-n]=i}}static removeNull(e){let t=0;for(let i=0;i<e.length;i++)null!==e[i]&&t++;const i=new Array(t).fill(null);if(0===t)return i;let n=0;for(let t=0;t<e.length;t++)null!==e[t]&&(i[n++]=e[t]);return i}static copyDeep(){if(1===arguments.length){const e=arguments[0],t=new Array(e.length).fill(null);for(let i=0;i<e.length;i++)t[i]=e[i].copy();return t}if(5===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=arguments[4];for(let o=0;o<r;o++)i[n+o]=e[t+o].copy()}}static isEqualReversed(e,t){for(let i=0;i<e.length;i++){const n=e[i],r=t[e.length-i-1];if(0!==n.compareTo(r))return!1}return!0}static envelope(e){const t=new E;for(let i=0;i<e.length;i++)t.expandToInclude(e[i]);return t}static toCoordinateArray(e){return e.toArray(be.coordArrayType)}static dimension(e){if(null===e||0===e.length)return 3;let t=0;for(const i of e)t=Math.max(t,fe.dimension(i));return t}static atLeastNCoordinatesOrNothing(e,t){return t.length>=e?t:[]}static indexOf(e,t){for(let i=0;i<t.length;i++)if(e.equals(t[i]))return i;return-1}static increasingDirection(e){for(let t=0;t<Math.trunc(e.length/2);t++){const i=e.length-1-t,n=e[t].compareTo(e[i]);if(0!==n)return n}return 1}static compare(e,t){let i=0;for(;i<e.length&&i<t.length;){const n=e[i].compareTo(t[i]);if(0!==n)return n;i++}return i<t.length?-1:i<e.length?1:0}static minCoordinate(e){let t=null;for(let i=0;i<e.length;i++)(null===t||t.compareTo(e[i])>0)&&(t=e[i]);return t}static extract(e,t,i){t=_e.clamp(t,0,e.length);let n=(i=_e.clamp(i,-1,e.length))-t+1;i<0&&(n=0),t>=e.length&&(n=0),i<t&&(n=0);const r=new Array(n).fill(null);if(0===n)return r;let o=0;for(let n=t;n<=i;n++)r[o++]=e[n];return r}}be.ForwardComparator=class{compare(e,t){const i=e,n=t;return be.compare(i,n)}get interfaces_(){return[y]}},be.BidirectionalComparator=class{compare(e,t){const i=e,n=t;if(i.length<n.length)return-1;if(i.length>n.length)return 1;if(0===i.length)return 0;const r=be.compare(i,n);return be.isEqualReversed(i,n)?0:r}OLDcompare(e,t){const i=e,n=t;if(i.length<n.length)return-1;if(i.length>n.length)return 1;if(0===i.length)return 0;const r=be.increasingDirection(i),o=be.increasingDirection(n);let s=r>0?0:i.length-1,a=o>0?0:i.length-1;for(let e=0;e<i.length;e++){const e=i[s].compareTo(n[a]);if(0!==e)return e;s+=r,a+=o}return 0}get interfaces_(){return[y]}},be.coordArrayType=new Array(0).fill(null);class Ce{constructor(e){this.str=e}append(e){this.str+=e}setCharAt(e,t){this.str=this.str.substr(0,e)+t+this.str.substr(e+1)}toString(){return this.str}}class xe{constructor(){xe.constructor_.apply(this,arguments)}static constructor_(){if(this._dimension=3,this._measures=0,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){const e=arguments[0];xe.constructor_.call(this,e,be.dimension(e),be.measures(e))}else if(Number.isInteger(arguments[0])){const e=arguments[0];this._coordinates=new Array(e).fill(null);for(let t=0;t<e;t++)this._coordinates[t]=new v}else if(N(arguments[0],R)){const e=arguments[0];if(null===e)return this._coordinates=new Array(0).fill(null),null;this._dimension=e.getDimension(),this._measures=e.getMeasures(),this._coordinates=new Array(e.size()).fill(null);for(let t=0;t<this._coordinates.length;t++)this._coordinates[t]=e.getCoordinateCopy(t)}}else if(2===arguments.length){if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){const e=arguments[0],t=arguments[1];xe.constructor_.call(this,e,t,be.measures(e))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const e=arguments[0],t=arguments[1];this._coordinates=new Array(e).fill(null),this._dimension=t;for(let i=0;i<e;i++)this._coordinates[i]=fe.create(t)}}else if(3===arguments.length)if(Number.isInteger(arguments[2])&&arguments[0]instanceof Array&&Number.isInteger(arguments[1])){const e=arguments[0],t=arguments[1],i=arguments[2];this._dimension=t,this._measures=i,this._coordinates=null===e?new Array(0).fill(null):e}else if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){const e=arguments[0],t=arguments[1],i=arguments[2];this._coordinates=new Array(e).fill(null),this._dimension=t,this._measures=i;for(let t=0;t<e;t++)this._coordinates[t]=this.createCoordinate()}}getM(e){return this.hasM()?this._coordinates[e].getM():_.NaN}setOrdinate(e,t,i){switch(t){case R.X:this._coordinates[e].x=i;break;case R.Y:this._coordinates[e].y=i;break;default:this._coordinates[e].setOrdinate(t,i)}}getZ(e){return this.hasZ()?this._coordinates[e].getZ():_.NaN}size(){return this._coordinates.length}getOrdinate(e,t){switch(t){case R.X:return this._coordinates[e].x;case R.Y:return this._coordinates[e].y;default:return this._coordinates[e].getOrdinate(t)}}getCoordinate(){if(1===arguments.length){const e=arguments[0];return this._coordinates[e]}if(2===arguments.length){const e=arguments[0];arguments[1].setCoordinate(this._coordinates[e])}}getCoordinateCopy(e){const t=this.createCoordinate();return t.setCoordinate(this._coordinates[e]),t}createCoordinate(){return fe.create(this.getDimension(),this.getMeasures())}getDimension(){return this._dimension}getX(e){return this._coordinates[e].x}getMeasures(){return this._measures}expandEnvelope(e){for(let t=0;t<this._coordinates.length;t++)e.expandToInclude(this._coordinates[t]);return e}copy(){const e=new Array(this.size()).fill(null);for(let t=0;t<this._coordinates.length;t++){const i=this.createCoordinate();i.setCoordinate(this._coordinates[t]),e[t]=i}return new xe(e,this._dimension,this._measures)}toString(){if(this._coordinates.length>0){const e=new Ce(17*this._coordinates.length);e.append("("),e.append(this._coordinates[0]);for(let t=1;t<this._coordinates.length;t++)e.append(", "),e.append(this._coordinates[t]);return e.append(")"),e.toString()}return"()"}getY(e){return this._coordinates[e].y}toCoordinateArray(){return this._coordinates}get interfaces_(){return[R,m]}}class Se{static instance(){return Se.instanceObject}readResolve(){return Se.instance()}create(){if(1===arguments.length){if(arguments[0]instanceof Array){return new xe(arguments[0])}if(N(arguments[0],R)){return new xe(arguments[0])}}else{if(2===arguments.length){let e=arguments[1];return e>3&&(e=3),e<2&&(e=2),new xe(arguments[0],e)}if(3===arguments.length){let e=arguments[2],t=arguments[1]-e;return e>1&&(e=1),t>3&&(t=3),t<2&&(t=2),new xe(arguments[0],t+e,e)}}}get interfaces_(){return[j,m]}}Se.instanceObject=new Se;class Ie extends he{constructor(){super(),Ie.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0],t=arguments[1];he.constructor_.call(this,e,t)}copyInternal(){const e=new Array(this._geometries.length).fill(null);for(let t=0;t<e.length;t++)e[t]=this._geometries[t].copy();return new Ie(e,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof A){const e=arguments[0],t=arguments[1];return!!this.isEquivalentClass(e)&&super.equalsExact.call(this,e,t)}return super.equalsExact.apply(this,arguments)}getBoundaryDimension(){return 1}getTypeCode(){return A.TYPECODE_MULTIPOLYGON}getDimension(){return 2}getBoundary(){if(this.isEmpty())return this.getFactory().createMultiLineString();const e=new V;for(let t=0;t<this._geometries.length;t++){const i=this._geometries[t].getBoundary();for(let t=0;t<i.getNumGeometries();t++)e.add(i.getGeometryN(t))}const t=new Array(e.size()).fill(null);return this.getFactory().createMultiLineString(e.toArray(t))}getGeometryType(){return A.TYPENAME_MULTIPOLYGON}get interfaces_(){return[re]}}class Te{get(){}put(){}size(){}values(){}entrySet(){}}class ve extends se{constructor(e){super(),this.map=new Map,e instanceof W&&this.addAll(e)}contains(e){const t=e.hashCode?e.hashCode():e;return!!this.map.has(t)}add(e){const t=e.hashCode?e.hashCode():e;return!this.map.has(t)&&!!this.map.set(t,e)}addAll(e){for(const t of e)this.add(t);return!0}remove(){throw new P}size(){return this.map.size}isEmpty(){return 0===this.map.size}toArray(){return Array.from(this.map.values())}iterator(){return new we(this.map)}[Symbol.iterator](){return this.map}}class we{constructor(e){this.iterator=e.values();const{done:t,value:i}=this.iterator.next();this.done=t,this.value=i}next(){if(this.done)throw new U;const e=this.value,{done:t,value:i}=this.iterator.next();return this.done=t,this.value=i,e}hasNext(){return!this.done}remove(){throw new P}}class Ee extends Te{constructor(){super(),this.map=new Map}get(e){return this.map.get(e)||null}put(e,t){return this.map.set(e,t),t}values(){const e=new V,t=this.map.values();let i=t.next();for(;!i.done;)e.add(i.value),i=t.next();return e}entrySet(){const e=new ve;return this.map.entries().forEach((t=>e.add(t))),e}size(){return this.map.size()}}class Ae{constructor(){Ae.constructor_.apply(this,arguments)}static constructor_(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=Ae.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof Me){const e=arguments[0];this._modelType=e,e===Ae.FIXED&&this.setScale(1)}else if("number"==typeof arguments[0]){const e=arguments[0];this._modelType=Ae.FIXED,this.setScale(e)}else if(arguments[0]instanceof Ae){const e=arguments[0];this._modelType=e._modelType,this._scale=e._scale}}static mostPrecise(e,t){return e.compareTo(t)>=0?e:t}equals(e){if(!(e instanceof Ae))return!1;const t=e;return this._modelType===t._modelType&&this._scale===t._scale}compareTo(e){const t=e,i=this.getMaximumSignificantDigits(),n=t.getMaximumSignificantDigits();return ee.compare(i,n)}getScale(){return this._scale}isFloating(){return this._modelType===Ae.FLOATING||this._modelType===Ae.FLOATING_SINGLE}getType(){return this._modelType}toString(){let e="UNKNOWN";return this._modelType===Ae.FLOATING?e="Floating":this._modelType===Ae.FLOATING_SINGLE?e="Floating-Single":this._modelType===Ae.FIXED&&(e="Fixed (Scale="+this.getScale()+")"),e}makePrecise(){if("number"==typeof arguments[0]){const e=arguments[0];if(_.isNaN(e))return e;if(this._modelType===Ae.FLOATING_SINGLE){return e}return this._modelType===Ae.FIXED?Math.round(e*this._scale)/this._scale:e}if(arguments[0]instanceof v){const e=arguments[0];if(this._modelType===Ae.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}}getMaximumSignificantDigits(){let e=16;return this._modelType===Ae.FLOATING?e=16:this._modelType===Ae.FLOATING_SINGLE?e=6:this._modelType===Ae.FIXED&&(e=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),e}setScale(e){this._scale=Math.abs(e)}get interfaces_(){return[m,d]}}class Me{constructor(){Me.constructor_.apply(this,arguments)}static constructor_(){this._name=null;const e=arguments[0];this._name=e,Me.nameToTypeMap.put(e,this)}readResolve(){return Me.nameToTypeMap.get(this._name)}toString(){return this._name}get interfaces_(){return[m]}}Me.nameToTypeMap=new Ee,Ae.Type=Me,Ae.FIXED=new Me("FIXED"),Ae.FLOATING=new Me("FLOATING"),Ae.FLOATING_SINGLE=new Me("FLOATING SINGLE"),Ae.maximumPreciseValue=9007199254740992;class Ne extends he{constructor(){super(),Ne.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0],t=arguments[1];he.constructor_.call(this,e,t)}copyInternal(){const e=new Array(this._geometries.length).fill(null);for(let t=0;t<e.length;t++)e[t]=this._geometries[t].copy();return new Ne(e,this._factory)}equalsExact(){if(2===arguments.length&&"number"==typeof arguments[1]&&arguments[0]instanceof A){const e=arguments[0],t=arguments[1];return!!this.isEquivalentClass(e)&&super.equalsExact.call(this,e,t)}return super.equalsExact.apply(this,arguments)}getBoundaryDimension(){return this.isClosed()?k.FALSE:0}isClosed(){if(this.isEmpty())return!1;for(let e=0;e<this._geometries.length;e++)if(!this._geometries[e].isClosed())return!1;return!0}getTypeCode(){return A.TYPECODE_MULTILINESTRING}getDimension(){return 1}getBoundary(){throw new P}getGeometryType(){return A.TYPENAME_MULTILINESTRING}get interfaces_(){return[D]}}class De{constructor(){De.constructor_.apply(this,arguments)}static constructor_(){if(this._precisionModel=null,this._coordinateSequenceFactory=null,this._SRID=null,0===arguments.length)De.constructor_.call(this,new Ae,0);else if(1===arguments.length){if(N(arguments[0],j)){const e=arguments[0];De.constructor_.call(this,new Ae,0,e)}else if(arguments[0]instanceof Ae){const e=arguments[0];De.constructor_.call(this,e,0,De.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];De.constructor_.call(this,e,t,De.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this._precisionModel=e,this._coordinateSequenceFactory=i,this._SRID=t}}static toMultiPolygonArray(e){const t=new Array(e.size()).fill(null);return e.toArray(t)}static toGeometryArray(e){if(null===e)return null;const t=new Array(e.size()).fill(null);return e.toArray(t)}static getDefaultCoordinateSequenceFactory(){return Se.instance()}static toMultiLineStringArray(e){const t=new Array(e.size()).fill(null);return e.toArray(t)}static toLineStringArray(e){const t=new Array(e.size()).fill(null);return e.toArray(t)}static toMultiPointArray(e){const t=new Array(e.size()).fill(null);return e.toArray(t)}static toLinearRingArray(e){const t=new Array(e.size()).fill(null);return e.toArray(t)}static toPointArray(e){const t=new Array(e.size()).fill(null);return e.toArray(t)}static toPolygonArray(e){const t=new Array(e.size()).fill(null);return e.toArray(t)}static createPointFromInternalCoord(e,t){return t.getPrecisionModel().makePrecise(e),t.getFactory().createPoint(e)}createEmpty(e){switch(e){case-1:return this.createGeometryCollection();case 0:return this.createPoint();case 1:return this.createLineString();case 2:return this.createPolygon();default:throw new h("Invalid dimension: "+e)}}toGeometry(e){return e.isNull()?this.createPoint():e.getMinX()===e.getMaxX()&&e.getMinY()===e.getMaxY()?this.createPoint(new v(e.getMinX(),e.getMinY())):e.getMinX()===e.getMaxX()||e.getMinY()===e.getMaxY()?this.createLineString([new v(e.getMinX(),e.getMinY()),new v(e.getMaxX(),e.getMaxY())]):this.createPolygon(this.createLinearRing([new v(e.getMinX(),e.getMinY()),new v(e.getMinX(),e.getMaxY()),new v(e.getMaxX(),e.getMaxY()),new v(e.getMaxX(),e.getMinY()),new v(e.getMinX(),e.getMinY())]),null)}createLineString(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){const e=arguments[0];return this.createLineString(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(N(arguments[0],R)){return new G(arguments[0],this)}}}createMultiLineString(){if(0===arguments.length)return new Ne(null,this);if(1===arguments.length){return new Ne(arguments[0],this)}}buildGeometry(e){let t=null,i=!1,n=!1;for(let r=e.iterator();r.hasNext();){const e=r.next(),o=e.getTypeCode();null===t&&(t=o),o!==t&&(i=!0),e instanceof he&&(n=!0)}if(null===t)return this.createGeometryCollection();if(i||n)return this.createGeometryCollection(De.toGeometryArray(e));const r=e.iterator().next();if(e.size()>1){if(r instanceof oe)return this.createMultiPolygon(De.toPolygonArray(e));if(r instanceof G)return this.createMultiLineString(De.toLineStringArray(e));if(r instanceof X)return this.createMultiPoint(De.toPointArray(e));x.shouldNeverReachHere("Unhandled geometry type: "+r.getGeometryType())}return r}createMultiPointFromCoords(e){return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}createPoint(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof v){const e=arguments[0];return this.createPoint(null!==e?this.getCoordinateSequenceFactory().create([e]):null)}if(N(arguments[0],R)){return new X(arguments[0],this)}}}getCoordinateSequenceFactory(){return this._coordinateSequenceFactory}createPolygon(){if(0===arguments.length)return this.createPolygon(null,null);if(1===arguments.length){if(N(arguments[0],R)){const e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof Array){const e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof de){const e=arguments[0];return this.createPolygon(e,null)}}else if(2===arguments.length){return new oe(arguments[0],arguments[1],this)}}getSRID(){return this._SRID}createGeometryCollection(){if(0===arguments.length)return new he(null,this);if(1===arguments.length){return new he(arguments[0],this)}}getPrecisionModel(){return this._precisionModel}createLinearRing(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){const e=arguments[0];return this.createLinearRing(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(N(arguments[0],R)){return new de(arguments[0],this)}}}createMultiPolygon(){if(0===arguments.length)return new Ie(null,this);if(1===arguments.length){return new Ie(arguments[0],this)}}createMultiPoint(){if(0===arguments.length)return new ue(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){return new ue(arguments[0],this)}if(N(arguments[0],R)){const e=arguments[0];if(null===e)return this.createMultiPoint(new Array(0).fill(null));const t=new Array(e.size()).fill(null);for(let i=0;i<e.size();i++){const n=this.getCoordinateSequenceFactory().create(1,e.getDimension(),e.getMeasures());L.copy(e,i,n,0,1),t[i]=this.createPoint(n)}return this.createMultiPoint(t)}}}get interfaces_(){return[m]}}class Re{constructor(){Re.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1}transformPoint(e,t){return this._factory.createPoint(this.transformCoordinates(e.getCoordinateSequence(),e))}transformPolygon(e,t){let i=!0;const n=this.transformLinearRing(e.getExteriorRing(),e);null!==n&&n instanceof de&&!n.isEmpty()||(i=!1);const r=new V;for(let t=0;t<e.getNumInteriorRing();t++){const n=this.transformLinearRing(e.getInteriorRingN(t),e);null===n||n.isEmpty()||(n instanceof de||(i=!1),r.add(n))}if(i)return this._factory.createPolygon(n,r.toArray([]));{const e=new V;return null!==n&&e.add(n),e.addAll(r),this._factory.buildGeometry(e)}}createCoordinateSequence(e){return this._factory.getCoordinateSequenceFactory().create(e)}getInputGeometry(){return this._inputGeom}transformMultiLineString(e,t){const i=new V;for(let t=0;t<e.getNumGeometries();t++){const n=this.transformLineString(e.getGeometryN(t),e);null!==n&&(n.isEmpty()||i.add(n))}return this._factory.buildGeometry(i)}transformCoordinates(e,t){return this.copy(e)}transformLineString(e,t){return this._factory.createLineString(this.transformCoordinates(e.getCoordinateSequence(),e))}transformMultiPoint(e,t){const i=new V;for(let t=0;t<e.getNumGeometries();t++){const n=this.transformPoint(e.getGeometryN(t),e);null!==n&&(n.isEmpty()||i.add(n))}return this._factory.buildGeometry(i)}transformMultiPolygon(e,t){const i=new V;for(let t=0;t<e.getNumGeometries();t++){const n=this.transformPolygon(e.getGeometryN(t),e);null!==n&&(n.isEmpty()||i.add(n))}return this._factory.buildGeometry(i)}copy(e){return e.copy()}transformGeometryCollection(e,t){const i=new V;for(let t=0;t<e.getNumGeometries();t++){const n=this.transform(e.getGeometryN(t));null!==n&&(this._pruneEmptyGeometry&&n.isEmpty()||i.add(n))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(De.toGeometryArray(i)):this._factory.buildGeometry(i)}transform(e){if(this._inputGeom=e,this._factory=e.getFactory(),e instanceof X)return this.transformPoint(e,null);if(e instanceof ue)return this.transformMultiPoint(e,null);if(e instanceof de)return this.transformLinearRing(e,null);if(e instanceof G)return this.transformLineString(e,null);if(e instanceof Ne)return this.transformMultiLineString(e,null);if(e instanceof oe)return this.transformPolygon(e,null);if(e instanceof Ie)return this.transformMultiPolygon(e,null);if(e instanceof he)return this.transformGeometryCollection(e,null);throw new h("Unknown Geometry subtype: "+e.getGeometryType())}transformLinearRing(e,t){const i=this.transformCoordinates(e.getCoordinateSequence(),e);if(null===i)return this._factory.createLinearRing(null);const n=i.size();return n>0&&n<4&&!this._preserveType?this._factory.createLineString(i):this._factory.createLinearRing(i)}}class Le{static intersection(e,t,i,n){const r=e.x<t.x?e.x:t.x,o=e.y<t.y?e.y:t.y,s=e.x>t.x?e.x:t.x,a=e.y>t.y?e.y:t.y,l=i.x<n.x?i.x:n.x,c=i.y<n.y?i.y:n.y,h=i.x>n.x?i.x:n.x,u=i.y>n.y?i.y:n.y,d=((r>l?r:l)+(s<h?s:h))/2,g=((o>c?o:c)+(a<u?a:u))/2,m=e.x-d,p=e.y-g,f=t.x-d,y=t.y-g,b=i.x-d,C=i.y-g,x=n.x-d,S=n.y-g,I=p-y,T=f-m,w=m*y-f*p,E=C-S,A=x-b,M=b*S-x*C,N=I*A-E*T,D=(T*M-A*w)/N,R=(E*w-I*M)/N;return _.isNaN(D)||_.isInfinite(D)||_.isNaN(R)||_.isInfinite(R)?null:new v(D+d,R+g)}}class Pe{static segmentToSegment(e,t,i,n){if(e.equals(t))return Pe.pointToSegment(e,i,n);if(i.equals(n))return Pe.pointToSegment(n,e,t);let r=!1;if(E.intersects(e,t,i,n)){const o=(t.x-e.x)*(n.y-i.y)-(t.y-e.y)*(n.x-i.x);if(0===o)r=!0;else{const s=(e.y-i.y)*(n.x-i.x)-(e.x-i.x)*(n.y-i.y),a=((e.y-i.y)*(t.x-e.x)-(e.x-i.x)*(t.y-e.y))/o,l=s/o;(l<0||l>1||a<0||a>1)&&(r=!0)}}else r=!0;return r?_e.min(Pe.pointToSegment(e,i,n),Pe.pointToSegment(t,i,n),Pe.pointToSegment(i,e,t),Pe.pointToSegment(n,e,t)):0}static pointToSegment(e,t,i){if(t.x===i.x&&t.y===i.y)return e.distance(t);const n=(i.x-t.x)*(i.x-t.x)+(i.y-t.y)*(i.y-t.y),r=((e.x-t.x)*(i.x-t.x)+(e.y-t.y)*(i.y-t.y))/n;if(r<=0)return e.distance(t);if(r>=1)return e.distance(i);const o=((t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y))/n;return Math.abs(o)*Math.sqrt(n)}static pointToLinePerpendicular(e,t,i){const n=(i.x-t.x)*(i.x-t.x)+(i.y-t.y)*(i.y-t.y),r=((t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y))/n;return Math.abs(r)*Math.sqrt(n)}static pointToSegmentString(e,t){if(0===t.length)throw new h("Line array must contain at least one vertex");let i=e.distance(t[0]);for(let n=0;n<t.length-1;n++){const r=Pe.pointToSegment(e,t[n],t[n+1]);r<i&&(i=r)}return i}}const Oe="XY",ke="XYZ",Be="XYM",Fe="XYZM",Ge={POINT:"Point",LINE_STRING:"LineString",LINEAR_RING:"LinearRing",POLYGON:"Polygon",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon",GEOMETRY_COLLECTION:"GeometryCollection",CIRCLE:"Circle"},We=1,ze=2,He=3,Ue=4,Ve=5,Ye=6;for(const e in Ge)Ge[e].toUpperCase();class qe{constructor(e){this.wkt=e,this.index_=-1}isAlpha_(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"}isNumeric_(e,t){return e>="0"&&e<="9"||"."==e&&!(void 0!==t&&t)}isWhiteSpace_(e){return" "==e||"\t"==e||"\r"==e||"\n"==e}nextChar_(){return this.wkt.charAt(++this.index_)}nextToken(){const e=this.nextChar_(),t=this.index_;let i,n=e;if("("==e)i=ze;else if(","==e)i=Ve;else if(")"==e)i=He;else if(this.isNumeric_(e)||"-"==e)i=Ue,n=this.readNumber_();else if(this.isAlpha_(e))i=We,n=this.readText_();else{if(this.isWhiteSpace_(e))return this.nextToken();if(""!==e)throw new Error("Unexpected character: "+e);i=Ye}return{position:t,value:n,type:i}}readNumber_(){let e;const t=this.index_;let i=!1,n=!1;do{"."==e?i=!0:"e"!=e&&"E"!=e||(n=!0),e=this.nextChar_()}while(this.isNumeric_(e,i)||!n&&("e"==e||"E"==e)||n&&("-"==e||"+"==e));return parseFloat(this.wkt.substring(t,this.index_--))}readText_(){let e;const t=this.index_;do{e=this.nextChar_()}while(this.isAlpha_(e));return this.wkt.substring(t,this.index_--).toUpperCase()}}class je{constructor(e,t){this.lexer_=e,this.token_,this.layout_=Oe,this.factory=t}consume_(){this.token_=this.lexer_.nextToken()}isTokenType(e){return this.token_.type==e}match(e){const t=this.isTokenType(e);return t&&this.consume_(),t}parse(){this.consume_();return this.parseGeometry_()}parseGeometryLayout_(){let e=Oe;const t=this.token_;if(this.isTokenType(We)){const i=t.value;"Z"===i?e=ke:"M"===i?e=Be:"ZM"===i&&(e=Fe),e!==Oe&&this.consume_()}return e}parseGeometryCollectionText_(){if(this.match(ze)){const e=[];do{e.push(this.parseGeometry_())}while(this.match(Ve));if(this.match(He))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePointText_(){if(this.match(ze)){const e=this.parsePoint_();if(this.match(He))return e}else if(this.isEmptyGeometry_())return null;throw new Error(this.formatErrorMessage_())}parseLineStringText_(){if(this.match(ze)){const e=this.parsePointList_();if(this.match(He))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePolygonText_(){if(this.match(ze)){const e=this.parseLineStringTextList_();if(this.match(He))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPointText_(){if(this.match(ze)){let e;if(e=this.token_.type==ze?this.parsePointTextList_():this.parsePointList_(),this.match(He))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiLineStringText_(){if(this.match(ze)){const e=this.parseLineStringTextList_();if(this.match(He))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parseMultiPolygonText_(){if(this.match(ze)){const e=this.parsePolygonTextList_();if(this.match(He))return e}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}parsePoint_(){const e=[],t=this.layout_.length;for(let i=0;i<t;++i){const t=this.token_;if(!this.match(Ue))break;e.push(t.value)}if(e.length==t)return e;throw new Error(this.formatErrorMessage_())}parsePointList_(){const e=[this.parsePoint_()];for(;this.match(Ve);)e.push(this.parsePoint_());return e}parsePointTextList_(){const e=[this.parsePointText_()];for(;this.match(Ve);)e.push(this.parsePointText_());return e}parseLineStringTextList_(){const e=[this.parseLineStringText_()];for(;this.match(Ve);)e.push(this.parseLineStringText_());return e}parsePolygonTextList_(){const e=[this.parsePolygonText_()];for(;this.match(Ve);)e.push(this.parsePolygonText_());return e}isEmptyGeometry_(){const e=this.isTokenType(We)&&"EMPTY"==this.token_.value;return e&&this.consume_(),e}formatErrorMessage_(){return"Unexpected `"+this.token_.value+"` at position "+this.token_.position+" in `"+this.lexer_.wkt+"`"}parseGeometry_(){const e=this.factory,t=e=>new v(...e),i=i=>{const n=i.map((i=>e.createLinearRing(i.map(t))));return n.length>1?e.createPolygon(n[0],n.slice(1)):e.createPolygon(n[0])},n=this.token_;if(this.match(We)){const r=n.value;if(this.layout_=this.parseGeometryLayout_(),"GEOMETRYCOLLECTION"==r){const t=this.parseGeometryCollectionText_();return e.createGeometryCollection(t)}switch(r){case"POINT":{const t=this.parsePointText_();return t?e.createPoint(new v(...t)):e.createPoint()}case"LINESTRING":{const i=this.parseLineStringText_().map(t);return e.createLineString(i)}case"LINEARRING":{const i=this.parseLineStringText_().map(t);return e.createLinearRing(i)}case"POLYGON":{const t=this.parsePolygonText_();return t&&0!==t.length?i(t):e.createPolygon()}case"MULTIPOINT":{const i=this.parseMultiPointText_();if(!i||0===i.length)return e.createMultiPoint();const n=i.map(t).map((t=>e.createPoint(t)));return e.createMultiPoint(n)}case"MULTILINESTRING":{const i=this.parseMultiLineStringText_().map((i=>e.createLineString(i.map(t))));return e.createMultiLineString(i)}case"MULTIPOLYGON":{const t=this.parseMultiPolygonText_();if(!t||0===t.length)return e.createMultiPolygon();const n=t.map(i);return e.createMultiPolygon(n)}default:throw new Error("Invalid geometry type: "+r)}}throw new Error(this.formatErrorMessage_())}}function Ke(e){if(e.isEmpty())return"";const t=e.getCoordinate(),i=[t.x,t.y];return void 0===t.z||Number.isNaN(t.z)||i.push(t.z),void 0===t.m||Number.isNaN(t.m)||i.push(t.m),i.join(" ")}function Xe(e){const t=e.getCoordinates().map((e=>{const t=[e.x,e.y];return void 0===e.z||Number.isNaN(e.z)||t.push(e.z),void 0===e.m||Number.isNaN(e.m)||t.push(e.m),t})),i=[];for(let e=0,n=t.length;e<n;++e)i.push(t[e].join(" "));return i.join(", ")}function Je(e){const t=[];t.push("("+Xe(e.getExteriorRing())+")");for(let i=0,n=e.getNumInteriorRing();i<n;++i)t.push("("+Xe(e.getInteriorRingN(i))+")");return t.join(", ")}const Ze={Point:Ke,LineString:Xe,LinearRing:Xe,Polygon:Je,MultiPoint:function(e){const t=[];for(let i=0,n=e.getNumGeometries();i<n;++i)t.push("("+Ke(e.getGeometryN(i))+")");return t.join(", ")},MultiLineString:function(e){const t=[];for(let i=0,n=e.getNumGeometries();i<n;++i)t.push("("+Xe(e.getGeometryN(i))+")");return t.join(", ")},MultiPolygon:function(e){const t=[];for(let i=0,n=e.getNumGeometries();i<n;++i)t.push("("+Je(e.getGeometryN(i))+")");return t.join(", ")},GeometryCollection:function(e){const t=[];for(let i=0,n=e.getNumGeometries();i<n;++i)t.push(Qe(e.getGeometryN(i)));return t.join(", ")}};function Qe(e){let t=e.getGeometryType();const i=Ze[t];t=t.toUpperCase();const n=function(e){let t="";if(e.isEmpty())return t;const i=e.getCoordinate();return void 0===i.z||Number.isNaN(i.z)||(t+="Z"),void 0===i.m||Number.isNaN(i.m)||(t+="M"),t}(e);if(n.length>0&&(t+=" "+n),e.isEmpty())return t+" EMPTY";return t+" ("+i(e)+")"}class $e{constructor(e){this.geometryFactory=e||new De,this.precisionModel=this.geometryFactory.getPrecisionModel()}read(e){const t=new qe(e);return new je(t,this.geometryFactory).parse()}write(e){return Qe(e)}}class et{constructor(e){this.parser=new $e(e)}write(e){return this.parser.write(e)}static toLineString(e,t){if(2!==arguments.length)throw new Error("Not implemented");return"LINESTRING ( "+e.x+" "+e.y+", "+t.x+" "+t.y+" )"}}class tt{constructor(){tt.constructor_.apply(this,arguments)}static constructor_(){this._result=null,this._inputLines=Array(2).fill().map((()=>Array(2))),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new v,this._intPt[1]=new v,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0}static computeEdgeDistance(e,t,i){const n=Math.abs(i.x-t.x),r=Math.abs(i.y-t.y);let o=-1;if(e.equals(t))o=0;else if(e.equals(i))o=n>r?n:r;else{const i=Math.abs(e.x-t.x),s=Math.abs(e.y-t.y);o=n>r?i:s,0!==o||e.equals(t)||(o=Math.max(i,s))}return x.isTrue(!(0===o&&!e.equals(t)),"Bad distance calculation"),o}static nonRobustComputeEdgeDistance(e,t,i){const n=e.x-t.x,r=e.y-t.y,o=Math.sqrt(n*n+r*r);return x.isTrue(!(0===o&&!e.equals(t)),"Invalid distance calculation"),o}getIndexAlongSegment(e,t){return this.computeIntLineIndex(),this._intLineIndex[e][t]}getTopologySummary(){const e=new Ce;return this.isEndPoint()&&e.append(" endpoint"),this._isProper&&e.append(" proper"),this.isCollinear()&&e.append(" collinear"),e.toString()}computeIntersection(e,t,i,n){this._inputLines[0][0]=e,this._inputLines[0][1]=t,this._inputLines[1][0]=i,this._inputLines[1][1]=n,this._result=this.computeIntersect(e,t,i,n)}getIntersectionNum(){return this._result}computeIntLineIndex(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((()=>Array(2))),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){const e=arguments[0];this.getEdgeDistance(e,0)>this.getEdgeDistance(e,1)?(this._intLineIndex[e][0]=0,this._intLineIndex[e][1]=1):(this._intLineIndex[e][0]=1,this._intLineIndex[e][1]=0)}}isProper(){return this.hasIntersection()&&this._isProper}setPrecisionModel(e){this._precisionModel=e}isInteriorIntersection(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){const e=arguments[0];for(let t=0;t<this._result;t++)if(!this._intPt[t].equals2D(this._inputLines[e][0])&&!this._intPt[t].equals2D(this._inputLines[e][1]))return!0;return!1}}getIntersection(e){return this._intPt[e]}isEndPoint(){return this.hasIntersection()&&!this._isProper}hasIntersection(){return this._result!==tt.NO_INTERSECTION}getEdgeDistance(e,t){return tt.computeEdgeDistance(this._intPt[t],this._inputLines[e][0],this._inputLines[e][1])}isCollinear(){return this._result===tt.COLLINEAR_INTERSECTION}toString(){return et.toLineString(this._inputLines[0][0],this._inputLines[0][1])+" - "+et.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()}getEndpoint(e,t){return this._inputLines[e][t]}isIntersection(e){for(let t=0;t<this._result;t++)if(this._intPt[t].equals2D(e))return!0;return!1}getIntersectionAlongSegment(e,t){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[e][t]]}}tt.DONT_INTERSECT=0,tt.DO_INTERSECT=1,tt.COLLINEAR=2,tt.NO_INTERSECTION=0,tt.POINT_INTERSECTION=1,tt.COLLINEAR_INTERSECTION=2;class it extends tt{constructor(){super()}static nearestEndpoint(e,t,i,n){let r=e,o=Pe.pointToSegment(e,i,n),s=Pe.pointToSegment(t,i,n);return s<o&&(o=s,r=t),s=Pe.pointToSegment(i,e,t),s<o&&(o=s,r=i),s=Pe.pointToSegment(n,e,t),s<o&&(o=s,r=n),r}isInSegmentEnvelopes(e){const t=new E(this._inputLines[0][0],this._inputLines[0][1]),i=new E(this._inputLines[1][0],this._inputLines[1][1]);return t.contains(e)&&i.contains(e)}computeIntersection(){if(3!==arguments.length)return super.computeIntersection.apply(this,arguments);{const e=arguments[0],t=arguments[1],i=arguments[2];if(this._isProper=!1,E.intersects(t,i,e)&&0===ne.index(t,i,e)&&0===ne.index(i,t,e))return this._isProper=!0,(e.equals(t)||e.equals(i))&&(this._isProper=!1),this._result=tt.POINT_INTERSECTION,null;this._result=tt.NO_INTERSECTION}}intersection(e,t,i,n){let r=this.intersectionSafe(e,t,i,n);return this.isInSegmentEnvelopes(r)||(r=new v(it.nearestEndpoint(e,t,i,n))),null!==this._precisionModel&&this._precisionModel.makePrecise(r),r}checkDD(e,t,i,n,r){const o=ie.intersection(e,t,i,n),s=this.isInSegmentEnvelopes(o);ye.out.println("DD in env = "+s+"  --------------------- "+o),r.distance(o)>1e-4&&ye.out.println("Distance = "+r.distance(o))}intersectionSafe(e,t,i,n){let r=Le.intersection(e,t,i,n);return null===r&&(r=it.nearestEndpoint(e,t,i,n)),r}computeCollinearIntersection(e,t,i,n){const r=E.intersects(e,t,i),o=E.intersects(e,t,n),s=E.intersects(i,n,e),a=E.intersects(i,n,t);return r&&o?(this._intPt[0]=i,this._intPt[1]=n,tt.COLLINEAR_INTERSECTION):s&&a?(this._intPt[0]=e,this._intPt[1]=t,tt.COLLINEAR_INTERSECTION):r&&s?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||o||a?tt.COLLINEAR_INTERSECTION:tt.POINT_INTERSECTION):r&&a?(this._intPt[0]=i,this._intPt[1]=t,!i.equals(t)||o||s?tt.COLLINEAR_INTERSECTION:tt.POINT_INTERSECTION):o&&s?(this._intPt[0]=n,this._intPt[1]=e,!n.equals(e)||r||a?tt.COLLINEAR_INTERSECTION:tt.POINT_INTERSECTION):o&&a?(this._intPt[0]=n,this._intPt[1]=t,!n.equals(t)||r||s?tt.COLLINEAR_INTERSECTION:tt.POINT_INTERSECTION):tt.NO_INTERSECTION}computeIntersect(e,t,i,n){if(this._isProper=!1,!E.intersects(e,t,i,n))return tt.NO_INTERSECTION;const r=ne.index(e,t,i),o=ne.index(e,t,n);if(r>0&&o>0||r<0&&o<0)return tt.NO_INTERSECTION;const s=ne.index(i,n,e),a=ne.index(i,n,t);if(s>0&&a>0||s<0&&a<0)return tt.NO_INTERSECTION;return 0===r&&0===o&&0===s&&0===a?this.computeCollinearIntersection(e,t,i,n):(0===r||0===o||0===s||0===a?(this._isProper=!1,e.equals2D(i)||e.equals2D(n)?this._intPt[0]=e:t.equals2D(i)||t.equals2D(n)?this._intPt[0]=t:0===r?this._intPt[0]=new v(i):0===o?this._intPt[0]=new v(n):0===s?this._intPt[0]=new v(e):0===a&&(this._intPt[0]=new v(t))):(this._isProper=!0,this._intPt[0]=this.intersection(e,t,i,n)),tt.POINT_INTERSECTION)}}class nt{constructor(){nt.constructor_.apply(this,arguments)}static constructor_(){if(this.p0=null,this.p1=null,0===arguments.length)nt.constructor_.call(this,new v,new v);else if(1===arguments.length){const e=arguments[0];nt.constructor_.call(this,e.p0,e.p1)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.p0=e,this.p1=t}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];nt.constructor_.call(this,new v(e,t),new v(i,n))}}static midPoint(e,t){return new v((e.x+t.x)/2,(e.y+t.y)/2)}minX(){return Math.min(this.p0.x,this.p1.x)}orientationIndex(){if(arguments[0]instanceof nt){const e=arguments[0],t=ne.index(this.p0,this.p1,e.p0),i=ne.index(this.p0,this.p1,e.p1);return t>=0&&i>=0||t<=0&&i<=0?Math.max(t,i):0}if(arguments[0]instanceof v){const e=arguments[0];return ne.index(this.p0,this.p1,e)}}toGeometry(e){return e.createLineString([this.p0,this.p1])}isVertical(){return this.p0.x===this.p1.x}equals(e){if(!(e instanceof nt))return!1;const t=e;return this.p0.equals(t.p0)&&this.p1.equals(t.p1)}intersection(e){const t=new it;return t.computeIntersection(this.p0,this.p1,e.p0,e.p1),t.hasIntersection()?t.getIntersection(0):null}project(){if(arguments[0]instanceof v){const e=arguments[0];if(e.equals(this.p0)||e.equals(this.p1))return new v(e);const t=this.projectionFactor(e),i=new v;return i.x=this.p0.x+t*(this.p1.x-this.p0.x),i.y=this.p0.y+t*(this.p1.y-this.p0.y),i}if(arguments[0]instanceof nt){const e=arguments[0],t=this.projectionFactor(e.p0),i=this.projectionFactor(e.p1);if(t>=1&&i>=1)return null;if(t<=0&&i<=0)return null;let n=this.project(e.p0);t<0&&(n=this.p0),t>1&&(n=this.p1);let r=this.project(e.p1);return i<0&&(r=this.p0),i>1&&(r=this.p1),new nt(n,r)}}normalize(){this.p1.compareTo(this.p0)<0&&this.reverse()}angle(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)}getCoordinate(e){return 0===e?this.p0:this.p1}distancePerpendicular(e){return Pe.pointToLinePerpendicular(e,this.p0,this.p1)}minY(){return Math.min(this.p0.y,this.p1.y)}midPoint(){return nt.midPoint(this.p0,this.p1)}projectionFactor(e){if(e.equals(this.p0))return 0;if(e.equals(this.p1))return 1;const t=this.p1.x-this.p0.x,i=this.p1.y-this.p0.y,n=t*t+i*i;if(n<=0)return _.NaN;return((e.x-this.p0.x)*t+(e.y-this.p0.y)*i)/n}closestPoints(e){const t=this.intersection(e);if(null!==t)return[t,t];const i=new Array(2).fill(null);let n=_.MAX_VALUE,r=null;const o=this.closestPoint(e.p0);n=o.distance(e.p0),i[0]=o,i[1]=e.p0;const s=this.closestPoint(e.p1);r=s.distance(e.p1),r<n&&(n=r,i[0]=s,i[1]=e.p1);const a=e.closestPoint(this.p0);r=a.distance(this.p0),r<n&&(n=r,i[0]=this.p0,i[1]=a);const l=e.closestPoint(this.p1);return r=l.distance(this.p1),r<n&&(n=r,i[0]=this.p1,i[1]=l),i}closestPoint(e){const t=this.projectionFactor(e);if(t>0&&t<1)return this.project(e);return this.p0.distance(e)<this.p1.distance(e)?this.p0:this.p1}maxX(){return Math.max(this.p0.x,this.p1.x)}getLength(){return this.p0.distance(this.p1)}compareTo(e){const t=e,i=this.p0.compareTo(t.p0);return 0!==i?i:this.p1.compareTo(t.p1)}reverse(){const e=this.p0;this.p0=this.p1,this.p1=e}equalsTopo(e){return this.p0.equals(e.p0)&&this.p1.equals(e.p1)||this.p0.equals(e.p1)&&this.p1.equals(e.p0)}lineIntersection(e){return Le.intersection(this.p0,this.p1,e.p0,e.p1)}maxY(){return Math.max(this.p0.y,this.p1.y)}pointAlongOffset(e,t){const i=this.p0.x+e*(this.p1.x-this.p0.x),n=this.p0.y+e*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(r*r+o*o);let a=0,l=0;if(0!==t){if(s<=0)throw new IllegalStateException("Cannot compute offset from zero-length line segment");a=t*r/s,l=t*o/s}return new v(i-l,n+a)}setCoordinates(){if(1===arguments.length){const e=arguments[0];this.setCoordinates(e.p0,e.p1)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=t.x,this.p1.y=t.y}}segmentFraction(e){let t=this.projectionFactor(e);return t<0?t=0:(t>1||_.isNaN(t))&&(t=1),t}toString(){return"LINESTRING( "+this.p0.x+" "+this.p0.y+", "+this.p1.x+" "+this.p1.y+")"}isHorizontal(){return this.p0.y===this.p1.y}reflect(e){const t=this.p1.getY()-this.p0.getY(),i=this.p0.getX()-this.p1.getX(),n=this.p0.getY()*(this.p1.getX()-this.p0.getX())-this.p0.getX()*(this.p1.getY()-this.p0.getY()),r=t*t+i*i,o=t*t-i*i,s=e.getX(),a=e.getY();return new v((-o*s-2*t*i*a-2*t*n)/r,(o*a-2*t*i*s-2*i*n)/r)}distance(){if(arguments[0]instanceof nt){const e=arguments[0];return Pe.segmentToSegment(this.p0,this.p1,e.p0,e.p1)}if(arguments[0]instanceof v){const e=arguments[0];return Pe.pointToSegment(e,this.p0,this.p1)}}pointAlong(e){const t=new v;return t.x=this.p0.x+e*(this.p1.x-this.p0.x),t.y=this.p0.y+e*(this.p1.y-this.p0.y),t}hashCode(){let e=_.doubleToLongBits(this.p0.x);e^=31*_.doubleToLongBits(this.p0.y);const t=Math.trunc(e)^Math.trunc(e>>32);let i=_.doubleToLongBits(this.p1.x);i^=31*_.doubleToLongBits(this.p1.y);return t^(Math.trunc(i)^Math.trunc(i>>32))}get interfaces_(){return[d,m]}}class rt{constructor(e){this.parser=new $e(e||new De)}read(e){return this.parser.read(e)}}class ot{constructor(){ot.constructor_.apply(this,arguments)}static constructor_(){if(this._quadrantSegments=ot.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=ot.CAP_ROUND,this._joinStyle=ot.JOIN_ROUND,this._mitreLimit=ot.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=ot.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){const e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.setQuadrantSegments(e),this.setEndCapStyle(t)}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];this.setQuadrantSegments(e),this.setEndCapStyle(t),this.setJoinStyle(i),this.setMitreLimit(n)}}static bufferDistanceError(e){const t=Math.PI/2/e;return 1-Math.cos(t/2)}getEndCapStyle(){return this._endCapStyle}isSingleSided(){return this._isSingleSided}setQuadrantSegments(e){this._quadrantSegments=e,0===this._quadrantSegments&&(this._joinStyle=ot.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=ot.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),e<=0&&(this._quadrantSegments=1),this._joinStyle!==ot.JOIN_ROUND&&(this._quadrantSegments=ot.DEFAULT_QUADRANT_SEGMENTS)}getJoinStyle(){return this._joinStyle}setJoinStyle(e){this._joinStyle=e}setSimplifyFactor(e){this._simplifyFactor=e<0?0:e}getSimplifyFactor(){return this._simplifyFactor}getQuadrantSegments(){return this._quadrantSegments}setEndCapStyle(e){this._endCapStyle=e}getMitreLimit(){return this._mitreLimit}setMitreLimit(e){this._mitreLimit=e}setSingleSided(e){this._isSingleSided=e}}ot.CAP_ROUND=1,ot.CAP_FLAT=2,ot.CAP_SQUARE=3,ot.JOIN_ROUND=1,ot.JOIN_MITRE=2,ot.JOIN_BEVEL=3,ot.DEFAULT_QUADRANT_SEGMENTS=8,ot.DEFAULT_MITRE_LIMIT=5,ot.DEFAULT_SIMPLIFY_FACTOR=.01;class st{static toLocationSymbol(e){switch(e){case st.EXTERIOR:return"e";case st.BOUNDARY:return"b";case st.INTERIOR:return"i";case st.NONE:return"-"}throw new h("Unknown location value: "+e)}}st.INTERIOR=0,st.BOUNDARY=1,st.EXTERIOR=2,st.NONE=-1;class at{static opposite(e){return e===at.LEFT?at.RIGHT:e===at.RIGHT?at.LEFT:e}}at.ON=0,at.LEFT=1,at.RIGHT=2;class lt extends c{constructor(e){super(e),this.name=Object.keys({EmptyStackException:lt})[0]}}class ct extends H{constructor(){super(),this.array=[]}add(e){return this.array.push(e),!0}get(e){if(e<0||e>=this.size())throw new z;return this.array[e]}push(e){return this.array.push(e),e}pop(){if(0===this.array.length)throw new lt;return this.array.pop()}peek(){if(0===this.array.length)throw new lt;return this.array[this.array.length-1]}empty(){return 0===this.array.length}isEmpty(){return this.empty()}search(e){return this.array.indexOf(e)}size(){return this.array.length}toArray(){return this.array.slice()}}class ht{constructor(){ht.constructor_.apply(this,arguments)}static constructor_(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null}getCoordinate(){return this._minCoord}getRightmostSide(e,t){let i=this.getRightmostSideOfSegment(e,t);return i<0&&(i=this.getRightmostSideOfSegment(e,t-1)),i<0&&(this._minCoord=null,this.checkForRightmostCoordinate(e)),i}findRightmostEdgeAtVertex(){const e=this._minDe.getEdge().getCoordinates();x.isTrue(this._minIndex>0&&this._minIndex<e.length,"rightmost point expected to be interior vertex of edge");const t=e[this._minIndex-1],i=e[this._minIndex+1],n=ne.index(this._minCoord,i,t);let r=!1;(t.y<this._minCoord.y&&i.y<this._minCoord.y&&n===ne.COUNTERCLOCKWISE||t.y>this._minCoord.y&&i.y>this._minCoord.y&&n===ne.CLOCKWISE)&&(r=!0),r&&(this._minIndex=this._minIndex-1)}getRightmostSideOfSegment(e,t){const i=e.getEdge().getCoordinates();if(t<0||t+1>=i.length)return-1;if(i[t].y===i[t+1].y)return-1;let n=at.LEFT;return i[t].y<i[t+1].y&&(n=at.RIGHT),n}getEdge(){return this._orientedDe}checkForRightmostCoordinate(e){const t=e.getEdge().getCoordinates();for(let i=0;i<t.length-1;i++)(null===this._minCoord||t[i].x>this._minCoord.x)&&(this._minDe=e,this._minIndex=i,this._minCoord=t[i])}findRightmostEdgeAtNode(){const e=this._minDe.getNode().getEdges();this._minDe=e.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)}findEdge(e){for(let t=e.iterator();t.hasNext();){const e=t.next();e.isForward()&&this.checkForRightmostCoordinate(e)}x.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),"inconsistency in rightmost processing"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===at.LEFT&&(this._orientedDe=this._minDe.getSym())}}class ut extends b{constructor(e,t){super(t?e+" [ "+t+" ]":e),this.pt=t?new v(t):void 0,this.name=Object.keys({TopologyException:ut})[0]}getCoordinate(){return this.pt}}class dt{constructor(){this.array=[]}addLast(e){this.array.push(e)}removeFirst(){return this.array.shift()}isEmpty(){return 0===this.array.length}}class gt{constructor(){gt.constructor_.apply(this,arguments)}static constructor_(){this._finder=null,this._dirEdgeList=new V,this._nodes=new V,this._rightMostCoord=null,this._env=null,this._finder=new ht}clearVisitedEdges(){for(let e=this._dirEdgeList.iterator();e.hasNext();){e.next().setVisited(!1)}}getRightmostCoordinate(){return this._rightMostCoord}computeNodeDepth(e){let t=null;for(let i=e.getEdges().iterator();i.hasNext();){const e=i.next();if(e.isVisited()||e.getSym().isVisited()){t=e;break}}if(null===t)throw new ut("unable to find edge to compute depths at "+e.getCoordinate());e.getEdges().computeDepths(t);for(let t=e.getEdges().iterator();t.hasNext();){const e=t.next();e.setVisited(!0),this.copySymDepths(e)}}computeDepth(e){this.clearVisitedEdges();const t=this._finder.getEdge();t.getNode(),t.getLabel(),t.setEdgeDepths(at.RIGHT,e),this.copySymDepths(t),this.computeDepths(t)}create(e){this.addReachable(e),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()}findResultEdges(){for(let e=this._dirEdgeList.iterator();e.hasNext();){const t=e.next();t.getDepth(at.RIGHT)>=1&&t.getDepth(at.LEFT)<=0&&!t.isInteriorAreaEdge()&&t.setInResult(!0)}}computeDepths(e){const t=new ve,i=new dt,n=e.getNode();for(i.addLast(n),t.add(n),e.setVisited(!0);!i.isEmpty();){const e=i.removeFirst();t.add(e),this.computeNodeDepth(e);for(let n=e.getEdges().iterator();n.hasNext();){const e=n.next().getSym();if(e.isVisited())continue;const r=e.getNode();t.contains(r)||(i.addLast(r),t.add(r))}}}compareTo(e){const t=e;return this._rightMostCoord.x<t._rightMostCoord.x?-1:this._rightMostCoord.x>t._rightMostCoord.x?1:0}getEnvelope(){if(null===this._env){const e=new E;for(let t=this._dirEdgeList.iterator();t.hasNext();){const i=t.next().getEdge().getCoordinates();for(let t=0;t<i.length-1;t++)e.expandToInclude(i[t])}this._env=e}return this._env}addReachable(e){const t=new ct;for(t.add(e);!t.empty();){const e=t.pop();this.add(e,t)}}copySymDepths(e){const t=e.getSym();t.setDepth(at.LEFT,e.getDepth(at.RIGHT)),t.setDepth(at.RIGHT,e.getDepth(at.LEFT))}add(e,t){e.setVisited(!0),this._nodes.add(e);for(let i=e.getEdges().iterator();i.hasNext();){const e=i.next();this._dirEdgeList.add(e);const n=e.getSym().getNode();n.isVisited()||t.push(n)}}getNodes(){return this._nodes}getDirectedEdges(){return this._dirEdgeList}get interfaces_(){return[d]}}class mt{constructor(){mt.constructor_.apply(this,arguments)}static constructor_(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;const e=arguments[0];this._p=e}static locatePointInRing(){if(arguments[0]instanceof v&&N(arguments[1],R)){const e=arguments[1],t=new mt(arguments[0]),i=new v,n=new v;for(let r=1;r<e.size();r++)if(e.getCoordinate(r,i),e.getCoordinate(r-1,n),t.countSegment(i,n),t.isOnSegment())return t.getLocation();return t.getLocation()}if(arguments[0]instanceof v&&arguments[1]instanceof Array){const e=arguments[1],t=new mt(arguments[0]);for(let i=1;i<e.length;i++){const n=e[i],r=e[i-1];if(t.countSegment(n,r),t.isOnSegment())return t.getLocation()}return t.getLocation()}}countSegment(e,t){if(e.x<this._p.x&&t.x<this._p.x)return null;if(this._p.x===t.x&&this._p.y===t.y)return this._isPointOnSegment=!0,null;if(e.y===this._p.y&&t.y===this._p.y){let i=e.x,n=t.x;return i>n&&(i=t.x,n=e.x),this._p.x>=i&&this._p.x<=n&&(this._isPointOnSegment=!0),null}if(e.y>this._p.y&&t.y<=this._p.y||t.y>this._p.y&&e.y<=this._p.y){let i=ne.index(e,t,this._p);if(i===ne.COLLINEAR)return this._isPointOnSegment=!0,null;t.y<e.y&&(i=-i),i===ne.LEFT&&this._crossingCount++}}isPointInPolygon(){return this.getLocation()!==st.EXTERIOR}getLocation(){return this._isPointOnSegment?st.BOUNDARY:this._crossingCount%2==1?st.INTERIOR:st.EXTERIOR}isOnSegment(){return this._isPointOnSegment}}class pt{static isOnLine(){if(arguments[0]instanceof v&&N(arguments[1],R)){const e=arguments[0],t=arguments[1],i=new it,n=new v,r=new v,o=t.size();for(let s=1;s<o;s++)if(t.getCoordinate(s-1,n),t.getCoordinate(s,r),i.computeIntersection(e,n,r),i.hasIntersection())return!0;return!1}if(arguments[0]instanceof v&&arguments[1]instanceof Array){const e=arguments[0],t=arguments[1],i=new it;for(let n=1;n<t.length;n++){const r=t[n-1],o=t[n];if(i.computeIntersection(e,r,o),i.hasIntersection())return!0}return!1}}static locateInRing(e,t){return mt.locatePointInRing(e,t)}static isInRing(e,t){return pt.locateInRing(e,t)!==st.EXTERIOR}}class ft{constructor(){ft.constructor_.apply(this,arguments)}static constructor_(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){const e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){const e=arguments[0];this.init(1),this.location[at.ON]=e}else if(arguments[0]instanceof ft){const e=arguments[0];if(this.init(e.location.length),null!==e)for(let t=0;t<this.location.length;t++)this.location[t]=e.location[t]}}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this.init(3),this.location[at.ON]=e,this.location[at.LEFT]=t,this.location[at.RIGHT]=i}}setAllLocations(e){for(let t=0;t<this.location.length;t++)this.location[t]=e}isNull(){for(let e=0;e<this.location.length;e++)if(this.location[e]!==st.NONE)return!1;return!0}setAllLocationsIfNull(e){for(let t=0;t<this.location.length;t++)this.location[t]===st.NONE&&(this.location[t]=e)}isLine(){return 1===this.location.length}merge(e){if(e.location.length>this.location.length){const e=new Array(3).fill(null);e[at.ON]=this.location[at.ON],e[at.LEFT]=st.NONE,e[at.RIGHT]=st.NONE,this.location=e}for(let t=0;t<this.location.length;t++)this.location[t]===st.NONE&&t<e.location.length&&(this.location[t]=e.location[t])}getLocations(){return this.location}flip(){if(this.location.length<=1)return null;const e=this.location[at.LEFT];this.location[at.LEFT]=this.location[at.RIGHT],this.location[at.RIGHT]=e}toString(){const e=new Q;return this.location.length>1&&e.append(st.toLocationSymbol(this.location[at.LEFT])),e.append(st.toLocationSymbol(this.location[at.ON])),this.location.length>1&&e.append(st.toLocationSymbol(this.location[at.RIGHT])),e.toString()}setLocations(e,t,i){this.location[at.ON]=e,this.location[at.LEFT]=t,this.location[at.RIGHT]=i}get(e){return e<this.location.length?this.location[e]:st.NONE}isArea(){return this.location.length>1}isAnyNull(){for(let e=0;e<this.location.length;e++)if(this.location[e]===st.NONE)return!0;return!1}setLocation(){if(1===arguments.length){const e=arguments[0];this.setLocation(at.ON,e)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.location[e]=t}}init(e){this.location=new Array(e).fill(null),this.setAllLocations(st.NONE)}isEqualOnSide(e,t){return this.location[t]===e.location[t]}allPositionsEqual(e){for(let t=0;t<this.location.length;t++)if(this.location[t]!==e)return!1;return!0}}class _t{constructor(){_t.constructor_.apply(this,arguments)}static constructor_(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){const e=arguments[0];this.elt[0]=new ft(e),this.elt[1]=new ft(e)}else if(arguments[0]instanceof _t){const e=arguments[0];this.elt[0]=new ft(e.elt[0]),this.elt[1]=new ft(e.elt[1])}}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.elt[0]=new ft(st.NONE),this.elt[1]=new ft(st.NONE),this.elt[e].setLocation(t)}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this.elt[0]=new ft(e,t,i),this.elt[1]=new ft(e,t,i)}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];this.elt[0]=new ft(st.NONE,st.NONE,st.NONE),this.elt[1]=new ft(st.NONE,st.NONE,st.NONE),this.elt[e].setLocations(t,i,n)}}static toLineLabel(e){const t=new _t(st.NONE);for(let i=0;i<2;i++)t.setLocation(i,e.getLocation(i));return t}getGeometryCount(){let e=0;return this.elt[0].isNull()||e++,this.elt[1].isNull()||e++,e}setAllLocations(e,t){this.elt[e].setAllLocations(t)}isNull(e){return this.elt[e].isNull()}setAllLocationsIfNull(){if(1===arguments.length){const e=arguments[0];this.setAllLocationsIfNull(0,e),this.setAllLocationsIfNull(1,e)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.elt[e].setAllLocationsIfNull(t)}}isLine(e){return this.elt[e].isLine()}merge(e){for(let t=0;t<2;t++)null===this.elt[t]&&null!==e.elt[t]?this.elt[t]=new ft(e.elt[t]):this.elt[t].merge(e.elt[t])}flip(){this.elt[0].flip(),this.elt[1].flip()}getLocation(){if(1===arguments.length){const e=arguments[0];return this.elt[e].get(at.ON)}if(2===arguments.length){const e=arguments[0],t=arguments[1];return this.elt[e].get(t)}}toString(){const e=new Q;return null!==this.elt[0]&&(e.append("A:"),e.append(this.elt[0].toString())),null!==this.elt[1]&&(e.append(" B:"),e.append(this.elt[1].toString())),e.toString()}isArea(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){const e=arguments[0];return this.elt[e].isArea()}}isAnyNull(e){return this.elt[e].isAnyNull()}setLocation(){if(2===arguments.length){const e=arguments[0],t=arguments[1];this.elt[e].setLocation(at.ON,t)}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this.elt[e].setLocation(t,i)}}isEqualOnSide(e,t){return this.elt[0].isEqualOnSide(e.elt[0],t)&&this.elt[1].isEqualOnSide(e.elt[1],t)}allPositionsEqual(e,t){return this.elt[e].allPositionsEqual(t)}toLine(e){this.elt[e].isArea()&&(this.elt[e]=new ft(this.elt[e].location[0]))}}class yt{constructor(){yt.constructor_.apply(this,arguments)}static constructor_(){if(this._startDe=null,this._maxNodeDegree=-1,this._edges=new V,this._pts=new V,this._label=new _t(st.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new V,this._geometryFactory=null,0===arguments.length);else if(2===arguments.length){const e=arguments[0],t=arguments[1];this._geometryFactory=t,this.computePoints(e),this.computeRing()}}computeRing(){if(null!==this._ring)return null;const e=new Array(this._pts.size()).fill(null);for(let t=0;t<this._pts.size();t++)e[t]=this._pts.get(t);this._ring=this._geometryFactory.createLinearRing(e),this._isHole=ne.isCCW(this._ring.getCoordinates())}isIsolated(){return 1===this._label.getGeometryCount()}computePoints(e){this._startDe=e;let t=e,i=!0;do{if(null===t)throw new ut("Found null DirectedEdge");if(t.getEdgeRing()===this)throw new ut("Directed Edge visited twice during ring-building at "+t.getCoordinate());this._edges.add(t);const e=t.getLabel();x.isTrue(e.isArea()),this.mergeLabel(e),this.addPoints(t.getEdge(),t.isForward(),i),i=!1,this.setEdgeRing(t,this),t=this.getNext(t)}while(t!==this._startDe)}getLinearRing(){return this._ring}getCoordinate(e){return this._pts.get(e)}computeMaxNodeDegree(){this._maxNodeDegree=0;let e=this._startDe;do{const t=e.getNode().getEdges().getOutgoingDegree(this);t>this._maxNodeDegree&&(this._maxNodeDegree=t),e=this.getNext(e)}while(e!==this._startDe);this._maxNodeDegree*=2}addPoints(e,t,i){const n=e.getCoordinates();if(t){let e=1;i&&(e=0);for(let t=e;t<n.length;t++)this._pts.add(n[t])}else{let e=n.length-2;i&&(e=n.length-1);for(let t=e;t>=0;t--)this._pts.add(n[t])}}isHole(){return this._isHole}setInResult(){let e=this._startDe;do{e.getEdge().setInResult(!0),e=e.getNext()}while(e!==this._startDe)}containsPoint(e){const t=this.getLinearRing();if(!t.getEnvelopeInternal().contains(e))return!1;if(!pt.isInRing(e,t.getCoordinates()))return!1;for(let t=this._holes.iterator();t.hasNext();){if(t.next().containsPoint(e))return!1}return!0}addHole(e){this._holes.add(e)}isShell(){return null===this._shell}getLabel(){return this._label}getEdges(){return this._edges}getMaxNodeDegree(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree}getShell(){return this._shell}mergeLabel(){if(1===arguments.length){const e=arguments[0];this.mergeLabel(e,0),this.mergeLabel(e,1)}else if(2===arguments.length){const e=arguments[1],t=arguments[0].getLocation(e,at.RIGHT);if(t===st.NONE)return null;if(this._label.getLocation(e)===st.NONE)return this._label.setLocation(e,t),null}}setShell(e){this._shell=e,null!==e&&e.addHole(this)}toPolygon(e){const t=new Array(this._holes.size()).fill(null);for(let e=0;e<this._holes.size();e++)t[e]=this._holes.get(e).getLinearRing();return e.createPolygon(this.getLinearRing(),t)}}class bt extends yt{constructor(){super(),bt.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0],t=arguments[1];yt.constructor_.call(this,e,t)}setEdgeRing(e,t){e.setMinEdgeRing(t)}getNext(e){return e.getNextMin()}}class Ct extends yt{constructor(){super(),Ct.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0],t=arguments[1];yt.constructor_.call(this,e,t)}buildMinimalRings(){const e=new V;let t=this._startDe;do{if(null===t.getMinEdgeRing()){const i=new bt(t,this._geometryFactory);e.add(i)}t=t.getNext()}while(t!==this._startDe);return e}setEdgeRing(e,t){e.setEdgeRing(t)}linkDirectedEdgesForMinimalEdgeRings(){let e=this._startDe;do{e.getNode().getEdges().linkMinimalDirectedEdges(this),e=e.getNext()}while(e!==this._startDe)}getNext(e){return e.getNext()}}class xt{constructor(){xt.constructor_.apply(this,arguments)}static constructor_(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){const e=arguments[0];this._label=e}}setVisited(e){this._isVisited=e}setInResult(e){this._isInResult=e}isCovered(){return this._isCovered}isCoveredSet(){return this._isCoveredSet}setLabel(e){this._label=e}getLabel(){return this._label}setCovered(e){this._isCovered=e,this._isCoveredSet=!0}updateIM(e){x.isTrue(this._label.getGeometryCount()>=2,"found partial label"),this.computeIM(e)}isInResult(){return this._isInResult}isVisited(){return this._isVisited}}class St extends xt{constructor(){super(),St.constructor_.apply(this,arguments)}static constructor_(){this._coord=null,this._edges=null;const e=arguments[0],t=arguments[1];this._coord=e,this._edges=t,this._label=new _t(0,st.NONE)}isIncidentEdgeInResult(){for(let e=this.getEdges().getEdges().iterator();e.hasNext();){if(e.next().getEdge().isInResult())return!0}return!1}isIsolated(){return 1===this._label.getGeometryCount()}getCoordinate(){return this._coord}print(e){e.println("node "+this._coord+" lbl: "+this._label)}computeIM(e){}computeMergedLocation(e,t){let i=st.NONE;if(i=this._label.getLocation(t),!e.isNull(t)){const n=e.getLocation(t);i!==st.BOUNDARY&&(i=n)}return i}setLabel(){if(2!==arguments.length||!Number.isInteger(arguments[1])||!Number.isInteger(arguments[0]))return super.setLabel.apply(this,arguments);{const e=arguments[0],t=arguments[1];null===this._label?this._label=new _t(e,t):this._label.setLocation(e,t)}}getEdges(){return this._edges}mergeLabel(){if(arguments[0]instanceof St){const e=arguments[0];this.mergeLabel(e._label)}else if(arguments[0]instanceof _t){const e=arguments[0];for(let t=0;t<2;t++){const i=this.computeMergedLocation(e,t);this._label.getLocation(t)===st.NONE&&this._label.setLocation(t,i)}}}add(e){this._edges.insert(e),e.setNode(this)}setLabelBoundary(e){if(null===this._label)return null;let t=st.NONE;null!==this._label&&(t=this._label.getLocation(e));let i=null;switch(t){case st.BOUNDARY:i=st.INTERIOR;break;case st.INTERIOR:default:i=st.BOUNDARY}this._label.setLocation(e,i)}}class It extends Te{}function Tt(e){return null==e?0:e.color}function vt(e){return null==e?null:e.parent}function wt(e,t){null!==e&&(e.color=t)}function Et(e){return null==e?null:e.left}function At(e){return null==e?null:e.right}class Mt extends It{constructor(){super(),this.root_=null,this.size_=0}get(e){let t=this.root_;for(;null!==t;){const i=e.compareTo(t.key);if(i<0)t=t.left;else{if(!(i>0))return t.value;t=t.right}}return null}put(e,t){if(null===this.root_)return this.root_={key:e,value:t,left:null,right:null,parent:null,color:0,getValue(){return this.value},getKey(){return this.key}},this.size_=1,null;let i,n,r=this.root_;do{if(i=r,n=e.compareTo(r.key),n<0)r=r.left;else{if(!(n>0)){const e=r.value;return r.value=t,e}r=r.right}}while(null!==r);const o={key:e,left:null,right:null,value:t,parent:i,color:0,getValue(){return this.value},getKey(){return this.key}};return n<0?i.left=o:i.right=o,this.fixAfterInsertion(o),this.size_++,null}fixAfterInsertion(e){let t;for(e.color=1;null!=e&&e!==this.root_&&1===e.parent.color;)vt(e)===Et(vt(vt(e)))?(t=At(vt(vt(e))),1===Tt(t)?(wt(vt(e),0),wt(t,0),wt(vt(vt(e)),1),e=vt(vt(e))):(e===At(vt(e))&&(e=vt(e),this.rotateLeft(e)),wt(vt(e),0),wt(vt(vt(e)),1),this.rotateRight(vt(vt(e))))):(t=Et(vt(vt(e))),1===Tt(t)?(wt(vt(e),0),wt(t,0),wt(vt(vt(e)),1),e=vt(vt(e))):(e===Et(vt(e))&&(e=vt(e),this.rotateRight(e)),wt(vt(e),0),wt(vt(vt(e)),1),this.rotateLeft(vt(vt(e)))));this.root_.color=0}values(){const e=new V;let t=this.getFirstEntry();if(null!==t)for(e.add(t.value);null!==(t=Mt.successor(t));)e.add(t.value);return e}entrySet(){const e=new ve;let t=this.getFirstEntry();if(null!==t)for(e.add(t);null!==(t=Mt.successor(t));)e.add(t);return e}rotateLeft(e){if(null!=e){const t=e.right;e.right=t.left,null!=t.left&&(t.left.parent=e),t.parent=e.parent,null==e.parent?this.root_=t:e.parent.left===e?e.parent.left=t:e.parent.right=t,t.left=e,e.parent=t}}rotateRight(e){if(null!=e){const t=e.left;e.left=t.right,null!=t.right&&(t.right.parent=e),t.parent=e.parent,null==e.parent?this.root_=t:e.parent.right===e?e.parent.right=t:e.parent.left=t,t.right=e,e.parent=t}}getFirstEntry(){let e=this.root_;if(null!=e)for(;null!=e.left;)e=e.left;return e}static successor(e){let t;if(null===e)return null;if(null!==e.right){for(t=e.right;null!==t.left;)t=t.left;return t}{t=e.parent;let i=e;for(;null!==t&&i===t.right;)i=t,t=t.parent;return t}}size(){return this.size_}containsKey(e){let t=this.root_;for(;null!==t;){const i=e.compareTo(t.key);if(i<0)t=t.left;else{if(!(i>0))return!0;t=t.right}}return!1}}class Nt{constructor(){Nt.constructor_.apply(this,arguments)}static constructor_(){this.nodeMap=new Mt,this.nodeFact=null;const e=arguments[0];this.nodeFact=e}find(e){return this.nodeMap.get(e)}addNode(){if(arguments[0]instanceof v){const e=arguments[0];let t=this.nodeMap.get(e);return null===t&&(t=this.nodeFact.createNode(e),this.nodeMap.put(e,t)),t}if(arguments[0]instanceof St){const e=arguments[0],t=this.nodeMap.get(e.getCoordinate());return null===t?(this.nodeMap.put(e.getCoordinate(),e),e):(t.mergeLabel(e),t)}}print(e){for(let t=this.iterator();t.hasNext();){t.next().print(e)}}iterator(){return this.nodeMap.values().iterator()}values(){return this.nodeMap.values()}getBoundaryNodes(e){const t=new V;for(let i=this.iterator();i.hasNext();){const n=i.next();n.getLabel().getLocation(e)===st.BOUNDARY&&t.add(n)}return t}add(e){const t=e.getCoordinate();this.addNode(t).add(e)}}class Dt{static isNorthern(e){return e===Dt.NE||e===Dt.NW}static isOpposite(e,t){if(e===t)return!1;return 2===(e-t+4)%4}static commonHalfPlane(e,t){if(e===t)return e;if(2===(e-t+4)%4)return-1;const i=e<t?e:t;return 0===i&&3===(e>t?e:t)?3:i}static isInHalfPlane(e,t){return t===Dt.SE?e===Dt.SE||e===Dt.SW:e===t||e===t+1}static quadrant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1];if(0===e&&0===t)throw new h("Cannot compute the quadrant for point ( "+e+", "+t+" )");return e>=0?t>=0?Dt.NE:Dt.SE:t>=0?Dt.NW:Dt.SW}if(arguments[0]instanceof v&&arguments[1]instanceof v){const e=arguments[0],t=arguments[1];if(t.x===e.x&&t.y===e.y)throw new h("Cannot compute the quadrant for two identical points "+e);return t.x>=e.x?t.y>=e.y?Dt.NE:Dt.SE:t.y>=e.y?Dt.NW:Dt.SW}}}Dt.NE=0,Dt.NW=1,Dt.SW=2,Dt.SE=3;class Rt{constructor(){Rt.constructor_.apply(this,arguments)}static constructor_(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){const e=arguments[0];this._edge=e}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];Rt.constructor_.call(this,e,t,i,null)}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];Rt.constructor_.call(this,e),this.init(t,i),this._label=n}}compareDirection(e){return this._dx===e._dx&&this._dy===e._dy?0:this._quadrant>e._quadrant?1:this._quadrant<e._quadrant?-1:ne.index(e._p0,e._p1,this._p1)}getDy(){return this._dy}getCoordinate(){return this._p0}setNode(e){this._node=e}print(e){const t=Math.atan2(this._dy,this._dx),i=this.getClass().getName(),n=i.lastIndexOf("."),r=i.substring(n+1);e.print("  "+r+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+t+"   "+this._label)}compareTo(e){const t=e;return this.compareDirection(t)}getDirectedCoordinate(){return this._p1}getDx(){return this._dx}getLabel(){return this._label}getEdge(){return this._edge}getQuadrant(){return this._quadrant}getNode(){return this._node}toString(){const e=Math.atan2(this._dy,this._dx),t=this.getClass().getName(),i=t.lastIndexOf(".");return"  "+t.substring(i+1)+": "+this._p0+" - "+this._p1+" "+this._quadrant+":"+e+"   "+this._label}computeLabel(e){}init(e,t){this._p0=e,this._p1=t,this._dx=t.x-e.x,this._dy=t.y-e.y,this._quadrant=Dt.quadrant(this._dx,this._dy),x.isTrue(!(0===this._dx&&0===this._dy),"EdgeEnd with identical endpoints found")}get interfaces_(){return[d]}}class Lt extends Rt{constructor(){super(),Lt.constructor_.apply(this,arguments)}static constructor_(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999];const e=arguments[0],t=arguments[1];if(Rt.constructor_.call(this,e),this._isForward=t,t)this.init(e.getCoordinate(0),e.getCoordinate(1));else{const t=e.getNumPoints()-1;this.init(e.getCoordinate(t),e.getCoordinate(t-1))}this.computeDirectedLabel()}static depthFactor(e,t){return e===st.EXTERIOR&&t===st.INTERIOR?1:e===st.INTERIOR&&t===st.EXTERIOR?-1:0}getNextMin(){return this._nextMin}getDepth(e){return this._depth[e]}setVisited(e){this._isVisited=e}computeDirectedLabel(){this._label=new _t(this._edge.getLabel()),this._isForward||this._label.flip()}getNext(){return this._next}setDepth(e,t){if(-999!==this._depth[e]&&this._depth[e]!==t)throw new ut("assigned depths do not match",this.getCoordinate());this._depth[e]=t}isInteriorAreaEdge(){let e=!0;for(let t=0;t<2;t++)this._label.isArea(t)&&this._label.getLocation(t,at.LEFT)===st.INTERIOR&&this._label.getLocation(t,at.RIGHT)===st.INTERIOR||(e=!1);return e}setNextMin(e){this._nextMin=e}print(e){super.print.call(this,e),e.print(" "+this._depth[at.LEFT]+"/"+this._depth[at.RIGHT]),e.print(" ("+this.getDepthDelta()+")"),this._isInResult&&e.print(" inResult")}setMinEdgeRing(e){this._minEdgeRing=e}isLineEdge(){const e=this._label.isLine(0)||this._label.isLine(1),t=!this._label.isArea(0)||this._label.allPositionsEqual(0,st.EXTERIOR),i=!this._label.isArea(1)||this._label.allPositionsEqual(1,st.EXTERIOR);return e&&t&&i}setEdgeRing(e){this._edgeRing=e}getMinEdgeRing(){return this._minEdgeRing}getDepthDelta(){let e=this._edge.getDepthDelta();return this._isForward||(e=-e),e}setInResult(e){this._isInResult=e}getSym(){return this._sym}isForward(){return this._isForward}getEdge(){return this._edge}printEdge(e){this.print(e),e.print(" "),this._isForward?this._edge.print(e):this._edge.printReverse(e)}setSym(e){this._sym=e}setVisitedEdge(e){this.setVisited(e),this._sym.setVisited(e)}setEdgeDepths(e,t){let i=this.getEdge().getDepthDelta();this._isForward||(i=-i);let n=1;e===at.LEFT&&(n=-1);const r=at.opposite(e),o=t+i*n;this.setDepth(e,t),this.setDepth(r,o)}getEdgeRing(){return this._edgeRing}isInResult(){return this._isInResult}setNext(e){this._next=e}isVisited(){return this._isVisited}}class Pt{createNode(e){return new St(e,null)}}class Ot{constructor(){Ot.constructor_.apply(this,arguments)}static constructor_(){if(this._edges=new V,this._nodes=null,this._edgeEndList=new V,0===arguments.length)this._nodes=new Nt(new Pt);else if(1===arguments.length){const e=arguments[0];this._nodes=new Nt(e)}}static linkResultDirectedEdges(e){for(let t=e.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}}printEdges(e){e.println("Edges:");for(let t=0;t<this._edges.size();t++){e.println("edge "+t+":");const i=this._edges.get(t);i.print(e),i.eiList.print(e)}}find(e){return this._nodes.find(e)}addNode(){if(arguments[0]instanceof St){const e=arguments[0];return this._nodes.addNode(e)}if(arguments[0]instanceof v){const e=arguments[0];return this._nodes.addNode(e)}}getNodeIterator(){return this._nodes.iterator()}linkResultDirectedEdges(){for(let e=this._nodes.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}}debugPrintln(e){ye.out.println(e)}isBoundaryNode(e,t){const i=this._nodes.find(t);if(null===i)return!1;const n=i.getLabel();return null!==n&&n.getLocation(e)===st.BOUNDARY}linkAllDirectedEdges(){for(let e=this._nodes.iterator();e.hasNext();){e.next().getEdges().linkAllDirectedEdges()}}matchInSameDirection(e,t,i,n){return!!e.equals(i)&&(ne.index(e,t,n)===ne.COLLINEAR&&Dt.quadrant(e,t)===Dt.quadrant(i,n))}getEdgeEnds(){return this._edgeEndList}debugPrint(e){ye.out.print(e)}getEdgeIterator(){return this._edges.iterator()}findEdgeInSameDirection(e,t){for(let i=0;i<this._edges.size();i++){const n=this._edges.get(i),r=n.getCoordinates();if(this.matchInSameDirection(e,t,r[0],r[1]))return n;if(this.matchInSameDirection(e,t,r[r.length-1],r[r.length-2]))return n}return null}insertEdge(e){this._edges.add(e)}findEdgeEnd(e){for(let t=this.getEdgeEnds().iterator();t.hasNext();){const i=t.next();if(i.getEdge()===e)return i}return null}addEdges(e){for(let t=e.iterator();t.hasNext();){const e=t.next();this._edges.add(e);const i=new Lt(e,!0),n=new Lt(e,!1);i.setSym(n),n.setSym(i),this.add(i),this.add(n)}}add(e){this._nodes.add(e),this._edgeEndList.add(e)}getNodes(){return this._nodes.values()}findEdge(e,t){for(let i=0;i<this._edges.size();i++){const n=this._edges.get(i),r=n.getCoordinates();if(e.equals(r[0])&&t.equals(r[1]))return n}return null}}class kt{constructor(){kt.constructor_.apply(this,arguments)}static constructor_(){this._geometryFactory=null,this._shellList=new V;const e=arguments[0];this._geometryFactory=e}static findEdgeRingContaining(e,t){const i=e.getLinearRing(),n=i.getEnvelopeInternal();let r=i.getCoordinateN(0),o=null,s=null;for(let e=t.iterator();e.hasNext();){const t=e.next(),a=t.getLinearRing(),l=a.getEnvelopeInternal();if(l.equals(n))continue;if(!l.contains(n))continue;r=be.ptNotInList(i.getCoordinates(),a.getCoordinates());let c=!1;pt.isInRing(r,a.getCoordinates())&&(c=!0),c&&(null===o||s.contains(l))&&(o=t,s=o.getLinearRing().getEnvelopeInternal())}return o}sortShellsAndHoles(e,t,i){for(let n=e.iterator();n.hasNext();){const e=n.next();e.isHole()?i.add(e):t.add(e)}}computePolygons(e){const t=new V;for(let i=e.iterator();i.hasNext();){const e=i.next().toPolygon(this._geometryFactory);t.add(e)}return t}placeFreeHoles(e,t){for(let i=t.iterator();i.hasNext();){const t=i.next();if(null===t.getShell()){const i=kt.findEdgeRingContaining(t,e);if(null===i)throw new ut("unable to assign hole to a shell",t.getCoordinate(0));t.setShell(i)}}}buildMinimalEdgeRings(e,t,i){const n=new V;for(let r=e.iterator();r.hasNext();){const e=r.next();if(e.getMaxNodeDegree()>2){e.linkDirectedEdgesForMinimalEdgeRings();const n=e.buildMinimalRings(),r=this.findShell(n);null!==r?(this.placePolygonHoles(r,n),t.add(r)):i.addAll(n)}else n.add(e)}return n}buildMaximalEdgeRings(e){const t=new V;for(let i=e.iterator();i.hasNext();){const e=i.next();if(e.isInResult()&&e.getLabel().isArea()&&null===e.getEdgeRing()){const i=new Ct(e,this._geometryFactory);t.add(i),i.setInResult()}}return t}placePolygonHoles(e,t){for(let i=t.iterator();i.hasNext();){const t=i.next();t.isHole()&&t.setShell(e)}}getPolygons(){return this.computePolygons(this._shellList)}findShell(e){let t=0,i=null;for(let n=e.iterator();n.hasNext();){const e=n.next();e.isHole()||(i=e,t++)}return x.isTrue(t<=1,"found two shells in MinimalEdgeRing list"),i}add(){if(1===arguments.length){const e=arguments[0];this.add(e.getEdgeEnds(),e.getNodes())}else if(2===arguments.length){const e=arguments[0],t=arguments[1];Ot.linkResultDirectedEdges(t);const i=this.buildMaximalEdgeRings(e),n=new V,r=this.buildMinimalEdgeRings(i,this._shellList,n);this.sortShellsAndHoles(r,this._shellList,n),this.placeFreeHoles(this._shellList,n)}}}class Bt{getBounds(){}}class Ft{constructor(){Ft.constructor_.apply(this,arguments)}static constructor_(){this._bounds=null,this._item=null;const e=arguments[0],t=arguments[1];this._bounds=e,this._item=t}getItem(){return this._item}getBounds(){return this._bounds}get interfaces_(){return[Bt,m]}}class Gt{constructor(){Gt.constructor_.apply(this,arguments)}static constructor_(){this._size=null,this._items=null,this._size=0,this._items=new V,this._items.add(null)}poll(){if(this.isEmpty())return null;const e=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),e}size(){return this._size}reorder(e){let t=null;const i=this._items.get(e);for(;2*e<=this._size&&(t=2*e,t!==this._size&&this._items.get(t+1).compareTo(this._items.get(t))<0&&t++,this._items.get(t).compareTo(i)<0);e=t)this._items.set(e,this._items.get(t));this._items.set(e,i)}clear(){this._size=0,this._items.clear()}peek(){if(this.isEmpty())return null;return this._items.get(1)}isEmpty(){return 0===this._size}add(e){this._items.add(null),this._size+=1;let t=this._size;for(this._items.set(0,e);e.compareTo(this._items.get(Math.trunc(t/2)))<0;t/=2)this._items.set(t,this._items.get(Math.trunc(t/2)));this._items.set(t,e)}}class Wt{insert(e,t){}remove(e,t){}query(){}}class zt{constructor(){zt.constructor_.apply(this,arguments)}static constructor_(){if(this._childBoundables=new V,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){const e=arguments[0];this._level=e}}getLevel(){return this._level}size(){return this._childBoundables.size()}getChildBoundables(){return this._childBoundables}addChildBoundable(e){x.isTrue(null===this._bounds),this._childBoundables.add(e)}isEmpty(){return this._childBoundables.isEmpty()}getBounds(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds}get interfaces_(){return[Bt,m]}}const Ht={reverseOrder:function(){return{compare:(e,t)=>t.compareTo(e)}},min:function(e){return Ht.sort(e),e.get(0)},sort:function(e,t){const i=e.toArray();t?Z.sort(i,t):Z.sort(i);const n=e.iterator();for(let e=0,t=i.length;e<t;e++)n.next(),n.set(i[e])},singletonList:function(e){const t=new V;return t.add(e),t}};class Ut{static maxDistance(e,t,i,n,r,o,s,a){let l=Ut.distance(e,t,r,o);return l=Math.max(l,Ut.distance(e,t,s,a)),l=Math.max(l,Ut.distance(i,n,r,o)),l=Math.max(l,Ut.distance(i,n,s,a)),l}static distance(e,t,i,n){const r=i-e,o=n-t;return Math.sqrt(r*r+o*o)}static maximumDistance(e,t){const i=Math.min(e.getMinX(),t.getMinX()),n=Math.min(e.getMinY(),t.getMinY()),r=Math.max(e.getMaxX(),t.getMaxX()),o=Math.max(e.getMaxY(),t.getMaxY());return Ut.distance(i,n,r,o)}static minMaxDistance(e,t){const i=e.getMinX(),n=e.getMinY(),r=e.getMaxX(),o=e.getMaxY(),s=t.getMinX(),a=t.getMinY(),l=t.getMaxX(),c=t.getMaxY();let h=Ut.maxDistance(i,n,i,o,s,a,s,c);return h=Math.min(h,Ut.maxDistance(i,n,i,o,s,a,l,a)),h=Math.min(h,Ut.maxDistance(i,n,i,o,l,c,s,c)),h=Math.min(h,Ut.maxDistance(i,n,i,o,l,c,l,a)),h=Math.min(h,Ut.maxDistance(i,n,r,n,s,a,s,c)),h=Math.min(h,Ut.maxDistance(i,n,r,n,s,a,l,a)),h=Math.min(h,Ut.maxDistance(i,n,r,n,l,c,s,c)),h=Math.min(h,Ut.maxDistance(i,n,r,n,l,c,l,a)),h=Math.min(h,Ut.maxDistance(r,o,i,o,s,a,s,c)),h=Math.min(h,Ut.maxDistance(r,o,i,o,s,a,l,a)),h=Math.min(h,Ut.maxDistance(r,o,i,o,l,c,s,c)),h=Math.min(h,Ut.maxDistance(r,o,i,o,l,c,l,a)),h=Math.min(h,Ut.maxDistance(r,o,r,n,s,a,s,c)),h=Math.min(h,Ut.maxDistance(r,o,r,n,s,a,l,a)),h=Math.min(h,Ut.maxDistance(r,o,r,n,l,c,s,c)),h=Math.min(h,Ut.maxDistance(r,o,r,n,l,c,l,a)),h}}class Vt{constructor(){Vt.constructor_.apply(this,arguments)}static constructor_(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;const e=arguments[0],t=arguments[1],i=arguments[2];this._boundable1=e,this._boundable2=t,this._itemDistance=i,this._distance=this.distance()}static area(e){return e.getBounds().getArea()}static isComposite(e){return e instanceof zt}maximumDistance(){return Ut.maximumDistance(this._boundable1.getBounds(),this._boundable2.getBounds())}expandToQueue(e,t){const i=Vt.isComposite(this._boundable1),n=Vt.isComposite(this._boundable2);if(i&&n)return Vt.area(this._boundable1)>Vt.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,!1,e,t),null):(this.expand(this._boundable2,this._boundable1,!0,e,t),null);if(i)return this.expand(this._boundable1,this._boundable2,!1,e,t),null;if(n)return this.expand(this._boundable2,this._boundable1,!0,e,t),null;throw new h("neither boundable is composite")}isLeaves(){return!(Vt.isComposite(this._boundable1)||Vt.isComposite(this._boundable2))}compareTo(e){const t=e;return this._distance<t._distance?-1:this._distance>t._distance?1:0}expand(e,t,i,n,r){for(let o=e.getChildBoundables().iterator();o.hasNext();){const e=o.next();let s=null;s=i?new Vt(t,e,this._itemDistance):new Vt(e,t,this._itemDistance),s.getDistance()<r&&n.add(s)}}getBoundable(e){return 0===e?this._boundable1:this._boundable2}getDistance(){return this._distance}distance(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())}get interfaces_(){return[d]}}class Yt{visitItem(e){}}class qt{constructor(){qt.constructor_.apply(this,arguments)}static constructor_(){if(this._root=null,this._built=!1,this._itemBoundables=new V,this._nodeCapacity=null,0===arguments.length)qt.constructor_.call(this,qt.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const e=arguments[0];x.isTrue(e>1,"Node capacity must be greater than 1"),this._nodeCapacity=e}}static compareDoubles(e,t){return e>t?1:e<t?-1:0}queryInternal(){if(N(arguments[2],Yt)&&arguments[0]instanceof Object&&arguments[1]instanceof zt){const e=arguments[0],t=arguments[2],i=arguments[1].getChildBoundables();for(let n=0;n<i.size();n++){const r=i.get(n);this.getIntersectsOp().intersects(r.getBounds(),e)&&(r instanceof zt?this.queryInternal(e,r,t):r instanceof Ft?t.visitItem(r.getItem()):x.shouldNeverReachHere())}}else if(N(arguments[2],H)&&arguments[0]instanceof Object&&arguments[1]instanceof zt){const e=arguments[0],t=arguments[2],i=arguments[1].getChildBoundables();for(let n=0;n<i.size();n++){const r=i.get(n);this.getIntersectsOp().intersects(r.getBounds(),e)&&(r instanceof zt?this.queryInternal(e,r,t):r instanceof Ft?t.add(r.getItem()):x.shouldNeverReachHere())}}}getNodeCapacity(){return this._nodeCapacity}lastNode(e){return e.get(e.size()-1)}size(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){let e=0;for(let t=arguments[0].getChildBoundables().iterator();t.hasNext();){const i=t.next();i instanceof zt?e+=this.size(i):i instanceof Ft&&(e+=1)}return e}}removeItem(e,t){let i=null;for(let n=e.getChildBoundables().iterator();n.hasNext();){const e=n.next();e instanceof Ft&&e.getItem()===t&&(i=e)}return null!==i&&(e.getChildBoundables().remove(i),!0)}itemsTree(){if(0===arguments.length){this.build();const e=this.itemsTree(this._root);return null===e?new V:e}if(1===arguments.length){const e=arguments[0],t=new V;for(let i=e.getChildBoundables().iterator();i.hasNext();){const e=i.next();if(e instanceof zt){const i=this.itemsTree(e);null!==i&&t.add(i)}else e instanceof Ft?t.add(e.getItem()):x.shouldNeverReachHere()}return t.size()<=0?null:t}}insert(e,t){x.isTrue(!this._built,"Cannot insert items into an STR packed R-tree after it has been built."),this._itemBoundables.add(new Ft(e,t))}boundablesAtLevel(){if(1===arguments.length){const e=arguments[0],t=new V;return this.boundablesAtLevel(e,this._root,t),t}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];if(x.isTrue(e>-2),t.getLevel()===e)return i.add(t),null;for(let n=t.getChildBoundables().iterator();n.hasNext();){const t=n.next();t instanceof zt?this.boundablesAtLevel(e,t,i):(x.isTrue(t instanceof Ft),-1===e&&i.add(t))}return null}}query(){if(1===arguments.length){const e=arguments[0];this.build();const t=new V;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),e)&&this.queryInternal(e,this._root,t),t}if(2===arguments.length){const e=arguments[0],t=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),e)&&this.queryInternal(e,this._root,t)}}build(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0}getRoot(){return this.build(),this._root}remove(){if(2===arguments.length){const e=arguments[0],t=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),e)&&this.remove(e,this._root,t)}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];let n=this.removeItem(t,i);if(n)return!0;let r=null;for(let o=t.getChildBoundables().iterator();o.hasNext();){const t=o.next();if(this.getIntersectsOp().intersects(t.getBounds(),e)&&(t instanceof zt&&(n=this.remove(e,t,i),n))){r=t;break}}return null!==r&&r.getChildBoundables().isEmpty()&&t.getChildBoundables().remove(r),n}}createHigherLevels(e,t){x.isTrue(!e.isEmpty());const i=this.createParentBoundables(e,t+1);return 1===i.size()?i.get(0):this.createHigherLevels(i,t+1)}depth(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){let e=0;for(let t=arguments[0].getChildBoundables().iterator();t.hasNext();){const i=t.next();if(i instanceof zt){const t=this.depth(i);t>e&&(e=t)}}return e+1}}createParentBoundables(e,t){x.isTrue(!e.isEmpty());const i=new V;i.add(this.createNode(t));const n=new V(e);Ht.sort(n,this.getComparator());for(let e=n.iterator();e.hasNext();){const n=e.next();this.lastNode(i).getChildBoundables().size()===this.getNodeCapacity()&&i.add(this.createNode(t)),this.lastNode(i).addChildBoundable(n)}return i}isEmpty(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()}get interfaces_(){return[m]}}qt.IntersectsOp=function(){},qt.DEFAULT_NODE_CAPACITY=10;class jt{distance(e,t){}}class Kt extends qt{constructor(){super(),Kt.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)Kt.constructor_.call(this,Kt.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){const e=arguments[0];qt.constructor_.call(this,e)}}static centreX(e){return Kt.avg(e.getMinX(),e.getMaxX())}static avg(e,t){return(e+t)/2}static getItems(e){const t=new Array(e.size()).fill(null);let i=0;for(;!e.isEmpty();){const n=e.poll();t[i]=n.getBoundable(0).getItem(),i++}return t}static centreY(e){return Kt.avg(e.getMinY(),e.getMaxY())}createParentBoundablesFromVerticalSlices(e,t){x.isTrue(e.length>0);const i=new V;for(let n=0;n<e.length;n++)i.addAll(this.createParentBoundablesFromVerticalSlice(e[n],t));return i}nearestNeighbourK(){if(2===arguments.length){const e=arguments[0],t=arguments[1];return this.nearestNeighbourK(e,_.POSITIVE_INFINITY,t)}if(3===arguments.length){const e=arguments[0],t=arguments[2];let i=arguments[1];const n=new Gt;n.add(e);const r=new Gt;for(;!n.isEmpty()&&i>=0;){const e=n.poll(),o=e.getDistance();if(o>=i)break;if(e.isLeaves())if(r.size()<t)r.add(e);else{r.peek().getDistance()>o&&(r.poll(),r.add(e));i=r.peek().getDistance()}else e.expandToQueue(n,i)}return Kt.getItems(r)}}createNode(e){return new Xt(e)}size(){return 0===arguments.length?super.size.call(this):super.size.apply(this,arguments)}insert(){if(!(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof E))return super.insert.apply(this,arguments);{const e=arguments[0],t=arguments[1];if(e.isNull())return null;super.insert.call(this,e,t)}}getIntersectsOp(){return Kt.intersectsOp}verticalSlices(e,t){const i=Math.trunc(Math.ceil(e.size()/t)),n=new Array(t).fill(null),r=e.iterator();for(let e=0;e<t;e++){n[e]=new V;let t=0;for(;r.hasNext()&&t<i;){const i=r.next();n[e].add(i),t++}}return n}query(){if(1===arguments.length){const e=arguments[0];return super.query.call(this,e)}if(2===arguments.length){const e=arguments[0],t=arguments[1];super.query.call(this,e,t)}}getComparator(){return Kt.yComparator}createParentBoundablesFromVerticalSlice(e,t){return super.createParentBoundables.call(this,e,t)}remove(){if(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof E){const e=arguments[0],t=arguments[1];return super.remove.call(this,e,t)}return super.remove.apply(this,arguments)}depth(){return 0===arguments.length?super.depth.call(this):super.depth.apply(this,arguments)}createParentBoundables(e,t){x.isTrue(!e.isEmpty());const i=Math.trunc(Math.ceil(e.size()/this.getNodeCapacity())),n=new V(e);Ht.sort(n,Kt.xComparator);const r=this.verticalSlices(n,Math.trunc(Math.ceil(Math.sqrt(i))));return this.createParentBoundablesFromVerticalSlices(r,t)}nearestNeighbour(){if(1===arguments.length){if(N(arguments[0],jt)){const e=arguments[0];if(this.isEmpty())return null;const t=new Vt(this.getRoot(),this.getRoot(),e);return this.nearestNeighbour(t)}if(arguments[0]instanceof Vt){const e=arguments[0];let t=_.POSITIVE_INFINITY,i=null;const n=new Gt;for(n.add(e);!n.isEmpty()&&t>0;){const e=n.poll(),r=e.getDistance();if(r>=t)break;e.isLeaves()?(t=r,i=e):e.expandToQueue(n,t)}return null===i?null:[i.getBoundable(0).getItem(),i.getBoundable(1).getItem()]}}else{if(2===arguments.length){const e=arguments[0],t=arguments[1];if(this.isEmpty()||e.isEmpty())return null;const i=new Vt(this.getRoot(),e.getRoot(),t);return this.nearestNeighbour(i)}if(3===arguments.length){const e=arguments[2],t=new Ft(arguments[0],arguments[1]),i=new Vt(this.getRoot(),t,e);return this.nearestNeighbour(i)[0]}if(4===arguments.length){const e=arguments[2],t=arguments[3],i=new Ft(arguments[0],arguments[1]),n=new Vt(this.getRoot(),i,e);return this.nearestNeighbourK(n,t)}}}isWithinDistance(){if(2===arguments.length){const e=arguments[0],t=arguments[1];let i=_.POSITIVE_INFINITY;const n=new Gt;for(n.add(e);!n.isEmpty();){const e=n.poll(),r=e.getDistance();if(r>t)return!1;if(e.maximumDistance()<=t)return!0;if(e.isLeaves()){if(i=r,i<=t)return!0}else e.expandToQueue(n,i)}return!1}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=new Vt(this.getRoot(),e.getRoot(),t);return this.isWithinDistance(n,i)}}get interfaces_(){return[Wt,m]}}class Xt extends zt{constructor(){super(),Xt.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0];zt.constructor_.call(this,e)}computeBounds(){let e=null;for(let t=this.getChildBoundables().iterator();t.hasNext();){const i=t.next();null===e?e=new E(i.getBounds()):e.expandToInclude(i.getBounds())}return e}}Kt.STRtreeNode=Xt,Kt.xComparator=new class{get interfaces_(){return[y]}compare(e,t){return qt.compareDoubles(Kt.centreX(e.getBounds()),Kt.centreX(t.getBounds()))}},Kt.yComparator=new class{get interfaces_(){return[y]}compare(e,t){return qt.compareDoubles(Kt.centreY(e.getBounds()),Kt.centreY(t.getBounds()))}},Kt.intersectsOp=new class{get interfaces_(){return[IntersectsOp]}intersects(e,t){return e.intersects(t)}},Kt.DEFAULT_NODE_CAPACITY=10;class Jt{static relativeSign(e,t){return e<t?-1:e>t?1:0}static compare(e,t,i){if(t.equals2D(i))return 0;const n=Jt.relativeSign(t.x,i.x),r=Jt.relativeSign(t.y,i.y);switch(e){case 0:return Jt.compareValue(n,r);case 1:return Jt.compareValue(r,n);case 2:return Jt.compareValue(r,-n);case 3:return Jt.compareValue(-n,r);case 4:return Jt.compareValue(-n,-r);case 5:return Jt.compareValue(-r,-n);case 6:return Jt.compareValue(-r,n);case 7:return Jt.compareValue(n,-r)}return x.shouldNeverReachHere("invalid octant value"),0}static compareValue(e,t){return e<0?-1:e>0?1:t<0?-1:t>0?1:0}}class Zt{constructor(){Zt.constructor_.apply(this,arguments)}static constructor_(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];this._segString=e,this.coord=new v(t),this.segmentIndex=i,this._segmentOctant=n,this._isInterior=!t.equals2D(e.getCoordinate(i))}getCoordinate(){return this.coord}print(e){e.print(this.coord),e.print(" seg # = "+this.segmentIndex)}compareTo(e){const t=e;return this.segmentIndex<t.segmentIndex?-1:this.segmentIndex>t.segmentIndex?1:this.coord.equals2D(t.coord)?0:this._isInterior?t._isInterior?Jt.compare(this._segmentOctant,this.coord,t.coord):1:-1}isEndPoint(e){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===e}toString(){return this.segmentIndex+":"+this.coord.toString()}isInterior(){return this._isInterior}get interfaces_(){return[d]}}class Qt{hasNext(){}next(){}remove(){}}class $t{constructor(){$t.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new Mt,this._edge=null;const e=arguments[0];this._edge=e}getSplitCoordinates(){const e=new q;this.addEndpoints();const t=this.iterator();let i=t.next();for(;t.hasNext();){const n=t.next();this.addEdgeCoordinates(i,n,e),i=n}return e.toCoordinateArray()}addCollapsedNodes(){const e=new V;this.findCollapsesFromInsertedNodes(e),this.findCollapsesFromExistingVertices(e);for(let t=e.iterator();t.hasNext();){const e=t.next().intValue();this.add(this._edge.getCoordinate(e),e)}}createSplitEdgePts(e,t){let i=t.segmentIndex-e.segmentIndex+2;if(2===i)return[new v(e.coord),new v(t.coord)];const n=this._edge.getCoordinate(t.segmentIndex),r=t.isInterior()||!t.coord.equals2D(n);r||i--;const o=new Array(i).fill(null);let s=0;o[s++]=new v(e.coord);for(let i=e.segmentIndex+1;i<=t.segmentIndex;i++)o[s++]=this._edge.getCoordinate(i);return r&&(o[s]=new v(t.coord)),o}print(e){e.println("Intersections:");for(let t=this.iterator();t.hasNext();){t.next().print(e)}}findCollapsesFromExistingVertices(e){for(let t=0;t<this._edge.size()-2;t++){const i=this._edge.getCoordinate(t);this._edge.getCoordinate(t+1);const n=this._edge.getCoordinate(t+2);i.equals2D(n)&&e.add(ee.valueOf(t+1))}}addEdgeCoordinates(e,t,i){const n=this.createSplitEdgePts(e,t);i.add(n,!1)}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(e){this.addEndpoints(),this.addCollapsedNodes();const t=this.iterator();let i=t.next();for(;t.hasNext();){const n=t.next(),r=this.createSplitEdge(i,n);e.add(r),i=n}}findCollapseIndex(e,t,i){if(!e.coord.equals2D(t.coord))return!1;let n=t.segmentIndex-e.segmentIndex;return t.isInterior()||n--,1===n&&(i[0]=e.segmentIndex+1,!0)}findCollapsesFromInsertedNodes(e){const t=new Array(1).fill(null),i=this.iterator();let n=i.next();for(;i.hasNext();){const r=i.next();this.findCollapseIndex(n,r,t)&&e.add(ee.valueOf(t[0])),n=r}}getEdge(){return this._edge}addEndpoints(){const e=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(e),e)}createSplitEdge(e,t){const i=this.createSplitEdgePts(e,t);return new ni(i,this._edge.getData())}add(e,t){const i=new Zt(this._edge,e,t,this._edge.getSegmentOctant(t)),n=this._nodeMap.get(i);return null!==n?(x.isTrue(n.coord.equals2D(e),"Found equal nodes with different coordinates"),n):(this._nodeMap.put(i,i),i)}checkSplitEdgesCorrectness(e){const t=this._edge.getCoordinates(),i=e.get(0).getCoordinate(0);if(!i.equals2D(t[0]))throw new b("bad split edge start point at "+i);const n=e.get(e.size()-1).getCoordinates(),r=n[n.length-1];if(!r.equals2D(t[t.length-1]))throw new b("bad split edge end point at "+r)}}class ei{static octant(){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1];if(0===e&&0===t)throw new h("Cannot compute the octant for point ( "+e+", "+t+" )");const i=Math.abs(e),n=Math.abs(t);return e>=0?t>=0?i>=n?0:1:i>=n?7:6:t>=0?i>=n?3:2:i>=n?4:5}if(arguments[0]instanceof v&&arguments[1]instanceof v){const e=arguments[0],t=arguments[1],i=t.x-e.x,n=t.y-e.y;if(0===i&&0===n)throw new h("Cannot compute the octant for two identical points "+e);return ei.octant(i,n)}}}class ti{getCoordinates(){}size(){}getCoordinate(e){}isClosed(){}setData(e){}getData(){}}class ii{addIntersection(e,t){}get interfaces_(){return[ti]}}class ni{constructor(){ni.constructor_.apply(this,arguments)}static constructor_(){this._nodeList=new $t(this),this._pts=null,this._data=null;const e=arguments[0],t=arguments[1];this._pts=e,this._data=t}static getNodedSubstrings(){if(1===arguments.length){const e=arguments[0],t=new V;return ni.getNodedSubstrings(e,t),t}if(2===arguments.length){const e=arguments[1];for(let t=arguments[0].iterator();t.hasNext();){t.next().getNodeList().addSplitEdges(e)}}}getCoordinates(){return this._pts}size(){return this._pts.length}getCoordinate(e){return this._pts[e]}isClosed(){return this._pts[0].equals(this._pts[this._pts.length-1])}getSegmentOctant(e){return e===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(e),this.getCoordinate(e+1))}setData(e){this._data=e}safeOctant(e,t){return e.equals2D(t)?0:ei.octant(e,t)}getData(){return this._data}addIntersection(){if(2===arguments.length){const e=arguments[0],t=arguments[1];this.addIntersectionNode(e,t)}else if(4===arguments.length){const e=arguments[1],t=arguments[3],i=new v(arguments[0].getIntersection(t));this.addIntersection(i,e)}}toString(){return et.toLineString(new xe(this._pts))}getNodeList(){return this._nodeList}addIntersectionNode(e,t){let i=t;const n=i+1;if(n<this._pts.length){const t=this._pts[n];e.equals2D(t)&&(i=n)}return this._nodeList.add(e,i)}addIntersections(e,t,i){for(let n=0;n<e.getIntersectionNum();n++)this.addIntersection(e,t,i,n)}get interfaces_(){return[ii]}}class ri{constructor(){ri.constructor_.apply(this,arguments)}static constructor_(){this._overlapSeg1=new nt,this._overlapSeg2=new nt}overlap(){if(2===arguments.length);else if(4===arguments.length){const e=arguments[1],t=arguments[2],i=arguments[3];arguments[0].getLineSegment(e,this._overlapSeg1),t.getLineSegment(i,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}}}class oi{constructor(){oi.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];this._pts=e,this._start=t,this._end=i,this._context=n}getLineSegment(e,t){t.p0=this._pts[e],t.p1=this._pts[e+1]}computeSelect(e,t,i,n){const r=this._pts[t],o=this._pts[i];if(i-t==1)return n.select(this,t),null;if(!e.intersects(r,o))return null;const s=Math.trunc((t+i)/2);t<s&&this.computeSelect(e,t,s,n),s<i&&this.computeSelect(e,s,i,n)}getCoordinates(){const e=new Array(this._end-this._start+1).fill(null);let t=0;for(let i=this._start;i<=this._end;i++)e[t++]=this._pts[i];return e}computeOverlaps(){if(2===arguments.length){const e=arguments[0],t=arguments[1];this.computeOverlaps(this._start,this._end,e,e._start,e._end,t)}else if(6===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=arguments[4],o=arguments[5];if(t-e==1&&r-n==1)return o.overlap(this,e,i,n),null;if(!this.overlaps(e,t,i,n,r))return null;const s=Math.trunc((e+t)/2),a=Math.trunc((n+r)/2);e<s&&(n<a&&this.computeOverlaps(e,s,i,n,a,o),a<r&&this.computeOverlaps(e,s,i,a,r,o)),s<t&&(n<a&&this.computeOverlaps(s,t,i,n,a,o),a<r&&this.computeOverlaps(s,t,i,a,r,o))}}setId(e){this._id=e}select(e,t){this.computeSelect(e,this._start,this._end,t)}getEnvelope(){if(null===this._env){const e=this._pts[this._start],t=this._pts[this._end];this._env=new E(e,t)}return this._env}overlaps(e,t,i,n,r){return E.intersects(this._pts[e],this._pts[t],i._pts[n],i._pts[r])}getEndIndex(){return this._end}getStartIndex(){return this._start}getContext(){return this._context}getId(){return this._id}}class si{static findChainEnd(e,t){let i=t;for(;i<e.length-1&&e[i].equals2D(e[i+1]);)i++;if(i>=e.length-1)return e.length-1;const n=Dt.quadrant(e[i],e[i+1]);let r=t+1;for(;r<e.length;){if(!e[r-1].equals2D(e[r])){if(Dt.quadrant(e[r-1],e[r])!==n)break}r++}return r-1}static getChains(){if(1===arguments.length){const e=arguments[0];return si.getChains(e,null)}if(2===arguments.length){const e=arguments[0],t=arguments[1],i=new V;let n=0;do{const r=si.findChainEnd(e,n),o=new oi(e,n,r,t);i.add(o),n=r}while(n<e.length-1);return i}}}class ai{computeNodes(e){}getNodedSubstrings(){}}class li{constructor(){li.constructor_.apply(this,arguments)}static constructor_(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){const e=arguments[0];this.setSegmentIntersector(e)}}setSegmentIntersector(e){this._segInt=e}get interfaces_(){return[ai]}}class ci extends li{constructor(){super(),ci.constructor_.apply(this,arguments)}static constructor_(){if(this._monoChains=new V,this._index=new Kt,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0,0===arguments.length);else if(1===arguments.length){const e=arguments[0];li.constructor_.call(this,e)}}getMonotoneChains(){return this._monoChains}getNodedSubstrings(){return ni.getNodedSubstrings(this._nodedSegStrings)}getIndex(){return this._index}add(e){for(let t=si.getChains(e.getCoordinates(),e).iterator();t.hasNext();){const e=t.next();e.setId(this._idCounter++),this._index.insert(e.getEnvelope(),e),this._monoChains.add(e)}}computeNodes(e){this._nodedSegStrings=e;for(let t=e.iterator();t.hasNext();)this.add(t.next());this.intersectChains()}intersectChains(){const e=new hi(this._segInt);for(let t=this._monoChains.iterator();t.hasNext();){const i=t.next();for(let t=this._index.query(i.getEnvelope()).iterator();t.hasNext();){const n=t.next();if(n.getId()>i.getId()&&(i.computeOverlaps(n,e),this._nOverlaps++),this._segInt.isDone())return null}}}}class hi extends ri{constructor(){super(),hi.constructor_.apply(this,arguments)}static constructor_(){this._si=null;const e=arguments[0];this._si=e}overlap(){if(4!==arguments.length)return super.overlap.apply(this,arguments);{const e=arguments[1],t=arguments[2],i=arguments[3],n=arguments[0].getContext(),r=t.getContext();this._si.processIntersections(n,e,r,i)}}}ci.SegmentOverlapAction=hi;class di{constructor(){di.constructor_.apply(this,arguments)}static constructor_(){this._inputLine=null,this._distanceTol=null,this._isDeleted=null,this._angleOrientation=ne.COUNTERCLOCKWISE;const e=arguments[0];this._inputLine=e}static simplify(e,t){return new di(e).simplify(t)}isDeletable(e,t,i,n){const r=this._inputLine[e],o=this._inputLine[t],s=this._inputLine[i];return!!this.isConcave(r,o,s)&&(!!this.isShallow(r,o,s,n)&&this.isShallowSampled(r,o,e,i,n))}deleteShallowConcavities(){let e=1,t=this.findNextNonDeletedIndex(e),i=this.findNextNonDeletedIndex(t),n=!1;for(;i<this._inputLine.length;){let r=!1;this.isDeletable(e,t,i,this._distanceTol)&&(this._isDeleted[t]=di.DELETE,r=!0,n=!0),e=r?i:t,t=this.findNextNonDeletedIndex(e),i=this.findNextNonDeletedIndex(t)}return n}isShallowConcavity(e,t,i,n){if(!(ne.index(e,t,i)===this._angleOrientation))return!1;return Pe.pointToSegment(t,e,i)<n}isShallowSampled(e,t,i,n,r){let o=Math.trunc((n-i)/di.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(let s=i;s<n;s+=o)if(!this.isShallow(e,t,this._inputLine[s],r))return!1;return!0}isConcave(e,t,i){return ne.index(e,t,i)===this._angleOrientation}simplify(e){this._distanceTol=Math.abs(e),e<0&&(this._angleOrientation=ne.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);let t=!1;do{t=this.deleteShallowConcavities()}while(t);return this.collapseLine()}findNextNonDeletedIndex(e){let t=e+1;for(;t<this._inputLine.length&&this._isDeleted[t]===di.DELETE;)t++;return t}isShallow(e,t,i,n){return Pe.pointToSegment(t,e,i)<n}collapseLine(){const e=new q;for(let t=0;t<this._inputLine.length;t++)this._isDeleted[t]!==di.DELETE&&e.add(this._inputLine[t]);return e.toCoordinateArray()}}di.INIT=0,di.DELETE=1,di.KEEP=1,di.NUM_PTS_TO_CHECK=10;class gi{constructor(){gi.constructor_.apply(this,arguments)}static constructor_(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new V}getCoordinates(){return this._ptList.toArray(gi.COORDINATE_ARRAY_TYPE)}setPrecisionModel(e){this._precisionModel=e}addPt(e){const t=new v(e);if(this._precisionModel.makePrecise(t),this.isRedundant(t))return null;this._ptList.add(t)}reverse(){}addPts(e,t){if(t)for(let t=0;t<e.length;t++)this.addPt(e[t]);else for(let t=e.length-1;t>=0;t--)this.addPt(e[t])}isRedundant(e){if(this._ptList.size()<1)return!1;const t=this._ptList.get(this._ptList.size()-1);return e.distance(t)<this._minimimVertexDistance}toString(){return(new De).createLineString(this.getCoordinates()).toString()}closeRing(){if(this._ptList.size()<1)return null;const e=new v(this._ptList.get(0)),t=this._ptList.get(this._ptList.size()-1);if(e.equals(t))return null;this._ptList.add(e)}setMinimumVertexDistance(e){this._minimimVertexDistance=e}}gi.COORDINATE_ARRAY_TYPE=new Array(0).fill(null);class mi{static toDegrees(e){return 180*e/Math.PI}static normalize(e){for(;e>Math.PI;)e-=mi.PI_TIMES_2;for(;e<=-Math.PI;)e+=mi.PI_TIMES_2;return e}static angle(){if(1===arguments.length){const e=arguments[0];return Math.atan2(e.y,e.x)}if(2===arguments.length){const e=arguments[0],t=arguments[1],i=t.x-e.x,n=t.y-e.y;return Math.atan2(n,i)}}static isAcute(e,t,i){const n=e.x-t.x,r=e.y-t.y;return n*(i.x-t.x)+r*(i.y-t.y)>0}static isObtuse(e,t,i){const n=e.x-t.x,r=e.y-t.y;return n*(i.x-t.x)+r*(i.y-t.y)<0}static interiorAngle(e,t,i){const n=mi.angle(t,e),r=mi.angle(t,i);return Math.abs(r-n)}static normalizePositive(e){if(e<0){for(;e<0;)e+=mi.PI_TIMES_2;e>=mi.PI_TIMES_2&&(e=0)}else{for(;e>=mi.PI_TIMES_2;)e-=mi.PI_TIMES_2;e<0&&(e=0)}return e}static angleBetween(e,t,i){const n=mi.angle(t,e),r=mi.angle(t,i);return mi.diff(n,r)}static diff(e,t){let i=null;return i=e<t?t-e:e-t,i>Math.PI&&(i=2*Math.PI-i),i}static toRadians(e){return e*Math.PI/180}static getTurn(e,t){const i=Math.sin(t-e);return i>0?mi.COUNTERCLOCKWISE:i<0?mi.CLOCKWISE:mi.NONE}static angleBetweenOriented(e,t,i){const n=mi.angle(t,e),r=mi.angle(t,i)-n;return r<=-Math.PI?r+mi.PI_TIMES_2:r>Math.PI?r-mi.PI_TIMES_2:r}}mi.PI_TIMES_2=2*Math.PI,mi.PI_OVER_2=Math.PI/2,mi.PI_OVER_4=Math.PI/4,mi.COUNTERCLOCKWISE=ne.COUNTERCLOCKWISE,mi.CLOCKWISE=ne.CLOCKWISE,mi.NONE=ne.COLLINEAR;class pi{constructor(){pi.constructor_.apply(this,arguments)}static constructor_(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new nt,this._seg1=new nt,this._offset0=new nt,this._offset1=new nt,this._side=0,this._hasNarrowConcaveAngle=!1;const e=arguments[0],t=arguments[1],i=arguments[2];this._precisionModel=e,this._bufParams=t,this._li=new it,this._filletAngleQuantum=Math.PI/2/t.getQuadrantSegments(),t.getQuadrantSegments()>=8&&t.getJoinStyle()===ot.JOIN_ROUND&&(this._closingSegLengthFactor=pi.MAX_CLOSING_SEG_LEN_FACTOR),this.init(i)}addNextSegment(e,t){if(this._s0=this._s1,this._s1=this._s2,this._s2=e,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;const i=ne.index(this._s0,this._s1,this._s2),n=i===ne.CLOCKWISE&&this._side===at.LEFT||i===ne.COUNTERCLOCKWISE&&this._side===at.RIGHT;0===i?this.addCollinear(t):n?this.addOutsideTurn(i,t):this.addInsideTurn(i,t)}addLineEndCap(e,t){const i=new nt(e,t),n=new nt;this.computeOffsetSegment(i,at.LEFT,this._distance,n);const r=new nt;this.computeOffsetSegment(i,at.RIGHT,this._distance,r);const o=t.x-e.x,s=t.y-e.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case ot.CAP_ROUND:this._segList.addPt(n.p1),this.addDirectedFillet(t,a+Math.PI/2,a-Math.PI/2,ne.CLOCKWISE,this._distance),this._segList.addPt(r.p1);break;case ot.CAP_FLAT:this._segList.addPt(n.p1),this._segList.addPt(r.p1);break;case ot.CAP_SQUARE:const e=new v;e.x=Math.abs(this._distance)*Math.cos(a),e.y=Math.abs(this._distance)*Math.sin(a);const i=new v(n.p1.x+e.x,n.p1.y+e.y),o=new v(r.p1.x+e.x,r.p1.y+e.y);this._segList.addPt(i),this._segList.addPt(o)}}getCoordinates(){return this._segList.getCoordinates()}addMitreJoin(e,t,i,n){const r=Le.intersection(t.p0,t.p1,i.p0,i.p1);if(null!==r){if((n<=0?1:r.distance(e)/Math.abs(n))<=this._bufParams.getMitreLimit())return this._segList.addPt(r),null}this.addLimitedMitreJoin(t,i,n,this._bufParams.getMitreLimit())}addOutsideTurn(e,t){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*pi.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===ot.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===ot.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(t&&this._segList.addPt(this._offset0.p1),this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,e,this._distance),this._segList.addPt(this._offset1.p0))}createSquare(e){this._segList.addPt(new v(e.x+this._distance,e.y+this._distance)),this._segList.addPt(new v(e.x+this._distance,e.y-this._distance)),this._segList.addPt(new v(e.x-this._distance,e.y-this._distance)),this._segList.addPt(new v(e.x-this._distance,e.y+this._distance)),this._segList.closeRing()}addSegments(e,t){this._segList.addPts(e,t)}addFirstSegment(){this._segList.addPt(this._offset1.p0)}addCornerFillet(e,t,i,n,r){const o=t.x-e.x,s=t.y-e.y;let a=Math.atan2(s,o);const l=i.x-e.x,c=i.y-e.y,h=Math.atan2(c,l);n===ne.CLOCKWISE?a<=h&&(a+=2*Math.PI):a>=h&&(a-=2*Math.PI),this._segList.addPt(t),this.addDirectedFillet(e,a,h,n,r),this._segList.addPt(i)}addLastSegment(){this._segList.addPt(this._offset1.p1)}initSideSegments(e,t,i){this._s1=e,this._s2=t,this._side=i,this._seg1.setCoordinates(e,t),this.computeOffsetSegment(this._seg1,i,this._distance,this._offset1)}addLimitedMitreJoin(e,t,i,n){const r=this._seg0.p1,o=mi.angle(r,this._seg0.p0),s=mi.angleBetweenOriented(this._seg0.p0,r,this._seg1.p1)/2,a=mi.normalize(o+s),l=mi.normalize(a+Math.PI),c=n*i,h=i-c*Math.abs(Math.sin(s)),u=r.x+c*Math.cos(l),d=r.y+c*Math.sin(l),g=new v(u,d),m=new nt(r,g),p=m.pointAlongOffset(1,h),f=m.pointAlongOffset(1,-h);this._side===at.LEFT?(this._segList.addPt(p),this._segList.addPt(f)):(this._segList.addPt(f),this._segList.addPt(p))}addDirectedFillet(e,t,i,n,r){const o=n===ne.CLOCKWISE?-1:1,s=Math.abs(t-i),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;const l=s/a,c=new v;for(let i=0;i<a;i++){const n=t+o*i*l;c.x=e.x+r*Math.cos(n),c.y=e.y+r*Math.sin(n),this._segList.addPt(c)}}computeOffsetSegment(e,t,i,n){const r=t===at.LEFT?1:-1,o=e.p1.x-e.p0.x,s=e.p1.y-e.p0.y,a=Math.sqrt(o*o+s*s),l=r*i*o/a,c=r*i*s/a;n.p0.x=e.p0.x-c,n.p0.y=e.p0.y+l,n.p1.x=e.p1.x-c,n.p1.y=e.p1.y+l}addInsideTurn(e,t){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*pi.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){const e=new v((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(e);const t=new v((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(t)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}}createCircle(e){const t=new v(e.x+this._distance,e.y);this._segList.addPt(t),this.addDirectedFillet(e,0,2*Math.PI,-1,this._distance),this._segList.closeRing()}addBevelJoin(e,t){this._segList.addPt(e.p1),this._segList.addPt(t.p0)}init(e){this._distance=e,this._maxCurveSegmentError=e*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new gi,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(e*pi.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)}addCollinear(e){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===ot.JOIN_BEVEL||this._bufParams.getJoinStyle()===ot.JOIN_MITRE?(e&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,ne.CLOCKWISE,this._distance))}closeRing(){this._segList.closeRing()}hasNarrowConcaveAngle(){return this._hasNarrowConcaveAngle}}pi.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,pi.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,pi.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,pi.MAX_CLOSING_SEG_LEN_FACTOR=80;class fi{constructor(){fi.constructor_.apply(this,arguments)}static constructor_(){this._distance=0,this._precisionModel=null,this._bufParams=null;const e=arguments[0],t=arguments[1];this._precisionModel=e,this._bufParams=t}static copyCoordinates(e){const t=new Array(e.length).fill(null);for(let i=0;i<t.length;i++)t[i]=new v(e[i]);return t}getOffsetCurve(e,t){if(this._distance=t,0===t)return null;const i=t<0,n=Math.abs(t),r=this.getSegGen(n);e.length<=1?this.computePointCurve(e[0],r):this.computeOffsetCurve(e,i,r);const o=r.getCoordinates();return i&&be.reverse(o),o}computeSingleSidedBufferCurve(e,t,i){const n=this.simplifyTolerance(this._distance);if(t){i.addSegments(e,!0);const t=di.simplify(e,-n),r=t.length-1;i.initSideSegments(t[r],t[r-1],at.LEFT),i.addFirstSegment();for(let e=r-2;e>=0;e--)i.addNextSegment(t[e],!0)}else{i.addSegments(e,!1);const t=di.simplify(e,n),r=t.length-1;i.initSideSegments(t[0],t[1],at.LEFT),i.addFirstSegment();for(let e=2;e<=r;e++)i.addNextSegment(t[e],!0)}i.addLastSegment(),i.closeRing()}computeRingBufferCurve(e,t,i){let n=this.simplifyTolerance(this._distance);t===at.RIGHT&&(n=-n);const r=di.simplify(e,n),o=r.length-1;i.initSideSegments(r[o-1],r[0],t);for(let e=1;e<=o;e++){const t=1!==e;i.addNextSegment(r[e],t)}i.closeRing()}computeLineBufferCurve(e,t){const i=this.simplifyTolerance(this._distance),n=di.simplify(e,i),r=n.length-1;t.initSideSegments(n[0],n[1],at.LEFT);for(let e=2;e<=r;e++)t.addNextSegment(n[e],!0);t.addLastSegment(),t.addLineEndCap(n[r-1],n[r]);const o=di.simplify(e,-i),s=o.length-1;t.initSideSegments(o[s],o[s-1],at.LEFT);for(let e=s-2;e>=0;e--)t.addNextSegment(o[e],!0);t.addLastSegment(),t.addLineEndCap(o[1],o[0]),t.closeRing()}computePointCurve(e,t){switch(this._bufParams.getEndCapStyle()){case ot.CAP_ROUND:t.createCircle(e);break;case ot.CAP_SQUARE:t.createSquare(e)}}getLineCurve(e,t){if(this._distance=t,this.isLineOffsetEmpty(t))return null;const i=Math.abs(t),n=this.getSegGen(i);if(e.length<=1)this.computePointCurve(e[0],n);else if(this._bufParams.isSingleSided()){const i=t<0;this.computeSingleSidedBufferCurve(e,i,n)}else this.computeLineBufferCurve(e,n);return n.getCoordinates()}getBufferParameters(){return this._bufParams}simplifyTolerance(e){return e*this._bufParams.getSimplifyFactor()}getRingCurve(e,t,i){if(this._distance=i,e.length<=2)return this.getLineCurve(e,i);if(0===i)return fi.copyCoordinates(e);const n=this.getSegGen(i);return this.computeRingBufferCurve(e,t,n),n.getCoordinates()}computeOffsetCurve(e,t,i){const n=this.simplifyTolerance(this._distance);if(t){const t=di.simplify(e,-n),r=t.length-1;i.initSideSegments(t[r],t[r-1],at.LEFT),i.addFirstSegment();for(let e=r-2;e>=0;e--)i.addNextSegment(t[e],!0)}else{const t=di.simplify(e,n),r=t.length-1;i.initSideSegments(t[0],t[1],at.LEFT),i.addFirstSegment();for(let e=2;e<=r;e++)i.addNextSegment(t[e],!0)}i.addLastSegment()}isLineOffsetEmpty(e){return 0===e||e<0&&!this._bufParams.isSingleSided()}getSegGen(e){return new pi(this._precisionModel,this._bufParams,e)}}class _i{constructor(){_i.constructor_.apply(this,arguments)}static constructor_(){this._subgraphs=null,this._seg=new nt;const e=arguments[0];this._subgraphs=e}findStabbedSegments(){if(1===arguments.length){const e=arguments[0],t=new V;for(let i=this._subgraphs.iterator();i.hasNext();){const n=i.next(),r=n.getEnvelope();e.y<r.getMinY()||e.y>r.getMaxY()||this.findStabbedSegments(e,n.getDirectedEdges(),t)}return t}if(3===arguments.length)if(N(arguments[2],H)&&arguments[0]instanceof v&&arguments[1]instanceof Lt){const e=arguments[0],t=arguments[1],i=arguments[2],n=t.getEdge().getCoordinates();for(let r=0;r<n.length-1;r++){this._seg.p0=n[r],this._seg.p1=n[r+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(Math.max(this._seg.p0.x,this._seg.p1.x)<e.x)continue;if(this._seg.isHorizontal())continue;if(e.y<this._seg.p0.y||e.y>this._seg.p1.y)continue;if(ne.index(this._seg.p0,this._seg.p1,e)===ne.RIGHT)continue;let o=t.getDepth(at.LEFT);this._seg.p0.equals(n[r])||(o=t.getDepth(at.RIGHT));const s=new yi(this._seg,o);i.add(s)}}else if(N(arguments[2],H)&&arguments[0]instanceof v&&N(arguments[1],H)){const e=arguments[0],t=arguments[2];for(let i=arguments[1].iterator();i.hasNext();){const n=i.next();n.isForward()&&this.findStabbedSegments(e,n,t)}}}getDepth(e){const t=this.findStabbedSegments(e);if(0===t.size())return 0;return Ht.min(t)._leftDepth}}class yi{constructor(){yi.constructor_.apply(this,arguments)}static constructor_(){this._upwardSeg=null,this._leftDepth=null;const e=arguments[0],t=arguments[1];this._upwardSeg=new nt(e),this._leftDepth=t}compareTo(e){const t=e;if(this._upwardSeg.minX()>=t._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=t._upwardSeg.minX())return-1;let i=this._upwardSeg.orientationIndex(t._upwardSeg);return 0!==i?i:(i=-1*t._upwardSeg.orientationIndex(this._upwardSeg),0!==i?i:this._upwardSeg.compareTo(t._upwardSeg))}compareX(e,t){const i=e.p0.compareTo(t.p0);return 0!==i?i:e.p1.compareTo(t.p1)}toString(){return this._upwardSeg.toString()}get interfaces_(){return[d]}}_i.DepthSegment=yi;class bi extends c{constructor(){super(),bi.constructor_.apply(this,arguments)}static constructor_(){c.constructor_.call(this,"Projective point not representable on the Cartesian plane.")}}class Ci{constructor(){Ci.constructor_.apply(this,arguments)}static constructor_(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){const e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if("number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1];this.x=e,this.y=t,this.w=1}else if(arguments[0]instanceof Ci&&arguments[1]instanceof Ci){const e=arguments[0],t=arguments[1];this.x=e.y*t.w-t.y*e.w,this.y=t.x*e.w-e.x*t.w,this.w=e.x*t.y-t.x*e.y}else if(arguments[0]instanceof v&&arguments[1]instanceof v){const e=arguments[0],t=arguments[1];this.x=e.y-t.y,this.y=t.x-e.x,this.w=e.x*t.y-t.x*e.y}}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this.x=e,this.y=t,this.w=i}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=e.y-t.y,o=t.x-e.x,s=e.x*t.y-t.x*e.y,a=i.y-n.y,l=n.x-i.x,c=i.x*n.y-n.x*i.y;this.x=o*c-l*s,this.y=a*s-r*c,this.w=r*l-a*o}}getY(){const e=this.y/this.w;if(_.isNaN(e)||_.isInfinite(e))throw new bi;return e}getX(){const e=this.x/this.w;if(_.isNaN(e)||_.isInfinite(e))throw new bi;return e}getCoordinate(){const e=new v;return e.x=this.getX(),e.y=this.getY(),e}}class xi{constructor(){xi.constructor_.apply(this,arguments)}static constructor_(){this.p0=null,this.p1=null,this.p2=null;const e=arguments[0],t=arguments[1],i=arguments[2];this.p0=e,this.p1=t,this.p2=i}static area(e,t,i){return Math.abs(((i.x-e.x)*(t.y-e.y)-(t.x-e.x)*(i.y-e.y))/2)}static signedArea(e,t,i){return((i.x-e.x)*(t.y-e.y)-(t.x-e.x)*(i.y-e.y))/2}static det(e,t,i,n){return e*n-t*i}static interpolateZ(e,t,i,n){const r=t.x,o=t.y,s=i.x-r,a=n.x-r,l=i.y-o,c=n.y-o,h=s*c-a*l,u=e.x-r,d=e.y-o,g=(c*u-a*d)/h,m=(-l*u+s*d)/h;return t.getZ()+g*(i.getZ()-t.getZ())+m*(n.getZ()-t.getZ())}static longestSideLength(e,t,i){const n=e.distance(t),r=t.distance(i),o=i.distance(e);let s=n;return r>s&&(s=r),o>s&&(s=o),s}static circumcentreDD(e,t,i){const n=te.valueOf(e.x).subtract(i.x),r=te.valueOf(e.y).subtract(i.y),o=te.valueOf(t.x).subtract(i.x),s=te.valueOf(t.y).subtract(i.y),a=te.determinant(n,r,o,s).multiply(2),l=n.sqr().add(r.sqr()),c=o.sqr().add(s.sqr()),h=te.determinant(r,l,s,c),u=te.determinant(n,l,o,c),d=te.valueOf(i.x).subtract(h.divide(a)).doubleValue(),g=te.valueOf(i.y).add(u.divide(a)).doubleValue();return new v(d,g)}static isAcute(e,t,i){return!!mi.isAcute(e,t,i)&&(!!mi.isAcute(t,i,e)&&!!mi.isAcute(i,e,t))}static circumcentre(e,t,i){const n=i.x,r=i.y,o=e.x-n,s=e.y-r,a=t.x-n,l=t.y-r,c=2*xi.det(o,s,a,l),h=xi.det(s,o*o+s*s,l,a*a+l*l),u=xi.det(o,o*o+s*s,a,a*a+l*l);return new v(n-h/c,r+u/c)}static perpendicularBisector(e,t){const i=t.x-e.x,n=t.y-e.y,r=new Ci(e.x+i/2,e.y+n/2,1),o=new Ci(e.x-n+i/2,e.y+i+n/2,1);return new Ci(r,o)}static angleBisector(e,t,i){const n=t.distance(e),r=n/(n+t.distance(i)),o=i.x-e.x,s=i.y-e.y;return new v(e.x+r*o,e.y+r*s)}static area3D(e,t,i){const n=t.x-e.x,r=t.y-e.y,o=t.getZ()-e.getZ(),s=i.x-e.x,a=i.y-e.y,l=i.getZ()-e.getZ(),c=r*l-o*a,h=o*s-n*l,u=n*a-r*s,d=c*c+h*h+u*u;return Math.sqrt(d)/2}static centroid(e,t,i){const n=(e.x+t.x+i.x)/3,r=(e.y+t.y+i.y)/3;return new v(n,r)}static inCentre(e,t,i){const n=t.distance(i),r=e.distance(i),o=e.distance(t),s=n+r+o,a=(n*e.x+r*t.x+o*i.x)/s,l=(n*e.y+r*t.y+o*i.y)/s;return new v(a,l)}area(){return xi.area(this.p0,this.p1,this.p2)}signedArea(){return xi.signedArea(this.p0,this.p1,this.p2)}interpolateZ(e){if(null===e)throw new h("Supplied point is null.");return xi.interpolateZ(e,this.p0,this.p1,this.p2)}longestSideLength(){return xi.longestSideLength(this.p0,this.p1,this.p2)}isAcute(){return xi.isAcute(this.p0,this.p1,this.p2)}circumcentre(){return xi.circumcentre(this.p0,this.p1,this.p2)}area3D(){return xi.area3D(this.p0,this.p1,this.p2)}centroid(){return xi.centroid(this.p0,this.p1,this.p2)}inCentre(){return xi.inCentre(this.p0,this.p1,this.p2)}}class Si{constructor(){Si.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new V;const e=arguments[0],t=arguments[1],i=arguments[2];this._inputGeom=e,this._distance=t,this._curveBuilder=i}addRingSide(e,t,i,n,r){if(0===t&&e.length<de.MINIMUM_VALID_SIZE)return null;let o=n,s=r;e.length>=de.MINIMUM_VALID_SIZE&&ne.isCCW(e)&&(o=r,s=n,i=at.opposite(i));const a=this._curveBuilder.getRingCurve(e,i,t);this.addCurve(a,o,s)}addRingBothSides(e,t){this.addRingSide(e,t,at.LEFT,st.EXTERIOR,st.INTERIOR),this.addRingSide(e,t,at.RIGHT,st.INTERIOR,st.EXTERIOR)}addPoint(e){if(this._distance<=0)return null;const t=e.getCoordinates(),i=this._curveBuilder.getLineCurve(t,this._distance);this.addCurve(i,st.EXTERIOR,st.INTERIOR)}addPolygon(e){let t=this._distance,i=at.LEFT;this._distance<0&&(t=-this._distance,i=at.RIGHT);const n=e.getExteriorRing(),r=be.removeRepeatedPoints(n.getCoordinates());if(this._distance<0&&this.isErodedCompletely(n,this._distance))return null;if(this._distance<=0&&r.length<3)return null;this.addRingSide(r,t,i,st.EXTERIOR,st.INTERIOR);for(let n=0;n<e.getNumInteriorRing();n++){const r=e.getInteriorRingN(n),o=be.removeRepeatedPoints(r.getCoordinates());this._distance>0&&this.isErodedCompletely(r,-this._distance)||this.addRingSide(o,t,at.opposite(i),st.INTERIOR,st.EXTERIOR)}}isTriangleErodedCompletely(e,t){const i=new xi(e[0],e[1],e[2]),n=i.inCentre();return Pe.pointToSegment(n,i.p0,i.p1)<Math.abs(t)}addLineString(e){if(this._curveBuilder.isLineOffsetEmpty(this._distance))return null;const t=be.removeRepeatedPoints(e.getCoordinates());if(be.isRing(t)&&!this._curveBuilder.getBufferParameters().isSingleSided())this.addRingBothSides(t,this._distance);else{const e=this._curveBuilder.getLineCurve(t,this._distance);this.addCurve(e,st.EXTERIOR,st.INTERIOR)}}addCurve(e,t,i){if(null===e||e.length<2)return null;const n=new ni(e,new _t(0,st.BOUNDARY,t,i));this._curveList.add(n)}getCurves(){return this.add(this._inputGeom),this._curveList}add(e){if(e.isEmpty())return null;if(e instanceof oe)this.addPolygon(e);else if(e instanceof G)this.addLineString(e);else if(e instanceof X)this.addPoint(e);else if(e instanceof ue)this.addCollection(e);else if(e instanceof Ne)this.addCollection(e);else if(e instanceof Ie)this.addCollection(e);else{if(!(e instanceof he))throw new P(e.getGeometryType());this.addCollection(e)}}isErodedCompletely(e,t){const i=e.getCoordinates();if(i.length<4)return t<0;if(4===i.length)return this.isTriangleErodedCompletely(i,t);const n=e.getEnvelopeInternal(),r=Math.min(n.getHeight(),n.getWidth());return t<0&&2*Math.abs(t)>r}addCollection(e){for(let t=0;t<e.getNumGeometries();t++){const i=e.getGeometryN(t);this.add(i)}}}class Ii{locate(e){}}class Ti{constructor(){Ti.constructor_.apply(this,arguments)}static constructor_(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;const e=arguments[0];this._parent=e,this._atStart=!0,this._index=0,this._max=e.getNumGeometries()}static isAtomic(e){return!(e instanceof he)}next(){if(this._atStart)return this._atStart=!1,Ti.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new U;const e=this._parent.getGeometryN(this._index++);return e instanceof he?(this._subcollectionIterator=new Ti(e),this._subcollectionIterator.next()):e}remove(){throw new P(this.getClass().getName())}hasNext(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)}get interfaces_(){return[Qt]}}class vi{constructor(){vi.constructor_.apply(this,arguments)}static constructor_(){this._geom=null;const e=arguments[0];this._geom=e}static locatePointInPolygon(e,t){if(t.isEmpty())return st.EXTERIOR;const i=t.getExteriorRing(),n=vi.locatePointInRing(e,i);if(n!==st.INTERIOR)return n;for(let i=0;i<t.getNumInteriorRing();i++){const n=t.getInteriorRingN(i),r=vi.locatePointInRing(e,n);if(r===st.BOUNDARY)return st.BOUNDARY;if(r===st.INTERIOR)return st.EXTERIOR}return st.INTERIOR}static locatePointInRing(e,t){return t.getEnvelopeInternal().intersects(e)?pt.locateInRing(e,t.getCoordinates()):st.EXTERIOR}static containsPointInPolygon(e,t){return st.EXTERIOR!==vi.locatePointInPolygon(e,t)}static locateInGeometry(e,t){if(t instanceof oe)return vi.locatePointInPolygon(e,t);if(t instanceof he){const i=new Ti(t);for(;i.hasNext();){const n=i.next();if(n!==t){const t=vi.locateInGeometry(e,n);if(t!==st.EXTERIOR)return t}}}return st.EXTERIOR}static isContained(e,t){return st.EXTERIOR!==vi.locate(e,t)}static locate(e,t){return t.isEmpty()?st.EXTERIOR:t.getEnvelopeInternal().intersects(e)?vi.locateInGeometry(e,t):st.EXTERIOR}locate(e){return vi.locate(e,this._geom)}get interfaces_(){return[Ii]}}class wi{constructor(){wi.constructor_.apply(this,arguments)}static constructor_(){this._edgeMap=new Mt,this._edgeList=null,this._ptInAreaLocation=[st.NONE,st.NONE]}getNextCW(e){this.getEdges();const t=this._edgeList.indexOf(e);let i=t-1;return 0===t&&(i=this._edgeList.size()-1),this._edgeList.get(i)}propagateSideLabels(e){let t=st.NONE;for(let i=this.iterator();i.hasNext();){const n=i.next().getLabel();n.isArea(e)&&n.getLocation(e,at.LEFT)!==st.NONE&&(t=n.getLocation(e,at.LEFT))}if(t===st.NONE)return null;let i=t;for(let t=this.iterator();t.hasNext();){const n=t.next(),r=n.getLabel();if(r.getLocation(e,at.ON)===st.NONE&&r.setLocation(e,at.ON,i),r.isArea(e)){const t=r.getLocation(e,at.LEFT),o=r.getLocation(e,at.RIGHT);if(o!==st.NONE){if(o!==i)throw new ut("side location conflict",n.getCoordinate());t===st.NONE&&x.shouldNeverReachHere("found single null side (at "+n.getCoordinate()+")"),i=t}else x.isTrue(r.getLocation(e,at.LEFT)===st.NONE,"found single null side"),r.setLocation(e,at.RIGHT,i),r.setLocation(e,at.LEFT,i)}}}getCoordinate(){const e=this.iterator();if(!e.hasNext())return null;return e.next().getCoordinate()}print(e){ye.out.println("EdgeEndStar:   "+this.getCoordinate());for(let t=this.iterator();t.hasNext();){t.next().print(e)}}isAreaLabelsConsistent(e){return this.computeEdgeEndLabels(e.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)}checkAreaLabelsConsistent(e){const t=this.getEdges();if(t.size()<=0)return!0;const i=t.size()-1,n=t.get(i).getLabel().getLocation(e,at.LEFT);x.isTrue(n!==st.NONE,"Found unlabelled area edge");let r=n;for(let t=this.iterator();t.hasNext();){const i=t.next().getLabel();x.isTrue(i.isArea(e),"Found non-area edge");const n=i.getLocation(e,at.LEFT),o=i.getLocation(e,at.RIGHT);if(n===o)return!1;if(o!==r)return!1;r=n}return!0}findIndex(e){this.iterator();for(let t=0;t<this._edgeList.size();t++){if(this._edgeList.get(t)===e)return t}return-1}iterator(){return this.getEdges().iterator()}getEdges(){return null===this._edgeList&&(this._edgeList=new V(this._edgeMap.values())),this._edgeList}getLocation(e,t,i){return this._ptInAreaLocation[e]===st.NONE&&(this._ptInAreaLocation[e]=vi.locate(t,i[e].getGeometry())),this._ptInAreaLocation[e]}toString(){const e=new Q;e.append("EdgeEndStar:   "+this.getCoordinate()),e.append("\n");for(let t=this.iterator();t.hasNext();){const i=t.next();e.append(i),e.append("\n")}return e.toString()}computeEdgeEndLabels(e){for(let t=this.iterator();t.hasNext();){t.next().computeLabel(e)}}computeLabelling(e){this.computeEdgeEndLabels(e[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);const t=[!1,!1];for(let e=this.iterator();e.hasNext();){const i=e.next().getLabel();for(let e=0;e<2;e++)i.isLine(e)&&i.getLocation(e)===st.BOUNDARY&&(t[e]=!0)}for(let i=this.iterator();i.hasNext();){const n=i.next(),r=n.getLabel();for(let i=0;i<2;i++)if(r.isAnyNull(i)){let o=st.NONE;if(t[i])o=st.EXTERIOR;else{const t=n.getCoordinate();o=this.getLocation(i,t,e)}r.setAllLocationsIfNull(i,o)}}}getDegree(){return this._edgeMap.size()}insertEdgeEnd(e,t){this._edgeMap.put(e,t),this._edgeList=null}}class Ei extends wi{constructor(){super(),Ei.constructor_.apply(this,arguments)}static constructor_(){this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}linkResultDirectedEdges(){this.getResultAreaEdges();let e=null,t=null,i=this._SCANNING_FOR_INCOMING;for(let n=0;n<this._resultAreaEdgeList.size();n++){const r=this._resultAreaEdgeList.get(n),o=r.getSym();if(r.getLabel().isArea())switch(null===e&&r.isInResult()&&(e=r),i){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;t=o,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!r.isInResult())continue;t.setNext(r),i=this._SCANNING_FOR_INCOMING}}if(i===this._LINKING_TO_OUTGOING){if(null===e)throw new ut("no outgoing dirEdge found",this.getCoordinate());x.isTrue(e.isInResult(),"unable to link last incoming dirEdge"),t.setNext(e)}}insert(e){const t=e;this.insertEdgeEnd(t,t)}getRightmostEdge(){const e=this.getEdges(),t=e.size();if(t<1)return null;const i=e.get(0);if(1===t)return i;const n=e.get(t-1),r=i.getQuadrant(),o=n.getQuadrant();return Dt.isNorthern(r)&&Dt.isNorthern(o)?i:Dt.isNorthern(r)||Dt.isNorthern(o)?0!==i.getDy()?i:0!==n.getDy()?n:(x.shouldNeverReachHere("found two horizontal edges incident on node"),null):n}print(e){ye.out.println("DirectedEdgeStar: "+this.getCoordinate());for(let t=this.iterator();t.hasNext();){const i=t.next();e.print("out "),i.print(e),e.println(),e.print("in "),i.getSym().print(e),e.println()}}getResultAreaEdges(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new V;for(let e=this.iterator();e.hasNext();){const t=e.next();(t.isInResult()||t.getSym().isInResult())&&this._resultAreaEdgeList.add(t)}return this._resultAreaEdgeList}updateLabelling(e){for(let t=this.iterator();t.hasNext();){const i=t.next().getLabel();i.setAllLocationsIfNull(0,e.getLocation(0)),i.setAllLocationsIfNull(1,e.getLocation(1))}}linkAllDirectedEdges(){this.getEdges();let e=null,t=null;for(let i=this._edgeList.size()-1;i>=0;i--){const n=this._edgeList.get(i),r=n.getSym();null===t&&(t=r),null!==e&&r.setNext(e),e=n}t.setNext(e)}computeDepths(){if(1===arguments.length){const e=arguments[0],t=this.findIndex(e),i=e.getDepth(at.LEFT),n=e.getDepth(at.RIGHT),r=this.computeDepths(t+1,this._edgeList.size(),i);if(this.computeDepths(0,t,r)!==n)throw new ut("depth mismatch at "+e.getCoordinate())}else if(3===arguments.length){const e=arguments[1];let t=arguments[2];for(let i=arguments[0];i<e;i++){const e=this._edgeList.get(i);e.setEdgeDepths(at.RIGHT,t),t=e.getDepth(at.LEFT)}return t}}mergeSymLabels(){for(let e=this.iterator();e.hasNext();){const t=e.next();t.getLabel().merge(t.getSym().getLabel())}}linkMinimalDirectedEdges(e){let t=null,i=null,n=this._SCANNING_FOR_INCOMING;for(let r=this._resultAreaEdgeList.size()-1;r>=0;r--){const o=this._resultAreaEdgeList.get(r),s=o.getSym();switch(null===t&&o.getEdgeRing()===e&&(t=o),n){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==e)continue;i=s,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==e)continue;i.setNextMin(o),n=this._SCANNING_FOR_INCOMING}}n===this._LINKING_TO_OUTGOING&&(x.isTrue(null!==t,"found null for first outgoing dirEdge"),x.isTrue(t.getEdgeRing()===e,"unable to link last incoming dirEdge"),i.setNextMin(t))}getOutgoingDegree(){if(0===arguments.length){let e=0;for(let t=this.iterator();t.hasNext();){t.next().isInResult()&&e++}return e}if(1===arguments.length){const e=arguments[0];let t=0;for(let i=this.iterator();i.hasNext();){i.next().getEdgeRing()===e&&t++}return t}}getLabel(){return this._label}findCoveredLineEdges(){let e=st.NONE;for(let t=this.iterator();t.hasNext();){const i=t.next(),n=i.getSym();if(!i.isLineEdge()){if(i.isInResult()){e=st.INTERIOR;break}if(n.isInResult()){e=st.EXTERIOR;break}}}if(e===st.NONE)return null;let t=e;for(let e=this.iterator();e.hasNext();){const i=e.next(),n=i.getSym();i.isLineEdge()?i.getEdge().setCovered(t===st.INTERIOR):(i.isInResult()&&(t=st.EXTERIOR),n.isInResult()&&(t=st.INTERIOR))}}computeLabelling(e){super.computeLabelling.call(this,e),this._label=new _t(st.NONE);for(let e=this.iterator();e.hasNext();){const t=e.next().getEdge().getLabel();for(let e=0;e<2;e++){const i=t.getLocation(e);i!==st.INTERIOR&&i!==st.BOUNDARY||this._label.setLocation(e,st.INTERIOR)}}}}class Ai extends Pt{constructor(){super()}createNode(e){return new St(e,new Ei)}}class Mi{constructor(){Mi.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._orientation=null;const e=arguments[0];this._pts=e,this._orientation=Mi.orientation(e)}static orientation(e){return 1===be.increasingDirection(e)}static compareOriented(e,t,i,n){const r=t?1:-1,o=n?1:-1,s=t?e.length:-1,a=n?i.length:-1;let l=t?0:e.length-1,c=n?0:i.length-1;for(;;){const t=e[l].compareTo(i[c]);if(0!==t)return t;l+=r,c+=o;const n=l===s,h=c===a;if(n&&!h)return-1;if(!n&&h)return 1;if(n&&h)return 0}}compareTo(e){const t=e;return Mi.compareOriented(this._pts,this._orientation,t._pts,t._orientation)}get interfaces_(){return[d]}}class Ni{constructor(){Ni.constructor_.apply(this,arguments)}static constructor_(){this._edges=new V,this._ocaMap=new Mt}print(e){e.print("MULTILINESTRING ( ");for(let t=0;t<this._edges.size();t++){const i=this._edges.get(t);t>0&&e.print(","),e.print("(");const n=i.getCoordinates();for(let t=0;t<n.length;t++)t>0&&e.print(","),e.print(n[t].x+" "+n[t].y);e.println(")")}e.print(")  ")}addAll(e){for(let t=e.iterator();t.hasNext();)this.add(t.next())}findEdgeIndex(e){for(let t=0;t<this._edges.size();t++)if(this._edges.get(t).equals(e))return t;return-1}iterator(){return this._edges.iterator()}getEdges(){return this._edges}get(e){return this._edges.get(e)}findEqualEdge(e){const t=new Mi(e.getCoordinates());return this._ocaMap.get(t)}add(e){this._edges.add(e);const t=new Mi(e.getCoordinates());this._ocaMap.put(t,e)}}class Di{processIntersections(e,t,i,n){}isDone(){}}class Ri{constructor(){Ri.constructor_.apply(this,arguments)}static constructor_(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;const e=arguments[0];this._li=e}static isAdjacentSegments(e,t){return 1===Math.abs(e-t)}isTrivialIntersection(e,t,i,n){if(e===i&&1===this._li.getIntersectionNum()){if(Ri.isAdjacentSegments(t,n))return!0;if(e.isClosed()){const i=e.size()-1;if(0===t&&n===i||0===n&&t===i)return!0}}return!1}getProperIntersectionPoint(){return this._properIntersectionPoint}hasProperInteriorIntersection(){return this._hasProperInterior}getLineIntersector(){return this._li}hasProperIntersection(){return this._hasProper}processIntersections(e,t,i,n){if(e===i&&t===n)return null;this.numTests++;const r=e.getCoordinates()[t],o=e.getCoordinates()[t+1],s=i.getCoordinates()[n],a=i.getCoordinates()[n+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(e,t,i,n)||(this._hasIntersection=!0,e.addIntersections(this._li,t,0),i.addIntersections(this._li,n,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))}hasIntersection(){return this._hasIntersection}isDone(){return!1}hasInteriorIntersection(){return this._hasInterior}get interfaces_(){return[Di]}}class Li{constructor(){Li.constructor_.apply(this,arguments)}static constructor_(){this.coord=null,this.segmentIndex=null,this.dist=null;const e=arguments[0],t=arguments[1],i=arguments[2];this.coord=new v(e),this.segmentIndex=t,this.dist=i}getSegmentIndex(){return this.segmentIndex}getCoordinate(){return this.coord}print(e){e.print(this.coord),e.print(" seg # = "+this.segmentIndex),e.println(" dist = "+this.dist)}compareTo(e){const t=e;return this.compare(t.segmentIndex,t.dist)}isEndPoint(e){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===e}toString(){return this.coord+" seg # = "+this.segmentIndex+" dist = "+this.dist}getDistance(){return this.dist}compare(e,t){return this.segmentIndex<e?-1:this.segmentIndex>e?1:this.dist<t?-1:this.dist>t?1:0}get interfaces_(){return[d]}}class Pi{constructor(){Pi.constructor_.apply(this,arguments)}static constructor_(){this._nodeMap=new Mt,this.edge=null;const e=arguments[0];this.edge=e}print(e){e.println("Intersections:");for(let t=this.iterator();t.hasNext();){t.next().print(e)}}iterator(){return this._nodeMap.values().iterator()}addSplitEdges(e){this.addEndpoints();const t=this.iterator();let i=t.next();for(;t.hasNext();){const n=t.next(),r=this.createSplitEdge(i,n);e.add(r),i=n}}addEndpoints(){const e=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[e],e,0)}createSplitEdge(e,t){let i=t.segmentIndex-e.segmentIndex+2;const n=this.edge.pts[t.segmentIndex],r=t.dist>0||!t.coord.equals2D(n);r||i--;const o=new Array(i).fill(null);let s=0;o[s++]=new v(e.coord);for(let i=e.segmentIndex+1;i<=t.segmentIndex;i++)o[s++]=this.edge.pts[i];return r&&(o[s]=t.coord),new Wi(o,new _t(this.edge._label))}add(e,t,i){const n=new Li(e,t,i),r=this._nodeMap.get(n);return null!==r?r:(this._nodeMap.put(n,n),n)}isIntersection(e){for(let t=this.iterator();t.hasNext();){if(t.next().coord.equals(e))return!0}return!1}}class Oi{constructor(){Oi.constructor_.apply(this,arguments)}static constructor_(){if(this._matrix=null,0===arguments.length)this._matrix=Array(3).fill().map((()=>Array(3))),this.setAll(k.FALSE);else if(1===arguments.length)if("string"==typeof arguments[0]){const e=arguments[0];Oi.constructor_.call(this),this.set(e)}else if(arguments[0]instanceof Oi){const e=arguments[0];Oi.constructor_.call(this),this._matrix[st.INTERIOR][st.INTERIOR]=e._matrix[st.INTERIOR][st.INTERIOR],this._matrix[st.INTERIOR][st.BOUNDARY]=e._matrix[st.INTERIOR][st.BOUNDARY],this._matrix[st.INTERIOR][st.EXTERIOR]=e._matrix[st.INTERIOR][st.EXTERIOR],this._matrix[st.BOUNDARY][st.INTERIOR]=e._matrix[st.BOUNDARY][st.INTERIOR],this._matrix[st.BOUNDARY][st.BOUNDARY]=e._matrix[st.BOUNDARY][st.BOUNDARY],this._matrix[st.BOUNDARY][st.EXTERIOR]=e._matrix[st.BOUNDARY][st.EXTERIOR],this._matrix[st.EXTERIOR][st.INTERIOR]=e._matrix[st.EXTERIOR][st.INTERIOR],this._matrix[st.EXTERIOR][st.BOUNDARY]=e._matrix[st.EXTERIOR][st.BOUNDARY],this._matrix[st.EXTERIOR][st.EXTERIOR]=e._matrix[st.EXTERIOR][st.EXTERIOR]}}static matches(){if(Number.isInteger(arguments[0])&&"string"==typeof arguments[1]){const e=arguments[0],t=arguments[1];return t===k.SYM_DONTCARE||(t===k.SYM_TRUE&&(e>=0||e===k.TRUE)||(t===k.SYM_FALSE&&e===k.FALSE||(t===k.SYM_P&&e===k.P||(t===k.SYM_L&&e===k.L||t===k.SYM_A&&e===k.A))))}if("string"==typeof arguments[0]&&"string"==typeof arguments[1]){const e=arguments[1];return new Oi(arguments[0]).matches(e)}}static isTrue(e){return e>=0||e===k.TRUE}isIntersects(){return!this.isDisjoint()}isCovers(){return(Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])||Oi.isTrue(this._matrix[st.INTERIOR][st.BOUNDARY])||Oi.isTrue(this._matrix[st.BOUNDARY][st.INTERIOR])||Oi.isTrue(this._matrix[st.BOUNDARY][st.BOUNDARY]))&&this._matrix[st.EXTERIOR][st.INTERIOR]===k.FALSE&&this._matrix[st.EXTERIOR][st.BOUNDARY]===k.FALSE}isCoveredBy(){return(Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])||Oi.isTrue(this._matrix[st.INTERIOR][st.BOUNDARY])||Oi.isTrue(this._matrix[st.BOUNDARY][st.INTERIOR])||Oi.isTrue(this._matrix[st.BOUNDARY][st.BOUNDARY]))&&this._matrix[st.INTERIOR][st.EXTERIOR]===k.FALSE&&this._matrix[st.BOUNDARY][st.EXTERIOR]===k.FALSE}set(){if(1===arguments.length){const e=arguments[0];for(let t=0;t<e.length;t++){const i=Math.trunc(t/3),n=t%3;this._matrix[i][n]=k.toDimensionValue(e.charAt(t))}}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this._matrix[e][t]=i}}isContains(){return Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])&&this._matrix[st.EXTERIOR][st.INTERIOR]===k.FALSE&&this._matrix[st.EXTERIOR][st.BOUNDARY]===k.FALSE}setAtLeast(){if(1===arguments.length){const e=arguments[0];for(let t=0;t<e.length;t++){const i=Math.trunc(t/3),n=t%3;this.setAtLeast(i,n,k.toDimensionValue(e.charAt(t)))}}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this._matrix[e][t]<i&&(this._matrix[e][t]=i)}}setAtLeastIfValid(e,t,i){e>=0&&t>=0&&this.setAtLeast(e,t,i)}isWithin(){return Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])&&this._matrix[st.INTERIOR][st.EXTERIOR]===k.FALSE&&this._matrix[st.BOUNDARY][st.EXTERIOR]===k.FALSE}isTouches(e,t){return e>t?this.isTouches(t,e):(e===k.A&&t===k.A||e===k.L&&t===k.L||e===k.L&&t===k.A||e===k.P&&t===k.A||e===k.P&&t===k.L)&&(this._matrix[st.INTERIOR][st.INTERIOR]===k.FALSE&&(Oi.isTrue(this._matrix[st.INTERIOR][st.BOUNDARY])||Oi.isTrue(this._matrix[st.BOUNDARY][st.INTERIOR])||Oi.isTrue(this._matrix[st.BOUNDARY][st.BOUNDARY])))}isOverlaps(e,t){return e===k.P&&t===k.P||e===k.A&&t===k.A?Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])&&Oi.isTrue(this._matrix[st.INTERIOR][st.EXTERIOR])&&Oi.isTrue(this._matrix[st.EXTERIOR][st.INTERIOR]):e===k.L&&t===k.L&&(1===this._matrix[st.INTERIOR][st.INTERIOR]&&Oi.isTrue(this._matrix[st.INTERIOR][st.EXTERIOR])&&Oi.isTrue(this._matrix[st.EXTERIOR][st.INTERIOR]))}isEquals(e,t){return e===t&&(Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])&&this._matrix[st.INTERIOR][st.EXTERIOR]===k.FALSE&&this._matrix[st.BOUNDARY][st.EXTERIOR]===k.FALSE&&this._matrix[st.EXTERIOR][st.INTERIOR]===k.FALSE&&this._matrix[st.EXTERIOR][st.BOUNDARY]===k.FALSE)}toString(){const e=new Ce("123456789");for(let t=0;t<3;t++)for(let i=0;i<3;i++)e.setCharAt(3*t+i,k.toDimensionSymbol(this._matrix[t][i]));return e.toString()}setAll(e){for(let t=0;t<3;t++)for(let i=0;i<3;i++)this._matrix[t][i]=e}get(e,t){return this._matrix[e][t]}transpose(){let e=this._matrix[1][0];return this._matrix[1][0]=this._matrix[0][1],this._matrix[0][1]=e,e=this._matrix[2][0],this._matrix[2][0]=this._matrix[0][2],this._matrix[0][2]=e,e=this._matrix[2][1],this._matrix[2][1]=this._matrix[1][2],this._matrix[1][2]=e,this}matches(e){if(9!==e.length)throw new h("Should be length 9: "+e);for(let t=0;t<3;t++)for(let i=0;i<3;i++)if(!Oi.matches(this._matrix[t][i],e.charAt(3*t+i)))return!1;return!0}add(e){for(let t=0;t<3;t++)for(let i=0;i<3;i++)this.setAtLeast(t,i,e.get(t,i))}isDisjoint(){return this._matrix[st.INTERIOR][st.INTERIOR]===k.FALSE&&this._matrix[st.INTERIOR][st.BOUNDARY]===k.FALSE&&this._matrix[st.BOUNDARY][st.INTERIOR]===k.FALSE&&this._matrix[st.BOUNDARY][st.BOUNDARY]===k.FALSE}isCrosses(e,t){return e===k.P&&t===k.L||e===k.P&&t===k.A||e===k.L&&t===k.A?Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])&&Oi.isTrue(this._matrix[st.INTERIOR][st.EXTERIOR]):e===k.L&&t===k.P||e===k.A&&t===k.P||e===k.A&&t===k.L?Oi.isTrue(this._matrix[st.INTERIOR][st.INTERIOR])&&Oi.isTrue(this._matrix[st.EXTERIOR][st.INTERIOR]):e===k.L&&t===k.L&&0===this._matrix[st.INTERIOR][st.INTERIOR]}get interfaces_(){return[g]}}class ki{constructor(){ki.constructor_.apply(this,arguments)}static constructor_(){if(this._data=null,this._size=0,0===arguments.length)ki.constructor_.call(this,10);else if(1===arguments.length){const e=arguments[0];this._data=new Array(e).fill(null)}}size(){return this._size}addAll(e){return null===e||0===e.length?null:(this.ensureCapacity(this._size+e.length),ye.arraycopy(e,0,this._data,this._size,e.length),void(this._size+=e.length))}ensureCapacity(e){if(e<=this._data.length)return null;const t=Math.max(e,2*this._data.length);this._data=Z.copyOf(this._data,t)}toArray(){const e=new Array(this._size).fill(null);return ye.arraycopy(this._data,0,e,0,this._size),e}add(e){this.ensureCapacity(this._size+1),this._data[this._size]=e,++this._size}}class Bi{static toIntArray(e){const t=new Array(e.size()).fill(null);for(let i=0;i<t.length;i++)t[i]=e.get(i).intValue();return t}getChainStartIndices(e){let t=0;const i=new ki(Math.trunc(e.length/2));i.add(t);do{const n=this.findChainEnd(e,t);i.add(n),t=n}while(t<e.length-1);return i.toArray()}findChainEnd(e,t){const i=Dt.quadrant(e[t],e[t+1]);let n=t+1;for(;n<e.length;){if(Dt.quadrant(e[n-1],e[n])!==i)break;n++}return n-1}OLDgetChainStartIndices(e){let t=0;const i=new V;i.add(t);do{const n=this.findChainEnd(e,t);i.add(n),t=n}while(t<e.length-1);return Bi.toIntArray(i)}}class Fi{constructor(){Fi.constructor_.apply(this,arguments)}static constructor_(){this.e=null,this.pts=null,this.startIndex=null;const e=arguments[0];this.e=e,this.pts=e.getCoordinates();const t=new Bi;this.startIndex=t.getChainStartIndices(this.pts)}getCoordinates(){return this.pts}getMaxX(e){const t=this.pts[this.startIndex[e]].x,i=this.pts[this.startIndex[e+1]].x;return t>i?t:i}getMinX(e){const t=this.pts[this.startIndex[e]].x,i=this.pts[this.startIndex[e+1]].x;return t<i?t:i}computeIntersectsForChain(){if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];this.computeIntersectsForChain(this.startIndex[e],this.startIndex[e+1],t,t.startIndex[i],t.startIndex[i+1],n)}else if(6===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=arguments[4],o=arguments[5];if(t-e==1&&r-n==1)return o.addIntersections(this.e,e,i.e,n),null;if(!this.overlaps(e,t,i,n,r))return null;const s=Math.trunc((e+t)/2),a=Math.trunc((n+r)/2);e<s&&(n<a&&this.computeIntersectsForChain(e,s,i,n,a,o),a<r&&this.computeIntersectsForChain(e,s,i,a,r,o)),s<t&&(n<a&&this.computeIntersectsForChain(s,t,i,n,a,o),a<r&&this.computeIntersectsForChain(s,t,i,a,r,o))}}overlaps(e,t,i,n,r){return E.intersects(this.pts[e],this.pts[t],i.pts[n],i.pts[r])}getStartIndexes(){return this.startIndex}computeIntersects(e,t){for(let i=0;i<this.startIndex.length-1;i++)for(let n=0;n<e.startIndex.length-1;n++)this.computeIntersectsForChain(i,e,n,t)}}class Gi{constructor(){Gi.constructor_.apply(this,arguments)}static constructor_(){this._depth=Array(2).fill().map((()=>Array(3)));for(let e=0;e<2;e++)for(let t=0;t<3;t++)this._depth[e][t]=Gi.NULL_VALUE}static depthAtLocation(e){return e===st.EXTERIOR?0:e===st.INTERIOR?1:Gi.NULL_VALUE}getDepth(e,t){return this._depth[e][t]}setDepth(e,t,i){this._depth[e][t]=i}isNull(){if(0===arguments.length){for(let e=0;e<2;e++)for(let t=0;t<3;t++)if(this._depth[e][t]!==Gi.NULL_VALUE)return!1;return!0}if(1===arguments.length){const e=arguments[0];return this._depth[e][1]===Gi.NULL_VALUE}if(2===arguments.length){const e=arguments[0],t=arguments[1];return this._depth[e][t]===Gi.NULL_VALUE}}normalize(){for(let e=0;e<2;e++)if(!this.isNull(e)){let t=this._depth[e][1];this._depth[e][2]<t&&(t=this._depth[e][2]),t<0&&(t=0);for(let i=1;i<3;i++){let n=0;this._depth[e][i]>t&&(n=1),this._depth[e][i]=n}}}getDelta(e){return this._depth[e][at.RIGHT]-this._depth[e][at.LEFT]}getLocation(e,t){return this._depth[e][t]<=0?st.EXTERIOR:st.INTERIOR}toString(){return"A: "+this._depth[0][1]+","+this._depth[0][2]+" B: "+this._depth[1][1]+","+this._depth[1][2]}add(){if(1===arguments.length){const e=arguments[0];for(let t=0;t<2;t++)for(let i=1;i<3;i++){const n=e.getLocation(t,i);n!==st.EXTERIOR&&n!==st.INTERIOR||(this.isNull(t,i)?this._depth[t][i]=Gi.depthAtLocation(n):this._depth[t][i]+=Gi.depthAtLocation(n))}}else if(3===arguments.length){const e=arguments[0],t=arguments[1];arguments[2]===st.INTERIOR&&this._depth[e][t]++}}}Gi.NULL_VALUE=-1;class Wi extends xt{constructor(){super(),Wi.constructor_.apply(this,arguments)}static constructor_(){if(this.pts=null,this._env=null,this.eiList=new Pi(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new Gi,this._depthDelta=0,1===arguments.length){const e=arguments[0];Wi.constructor_.call(this,e,null)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this.pts=e,this._label=t}}static updateIM(){if(!(2===arguments.length&&arguments[1]instanceof Oi&&arguments[0]instanceof _t))return super.updateIM.apply(this,arguments);{const e=arguments[0],t=arguments[1];t.setAtLeastIfValid(e.getLocation(0,at.ON),e.getLocation(1,at.ON),1),e.isArea()&&(t.setAtLeastIfValid(e.getLocation(0,at.LEFT),e.getLocation(1,at.LEFT),2),t.setAtLeastIfValid(e.getLocation(0,at.RIGHT),e.getLocation(1,at.RIGHT),2))}}getDepth(){return this._depth}getCollapsedEdge(){const e=new Array(2).fill(null);e[0]=this.pts[0],e[1]=this.pts[1];return new Wi(e,_t.toLineLabel(this._label))}isIsolated(){return this._isIsolated}getCoordinates(){return this.pts}setIsolated(e){this._isIsolated=e}setName(e){this._name=e}equals(e){if(!(e instanceof Wi))return!1;const t=e;if(this.pts.length!==t.pts.length)return!1;let i=!0,n=!0,r=this.pts.length;for(let e=0;e<this.pts.length;e++)if(this.pts[e].equals2D(t.pts[e])||(i=!1),this.pts[e].equals2D(t.pts[--r])||(n=!1),!i&&!n)return!1;return!0}getCoordinate(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){const e=arguments[0];return this.pts[e]}}print(e){e.print("edge "+this._name+": "),e.print("LINESTRING (");for(let t=0;t<this.pts.length;t++)t>0&&e.print(","),e.print(this.pts[t].x+" "+this.pts[t].y);e.print(")  "+this._label+" "+this._depthDelta)}computeIM(e){Wi.updateIM(this._label,e)}isCollapsed(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))}isClosed(){return this.pts[0].equals(this.pts[this.pts.length-1])}getMaximumSegmentIndex(){return this.pts.length-1}getDepthDelta(){return this._depthDelta}getNumPoints(){return this.pts.length}printReverse(e){e.print("edge "+this._name+": ");for(let t=this.pts.length-1;t>=0;t--)e.print(this.pts[t]+" ");e.println("")}getMonotoneChainEdge(){return null===this._mce&&(this._mce=new Fi(this)),this._mce}getEnvelope(){if(null===this._env){this._env=new E;for(let e=0;e<this.pts.length;e++)this._env.expandToInclude(this.pts[e])}return this._env}addIntersection(e,t,i,n){const r=new v(e.getIntersection(n));let o=t,s=e.getEdgeDistance(i,n);const a=o+1;if(a<this.pts.length){const e=this.pts[a];r.equals2D(e)&&(o=a,s=0)}this.eiList.add(r,o,s)}toString(){const e=new Ce;e.append("edge "+this._name+": "),e.append("LINESTRING (");for(let t=0;t<this.pts.length;t++)t>0&&e.append(","),e.append(this.pts[t].x+" "+this.pts[t].y);return e.append(")  "+this._label+" "+this._depthDelta),e.toString()}isPointwiseEqual(e){if(this.pts.length!==e.pts.length)return!1;for(let t=0;t<this.pts.length;t++)if(!this.pts[t].equals2D(e.pts[t]))return!1;return!0}setDepthDelta(e){this._depthDelta=e}getEdgeIntersectionList(){return this.eiList}addIntersections(e,t,i){for(let n=0;n<e.getIntersectionNum();n++)this.addIntersection(e,t,i,n)}}class zi{constructor(){zi.constructor_.apply(this,arguments)}static constructor_(){this._bufParams=null,this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Ni;const e=arguments[0];this._bufParams=e}static depthDelta(e){const t=e.getLocation(0,at.LEFT),i=e.getLocation(0,at.RIGHT);return t===st.INTERIOR&&i===st.EXTERIOR?1:t===st.EXTERIOR&&i===st.INTERIOR?-1:0}static convertSegStrings(e){const t=new De,i=new V;for(;e.hasNext();){const n=e.next(),r=t.createLineString(n.getCoordinates());i.add(r)}return t.buildGeometry(i)}setWorkingPrecisionModel(e){this._workingPrecisionModel=e}insertUniqueEdge(e){const t=this._edgeList.findEqualEdge(e);if(null!==t){const i=t.getLabel();let n=e.getLabel();t.isPointwiseEqual(e)||(n=new _t(e.getLabel()),n.flip()),i.merge(n);const r=zi.depthDelta(n),o=t.getDepthDelta()+r;t.setDepthDelta(o)}else this._edgeList.add(e),e.setDepthDelta(zi.depthDelta(e.getLabel()))}buildSubgraphs(e,t){const i=new V;for(let n=e.iterator();n.hasNext();){const e=n.next(),r=e.getRightmostCoordinate(),o=new _i(i).getDepth(r);e.computeDepth(o),e.findResultEdges(),i.add(e),t.add(e.getDirectedEdges(),e.getNodes())}}createSubgraphs(e){const t=new V;for(let i=e.getNodes().iterator();i.hasNext();){const e=i.next();if(!e.isVisited()){const i=new gt;i.create(e),t.add(i)}}return Ht.sort(t,Ht.reverseOrder()),t}createEmptyResultGeometry(){return this._geomFact.createPolygon()}getNoder(e){if(null!==this._workingNoder)return this._workingNoder;const t=new ci,i=new it;return i.setPrecisionModel(e),t.setSegmentIntersector(new Ri(i)),t}buffer(e,t){let i=this._workingPrecisionModel;null===i&&(i=e.getPrecisionModel()),this._geomFact=e.getFactory();const n=new fi(i,this._bufParams),r=new Si(e,t,n).getCurves();if(r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,i),this._graph=new Ot(new Ai),this._graph.addEdges(this._edgeList.getEdges());const o=this.createSubgraphs(this._graph),s=new kt(this._geomFact);this.buildSubgraphs(o,s);const a=s.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)}computeNodedEdges(e,t){const i=this.getNoder(t);i.computeNodes(e);for(let e=i.getNodedSubstrings().iterator();e.hasNext();){const t=e.next(),i=t.getCoordinates();if(2===i.length&&i[0].equals2D(i[1]))continue;const n=t.getData(),r=new Wi(t.getCoordinates(),new _t(n));this.insertUniqueEdge(r)}}setNoder(e){this._workingNoder=e}}class Hi{constructor(){Hi.constructor_.apply(this,arguments)}static constructor_(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){const e=arguments[0],t=arguments[1];Hi.constructor_.call(this,e,t,0,0)}else if(4===arguments.length){const e=arguments[0],t=arguments[1];this._noder=e,this._scaleFactor=t,this._isScaled=!this.isIntegerPrecision()}}rescale(){if(N(arguments[0],W)){for(let e=arguments[0].iterator();e.hasNext();){const t=e.next();this.rescale(t.getCoordinates())}}else if(arguments[0]instanceof Array){const e=arguments[0];for(let t=0;t<e.length;t++)e[t].x=e[t].x/this._scaleFactor+this._offsetX,e[t].y=e[t].y/this._scaleFactor+this._offsetY;2===e.length&&e[0].equals2D(e[1])&&ye.out.println(e)}}scale(){if(N(arguments[0],W)){const e=arguments[0],t=new V(e.size());for(let i=e.iterator();i.hasNext();){const e=i.next();t.add(new ni(this.scale(e.getCoordinates()),e.getData()))}return t}if(arguments[0]instanceof Array){const e=arguments[0],t=new Array(e.length).fill(null);for(let i=0;i<e.length;i++)t[i]=new v(Math.round((e[i].x-this._offsetX)*this._scaleFactor),Math.round((e[i].y-this._offsetY)*this._scaleFactor),e[i].getZ());return be.removeRepeatedPoints(t)}}isIntegerPrecision(){return 1===this._scaleFactor}getNodedSubstrings(){const e=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(e),e}computeNodes(e){let t=e;this._isScaled&&(t=this.scale(e)),this._noder.computeNodes(t)}get interfaces_(){return[ai]}}class Ui{constructor(){Ui.constructor_.apply(this,arguments)}static constructor_(){this._li=new it,this._segStrings=null;const e=arguments[0];this._segStrings=e}checkEndPtVertexIntersections(){if(0===arguments.length)for(let e=this._segStrings.iterator();e.hasNext();){const t=e.next().getCoordinates();this.checkEndPtVertexIntersections(t[0],this._segStrings),this.checkEndPtVertexIntersections(t[t.length-1],this._segStrings)}else if(2===arguments.length){const e=arguments[0];for(let t=arguments[1].iterator();t.hasNext();){const i=t.next().getCoordinates();for(let t=1;t<i.length-1;t++)if(i[t].equals(e))throw new b("found endpt/interior pt intersection at index "+t+" :pt "+e)}}}checkInteriorIntersections(){if(0===arguments.length)for(let e=this._segStrings.iterator();e.hasNext();){const t=e.next();for(let e=this._segStrings.iterator();e.hasNext();){const i=e.next();this.checkInteriorIntersections(t,i)}}else if(2===arguments.length){const e=arguments[0],t=arguments[1],i=e.getCoordinates(),n=t.getCoordinates();for(let r=0;r<i.length-1;r++)for(let i=0;i<n.length-1;i++)this.checkInteriorIntersections(e,r,t,i)}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];if(e===i&&t===n)return null;const r=e.getCoordinates()[t],o=e.getCoordinates()[t+1],s=i.getCoordinates()[n],a=i.getCoordinates()[n+1];if(this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,r,o)||this.hasInteriorIntersection(this._li,s,a)))throw new b("found non-noded intersection at "+r+"-"+o+" and "+s+"-"+a)}}checkValid(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()}checkCollapses(){if(0===arguments.length)for(let e=this._segStrings.iterator();e.hasNext();){const t=e.next();this.checkCollapses(t)}else if(1===arguments.length){const e=arguments[0].getCoordinates();for(let t=0;t<e.length-2;t++)this.checkCollapse(e[t],e[t+1],e[t+2])}}hasInteriorIntersection(e,t,i){for(let n=0;n<e.getIntersectionNum();n++){const r=e.getIntersection(n);if(!r.equals(t)&&!r.equals(i))return!0}return!1}checkCollapse(e,t,i){if(e.equals(i))throw new b("found non-noded collapse at "+Ui.fact.createLineString([e,t,i]))}}Ui.fact=new De;class Vi{constructor(){Vi.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;const e=arguments[0],t=arguments[1],i=arguments[2];if(this._originalPt=e,this._pt=e,this._scaleFactor=t,this._li=i,t<=0)throw new h("Scale factor must be non-zero");1!==t&&(this._pt=new v(this.scale(e.x),this.scale(e.y)),this._p0Scaled=new v,this._p1Scaled=new v),this.initCorners(this._pt)}intersectsScaled(e,t){const i=Math.min(e.x,t.x),n=Math.max(e.x,t.x),r=Math.min(e.y,t.y),o=Math.max(e.y,t.y),s=this._maxx<i||this._minx>n||this._maxy<r||this._miny>o;if(s)return!1;const a=this.intersectsToleranceSquare(e,t);return x.isTrue(!(s&&a),"Found bad envelope test"),a}initCorners(e){const t=.5;this._minx=e.x-t,this._maxx=e.x+t,this._miny=e.y-t,this._maxy=e.y+t,this._corner[0]=new v(this._maxx,this._maxy),this._corner[1]=new v(this._minx,this._maxy),this._corner[2]=new v(this._minx,this._miny),this._corner[3]=new v(this._maxx,this._miny)}intersects(e,t){return 1===this._scaleFactor?this.intersectsScaled(e,t):(this.copyScaled(e,this._p0Scaled),this.copyScaled(t,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))}scale(e){return Math.round(e*this._scaleFactor)}getCoordinate(){return this._originalPt}copyScaled(e,t){t.x=this.scale(e.x),t.y=this.scale(e.y)}getSafeEnvelope(){if(null===this._safeEnv){const e=Vi.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new E(this._originalPt.x-e,this._originalPt.x+e,this._originalPt.y-e,this._originalPt.y+e)}return this._safeEnv}intersectsPixelClosure(e,t){return this._li.computeIntersection(e,t,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(e,t,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(e,t,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(e,t,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))}intersectsToleranceSquare(e,t){let i=!1,n=!1;return this._li.computeIntersection(e,t,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(e,t,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(e,t,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(e,t,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!i||!n)||(!!e.equals(this._pt)||!!t.equals(this._pt))))))}addSnappedNode(e,t){const i=e.getCoordinate(t),n=e.getCoordinate(t+1);return!!this.intersects(i,n)&&(e.addIntersection(this.getCoordinate(),t),!0)}}Vi.SAFE_ENV_EXPANSION_FACTOR=.75;class Yi{constructor(){Yi.constructor_.apply(this,arguments)}static constructor_(){this.selectedSegment=new nt}select(){if(1===arguments.length);else if(2===arguments.length){const e=arguments[1];arguments[0].getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}}}class qi{constructor(){qi.constructor_.apply(this,arguments)}static constructor_(){this._index=null;const e=arguments[0];this._index=e}snap(){if(1===arguments.length){const e=arguments[0];return this.snap(e,null,-1)}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=e.getSafeEnvelope(),r=new ji(e,t,i);return this._index.query(n,new class{get interfaces_(){return[Yt]}visitItem(e){e.select(n,r)}}),r.isNodeAdded()}}}class ji extends Yi{constructor(){super(),ji.constructor_.apply(this,arguments)}static constructor_(){this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;const e=arguments[0],t=arguments[1],i=arguments[2];this._hotPixel=e,this._parentEdge=t,this._hotPixelVertexIndex=i}isNodeAdded(){return this._isNodeAdded}select(){if(!(2===arguments.length&&Number.isInteger(arguments[1])&&arguments[0]instanceof oi))return super.select.apply(this,arguments);{const e=arguments[1],t=arguments[0].getContext();if(this._parentEdge===t&&(e===this._hotPixelVertexIndex||e+1===this._hotPixelVertexIndex))return null;this._isNodeAdded|=this._hotPixel.addSnappedNode(t,e)}}}qi.HotPixelSnapAction=ji;class Ki{constructor(){Ki.constructor_.apply(this,arguments)}static constructor_(){this._li=null,this._interiorIntersections=null;const e=arguments[0];this._li=e,this._interiorIntersections=new V}processIntersections(e,t,i,n){if(e===i&&t===n)return null;const r=e.getCoordinates()[t],o=e.getCoordinates()[t+1],s=i.getCoordinates()[n],a=i.getCoordinates()[n+1];if(this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(let e=0;e<this._li.getIntersectionNum();e++)this._interiorIntersections.add(this._li.getIntersection(e));e.addIntersections(this._li,t,0),i.addIntersections(this._li,n,1)}}isDone(){return!1}getInteriorIntersections(){return this._interiorIntersections}get interfaces_(){return[Di]}}class Xi{constructor(){Xi.constructor_.apply(this,arguments)}static constructor_(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;const e=arguments[0];this._pm=e,this._li=new it,this._li.setPrecisionModel(e),this._scaleFactor=e.getScale()}checkCorrectness(e){const t=ni.getNodedSubstrings(e),i=new Ui(t);try{i.checkValid()}catch(e){if(!(e instanceof c))throw e;e.printStackTrace()}}getNodedSubstrings(){return ni.getNodedSubstrings(this._nodedSegStrings)}snapRound(e,t){const i=this.findInteriorIntersections(e,t);this.computeIntersectionSnaps(i),this.computeVertexSnaps(e)}findInteriorIntersections(e,t){const i=new Ki(t);return this._noder.setSegmentIntersector(i),this._noder.computeNodes(e),i.getInteriorIntersections()}computeVertexSnaps(){if(N(arguments[0],W)){for(let e=arguments[0].iterator();e.hasNext();){const t=e.next();this.computeVertexSnaps(t)}}else if(arguments[0]instanceof ni){const e=arguments[0],t=e.getCoordinates();for(let i=0;i<t.length;i++){const n=new Vi(t[i],this._scaleFactor,this._li);this._pointSnapper.snap(n,e,i)&&e.addIntersection(t[i],i)}}}computeNodes(e){this._nodedSegStrings=e,this._noder=new ci,this._pointSnapper=new qi(this._noder.getIndex()),this.snapRound(e,this._li)}computeIntersectionSnaps(e){for(let t=e.iterator();t.hasNext();){const e=t.next(),i=new Vi(e,this._scaleFactor,this._li);this._pointSnapper.snap(i)}}get interfaces_(){return[ai]}}class Ji{constructor(){Ji.constructor_.apply(this,arguments)}static constructor_(){if(this._argGeom=null,this._distance=null,this._bufParams=new ot,this._resultGeometry=null,this._saveException=null,1===arguments.length){const e=arguments[0];this._argGeom=e}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this._argGeom=e,this._bufParams=t}}static bufferOp(){if(2===arguments.length){const e=arguments[1];return new Ji(arguments[0]).getResultGeometry(e)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof A&&"number"==typeof arguments[1]){const e=arguments[1],t=arguments[2],i=new Ji(arguments[0]);i.setQuadrantSegments(t);return i.getResultGeometry(e)}if(arguments[2]instanceof ot&&arguments[0]instanceof A&&"number"==typeof arguments[1]){const e=arguments[1];return new Ji(arguments[0],arguments[2]).getResultGeometry(e)}}else if(4===arguments.length){const e=arguments[1],t=arguments[2],i=arguments[3],n=new Ji(arguments[0]);n.setQuadrantSegments(t),n.setEndCapStyle(i);return n.getResultGeometry(e)}}static precisionScaleFactor(e,t,i){const n=e.getEnvelopeInternal(),r=_e.max(Math.abs(n.getMaxX()),Math.abs(n.getMaxY()),Math.abs(n.getMinX()),Math.abs(n.getMinY()))+2*(t>0?t:0),o=i-Math.trunc(Math.log(r)/Math.log(10)+1);return Math.pow(10,o)}bufferFixedPrecision(e){const t=new Hi(new Xi(new Ae(1)),e.getScale()),i=new zi(this._bufParams);i.setWorkingPrecisionModel(e),i.setNoder(t),this._resultGeometry=i.buffer(this._argGeom,this._distance)}bufferReducedPrecision(){if(0===arguments.length){for(let e=Ji.MAX_PRECISION_DIGITS;e>=0;e--){try{this.bufferReducedPrecision(e)}catch(e){if(!(e instanceof ut))throw e;this._saveException=e}if(null!==this._resultGeometry)return null}throw this._saveException}if(1===arguments.length){const e=arguments[0],t=Ji.precisionScaleFactor(this._argGeom,this._distance,e),i=new Ae(t);this.bufferFixedPrecision(i)}}computeGeometry(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;const e=this._argGeom.getFactory().getPrecisionModel();e.getType()===Ae.FIXED?this.bufferFixedPrecision(e):this.bufferReducedPrecision()}setQuadrantSegments(e){this._bufParams.setQuadrantSegments(e)}bufferOriginalPrecision(){try{const e=new zi(this._bufParams);this._resultGeometry=e.buffer(this._argGeom,this._distance)}catch(e){if(!(e instanceof b))throw e;this._saveException=e}}getResultGeometry(e){return this._distance=e,this.computeGeometry(),this._resultGeometry}setEndCapStyle(e){this._bufParams.setEndCapStyle(e)}}Ji.CAP_ROUND=ot.CAP_ROUND,Ji.CAP_BUTT=ot.CAP_FLAT,Ji.CAP_FLAT=ot.CAP_FLAT,Ji.CAP_SQUARE=ot.CAP_SQUARE,Ji.MAX_PRECISION_DIGITS=12;class Zi{isInBoundary(e){}}class Qi{isInBoundary(e){return e%2==1}get interfaces_(){return[Zi]}}class $i{isInBoundary(e){return e>0}get interfaces_(){return[Zi]}}class en{isInBoundary(e){return e>1}get interfaces_(){return[Zi]}}class tn{isInBoundary(e){return 1===e}get interfaces_(){return[Zi]}}Zi.Mod2BoundaryNodeRule=Qi,Zi.EndPointBoundaryNodeRule=$i,Zi.MultiValentEndPointBoundaryNodeRule=en,Zi.MonoValentEndPointBoundaryNodeRule=tn,Zi.MOD2_BOUNDARY_RULE=new Qi,Zi.ENDPOINT_BOUNDARY_RULE=new $i,Zi.MULTIVALENT_ENDPOINT_BOUNDARY_RULE=new en,Zi.MONOVALENT_ENDPOINT_BOUNDARY_RULE=new tn,Zi.OGC_SFS_BOUNDARY_RULE=Zi.MOD2_BOUNDARY_RULE;class nn{constructor(){nn.constructor_.apply(this,arguments)}static constructor_(){if(this._boundaryRule=Zi.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){const e=arguments[0];if(null===e)throw new h("Rule must be non-null");this._boundaryRule=e}}locateInPolygonRing(e,t){return t.getEnvelopeInternal().intersects(e)?pt.locateInRing(e,t.getCoordinates()):st.EXTERIOR}intersects(e,t){return this.locate(e,t)!==st.EXTERIOR}updateLocationInfo(e){e===st.INTERIOR&&(this._isIn=!0),e===st.BOUNDARY&&this._numBoundaries++}computeLocation(e,t){if(t instanceof X&&this.updateLocationInfo(this.locateOnPoint(e,t)),t instanceof G)this.updateLocationInfo(this.locateOnLineString(e,t));else if(t instanceof oe)this.updateLocationInfo(this.locateInPolygon(e,t));else if(t instanceof Ne){const i=t;for(let t=0;t<i.getNumGeometries();t++){const n=i.getGeometryN(t);this.updateLocationInfo(this.locateOnLineString(e,n))}}else if(t instanceof Ie){const i=t;for(let t=0;t<i.getNumGeometries();t++){const n=i.getGeometryN(t);this.updateLocationInfo(this.locateInPolygon(e,n))}}else if(t instanceof he){const i=new Ti(t);for(;i.hasNext();){const n=i.next();n!==t&&this.computeLocation(e,n)}}}locateOnPoint(e,t){return t.getCoordinate().equals2D(e)?st.INTERIOR:st.EXTERIOR}locateOnLineString(e,t){if(!t.getEnvelopeInternal().intersects(e))return st.EXTERIOR;const i=t.getCoordinateSequence();return t.isClosed()||!e.equals(i.getCoordinate(0))&&!e.equals(i.getCoordinate(i.size()-1))?pt.isOnLine(e,i)?st.INTERIOR:st.EXTERIOR:st.BOUNDARY}locateInPolygon(e,t){if(t.isEmpty())return st.EXTERIOR;const i=t.getExteriorRing(),n=this.locateInPolygonRing(e,i);if(n===st.EXTERIOR)return st.EXTERIOR;if(n===st.BOUNDARY)return st.BOUNDARY;for(let i=0;i<t.getNumInteriorRing();i++){const n=t.getInteriorRingN(i),r=this.locateInPolygonRing(e,n);if(r===st.INTERIOR)return st.EXTERIOR;if(r===st.BOUNDARY)return st.BOUNDARY}return st.INTERIOR}locate(e,t){return t.isEmpty()?st.EXTERIOR:t instanceof G?this.locateOnLineString(e,t):t instanceof oe?this.locateInPolygon(e,t):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(e,t),this._boundaryRule.isInBoundary(this._numBoundaries)?st.BOUNDARY:this._numBoundaries>0||this._isIn?st.INTERIOR:st.EXTERIOR)}}class rn{constructor(){rn.constructor_.apply(this,arguments)}static constructor_(){this._pts=null,this._data=null;const e=arguments[0],t=arguments[1];this._pts=e,this._data=t}getCoordinates(){return this._pts}size(){return this._pts.length}getCoordinate(e){return this._pts[e]}isClosed(){return this._pts[0].equals(this._pts[this._pts.length-1])}getSegmentOctant(e){return e===this._pts.length-1?-1:ei.octant(this.getCoordinate(e),this.getCoordinate(e+1))}setData(e){this._data=e}getData(){return this._data}toString(){return et.toLineString(new xe(this._pts))}get interfaces_(){return[ti]}}class on{constructor(){on.constructor_.apply(this,arguments)}static constructor_(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._keepIntersections=!0,this._isInteriorIntersectionsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new V,this._intersectionCount=0;const e=arguments[0];this._li=e,this._interiorIntersection=null}static createAllIntersectionsFinder(e){const t=new on(e);return t.setFindAllIntersections(!0),t}static isInteriorVertexIntersection(){if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[3];return(!arguments[2]||!i)&&!!e.equals2D(t)}if(8===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=arguments[4],o=arguments[5],s=arguments[6],a=arguments[7];return!!on.isInteriorVertexIntersection(e,i,r,s)||(!!on.isInteriorVertexIntersection(e,n,r,a)||(!!on.isInteriorVertexIntersection(t,i,o,s)||!!on.isInteriorVertexIntersection(t,n,o,a)))}}static createInteriorIntersectionCounter(e){const t=new on(e);return t.setInteriorIntersectionsOnly(!0),t.setFindAllIntersections(!0),t.setKeepIntersections(!1),t}static createIntersectionCounter(e){const t=new on(e);return t.setFindAllIntersections(!0),t.setKeepIntersections(!1),t}static isEndSegment(e,t){return 0===t||t>=e.size()-2}static createAnyIntersectionFinder(e){return new on(e)}static createInteriorIntersectionsFinder(e){const t=new on(e);return t.setFindAllIntersections(!0),t.setInteriorIntersectionsOnly(!0),t}setCheckEndSegmentsOnly(e){this._isCheckEndSegmentsOnly=e}getIntersectionSegments(){return this._intSegments}count(){return this._intersectionCount}getIntersections(){return this._intersections}setFindAllIntersections(e){this._findAllIntersections=e}setKeepIntersections(e){this._keepIntersections=e}getIntersection(){return this._interiorIntersection}processIntersections(e,t,i,n){if(!this._findAllIntersections&&this.hasIntersection())return null;const r=e===i;if(r&&t===n)return null;if(this._isCheckEndSegmentsOnly){if(!(on.isEndSegment(e,t)||on.isEndSegment(i,n)))return null}const o=e.getCoordinate(t),s=e.getCoordinate(t+1),a=i.getCoordinate(n),l=i.getCoordinate(n+1),c=0===t,h=t+2===e.size(),u=0===n,d=n+2===i.size();this._li.computeIntersection(o,s,a,l);const g=this._li.hasIntersection()&&this._li.isInteriorIntersection();let m=!1;if(!this._isInteriorIntersectionsOnly){m=!(r&&Math.abs(n-t)<=1)&&on.isInteriorVertexIntersection(o,s,a,l,c,h,u,d)}(g||m)&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=o,this._intSegments[1]=s,this._intSegments[2]=a,this._intSegments[3]=l,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)}hasIntersection(){return null!==this._interiorIntersection}isDone(){return!this._findAllIntersections&&null!==this._interiorIntersection}setInteriorIntersectionsOnly(e){this._isInteriorIntersectionsOnly=e}get interfaces_(){return[Di]}}class sn{constructor(){sn.constructor_.apply(this,arguments)}static constructor_(){this._li=new it,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;const e=arguments[0];this._segStrings=e}static computeIntersections(e){const t=new sn(e);return t.setFindAllIntersections(!0),t.isValid(),t.getIntersections()}execute(){if(null!==this._segInt)return null;this.checkInteriorIntersections()}getIntersections(){return this._segInt.getIntersections()}isValid(){return this.execute(),this._isValid}setFindAllIntersections(e){this._findAllIntersections=e}checkInteriorIntersections(){this._isValid=!0,this._segInt=new on(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);const e=new ci;if(e.setSegmentIntersector(this._segInt),e.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null}checkValid(){if(this.execute(),!this._isValid)throw new ut(this.getErrorMessage(),this._segInt.getIntersection())}getErrorMessage(){if(this._isValid)return"no intersections found";const e=this._segInt.getIntersectionSegments();return"found non-noded intersection between "+et.toLineString(e[0],e[1])+" and "+et.toLineString(e[2],e[3])}}class an{constructor(){an.constructor_.apply(this,arguments)}static constructor_(){this._nv=null;const e=arguments[0];this._nv=new sn(an.toSegmentStrings(e))}static toSegmentStrings(e){const t=new V;for(let i=e.iterator();i.hasNext();){const e=i.next();t.add(new rn(e.getCoordinates(),e))}return t}static checkValid(e){new an(e).checkValid()}checkValid(){this._nv.checkValid()}}class ln{constructor(){ln.constructor_.apply(this,arguments)}static constructor_(){this._mapOp=null;const e=arguments[0];this._mapOp=e}static map(e,t){return new ln(t).map(e)}map(e){const t=new V;for(let i=0;i<e.getNumGeometries();i++){const n=this._mapOp.map(e.getGeometryN(i));n.isEmpty()||t.add(n)}return e.getFactory().createGeometryCollection(De.toGeometryArray(t))}}class cn{constructor(){cn.constructor_.apply(this,arguments)}static constructor_(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new V,this._resultLineList=new V;const e=arguments[0],t=arguments[1],i=arguments[2];this._op=e,this._geometryFactory=t,this._ptLocator=i}collectLines(e){for(let t=this._op.getGraph().getEdgeEnds().iterator();t.hasNext();){const i=t.next();this.collectLineEdge(i,e,this._lineEdgesList),this.collectBoundaryTouchEdge(i,e,this._lineEdgesList)}}labelIsolatedLine(e,t){const i=this._ptLocator.locate(e.getCoordinate(),this._op.getArgGeometry(t));e.getLabel().setLocation(t,i)}build(e){return this.findCoveredLineEdges(),this.collectLines(e),this.buildLines(e),this._resultLineList}collectLineEdge(e,t,i){const n=e.getLabel(),r=e.getEdge();e.isLineEdge()&&(e.isVisited()||!On.isResultOfOp(n,t)||r.isCovered()||(i.add(r),e.setVisitedEdge(!0)))}findCoveredLineEdges(){for(let e=this._op.getGraph().getNodes().iterator();e.hasNext();){e.next().getEdges().findCoveredLineEdges()}for(let e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){const t=e.next(),i=t.getEdge();if(t.isLineEdge()&&!i.isCoveredSet()){const e=this._op.isCoveredByA(t.getCoordinate());i.setCovered(e)}}}labelIsolatedLines(e){for(let t=e.iterator();t.hasNext();){const e=t.next(),i=e.getLabel();e.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(e,0):this.labelIsolatedLine(e,1))}}buildLines(e){for(let e=this._lineEdgesList.iterator();e.hasNext();){const t=e.next(),i=this._geometryFactory.createLineString(t.getCoordinates());this._resultLineList.add(i),t.setInResult(!0)}}collectBoundaryTouchEdge(e,t,i){const n=e.getLabel();return e.isLineEdge()||e.isVisited()||e.isInteriorAreaEdge()||e.getEdge().isInResult()?null:(x.isTrue(!(e.isInResult()||e.getSym().isInResult())||!e.getEdge().isInResult()),void(On.isResultOfOp(n,t)&&t===On.INTERSECTION&&(i.add(e.getEdge()),e.setVisitedEdge(!0))))}}class hn{constructor(){hn.constructor_.apply(this,arguments)}static constructor_(){this._op=null,this._geometryFactory=null,this._resultPointList=new V;const e=arguments[0],t=arguments[1];this._op=e,this._geometryFactory=t}filterCoveredNodeToPoint(e){const t=e.getCoordinate();if(!this._op.isCoveredByLA(t)){const e=this._geometryFactory.createPoint(t);this._resultPointList.add(e)}}extractNonCoveredResultNodes(e){for(let t=this._op.getGraph().getNodes().iterator();t.hasNext();){const i=t.next();if(!i.isInResult()&&(!i.isIncidentEdgeInResult()&&(0===i.getEdges().getDegree()||e===On.INTERSECTION))){const t=i.getLabel();On.isResultOfOp(t,e)&&this.filterCoveredNodeToPoint(i)}}}build(e){return this.extractNonCoveredResultNodes(e),this._resultPointList}}class un{constructor(){un.constructor_.apply(this,arguments)}static constructor_(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new nt,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof G&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1];un.constructor_.call(this,e.getCoordinates(),t)}else if(arguments[0]instanceof Array&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1];this._srcPts=e,this._isClosed=un.isClosed(e),this._snapTolerance=t}}static isClosed(e){return!(e.length<=1)&&e[0].equals2D(e[e.length-1])}snapVertices(e,t){const i=this._isClosed?e.size()-1:e.size();for(let n=0;n<i;n++){const i=e.get(n),r=this.findSnapForVertex(i,t);null!==r&&(e.set(n,new v(r)),0===n&&this._isClosed&&e.set(e.size()-1,new v(r)))}}findSnapForVertex(e,t){for(let i=0;i<t.length;i++){if(e.equals2D(t[i]))return null;if(e.distance(t[i])<this._snapTolerance)return t[i]}return null}snapTo(e){const t=new q(this._srcPts);this.snapVertices(t,e),this.snapSegments(t,e);return t.toCoordinateArray()}snapSegments(e,t){if(0===t.length)return null;let i=t.length;t[0].equals2D(t[t.length-1])&&(i=t.length-1);for(let n=0;n<i;n++){const i=t[n],r=this.findSegmentIndexToSnap(i,e);r>=0&&e.add(r+1,new v(i),!1)}}findSegmentIndexToSnap(e,t){let i=_.MAX_VALUE,n=-1;for(let r=0;r<t.size()-1;r++){if(this._seg.p0=t.get(r),this._seg.p1=t.get(r+1),this._seg.p0.equals2D(e)||this._seg.p1.equals2D(e)){if(this._allowSnappingToSourceVertices)continue;return-1}const o=this._seg.distance(e);o<this._snapTolerance&&o<i&&(i=o,n=r)}return n}setAllowSnappingToSourceVertices(e){this._allowSnappingToSourceVertices=e}}class dn{constructor(){dn.constructor_.apply(this,arguments)}static constructor_(){this._srcGeom=null;const e=arguments[0];this._srcGeom=e}static snap(e,t,i){const n=new Array(2).fill(null),r=new dn(e);n[0]=r.snapTo(t,i);const o=new dn(t);return n[1]=o.snapTo(n[0],i),n}static computeOverlaySnapTolerance(){if(1===arguments.length){const e=arguments[0];let t=dn.computeSizeBasedSnapTolerance(e);const i=e.getPrecisionModel();if(i.getType()===Ae.FIXED){const e=1/i.getScale()*2/1.415;e>t&&(t=e)}return t}if(2===arguments.length){const e=arguments[0],t=arguments[1];return Math.min(dn.computeOverlaySnapTolerance(e),dn.computeOverlaySnapTolerance(t))}}static computeSizeBasedSnapTolerance(e){const t=e.getEnvelopeInternal();return Math.min(t.getHeight(),t.getWidth())*dn.SNAP_PRECISION_FACTOR}static snapToSelf(e,t,i){return new dn(e).snapToSelf(t,i)}snapTo(e,t){const i=this.extractTargetCoordinates(e);return new gn(t,i).transform(this._srcGeom)}snapToSelf(e,t){const i=this.extractTargetCoordinates(this._srcGeom),n=new gn(e,i,!0).transform(this._srcGeom);let r=n;return t&&N(r,re)&&(r=n.buffer(0)),r}computeSnapTolerance(e){return this.computeMinimumSegmentLength(e)/10}extractTargetCoordinates(e){const t=new le,i=e.getCoordinates();for(let e=0;e<i.length;e++)t.add(i[e]);return t.toArray(new Array(0).fill(null))}computeMinimumSegmentLength(e){let t=_.MAX_VALUE;for(let i=0;i<e.length-1;i++){const n=e[i].distance(e[i+1]);n<t&&(t=n)}return t}}dn.SNAP_PRECISION_FACTOR=1e-9;class gn extends Re{constructor(){super(),gn.constructor_.apply(this,arguments)}static constructor_(){if(this._snapTolerance=null,this._snapPts=null,this._isSelfSnap=!1,2===arguments.length){const e=arguments[0],t=arguments[1];this._snapTolerance=e,this._snapPts=t}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this._snapTolerance=e,this._snapPts=t,this._isSelfSnap=i}}snapLine(e,t){const i=new un(e,this._snapTolerance);return i.setAllowSnappingToSourceVertices(this._isSelfSnap),i.snapTo(t)}transformCoordinates(e,t){const i=e.toCoordinateArray(),n=this.snapLine(i,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(n)}}class mn{constructor(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=new f,this._commonSignExp=null}getCommon(){return _.longBitsToDouble(this._commonBits)}add(e){const t=_.doubleToLongBits(e);if(this._isFirst)return this._commonBits=t,this._commonSignExp=mn.signExpBits(this._commonBits),this._isFirst=!1,null;if(mn.signExpBits(t)!==this._commonSignExp)return this._commonBits.high=0,this._commonBits.low=0,null;this._commonMantissaBitsCount=mn.numCommonMostSigMantissaBits(this._commonBits,t),this._commonBits=mn.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))}toString(){if(1===arguments.length){const e=arguments[0],t=_.longBitsToDouble(e),i="0000000000000000000000000000000000000000000000000000000000000000"+f.toBinaryString(e),n=i.substring(i.length-64);return n.substring(0,1)+"  "+n.substring(1,12)+"(exp) "+n.substring(12)+" [ "+t+" ]"}}getClass(){return mn}get interfaces_(){return[]}static getBit(e,t){const i=1<<t%32;return t<32?0!=(e.low&i)?1:0:0!=(e.high&i)?1:0}static signExpBits(e){return e.high>>>20}static zeroLowerBits(e,t){let i="low";if(t>32&&(e.low=0,t%=32,i="high"),t>0){const n=t<32?~((1<<t)-1):0;e[i]&=n}return e}static numCommonMostSigMantissaBits(e,t){let i=0;for(let n=52;n>=0;n--){if(mn.getBit(e,n)!==mn.getBit(t,n))return i;i++}return 52}}class pn{constructor(){pn.constructor_.apply(this,arguments)}static constructor_(){this._commonCoord=null,this._ccFilter=new fn}addCommonBits(e){const t=new _n(this._commonCoord);e.apply(t),e.geometryChanged()}removeCommonBits(e){if(0===this._commonCoord.x&&0===this._commonCoord.y)return e;const t=new v(this._commonCoord);t.x=-t.x,t.y=-t.y;const i=new _n(t);return e.apply(i),e.geometryChanged(),e}getCommonCoordinate(){return this._commonCoord}add(e){e.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()}}class fn{constructor(){fn.constructor_.apply(this,arguments)}static constructor_(){this._commonBitsX=new mn,this._commonBitsY=new mn}filter(e){this._commonBitsX.add(e.x),this._commonBitsY.add(e.y)}getCommonCoordinate(){return new v(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())}get interfaces_(){return[M]}}class _n{constructor(){_n.constructor_.apply(this,arguments)}static constructor_(){this.trans=null;const e=arguments[0];this.trans=e}filter(e,t){const i=e.getOrdinate(t,0)+this.trans.x,n=e.getOrdinate(t,1)+this.trans.y;e.setOrdinate(t,0,i),e.setOrdinate(t,1,n)}isDone(){return!1}isGeometryChanged(){return!0}get interfaces_(){return[F]}}pn.CommonCoordinateFilter=fn,pn.Translater=_n;class yn{constructor(){yn.constructor_.apply(this,arguments)}static constructor_(){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null;const e=arguments[0],t=arguments[1];this._geom[0]=e,this._geom[1]=t,this.computeSnapTolerance()}static overlayOp(e,t,i){return new yn(e,t).getResultGeometry(i)}static union(e,t){return yn.overlayOp(e,t,On.UNION)}static intersection(e,t){return yn.overlayOp(e,t,On.INTERSECTION)}static symDifference(e,t){return yn.overlayOp(e,t,On.SYMDIFFERENCE)}static difference(e,t){return yn.overlayOp(e,t,On.DIFFERENCE)}selfSnap(e){return new dn(e).snapTo(e,this._snapTolerance)}removeCommonBits(e){this._cbr=new pn,this._cbr.add(e[0]),this._cbr.add(e[1]);const t=new Array(2).fill(null);return t[0]=this._cbr.removeCommonBits(e[0].copy()),t[1]=this._cbr.removeCommonBits(e[1].copy()),t}prepareResult(e){return this._cbr.addCommonBits(e),e}getResultGeometry(e){const t=this.snap(this._geom),i=On.overlayOp(t[0],t[1],e);return this.prepareResult(i)}checkValid(e){e.isValid()||ye.out.println("Snapped geometry is invalid")}computeSnapTolerance(){this._snapTolerance=dn.computeOverlaySnapTolerance(this._geom[0],this._geom[1])}snap(e){const t=this.removeCommonBits(e);return dn.snap(t[0],t[1],this._snapTolerance)}}class bn{constructor(){bn.constructor_.apply(this,arguments)}static constructor_(){this._geom=new Array(2).fill(null);const e=arguments[0],t=arguments[1];this._geom[0]=e,this._geom[1]=t}static overlayOp(e,t,i){return new bn(e,t).getResultGeometry(i)}static union(e,t){return bn.overlayOp(e,t,On.UNION)}static intersection(e,t){return bn.overlayOp(e,t,On.INTERSECTION)}static symDifference(e,t){return bn.overlayOp(e,t,On.SYMDIFFERENCE)}static difference(e,t){return bn.overlayOp(e,t,On.DIFFERENCE)}getResultGeometry(e){let t=null,i=!1,n=null;try{t=On.overlayOp(this._geom[0],this._geom[1],e);!0&&(i=!0)}catch(e){if(!(e instanceof b))throw e;n=e}if(!i)try{t=yn.overlayOp(this._geom[0],this._geom[1],e)}catch(e){throw e instanceof b?n:e}return t}}class Cn{constructor(){Cn.constructor_.apply(this,arguments)}static constructor_(){this.mce=null,this.chainIndex=null;const e=arguments[0],t=arguments[1];this.mce=e,this.chainIndex=t}computeIntersections(e,t){this.mce.computeIntersectsForChain(this.chainIndex,e.mce,e.chainIndex,t)}}class xn{constructor(){xn.constructor_.apply(this,arguments)}static constructor_(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){const e=arguments[0],t=arguments[1];this._eventType=xn.DELETE,this._xValue=e,this._insertEvent=t}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this._eventType=xn.INSERT,this._label=e,this._xValue=t,this._obj=i}}isDelete(){return this._eventType===xn.DELETE}setDeleteEventIndex(e){this._deleteEventIndex=e}getObject(){return this._obj}compareTo(e){const t=e;return this._xValue<t._xValue?-1:this._xValue>t._xValue?1:this._eventType<t._eventType?-1:this._eventType>t._eventType?1:0}getInsertEvent(){return this._insertEvent}isInsert(){return this._eventType===xn.INSERT}isSameLabel(e){return null!==this._label&&this._label===e._label}getDeleteEventIndex(){return this._deleteEventIndex}get interfaces_(){return[d]}}xn.INSERT=1,xn.DELETE=2;class Sn{constructor(){Sn.constructor_.apply(this,arguments)}static constructor_(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;const e=arguments[0],t=arguments[1],i=arguments[2];this._li=e,this._includeProper=t,this._recordIsolated=i}static isAdjacentSegments(e,t){return 1===Math.abs(e-t)}isTrivialIntersection(e,t,i,n){if(e===i&&1===this._li.getIntersectionNum()){if(Sn.isAdjacentSegments(t,n))return!0;if(e.isClosed()){const i=e.getNumPoints()-1;if(0===t&&n===i||0===n&&t===i)return!0}}return!1}getProperIntersectionPoint(){return this._properIntersectionPoint}setIsDoneIfProperInt(e){this._isDoneWhenProperInt=e}hasProperInteriorIntersection(){return this._hasProperInterior}isBoundaryPointInternal(e,t){for(let i=t.iterator();i.hasNext();){const t=i.next().getCoordinate();if(e.isIntersection(t))return!0}return!1}hasProperIntersection(){return this._hasProper}hasIntersection(){return this._hasIntersection}isDone(){return this._isDone}isBoundaryPoint(e,t){return null!==t&&(!!this.isBoundaryPointInternal(e,t[0])||!!this.isBoundaryPointInternal(e,t[1]))}setBoundaryNodes(e,t){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=e,this._bdyNodes[1]=t}addIntersections(e,t,i,n){if(e===i&&t===n)return null;this.numTests++;const r=e.getCoordinates()[t],o=e.getCoordinates()[t+1],s=i.getCoordinates()[n],a=i.getCoordinates()[n+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(e.setIsolated(!1),i.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(e,t,i,n)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(e.addIntersections(this._li,t,0),i.addIntersections(this._li,n,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))}}class In extends class{}{constructor(){super(),In.constructor_.apply(this,arguments)}static constructor_(){this.events=new V,this.nOverlaps=null}prepareEvents(){Ht.sort(this.events);for(let e=0;e<this.events.size();e++){const t=this.events.get(e);t.isDelete()&&t.getInsertEvent().setDeleteEventIndex(e)}}computeIntersections(){if(1===arguments.length){const e=arguments[0];this.nOverlaps=0,this.prepareEvents();for(let t=0;t<this.events.size();t++){const i=this.events.get(t);if(i.isInsert()&&this.processOverlaps(t,i.getDeleteEventIndex(),i,e),e.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof Sn&&N(arguments[0],H)&&N(arguments[1],H)){const e=arguments[0],t=arguments[1],i=arguments[2];this.addEdges(e,e),this.addEdges(t,t),this.computeIntersections(i)}else if("boolean"==typeof arguments[2]&&N(arguments[0],H)&&arguments[1]instanceof Sn){const e=arguments[0],t=arguments[1];arguments[2]?this.addEdges(e,null):this.addEdges(e),this.computeIntersections(t)}}addEdge(e,t){const i=e.getMonotoneChainEdge(),n=i.getStartIndexes();for(let e=0;e<n.length-1;e++){const n=new Cn(i,e),r=new xn(t,i.getMinX(e),n);this.events.add(r),this.events.add(new xn(i.getMaxX(e),r))}}processOverlaps(e,t,i,n){const r=i.getObject();for(let o=e;o<t;o++){const e=this.events.get(o);if(e.isInsert()){const t=e.getObject();i.isSameLabel(e)||(r.computeIntersections(t,n),this.nOverlaps++)}}}addEdges(){if(1===arguments.length){for(let e=arguments[0].iterator();e.hasNext();){const t=e.next();this.addEdge(t,t)}}else if(2===arguments.length){const e=arguments[1];for(let t=arguments[0].iterator();t.hasNext();){const i=t.next();this.addEdge(i,e)}}}}class Tn{constructor(){Tn.constructor_.apply(this,arguments)}static constructor_(){this._min=_.POSITIVE_INFINITY,this._max=_.NEGATIVE_INFINITY}getMin(){return this._min}intersects(e,t){return!(this._min>t||this._max<e)}getMax(){return this._max}toString(){return et.toLineString(new v(this._min,0),new v(this._max,0))}}Tn.NodeComparator=class{compare(e,t){const i=e,n=t,r=(i._min+i._max)/2,o=(n._min+n._max)/2;return r<o?-1:r>o?1:0}get interfaces_(){return[y]}};class vn extends Tn{constructor(){super(),vn.constructor_.apply(this,arguments)}static constructor_(){this._item=null;const e=arguments[0],t=arguments[1],i=arguments[2];this._min=e,this._max=t,this._item=i}query(e,t,i){if(!this.intersects(e,t))return null;i.visitItem(this._item)}}class wn extends Tn{constructor(){super(),wn.constructor_.apply(this,arguments)}static constructor_(){this._node1=null,this._node2=null;const e=arguments[0],t=arguments[1];this._node1=e,this._node2=t,this.buildExtent(this._node1,this._node2)}buildExtent(e,t){this._min=Math.min(e._min,t._min),this._max=Math.max(e._max,t._max)}query(e,t,i){if(!this.intersects(e,t))return null;null!==this._node1&&this._node1.query(e,t,i),null!==this._node2&&this._node2.query(e,t,i)}}class En{constructor(){En.constructor_.apply(this,arguments)}static constructor_(){this._leaves=new V,this._root=null,this._level=0}buildTree(){Ht.sort(this._leaves,new Tn.NodeComparator);let e=this._leaves,t=null,i=new V;for(;;){if(this.buildLevel(e,i),1===i.size())return i.get(0);t=e,e=i,i=t}}insert(e,t,i){if(null!==this._root)throw new IllegalStateException("Index cannot be added to once it has been queried");this._leaves.add(new vn(e,t,i))}query(e,t,i){if(this.init(),null===this._root)return null;this._root.query(e,t,i)}buildRoot(){if(null!==this._root)return null;this._root=this.buildTree()}printNode(e){ye.out.println(et.toLineString(new v(e._min,this._level),new v(e._max,this._level)))}init(){return null!==this._root||0===this._leaves.size()?null:void this.buildRoot()}buildLevel(e,t){this._level++,t.clear();for(let i=0;i<e.size();i+=2){const n=e.get(i);if(null===(i+1<e.size()?e.get(i):null))t.add(n);else{const n=new wn(e.get(i),e.get(i+1));t.add(n)}}}}class An{constructor(){An.constructor_.apply(this,arguments)}static constructor_(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){const e=arguments[0];this._lines=e}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this._lines=e,this._isForcedToLineString=t}}static getGeometry(){if(1===arguments.length){const e=arguments[0];return e.getFactory().buildGeometry(An.getLines(e))}if(2===arguments.length){const e=arguments[0],t=arguments[1];return e.getFactory().buildGeometry(An.getLines(e,t))}}static getLines(){if(1===arguments.length){const e=arguments[0];return An.getLines(e,!1)}if(2===arguments.length){if(N(arguments[0],W)&&N(arguments[1],W)){const e=arguments[1];for(let t=arguments[0].iterator();t.hasNext();){const i=t.next();An.getLines(i,e)}return e}if(arguments[0]instanceof A&&"boolean"==typeof arguments[1]){const e=arguments[0],t=arguments[1],i=new V;return e.apply(new An(i,t)),i}if(arguments[0]instanceof A&&N(arguments[1],W)){const e=arguments[0],t=arguments[1];return e instanceof G?t.add(e):e.apply(new An(t)),t}}else if(3===arguments.length){if("boolean"==typeof arguments[2]&&N(arguments[0],W)&&N(arguments[1],W)){const e=arguments[1],t=arguments[2];for(let i=arguments[0].iterator();i.hasNext();){const n=i.next();An.getLines(n,e,t)}return e}if("boolean"==typeof arguments[2]&&arguments[0]instanceof A&&N(arguments[1],W)){const e=arguments[1],t=arguments[2];return arguments[0].apply(new An(e,t)),e}}}filter(e){if(this._isForcedToLineString&&e instanceof de){const t=e.getFactory().createLineString(e.getCoordinateSequence());return this._lines.add(t),null}e instanceof G&&this._lines.add(e)}setForceToLineString(e){this._isForcedToLineString=e}get interfaces_(){return[u]}}class Mn{constructor(){Mn.constructor_.apply(this,arguments)}static constructor_(){this._items=new V}visitItem(e){this._items.add(e)}getItems(){return this._items}get interfaces_(){return[Yt]}}class Nn{constructor(){Nn.constructor_.apply(this,arguments)}static constructor_(){this._geom=null,this._index=null;const e=arguments[0];if(!(N(e,re)||e instanceof de))throw new h("Argument must be Polygonal or LinearRing");this._geom=e}locate(e){null===this._index&&(this._index=new Rn(this._geom),this._geom=null);const t=new mt(e),i=new Dn(t);return this._index.query(e.y,e.y,i),t.getLocation()}get interfaces_(){return[Ii]}}class Dn{constructor(){Dn.constructor_.apply(this,arguments)}static constructor_(){this._counter=null;const e=arguments[0];this._counter=e}visitItem(e){const t=e;this._counter.countSegment(t.getCoordinate(0),t.getCoordinate(1))}get interfaces_(){return[Yt]}}class Rn{constructor(){Rn.constructor_.apply(this,arguments)}static constructor_(){this._isEmpty=!1,this._index=new En;const e=arguments[0];e.isEmpty()?this._isEmpty=!0:this.init(e)}init(e){for(let t=An.getLines(e).iterator();t.hasNext();){const e=t.next().getCoordinates();this.addLine(e)}}addLine(e){for(let t=1;t<e.length;t++){const i=new nt(e[t-1],e[t]),n=Math.min(i.p0.y,i.p1.y),r=Math.max(i.p0.y,i.p1.y);this._index.insert(n,r,i)}}query(){if(2===arguments.length){const e=arguments[0],t=arguments[1];if(this._isEmpty)return new V;const i=new Mn;return this._index.query(e,t,i),i.getItems()}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];if(this._isEmpty)return null;this._index.query(e,t,i)}}}Nn.SegmentVisitor=Dn,Nn.IntervalIndexedGeometry=Rn;class Ln extends Ot{constructor(){super(),Ln.constructor_.apply(this,arguments)}static constructor_(){if(this._parentGeom=null,this._lineEdgeMap=new Ee,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new nn,2===arguments.length){const e=arguments[0],t=arguments[1];Ln.constructor_.call(this,e,t,Zi.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];this._argIndex=e,this._parentGeom=t,this._boundaryNodeRule=i,null!==t&&this.add(t)}}static determineBoundary(e,t){return e.isInBoundary(t)?st.BOUNDARY:st.INTERIOR}insertBoundaryPoint(e,t){const i=this._nodes.addNode(t).getLabel();let n=1,r=st.NONE;r=i.getLocation(e,at.ON),r===st.BOUNDARY&&n++;const o=Ln.determineBoundary(this._boundaryNodeRule,n);i.setLocation(e,o)}computeSelfNodes(){if(2===arguments.length){const e=arguments[0],t=arguments[1];return this.computeSelfNodes(e,t,!1)}if(3===arguments.length){const e=arguments[1],t=arguments[2],i=new Sn(arguments[0],!0,!1);i.setIsDoneIfProperInt(t);const n=this.createEdgeSetIntersector(),r=this._parentGeom instanceof de||this._parentGeom instanceof oe||this._parentGeom instanceof Ie,o=e||!r;return n.computeIntersections(this._edges,i,o),this.addSelfIntersectionNodes(this._argIndex),i}}computeSplitEdges(e){for(let t=this._edges.iterator();t.hasNext();){t.next().eiList.addSplitEdges(e)}}computeEdgeIntersections(e,t,i){const n=new Sn(t,i,!0);n.setBoundaryNodes(this.getBoundaryNodes(),e.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,e._edges,n),n}getGeometry(){return this._parentGeom}getBoundaryNodeRule(){return this._boundaryNodeRule}hasTooFewPoints(){return this._hasTooFewPoints}addPoint(){if(arguments[0]instanceof X){const e=arguments[0].getCoordinate();this.insertPoint(this._argIndex,e,st.INTERIOR)}else if(arguments[0]instanceof v){const e=arguments[0];this.insertPoint(this._argIndex,e,st.INTERIOR)}}addPolygon(e){this.addPolygonRing(e.getExteriorRing(),st.EXTERIOR,st.INTERIOR);for(let t=0;t<e.getNumInteriorRing();t++){const i=e.getInteriorRingN(t);this.addPolygonRing(i,st.INTERIOR,st.EXTERIOR)}}addEdge(e){this.insertEdge(e);const t=e.getCoordinates();this.insertPoint(this._argIndex,t[0],st.BOUNDARY),this.insertPoint(this._argIndex,t[t.length-1],st.BOUNDARY)}addLineString(e){const t=be.removeRepeatedPoints(e.getCoordinates());if(t.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=t[0],null;const i=new Wi(t,new _t(this._argIndex,st.INTERIOR));this._lineEdgeMap.put(e,i),this.insertEdge(i),x.isTrue(t.length>=2,"found LineString with single point"),this.insertBoundaryPoint(this._argIndex,t[0]),this.insertBoundaryPoint(this._argIndex,t[t.length-1])}getInvalidPoint(){return this._invalidPoint}getBoundaryPoints(){const e=this.getBoundaryNodes(),t=new Array(e.size()).fill(null);let i=0;for(let n=e.iterator();n.hasNext();){const e=n.next();t[i++]=e.getCoordinate().copy()}return t}getBoundaryNodes(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes}addSelfIntersectionNode(e,t,i){if(this.isBoundaryNode(e,t))return null;i===st.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(e,t):this.insertPoint(e,t,i)}addPolygonRing(e,t,i){if(e.isEmpty())return null;const n=be.removeRepeatedPoints(e.getCoordinates());if(n.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=n[0],null;let r=t,o=i;ne.isCCW(n)&&(r=i,o=t);const s=new Wi(n,new _t(this._argIndex,st.BOUNDARY,r,o));this._lineEdgeMap.put(e,s),this.insertEdge(s),this.insertPoint(this._argIndex,n[0],st.BOUNDARY)}insertPoint(e,t,i){const n=this._nodes.addNode(t),r=n.getLabel();null===r?n._label=new _t(e,i):r.setLocation(e,i)}createEdgeSetIntersector(){return new In}addSelfIntersectionNodes(e){for(let t=this._edges.iterator();t.hasNext();){const i=t.next(),n=i.getLabel().getLocation(e);for(let t=i.eiList.iterator();t.hasNext();){const i=t.next();this.addSelfIntersectionNode(e,i.coord,n)}}}add(){if(!(1===arguments.length&&arguments[0]instanceof A))return super.add.apply(this,arguments);{const e=arguments[0];if(e.isEmpty())return null;if(e instanceof Ie&&(this._useBoundaryDeterminationRule=!1),e instanceof oe)this.addPolygon(e);else if(e instanceof G)this.addLineString(e);else if(e instanceof X)this.addPoint(e);else if(e instanceof ue)this.addCollection(e);else if(e instanceof Ne)this.addCollection(e);else if(e instanceof Ie)this.addCollection(e);else{if(!(e instanceof he))throw new P(e.getGeometryType());this.addCollection(e)}}}addCollection(e){for(let t=0;t<e.getNumGeometries();t++){const i=e.getGeometryN(t);this.add(i)}}locate(e){return N(this._parentGeom,re)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new Nn(this._parentGeom)),this._areaPtLocator.locate(e)):this._ptLocator.locate(e,this._parentGeom)}findEdge(){if(1===arguments.length&&arguments[0]instanceof G){const e=arguments[0];return this._lineEdgeMap.get(e)}return super.findEdge.apply(this,arguments)}}class Pn{constructor(){Pn.constructor_.apply(this,arguments)}static constructor_(){if(this._li=new it,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){const e=arguments[0];this.setComputationPrecision(e.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Ln(0,e)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];Pn.constructor_.call(this,e,t,Zi.OGC_SFS_BOUNDARY_RULE)}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];e.getPrecisionModel().compareTo(t.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Ln(0,e,i),this._arg[1]=new Ln(1,t,i)}}getArgGeometry(e){return this._arg[e].getGeometry()}setComputationPrecision(e){this._resultPrecisionModel=e,this._li.setPrecisionModel(this._resultPrecisionModel)}}class On extends Pn{constructor(){super(),On.constructor_.apply(this,arguments)}static constructor_(){this._ptLocator=new nn,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Ni,this._resultPolyList=new V,this._resultLineList=new V,this._resultPointList=new V;const e=arguments[0],t=arguments[1];Pn.constructor_.call(this,e,t),this._graph=new Ot(new Ai),this._geomFact=e.getFactory()}static overlayOp(e,t,i){return new On(e,t).getResultGeometry(i)}static union(e,t){if(e.isEmpty()||t.isEmpty()){if(e.isEmpty()&&t.isEmpty())return On.createEmptyResult(On.UNION,e,t,e.getFactory());if(e.isEmpty())return t.copy();if(t.isEmpty())return e.copy()}if(e.isGeometryCollection()||t.isGeometryCollection())throw new h("This method does not support GeometryCollection arguments");return bn.overlayOp(e,t,On.UNION)}static intersection(e,t){if(e.isEmpty()||t.isEmpty())return On.createEmptyResult(On.INTERSECTION,e,t,e.getFactory());if(e.isGeometryCollection()){const i=t;return ln.map(e,new class{get interfaces_(){return[MapOp]}map(e){return On.intersection(e,i)}})}return bn.overlayOp(e,t,On.INTERSECTION)}static symDifference(e,t){if(e.isEmpty()||t.isEmpty()){if(e.isEmpty()&&t.isEmpty())return On.createEmptyResult(On.SYMDIFFERENCE,e,t,e.getFactory());if(e.isEmpty())return t.copy();if(t.isEmpty())return e.copy()}if(e.isGeometryCollection()||t.isGeometryCollection())throw new h("This method does not support GeometryCollection arguments");return bn.overlayOp(e,t,On.SYMDIFFERENCE)}static resultDimension(e,t,i){const n=t.getDimension(),r=i.getDimension();let o=-1;switch(e){case On.INTERSECTION:o=Math.min(n,r);break;case On.UNION:o=Math.max(n,r);break;case On.DIFFERENCE:o=n;break;case On.SYMDIFFERENCE:o=Math.max(n,r)}return o}static createEmptyResult(e,t,i,n){const r=On.resultDimension(e,t,i);return n.createEmpty(r)}static difference(e,t){if(e.isEmpty())return On.createEmptyResult(On.DIFFERENCE,e,t,e.getFactory());if(t.isEmpty())return e.copy();if(e.isGeometryCollection()||t.isGeometryCollection())throw new h("This method does not support GeometryCollection arguments");return bn.overlayOp(e,t,On.DIFFERENCE)}static isResultOfOp(){if(2===arguments.length){const e=arguments[0],t=arguments[1],i=e.getLocation(0),n=e.getLocation(1);return On.isResultOfOp(i,n,t)}if(3===arguments.length){let e=arguments[0],t=arguments[1],i=arguments[2];switch(e===st.BOUNDARY&&(e=st.INTERIOR),t===st.BOUNDARY&&(t=st.INTERIOR),i){case On.INTERSECTION:return e===st.INTERIOR&&t===st.INTERIOR;case On.UNION:return e===st.INTERIOR||t===st.INTERIOR;case On.DIFFERENCE:return e===st.INTERIOR&&t!==st.INTERIOR;case On.SYMDIFFERENCE:return e===st.INTERIOR&&t!==st.INTERIOR||e!==st.INTERIOR&&t===st.INTERIOR}return!1}}insertUniqueEdge(e){const t=this._edgeList.findEqualEdge(e);if(null!==t){const i=t.getLabel();let n=e.getLabel();t.isPointwiseEqual(e)||(n=new _t(e.getLabel()),n.flip());const r=t.getDepth();r.isNull()&&r.add(i),r.add(n),i.merge(n)}else this._edgeList.add(e)}getGraph(){return this._graph}cancelDuplicateResultEdges(){for(let e=this._graph.getEdgeEnds().iterator();e.hasNext();){const t=e.next(),i=t.getSym();t.isInResult()&&i.isInResult()&&(t.setInResult(!1),i.setInResult(!1))}}isCoveredByLA(e){return!!this.isCovered(e,this._resultLineList)||!!this.isCovered(e,this._resultPolyList)}computeGeometry(e,t,i,n){const r=new V;return r.addAll(e),r.addAll(t),r.addAll(i),r.isEmpty()?On.createEmptyResult(n,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(r)}mergeSymLabels(){for(let e=this._graph.getNodes().iterator();e.hasNext();){e.next().getEdges().mergeSymLabels()}}isCovered(e,t){for(let i=t.iterator();i.hasNext();){const t=i.next();if(this._ptLocator.locate(e,t)!==st.EXTERIOR)return!0}return!1}replaceCollapsedEdges(){const e=new V;for(let t=this._edgeList.iterator();t.hasNext();){const i=t.next();i.isCollapsed()&&(t.remove(),e.add(i.getCollapsedEdge()))}this._edgeList.addAll(e)}updateNodeLabelling(){for(let e=this._graph.getNodes().iterator();e.hasNext();){const t=e.next(),i=t.getEdges().getLabel();t.getLabel().merge(i)}}getResultGeometry(e){return this.computeOverlay(e),this._resultGeom}insertUniqueEdges(e){for(let t=e.iterator();t.hasNext();){const e=t.next();this.insertUniqueEdge(e)}}computeOverlay(e){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);const t=new V;this._arg[0].computeSplitEdges(t),this._arg[1].computeSplitEdges(t),this.insertUniqueEdges(t),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),an.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(e),this.cancelDuplicateResultEdges();const i=new kt(this._geomFact);i.add(this._graph),this._resultPolyList=i.getPolygons();const n=new cn(this,this._geomFact,this._ptLocator);this._resultLineList=n.build(e);const r=new hn(this,this._geomFact,this._ptLocator);this._resultPointList=r.build(e),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,e)}labelIncompleteNode(e,t){const i=this._ptLocator.locate(e.getCoordinate(),this._arg[t].getGeometry());e.getLabel().setLocation(t,i)}copyPoints(e){for(let t=this._arg[e].getNodeIterator();t.hasNext();){const i=t.next();this._graph.addNode(i.getCoordinate()).setLabel(e,i.getLabel().getLocation(e))}}findResultAreaEdges(e){for(let t=this._graph.getEdgeEnds().iterator();t.hasNext();){const i=t.next(),n=i.getLabel();n.isArea()&&!i.isInteriorAreaEdge()&&On.isResultOfOp(n.getLocation(0,at.RIGHT),n.getLocation(1,at.RIGHT),e)&&i.setInResult(!0)}}computeLabelsFromDepths(){for(let e=this._edgeList.iterator();e.hasNext();){const t=e.next(),i=t.getLabel(),n=t.getDepth();if(!n.isNull()){n.normalize();for(let e=0;e<2;e++)i.isNull(e)||!i.isArea()||n.isNull(e)||(0===n.getDelta(e)?i.toLine(e):(x.isTrue(!n.isNull(e,at.LEFT),"depth of LEFT side has not been initialized"),i.setLocation(e,at.LEFT,n.getLocation(e,at.LEFT)),x.isTrue(!n.isNull(e,at.RIGHT),"depth of RIGHT side has not been initialized"),i.setLocation(e,at.RIGHT,n.getLocation(e,at.RIGHT))))}}}computeLabelling(){for(let e=this._graph.getNodes().iterator();e.hasNext();){e.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()}labelIncompleteNodes(){for(let e=this._graph.getNodes().iterator();e.hasNext();){const t=e.next(),i=t.getLabel();t.isIsolated()&&(i.isNull(0)?this.labelIncompleteNode(t,0):this.labelIncompleteNode(t,1)),t.getEdges().updateLabelling(i)}}isCoveredByA(e){return!!this.isCovered(e,this._resultPolyList)}}On.INTERSECTION=1,On.UNION=2,On.DIFFERENCE=3,On.SYMDIFFERENCE=4;class kn{createEdgeEndForNext(e,t,i,n){const r=i.segmentIndex+1;if(r>=e.getNumPoints()&&null===n)return null;let o=e.getCoordinate(r);null!==n&&n.segmentIndex===i.segmentIndex&&(o=n.coord);const s=new Rt(e,i.coord,o,new _t(e.getLabel()));t.add(s)}createEdgeEndForPrev(e,t,i,n){let r=i.segmentIndex;if(0===i.dist){if(0===r)return null;r--}let o=e.getCoordinate(r);null!==n&&n.segmentIndex>=r&&(o=n.coord);const s=new _t(e.getLabel());s.flip();const a=new Rt(e,i.coord,o,s);t.add(a)}computeEdgeEnds(){if(1===arguments.length){const e=arguments[0],t=new V;for(let i=e;i.hasNext();){const e=i.next();this.computeEdgeEnds(e,t)}return t}if(2===arguments.length){const e=arguments[0],t=arguments[1],i=e.getEdgeIntersectionList();i.addEndpoints();const n=i.iterator();let r=null,o=null;if(!n.hasNext())return null;let s=n.next();do{r=o,o=s,s=null,n.hasNext()&&(s=n.next()),null!==o&&(this.createEdgeEndForPrev(e,t,o,r),this.createEdgeEndForNext(e,t,o,s))}while(null!==o)}}}class Bn extends Rt{constructor(){super(),Bn.constructor_.apply(this,arguments)}static constructor_(){if(this._edgeEnds=new V,1===arguments.length){const e=arguments[0];Bn.constructor_.call(this,null,e)}else if(2===arguments.length){const e=arguments[1];Rt.constructor_.call(this,e.getEdge(),e.getCoordinate(),e.getDirectedCoordinate(),new _t(e.getLabel())),this.insert(e)}}insert(e){this._edgeEnds.add(e)}print(e){e.println("EdgeEndBundle--\x3e Label: "+this._label);for(let t=this.iterator();t.hasNext();){t.next().print(e),e.println()}}iterator(){return this._edgeEnds.iterator()}getEdgeEnds(){return this._edgeEnds}computeLabelOn(e,t){let i=0,n=!1;for(let t=this.iterator();t.hasNext();){const r=t.next().getLabel().getLocation(e);r===st.BOUNDARY&&i++,r===st.INTERIOR&&(n=!0)}let r=st.NONE;n&&(r=st.INTERIOR),i>0&&(r=Ln.determineBoundary(t,i)),this._label.setLocation(e,r)}computeLabelSide(e,t){for(let i=this.iterator();i.hasNext();){const n=i.next();if(n.getLabel().isArea()){const i=n.getLabel().getLocation(e,t);if(i===st.INTERIOR)return this._label.setLocation(e,t,st.INTERIOR),null;i===st.EXTERIOR&&this._label.setLocation(e,t,st.EXTERIOR)}}}getLabel(){return this._label}computeLabelSides(e){this.computeLabelSide(e,at.LEFT),this.computeLabelSide(e,at.RIGHT)}updateIM(e){Wi.updateIM(this._label,e)}computeLabel(e){let t=!1;for(let e=this.iterator();e.hasNext();){e.next().getLabel().isArea()&&(t=!0)}this._label=t?new _t(st.NONE,st.NONE,st.NONE):new _t(st.NONE);for(let i=0;i<2;i++)this.computeLabelOn(i,e),t&&this.computeLabelSides(i)}}class Fn extends wi{constructor(){super()}updateIM(e){for(let t=this.iterator();t.hasNext();){t.next().updateIM(e)}}insert(e){let t=this._edgeMap.get(e);null===t?(t=new Bn(e),this.insertEdgeEnd(e,t)):t.insert(e)}}class Gn extends St{constructor(){super(),Gn.constructor_.apply(this,arguments)}static constructor_(){const e=arguments[0],t=arguments[1];St.constructor_.call(this,e,t)}updateIMFromEdges(e){this._edges.updateIM(e)}computeIM(e){e.setAtLeastIfValid(this._label.getLocation(0),this._label.getLocation(1),0)}}class Wn extends Pt{constructor(){super()}createNode(e){return new Gn(e,new Fn)}}class zn{constructor(){zn.constructor_.apply(this,arguments)}static constructor_(){this._li=new it,this._ptLocator=new nn,this._arg=null,this._nodes=new Nt(new Wn),this._im=null,this._isolatedEdges=new V,this._invalidPoint=null;const e=arguments[0];this._arg=e}insertEdgeEnds(e){for(let t=e.iterator();t.hasNext();){const e=t.next();this._nodes.add(e)}}computeProperIntersectionIM(e,t){const i=this._arg[0].getGeometry().getDimension(),n=this._arg[1].getGeometry().getDimension(),r=e.hasProperIntersection(),o=e.hasProperInteriorIntersection();2===i&&2===n?r&&t.setAtLeast("212101212"):2===i&&1===n?(r&&t.setAtLeast("FFF0FFFF2"),o&&t.setAtLeast("1FFFFF1FF")):1===i&&2===n?(r&&t.setAtLeast("F0FFFFFF2"),o&&t.setAtLeast("1F1FFFFFF")):1===i&&1===n&&o&&t.setAtLeast("0FFFFFFFF")}labelIsolatedEdges(e,t){for(let i=this._arg[e].getEdgeIterator();i.hasNext();){const e=i.next();e.isIsolated()&&(this.labelIsolatedEdge(e,t,this._arg[t].getGeometry()),this._isolatedEdges.add(e))}}labelIsolatedEdge(e,t,i){if(i.getDimension()>0){const n=this._ptLocator.locate(e.getCoordinate(),i);e.getLabel().setAllLocations(t,n)}else e.getLabel().setAllLocations(t,st.EXTERIOR)}computeIM(){const e=new Oi;if(e.set(st.EXTERIOR,st.EXTERIOR,2),!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal()))return this.computeDisjointIM(e),e;this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1);const t=this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!1);this.computeIntersectionNodes(0),this.computeIntersectionNodes(1),this.copyNodesAndLabels(0),this.copyNodesAndLabels(1),this.labelIsolatedNodes(),this.computeProperIntersectionIM(t,e);const i=new kn,n=i.computeEdgeEnds(this._arg[0].getEdgeIterator());this.insertEdgeEnds(n);const r=i.computeEdgeEnds(this._arg[1].getEdgeIterator());return this.insertEdgeEnds(r),this.labelNodeEdges(),this.labelIsolatedEdges(0,1),this.labelIsolatedEdges(1,0),this.updateIM(e),e}labelNodeEdges(){for(let e=this._nodes.iterator();e.hasNext();){e.next().getEdges().computeLabelling(this._arg)}}copyNodesAndLabels(e){for(let t=this._arg[e].getNodeIterator();t.hasNext();){const i=t.next();this._nodes.addNode(i.getCoordinate()).setLabel(e,i.getLabel().getLocation(e))}}labelIntersectionNodes(e){for(let t=this._arg[e].getEdgeIterator();t.hasNext();){const i=t.next(),n=i.getLabel().getLocation(e);for(let t=i.getEdgeIntersectionList().iterator();t.hasNext();){const i=t.next(),r=this._nodes.find(i.coord);r.getLabel().isNull(e)&&(n===st.BOUNDARY?r.setLabelBoundary(e):r.setLabel(e,st.INTERIOR))}}}labelIsolatedNode(e,t){const i=this._ptLocator.locate(e.getCoordinate(),this._arg[t].getGeometry());e.getLabel().setAllLocations(t,i)}computeIntersectionNodes(e){for(let t=this._arg[e].getEdgeIterator();t.hasNext();){const i=t.next(),n=i.getLabel().getLocation(e);for(let t=i.getEdgeIntersectionList().iterator();t.hasNext();){const i=t.next(),r=this._nodes.addNode(i.coord);n===st.BOUNDARY?r.setLabelBoundary(e):r.getLabel().isNull(e)&&r.setLabel(e,st.INTERIOR)}}}labelIsolatedNodes(){for(let e=this._nodes.iterator();e.hasNext();){const t=e.next(),i=t.getLabel();x.isTrue(i.getGeometryCount()>0,"node with empty label found"),t.isIsolated()&&(i.isNull(0)?this.labelIsolatedNode(t,0):this.labelIsolatedNode(t,1))}}updateIM(e){for(let t=this._isolatedEdges.iterator();t.hasNext();){t.next().updateIM(e)}for(let t=this._nodes.iterator();t.hasNext();){const i=t.next();i.updateIM(e),i.updateIMFromEdges(e)}}computeDisjointIM(e){const t=this._arg[0].getGeometry();t.isEmpty()||(e.set(st.INTERIOR,st.EXTERIOR,t.getDimension()),e.set(st.BOUNDARY,st.EXTERIOR,t.getBoundaryDimension()));const i=this._arg[1].getGeometry();i.isEmpty()||(e.set(st.EXTERIOR,st.INTERIOR,i.getDimension()),e.set(st.EXTERIOR,st.BOUNDARY,i.getBoundaryDimension()))}}class Hn{constructor(){Hn.constructor_.apply(this,arguments)}static constructor_(){this._rectEnv=null;const e=arguments[0];this._rectEnv=e.getEnvelopeInternal()}static contains(e,t){return new Hn(e).contains(t)}isContainedInBoundary(e){if(e instanceof oe)return!1;if(e instanceof X)return this.isPointContainedInBoundary(e);if(e instanceof G)return this.isLineStringContainedInBoundary(e);for(let t=0;t<e.getNumGeometries();t++){const i=e.getGeometryN(t);if(!this.isContainedInBoundary(i))return!1}return!0}isLineSegmentContainedInBoundary(e,t){if(e.equals(t))return this.isPointContainedInBoundary(e);if(e.x===t.x){if(e.x===this._rectEnv.getMinX()||e.x===this._rectEnv.getMaxX())return!0}else if(e.y===t.y&&(e.y===this._rectEnv.getMinY()||e.y===this._rectEnv.getMaxY()))return!0;return!1}isLineStringContainedInBoundary(e){const t=e.getCoordinateSequence(),i=new v,n=new v;for(let e=0;e<t.size()-1;e++)if(t.getCoordinate(e,i),t.getCoordinate(e+1,n),!this.isLineSegmentContainedInBoundary(i,n))return!1;return!0}isPointContainedInBoundary(){if(arguments[0]instanceof X){const e=arguments[0];return this.isPointContainedInBoundary(e.getCoordinate())}if(arguments[0]instanceof v){const e=arguments[0];return e.x===this._rectEnv.getMinX()||e.x===this._rectEnv.getMaxX()||e.y===this._rectEnv.getMinY()||e.y===this._rectEnv.getMaxY()}}contains(e){return!!this._rectEnv.contains(e.getEnvelopeInternal())&&!this.isContainedInBoundary(e)}}class Un{constructor(){Un.constructor_.apply(this,arguments)}static constructor_(){this._li=new it,this._rectEnv=null,this._diagUp0=null,this._diagUp1=null,this._diagDown0=null,this._diagDown1=null;const e=arguments[0];this._rectEnv=e,this._diagUp0=new v(e.getMinX(),e.getMinY()),this._diagUp1=new v(e.getMaxX(),e.getMaxY()),this._diagDown0=new v(e.getMinX(),e.getMaxY()),this._diagDown1=new v(e.getMaxX(),e.getMinY())}intersects(e,t){const i=new E(e,t);if(!this._rectEnv.intersects(i))return!1;if(this._rectEnv.intersects(e))return!0;if(this._rectEnv.intersects(t))return!0;if(e.compareTo(t)>0){const i=e;e=t,t=i}let n=!1;return t.y>e.y&&(n=!0),n?this._li.computeIntersection(e,t,this._diagDown0,this._diagDown1):this._li.computeIntersection(e,t,this._diagUp0,this._diagUp1),!!this._li.hasIntersection()}}class Vn{constructor(){Vn.constructor_.apply(this,arguments)}static constructor_(){this._isDone=!1}applyTo(e){for(let t=0;t<e.getNumGeometries()&&!this._isDone;t++){const i=e.getGeometryN(t);if(i instanceof he)this.applyTo(i);else if(this.visit(i),this.isDone())return this._isDone=!0,null}}}class Yn{constructor(){Yn.constructor_.apply(this,arguments)}static constructor_(){this._rectangle=null,this._rectEnv=null;const e=arguments[0];this._rectangle=e,this._rectEnv=e.getEnvelopeInternal()}static intersects(e,t){return new Yn(e).intersects(t)}intersects(e){if(!this._rectEnv.intersects(e.getEnvelopeInternal()))return!1;const t=new qn(this._rectEnv);if(t.applyTo(e),t.intersects())return!0;const i=new jn(this._rectangle);if(i.applyTo(e),i.containsPoint())return!0;const n=new Kn(this._rectangle);return n.applyTo(e),!!n.intersects()}}class qn extends Vn{constructor(){super(),qn.constructor_.apply(this,arguments)}static constructor_(){this._rectEnv=null,this._intersects=!1;const e=arguments[0];this._rectEnv=e}isDone(){return!0===this._intersects}visit(e){const t=e.getEnvelopeInternal();return this._rectEnv.intersects(t)?this._rectEnv.contains(t)||t.getMinX()>=this._rectEnv.getMinX()&&t.getMaxX()<=this._rectEnv.getMaxX()||t.getMinY()>=this._rectEnv.getMinY()&&t.getMaxY()<=this._rectEnv.getMaxY()?(this._intersects=!0,null):void 0:null}intersects(){return this._intersects}}class jn extends Vn{constructor(){super(),jn.constructor_.apply(this,arguments)}static constructor_(){this._rectSeq=null,this._rectEnv=null,this._containsPoint=!1;const e=arguments[0];this._rectSeq=e.getExteriorRing().getCoordinateSequence(),this._rectEnv=e.getEnvelopeInternal()}isDone(){return!0===this._containsPoint}visit(e){if(!(e instanceof oe))return null;const t=e.getEnvelopeInternal();if(!this._rectEnv.intersects(t))return null;const i=new v;for(let n=0;n<4;n++)if(this._rectSeq.getCoordinate(n,i),t.contains(i)&&vi.containsPointInPolygon(i,e))return this._containsPoint=!0,null}containsPoint(){return this._containsPoint}}class Kn extends Vn{constructor(){super(),Kn.constructor_.apply(this,arguments)}static constructor_(){this._rectEnv=null,this._rectIntersector=null,this._hasIntersection=!1,this._p0=new v,this._p1=new v;const e=arguments[0];this._rectEnv=e.getEnvelopeInternal(),this._rectIntersector=new Un(this._rectEnv)}intersects(){return this._hasIntersection}isDone(){return!0===this._hasIntersection}visit(e){const t=e.getEnvelopeInternal();if(!this._rectEnv.intersects(t))return null;const i=An.getLines(e);this.checkIntersectionWithLineStrings(i)}checkIntersectionWithLineStrings(e){for(let t=e.iterator();t.hasNext();){const e=t.next();if(this.checkIntersectionWithSegments(e),this._hasIntersection)return null}}checkIntersectionWithSegments(e){const t=e.getCoordinateSequence();for(let e=1;e<t.size();e++)if(t.getCoordinate(e-1,this._p0),t.getCoordinate(e,this._p1),this._rectIntersector.intersects(this._p0,this._p1))return this._hasIntersection=!0,null}}class Xn extends Pn{constructor(){super(),Xn.constructor_.apply(this,arguments)}static constructor_(){if(this._relate=null,2===arguments.length){const e=arguments[0],t=arguments[1];Pn.constructor_.call(this,e,t),this._relate=new zn(this._arg)}else if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];Pn.constructor_.call(this,e,t,i),this._relate=new zn(this._arg)}}static covers(e,t){return!(2===t.getDimension()&&e.getDimension()<2)&&(!(1===t.getDimension()&&e.getDimension()<1&&t.getLength()>0)&&(!!e.getEnvelopeInternal().covers(t.getEnvelopeInternal())&&(!!e.isRectangle()||new Xn(e,t).getIntersectionMatrix().isCovers())))}static intersects(e,t){if(!e.getEnvelopeInternal().intersects(t.getEnvelopeInternal()))return!1;if(e.isRectangle())return Yn.intersects(e,t);if(t.isRectangle())return Yn.intersects(t,e);if(e.isGeometryCollection()||t.isGeometryCollection()){for(let i=0;i<e.getNumGeometries();i++)for(let n=0;n<t.getNumGeometries();n++)if(e.getGeometryN(i).intersects(t.getGeometryN(n)))return!0;return!1}return new Xn(e,t).getIntersectionMatrix().isIntersects()}static touches(e,t){return!!e.getEnvelopeInternal().intersects(t.getEnvelopeInternal())&&new Xn(e,t).getIntersectionMatrix().isTouches(e.getDimension(),t.getDimension())}static equalsTopo(e,t){return!!e.getEnvelopeInternal().equals(t.getEnvelopeInternal())&&Xn.relate(e,t).isEquals(e.getDimension(),t.getDimension())}static relate(){if(2===arguments.length){return new Xn(arguments[0],arguments[1]).getIntersectionMatrix()}if(3===arguments.length){return new Xn(arguments[0],arguments[1],arguments[2]).getIntersectionMatrix()}}static overlaps(e,t){return!!e.getEnvelopeInternal().intersects(t.getEnvelopeInternal())&&new Xn(e,t).getIntersectionMatrix().isOverlaps(e.getDimension(),t.getDimension())}static crosses(e,t){return!!e.getEnvelopeInternal().intersects(t.getEnvelopeInternal())&&new Xn(e,t).getIntersectionMatrix().isCrosses(e.getDimension(),t.getDimension())}static contains(e,t){return!(2===t.getDimension()&&e.getDimension()<2)&&(!(1===t.getDimension()&&e.getDimension()<1&&t.getLength()>0)&&(!!e.getEnvelopeInternal().contains(t.getEnvelopeInternal())&&(e.isRectangle()?Hn.contains(e,t):new Xn(e,t).getIntersectionMatrix().isContains())))}getIntersectionMatrix(){return this._relate.computeIM()}}class Jn{get interfaces_(){return[]}getClass(){return Jn}static union(e,t){if(e.isEmpty()||t.isEmpty()){if(e.isEmpty()&&t.isEmpty())return On.createEmptyResult(On.UNION,e,t,e.getFactory());if(e.isEmpty())return t.copy();if(t.isEmpty())return e.copy()}return e.checkNotGeometryCollection(e),e.checkNotGeometryCollection(t),bn.overlayOp(e,t,On.UNION)}}class Zn{constructor(){Zn.constructor_.apply(this,arguments)}static constructor_(){this._geometryFactory=new De,this._geomGraph=null,this._disconnectedRingcoord=null;const e=arguments[0];this._geomGraph=e}static findDifferentPoint(e,t){for(let i=0;i<e.length;i++)if(!e[i].equals(t))return e[i];return null}visitInteriorRing(e,t){if(e.isEmpty())return null;const i=e.getCoordinates(),n=i[0],r=Zn.findDifferentPoint(i,n),o=t.findEdgeInSameDirection(n,r),s=t.findEdgeEnd(o);let a=null;s.getLabel().getLocation(0,at.RIGHT)===st.INTERIOR?a=s:s.getSym().getLabel().getLocation(0,at.RIGHT)===st.INTERIOR&&(a=s.getSym()),x.isTrue(null!==a,"unable to find dirEdge with Interior on RHS"),this.visitLinkedDirectedEdges(a)}visitShellInteriors(e,t){if(e instanceof oe){const i=e;this.visitInteriorRing(i.getExteriorRing(),t)}if(e instanceof Ie){const i=e;for(let e=0;e<i.getNumGeometries();e++){const n=i.getGeometryN(e);this.visitInteriorRing(n.getExteriorRing(),t)}}}getCoordinate(){return this._disconnectedRingcoord}setInteriorEdgesInResult(e){for(let t=e.getEdgeEnds().iterator();t.hasNext();){const e=t.next();e.getLabel().getLocation(0,at.RIGHT)===st.INTERIOR&&e.setInResult(!0)}}visitLinkedDirectedEdges(e){const t=e;let i=e;do{x.isTrue(null!==i,"found null Directed Edge"),i.setVisited(!0),i=i.getNext()}while(i!==t)}buildEdgeRings(e){const t=new V;for(let i=e.iterator();i.hasNext();){const e=i.next();if(e.isInResult()&&null===e.getEdgeRing()){const i=new Ct(e,this._geometryFactory);i.linkDirectedEdgesForMinimalEdgeRings();const n=i.buildMinimalRings();t.addAll(n)}}return t}hasUnvisitedShellEdge(e){for(let t=0;t<e.size();t++){const i=e.get(t);if(i.isHole())continue;const n=i.getEdges();let r=n.get(0);if(r.getLabel().getLocation(0,at.RIGHT)===st.INTERIOR)for(let e=0;e<n.size();e++)if(r=n.get(e),!r.isVisited())return this._disconnectedRingcoord=r.getCoordinate(),!0}return!1}isInteriorsConnected(){const e=new V;this._geomGraph.computeSplitEdges(e);const t=new Ot(new Ai);t.addEdges(e),this.setInteriorEdgesInResult(t),t.linkResultDirectedEdges();const i=this.buildEdgeRings(t.getEdgeEnds());return this.visitShellInteriors(this._geomGraph.getGeometry(),t),!this.hasUnvisitedShellEdge(i)}}class Qn{constructor(){Qn.constructor_.apply(this,arguments)}static constructor_(){this._nodes=new Nt(new Wn)}insertEdgeEnds(e){for(let t=e.iterator();t.hasNext();){const e=t.next();this._nodes.add(e)}}getNodeIterator(){return this._nodes.iterator()}copyNodesAndLabels(e,t){for(let i=e.getNodeIterator();i.hasNext();){const e=i.next();this._nodes.addNode(e.getCoordinate()).setLabel(t,e.getLabel().getLocation(t))}}build(e){this.computeIntersectionNodes(e,0),this.copyNodesAndLabels(e,0);const t=(new kn).computeEdgeEnds(e.getEdgeIterator());this.insertEdgeEnds(t)}computeIntersectionNodes(e,t){for(let i=e.getEdgeIterator();i.hasNext();){const e=i.next(),n=e.getLabel().getLocation(t);for(let i=e.getEdgeIntersectionList().iterator();i.hasNext();){const e=i.next(),r=this._nodes.addNode(e.coord);n===st.BOUNDARY?r.setLabelBoundary(t):r.getLabel().isNull(t)&&r.setLabel(t,st.INTERIOR)}}}}class $n{constructor(){$n.constructor_.apply(this,arguments)}static constructor_(){this._li=new it,this._geomGraph=null,this._nodeGraph=new Qn,this._invalidPoint=null;const e=arguments[0];this._geomGraph=e}isNodeEdgeAreaLabelsConsistent(){for(let e=this._nodeGraph.getNodeIterator();e.hasNext();){const t=e.next();if(!t.getEdges().isAreaLabelsConsistent(this._geomGraph))return this._invalidPoint=t.getCoordinate().copy(),!1}return!0}getInvalidPoint(){return this._invalidPoint}hasDuplicateRings(){for(let e=this._nodeGraph.getNodeIterator();e.hasNext();){for(let t=e.next().getEdges().iterator();t.hasNext();){const e=t.next();if(e.getEdgeEnds().size()>1)return this._invalidPoint=e.getEdge().getCoordinate(0),!0}}return!1}isNodeConsistentArea(){const e=this._geomGraph.computeSelfNodes(this._li,!0,!0);return e.hasProperIntersection()?(this._invalidPoint=e.getProperIntersectionPoint(),!1):(this._nodeGraph.build(this._geomGraph),this.isNodeEdgeAreaLabelsConsistent())}}class er{constructor(){er.constructor_.apply(this,arguments)}static constructor_(){this._graph=null,this._rings=new V,this._totalEnv=new E,this._index=null,this._nestedPt=null;const e=arguments[0];this._graph=e}buildIndex(){this._index=new Kt;for(let e=0;e<this._rings.size();e++){const t=this._rings.get(e),i=t.getEnvelopeInternal();this._index.insert(i,t)}}getNestedPoint(){return this._nestedPt}isNonNested(){this.buildIndex();for(let e=0;e<this._rings.size();e++){const t=this._rings.get(e),i=t.getCoordinates(),n=this._index.query(t.getEnvelopeInternal());for(let e=0;e<n.size();e++){const r=n.get(e),o=r.getCoordinates();if(t===r)continue;if(!t.getEnvelopeInternal().intersects(r.getEnvelopeInternal()))continue;const s=ir.findPtNotNode(i,r,this._graph);if(null===s)continue;if(pt.isInRing(s,o))return this._nestedPt=s,!1}}return!0}add(e){this._rings.add(e),this._totalEnv.expandToInclude(e.getEnvelopeInternal())}}class tr{constructor(){tr.constructor_.apply(this,arguments)}static constructor_(){if(this._errorType=null,this._pt=null,1===arguments.length){const e=arguments[0];tr.constructor_.call(this,e,null)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this._errorType=e,null!==t&&(this._pt=t.copy())}}getErrorType(){return this._errorType}getMessage(){return tr.errMsg[this._errorType]}getCoordinate(){return this._pt}toString(){let e="";return null!==this._pt&&(e=" at or near point "+this._pt),this.getMessage()+e}}tr.ERROR=0,tr.REPEATED_POINT=1,tr.HOLE_OUTSIDE_SHELL=2,tr.NESTED_HOLES=3,tr.DISCONNECTED_INTERIOR=4,tr.SELF_INTERSECTION=5,tr.RING_SELF_INTERSECTION=6,tr.NESTED_SHELLS=7,tr.DUPLICATE_RINGS=8,tr.TOO_FEW_POINTS=9,tr.INVALID_COORDINATE=10,tr.RING_NOT_CLOSED=11,tr.errMsg=["Topology Validation Error","Repeated Point","Hole lies outside shell","Holes are nested","Interior is disconnected","Self-intersection","Ring Self-intersection","Nested shells","Duplicate Rings","Too few distinct points in geometry component","Invalid Coordinate","Ring is not closed"];class ir{constructor(){ir.constructor_.apply(this,arguments)}static constructor_(){this._parentGeometry=null,this._isSelfTouchingRingFormingHoleValid=!1,this._validErr=null;const e=arguments[0];this._parentGeometry=e}static findPtNotNode(e,t,i){const n=i.findEdge(t).getEdgeIntersectionList();for(let t=0;t<e.length;t++){const i=e[t];if(!n.isIntersection(i))return i}return null}static isValid(){if(arguments[0]instanceof A){return new ir(arguments[0]).isValid()}if(arguments[0]instanceof v){const e=arguments[0];return!_.isNaN(e.x)&&(!_.isInfinite(e.x)&&(!_.isNaN(e.y)&&!_.isInfinite(e.y)))}}checkInvalidCoordinates(){if(arguments[0]instanceof Array){const e=arguments[0];for(let t=0;t<e.length;t++)if(!ir.isValid(e[t]))return this._validErr=new tr(tr.INVALID_COORDINATE,e[t]),null}else if(arguments[0]instanceof oe){const e=arguments[0];if(this.checkInvalidCoordinates(e.getExteriorRing().getCoordinates()),null!==this._validErr)return null;for(let t=0;t<e.getNumInteriorRing();t++)if(this.checkInvalidCoordinates(e.getInteriorRingN(t).getCoordinates()),null!==this._validErr)return null}}checkHolesNotNested(e,t){if(e.getNumInteriorRing()<=0)return null;const i=new er(t);for(let t=0;t<e.getNumInteriorRing();t++){const n=e.getInteriorRingN(t);n.isEmpty()||i.add(n)}i.isNonNested()||(this._validErr=new tr(tr.NESTED_HOLES,i.getNestedPoint()))}checkConsistentArea(e){const t=new $n(e);if(!t.isNodeConsistentArea())return this._validErr=new tr(tr.SELF_INTERSECTION,t.getInvalidPoint()),null;t.hasDuplicateRings()&&(this._validErr=new tr(tr.DUPLICATE_RINGS,t.getInvalidPoint()))}isValid(){return this.checkValid(this._parentGeometry),null===this._validErr}checkShellInsideHole(e,t,i){const n=e.getCoordinates(),r=t.getCoordinates(),o=ir.findPtNotNode(n,t,i);if(null!==o){if(!pt.isInRing(o,r))return o}const s=ir.findPtNotNode(r,e,i);if(null!==s){return pt.isInRing(s,n)?s:null}return x.shouldNeverReachHere("points in shell and hole appear to be equal"),null}checkNoSelfIntersectingRings(e){for(let t=e.getEdgeIterator();t.hasNext();){const e=t.next();if(this.checkNoSelfIntersectingRing(e.getEdgeIntersectionList()),null!==this._validErr)return null}}checkConnectedInteriors(e){const t=new Zn(e);t.isInteriorsConnected()||(this._validErr=new tr(tr.DISCONNECTED_INTERIOR,t.getCoordinate()))}checkNoSelfIntersectingRing(e){const t=new le;let i=!0;for(let n=e.iterator();n.hasNext();){const e=n.next();if(i)i=!1;else{if(t.contains(e.coord))return this._validErr=new tr(tr.RING_SELF_INTERSECTION,e.coord),null;t.add(e.coord)}}}checkHolesInShell(e,t){if(e.getNumInteriorRing()<=0)return null;const i=e.getExteriorRing(),n=i.isEmpty(),r=new Nn(i);for(let o=0;o<e.getNumInteriorRing();o++){const s=e.getInteriorRingN(o);let a=null;if(s.isEmpty())continue;if(a=ir.findPtNotNode(s.getCoordinates(),i,t),null===a)return null;if(n||st.EXTERIOR===r.locate(a))return this._validErr=new tr(tr.HOLE_OUTSIDE_SHELL,a),null}}checkTooFewPoints(e){if(e.hasTooFewPoints())return this._validErr=new tr(tr.TOO_FEW_POINTS,e.getInvalidPoint()),null}getValidationError(){return this.checkValid(this._parentGeometry),this._validErr}checkValid(){if(arguments[0]instanceof X){const e=arguments[0];this.checkInvalidCoordinates(e.getCoordinates())}else if(arguments[0]instanceof ue){const e=arguments[0];this.checkInvalidCoordinates(e.getCoordinates())}else if(arguments[0]instanceof de){const e=arguments[0];if(this.checkInvalidCoordinates(e.getCoordinates()),null!==this._validErr)return null;if(this.checkClosedRing(e),null!==this._validErr)return null;const t=new Ln(0,e);if(this.checkTooFewPoints(t),null!==this._validErr)return null;const i=new it;t.computeSelfNodes(i,!0,!0),this.checkNoSelfIntersectingRings(t)}else if(arguments[0]instanceof G){const e=arguments[0];if(this.checkInvalidCoordinates(e.getCoordinates()),null!==this._validErr)return null;const t=new Ln(0,e);this.checkTooFewPoints(t)}else if(arguments[0]instanceof oe){const e=arguments[0];if(this.checkInvalidCoordinates(e),null!==this._validErr)return null;if(this.checkClosedRings(e),null!==this._validErr)return null;const t=new Ln(0,e);if(this.checkTooFewPoints(t),null!==this._validErr)return null;if(this.checkConsistentArea(t),null!==this._validErr)return null;if(!this._isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(t),null!==this._validErr))return null;if(this.checkHolesInShell(e,t),null!==this._validErr)return null;if(this.checkHolesNotNested(e,t),null!==this._validErr)return null;this.checkConnectedInteriors(t)}else if(arguments[0]instanceof Ie){const e=arguments[0];for(let t=0;t<e.getNumGeometries();t++){const i=e.getGeometryN(t);if(this.checkInvalidCoordinates(i),null!==this._validErr)return null;if(this.checkClosedRings(i),null!==this._validErr)return null}const t=new Ln(0,e);if(this.checkTooFewPoints(t),null!==this._validErr)return null;if(this.checkConsistentArea(t),null!==this._validErr)return null;if(!this._isSelfTouchingRingFormingHoleValid&&(this.checkNoSelfIntersectingRings(t),null!==this._validErr))return null;for(let i=0;i<e.getNumGeometries();i++){const n=e.getGeometryN(i);if(this.checkHolesInShell(n,t),null!==this._validErr)return null}for(let i=0;i<e.getNumGeometries();i++){const n=e.getGeometryN(i);if(this.checkHolesNotNested(n,t),null!==this._validErr)return null}if(this.checkShellsNotNested(e,t),null!==this._validErr)return null;this.checkConnectedInteriors(t)}else if(arguments[0]instanceof he){const e=arguments[0];for(let t=0;t<e.getNumGeometries();t++){const i=e.getGeometryN(t);if(this.checkValid(i),null!==this._validErr)return null}}else if(arguments[0]instanceof A){const e=arguments[0];if(this._validErr=null,e.isEmpty())return null;if(e instanceof X)this.checkValid(e);else if(e instanceof ue)this.checkValid(e);else if(e instanceof de)this.checkValid(e);else if(e instanceof G)this.checkValid(e);else if(e instanceof oe)this.checkValid(e);else if(e instanceof Ie)this.checkValid(e);else{if(!(e instanceof he))throw new P(e.getGeometryType());this.checkValid(e)}}}setSelfTouchingRingFormingHoleValid(e){this._isSelfTouchingRingFormingHoleValid=e}checkShellNotNested(e,t,i){const n=e.getCoordinates(),r=t.getExteriorRing();if(r.isEmpty())return null;const o=r.getCoordinates(),s=ir.findPtNotNode(n,r,i);if(null===s)return null;if(!pt.isInRing(s,o))return null;if(t.getNumInteriorRing()<=0)return this._validErr=new tr(tr.NESTED_SHELLS,s),null;let a=null;for(let n=0;n<t.getNumInteriorRing();n++){const r=t.getInteriorRingN(n);if(a=this.checkShellInsideHole(e,r,i),null===a)return null}this._validErr=new tr(tr.NESTED_SHELLS,a)}checkClosedRings(e){if(this.checkClosedRing(e.getExteriorRing()),null!==this._validErr)return null;for(let t=0;t<e.getNumInteriorRing();t++)if(this.checkClosedRing(e.getInteriorRingN(t)),null!==this._validErr)return null}checkClosedRing(e){if(e.isEmpty())return null;if(!e.isClosed()){let t=null;e.getNumPoints()>=1&&(t=e.getCoordinateN(0)),this._validErr=new tr(tr.RING_NOT_CLOSED,t)}}checkShellsNotNested(e,t){for(let i=0;i<e.getNumGeometries();i++){const n=e.getGeometryN(i).getExteriorRing();for(let r=0;r<e.getNumGeometries();r++){if(i===r)continue;const o=e.getGeometryN(r);if(this.checkShellNotNested(n,o,t),null!==this._validErr)return null}}}}class nr{constructor(){nr.constructor_.apply(this,arguments)}static constructor_(){this._items=new V,this._subnode=new Array(4).fill(null)}static getSubnodeIndex(e,t,i){let n=-1;return e.getMinX()>=t&&(e.getMinY()>=i&&(n=3),e.getMaxY()<=i&&(n=1)),e.getMaxX()<=t&&(e.getMinY()>=i&&(n=2),e.getMaxY()<=i&&(n=0)),n}hasChildren(){for(let e=0;e<4;e++)if(null!==this._subnode[e])return!0;return!1}isPrunable(){return!(this.hasChildren()||this.hasItems())}addAllItems(e){e.addAll(this._items);for(let t=0;t<4;t++)null!==this._subnode[t]&&this._subnode[t].addAllItems(e);return e}getNodeCount(){let e=0;for(let t=0;t<4;t++)null!==this._subnode[t]&&(e+=this._subnode[t].size());return e+1}size(){let e=0;for(let t=0;t<4;t++)null!==this._subnode[t]&&(e+=this._subnode[t].size());return e+this._items.size()}addAllItemsFromOverlapping(e,t){if(!this.isSearchMatch(e))return null;t.addAll(this._items);for(let i=0;i<4;i++)null!==this._subnode[i]&&this._subnode[i].addAllItemsFromOverlapping(e,t)}visitItems(e,t){for(let e=this._items.iterator();e.hasNext();)t.visitItem(e.next())}hasItems(){return!this._items.isEmpty()}remove(e,t){if(!this.isSearchMatch(e))return!1;let i=!1;for(let n=0;n<4;n++)if(null!==this._subnode[n]&&(i=this._subnode[n].remove(e,t),i)){this._subnode[n].isPrunable()&&(this._subnode[n]=null);break}return i||(i=this._items.remove(t),i)}visit(e,t){if(!this.isSearchMatch(e))return null;this.visitItems(e,t);for(let i=0;i<4;i++)null!==this._subnode[i]&&this._subnode[i].visit(e,t)}getItems(){return this._items}depth(){let e=0;for(let t=0;t<4;t++)if(null!==this._subnode[t]){const i=this._subnode[t].depth();i>e&&(e=i)}return e+1}isEmpty(){let e=!0;if(this._items.isEmpty()){for(let t=0;t<4;t++)if(null!==this._subnode[t]&&!this._subnode[t].isEmpty()){e=!1;break}}else e=!1;return e}add(e){this._items.add(e)}get interfaces_(){return[m]}}function rr(){}rr.exponent=function(e){return function(e,t){let i,n,r,o;const s={32:{d:127,c:128,b:0,a:0},64:{d:32752,c:0,b:0,a:0}},a={32:8,64:11}[e];o||(i=t<0||1/t<0,isFinite(t)||(o=s[e],i&&(o.d+=1<<e/4-1),n=Math.pow(2,a)-1,r=0));if(!o){for(n={32:127,64:1023}[e],r=Math.abs(t);r>=2;)n++,r/=2;for(;r<1&&n>0;)n--,r*=2;n<=0&&(r/=2),32===e&&n>254&&(o={d:i?255:127,c:128,b:0,a:0},n=Math.pow(2,a)-1,r=0)}return n}(64,e)-1023},rr.powerOf2=function(e){return Math.pow(2,e)};class or{constructor(){or.constructor_.apply(this,arguments)}static constructor_(){this._pt=new v,this._level=0,this._env=null;const e=arguments[0];this.computeKey(e)}static computeQuadLevel(e){const t=e.getWidth(),i=e.getHeight(),n=t>i?t:i;return rr.exponent(n)+1}getLevel(){return this._level}computeKey(){if(1===arguments.length){const e=arguments[0];for(this._level=or.computeQuadLevel(e),this._env=new E,this.computeKey(this._level,e);!this._env.contains(e);)this._level+=1,this.computeKey(this._level,e)}else if(2===arguments.length){const e=arguments[0],t=arguments[1],i=rr.powerOf2(e);this._pt.x=Math.floor(t.getMinX()/i)*i,this._pt.y=Math.floor(t.getMinY()/i)*i,this._env.init(this._pt.x,this._pt.x+i,this._pt.y,this._pt.y+i)}}getEnvelope(){return this._env}getCentre(){return new v((this._env.getMinX()+this._env.getMaxX())/2,(this._env.getMinY()+this._env.getMaxY())/2)}getPoint(){return this._pt}}class sr extends nr{constructor(){super(),sr.constructor_.apply(this,arguments)}static constructor_(){this._env=null,this._centrex=null,this._centrey=null,this._level=null;const e=arguments[0],t=arguments[1];this._env=e,this._level=t,this._centrex=(e.getMinX()+e.getMaxX())/2,this._centrey=(e.getMinY()+e.getMaxY())/2}static createNode(e){const t=new or(e);return new sr(t.getEnvelope(),t.getLevel())}static createExpanded(e,t){const i=new E(t);null!==e&&i.expandToInclude(e._env);const n=sr.createNode(i);return null!==e&&n.insertNode(e),n}find(e){const t=nr.getSubnodeIndex(e,this._centrex,this._centrey);if(-1===t)return this;if(null!==this._subnode[t]){return this._subnode[t].find(e)}return this}isSearchMatch(e){return null!==e&&this._env.intersects(e)}getSubnode(e){return null===this._subnode[e]&&(this._subnode[e]=this.createSubnode(e)),this._subnode[e]}getEnvelope(){return this._env}getNode(e){const t=nr.getSubnodeIndex(e,this._centrex,this._centrey);if(-1!==t){return this.getSubnode(t).getNode(e)}return this}createSubnode(e){let t=0,i=0,n=0,r=0;switch(e){case 0:t=this._env.getMinX(),i=this._centrex,n=this._env.getMinY(),r=this._centrey;break;case 1:t=this._centrex,i=this._env.getMaxX(),n=this._env.getMinY(),r=this._centrey;break;case 2:t=this._env.getMinX(),i=this._centrex,n=this._centrey,r=this._env.getMaxY();break;case 3:t=this._centrex,i=this._env.getMaxX(),n=this._centrey,r=this._env.getMaxY()}const o=new E(t,i,n,r);return new sr(o,this._level-1)}insertNode(e){x.isTrue(null===this._env||this._env.contains(e._env));const t=nr.getSubnodeIndex(e._env,this._centrex,this._centrey);if(e._level===this._level-1)this._subnode[t]=e;else{const i=this.createSubnode(t);i.insertNode(e),this._subnode[t]=i}}}class ar{static isZeroWidth(e,t){const i=t-e;if(0===i)return!0;const n=i/Math.max(Math.abs(e),Math.abs(t));return rr.exponent(n)<=ar.MIN_BINARY_EXPONENT}}ar.MIN_BINARY_EXPONENT=-50;class lr extends nr{constructor(){super()}insert(e,t){const i=nr.getSubnodeIndex(e,lr.origin.x,lr.origin.y);if(-1===i)return this.add(t),null;const n=this._subnode[i];if(null===n||!n.getEnvelope().contains(e)){const t=sr.createExpanded(n,e);this._subnode[i]=t}this.insertContained(this._subnode[i],e,t)}isSearchMatch(e){return!0}insertContained(e,t,i){x.isTrue(e.getEnvelope().contains(t));const n=ar.isZeroWidth(t.getMinX(),t.getMaxX()),r=ar.isZeroWidth(t.getMinY(),t.getMaxY());let o=null;o=n||r?e.find(t):e.getNode(t),o.add(i)}}lr.origin=new v(0,0);class cr{constructor(){cr.constructor_.apply(this,arguments)}static constructor_(){this._root=null,this._minExtent=1,this._root=new lr}static ensureExtent(e,t){let i=e.getMinX(),n=e.getMaxX(),r=e.getMinY(),o=e.getMaxY();return i!==n&&r!==o?e:(i===n&&(i-=t/2,n+=t/2),r===o&&(r-=t/2,o+=t/2),new E(i,n,r,o))}size(){return null!==this._root?this._root.size():0}insert(e,t){this.collectStats(e);const i=cr.ensureExtent(e,this._minExtent);this._root.insert(i,t)}query(){if(1===arguments.length){const e=arguments[0],t=new Mn;return this.query(e,t),t.getItems()}if(2===arguments.length){const e=arguments[0],t=arguments[1];this._root.visit(e,t)}}queryAll(){const e=new V;return this._root.addAllItems(e),e}remove(e,t){const i=cr.ensureExtent(e,this._minExtent);return this._root.remove(i,t)}collectStats(e){const t=e.getWidth();t<this._minExtent&&t>0&&(this._minExtent=t);const i=e.getHeight();i<this._minExtent&&i>0&&(this._minExtent=i)}depth(){return null!==this._root?this._root.depth():0}isEmpty(){return null===this._root||this._root.isEmpty()}get interfaces_(){return[Wt,m]}}class hr extends nt{constructor(){super(),hr.constructor_.apply(this,arguments)}static constructor_(){if(this._parent=null,this._index=null,2===arguments.length){const e=arguments[0],t=arguments[1];hr.constructor_.call(this,e,t,null,-1)}else if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];nt.constructor_.call(this,e,t),this._parent=i,this._index=n}}getIndex(){return this._index}getParent(){return this._parent}}class ur{constructor(){ur.constructor_.apply(this,arguments)}static constructor_(){if(this._parentLine=null,this._segs=null,this._resultSegs=new V,this._minimumSize=null,1===arguments.length){const e=arguments[0];ur.constructor_.call(this,e,2)}else if(2===arguments.length){const e=arguments[0],t=arguments[1];this._parentLine=e,this._minimumSize=t,this.init()}}static extractCoordinates(e){const t=new Array(e.size()+1).fill(null);let i=null;for(let n=0;n<e.size();n++)i=e.get(n),t[n]=i.p0;return t[t.length-1]=i.p1,t}addToResult(e){this._resultSegs.add(e)}asLineString(){return this._parentLine.getFactory().createLineString(ur.extractCoordinates(this._resultSegs))}getResultSize(){const e=this._resultSegs.size();return 0===e?0:e+1}getParent(){return this._parentLine}getSegment(e){return this._segs[e]}getParentCoordinates(){return this._parentLine.getCoordinates()}getMinimumSize(){return this._minimumSize}asLinearRing(){return this._parentLine.getFactory().createLinearRing(ur.extractCoordinates(this._resultSegs))}getSegments(){return this._segs}init(){const e=this._parentLine.getCoordinates();this._segs=new Array(e.length-1).fill(null);for(let t=0;t<e.length-1;t++){const i=new hr(e[t],e[t+1],this._parentLine,t);this._segs[t]=i}}getResultCoordinates(){return ur.extractCoordinates(this._resultSegs)}}class dr{constructor(){dr.constructor_.apply(this,arguments)}static constructor_(){this._index=new cr}remove(e){this._index.remove(new E(e.p0,e.p1),e)}add(){if(arguments[0]instanceof ur){const e=arguments[0].getSegments();for(let t=0;t<e.length;t++){const i=e[t];this.add(i)}}else if(arguments[0]instanceof nt){const e=arguments[0];this._index.insert(new E(e.p0,e.p1),e)}}query(e){const t=new E(e.p0,e.p1),i=new gr(e);this._index.query(t,i);return i.getItems()}}class gr{constructor(){gr.constructor_.apply(this,arguments)}static constructor_(){this._querySeg=null,this._items=new V;const e=arguments[0];this._querySeg=e}visitItem(e){const t=e;E.intersects(t.p0,t.p1,this._querySeg.p0,this._querySeg.p1)&&this._items.add(e)}getItems(){return this._items}get interfaces_(){return[Yt]}}class mr{constructor(){mr.constructor_.apply(this,arguments)}static constructor_(){this._li=new it,this._inputIndex=new dr,this._outputIndex=new dr,this._line=null,this._linePts=null,this._distanceTolerance=0;const e=arguments[0],t=arguments[1];this._inputIndex=e,this._outputIndex=t}static isInLineSection(e,t,i){if(i.getParent()!==e.getParent())return!1;const n=i.getIndex();return n>=t[0]&&n<t[1]}flatten(e,t){const i=this._linePts[e],n=this._linePts[t],r=new nt(i,n);return this.remove(this._line,e,t),this._outputIndex.add(r),r}hasBadIntersection(e,t,i){return!!this.hasBadOutputIntersection(i)||!!this.hasBadInputIntersection(e,t,i)}setDistanceTolerance(e){this._distanceTolerance=e}simplifySection(e,t,i){i+=1;const n=new Array(2).fill(null);if(e+1===t){const t=this._line.getSegment(e);return this._line.addToResult(t),null}let r=!0;if(this._line.getResultSize()<this._line.getMinimumSize()){i+1<this._line.getMinimumSize()&&(r=!1)}const o=new Array(1).fill(null),s=this.findFurthestPoint(this._linePts,e,t,o);o[0]>this._distanceTolerance&&(r=!1);const a=new nt;if(a.p0=this._linePts[e],a.p1=this._linePts[t],n[0]=e,n[1]=t,this.hasBadIntersection(this._line,n,a)&&(r=!1),r){const i=this.flatten(e,t);return this._line.addToResult(i),null}this.simplifySection(e,s,i),this.simplifySection(s,t,i)}hasBadOutputIntersection(e){for(let t=this._outputIndex.query(e).iterator();t.hasNext();){const i=t.next();if(this.hasInteriorIntersection(i,e))return!0}return!1}findFurthestPoint(e,t,i,n){const r=new nt;r.p0=e[t],r.p1=e[i];let o=-1,s=t;for(let n=t+1;n<i;n++){const t=e[n],i=r.distance(t);i>o&&(o=i,s=n)}return n[0]=o,s}simplify(e){this._line=e,this._linePts=e.getParentCoordinates(),this.simplifySection(0,this._linePts.length-1,0)}remove(e,t,i){for(let n=t;n<i;n++){const t=e.getSegment(n);this._inputIndex.remove(t)}}hasInteriorIntersection(e,t){return this._li.computeIntersection(e.p0,e.p1,t.p0,t.p1),this._li.isInteriorIntersection()}hasBadInputIntersection(e,t,i){for(let n=this._inputIndex.query(i).iterator();n.hasNext();){const r=n.next();if(this.hasInteriorIntersection(r,i)){if(mr.isInLineSection(e,t,r))continue;return!0}}return!1}}class pr{constructor(){pr.constructor_.apply(this,arguments)}static constructor_(){this._inputIndex=new dr,this._outputIndex=new dr,this._distanceTolerance=0}setDistanceTolerance(e){this._distanceTolerance=e}simplify(e){for(let t=e.iterator();t.hasNext();)this._inputIndex.add(t.next());for(let t=e.iterator();t.hasNext();){const e=new mr(this._inputIndex,this._outputIndex);e.setDistanceTolerance(this._distanceTolerance),e.simplify(t.next())}}}class fr{constructor(){fr.constructor_.apply(this,arguments)}static constructor_(){this._inputGeom=null,this._lineSimplifier=new pr,this._linestringMap=null;const e=arguments[0];this._inputGeom=e}static simplify(e,t){const i=new fr(e);return i.setDistanceTolerance(t),i.getResultGeometry()}getResultGeometry(){if(this._inputGeom.isEmpty())return this._inputGeom.copy();this._linestringMap=new Ee,this._inputGeom.apply(new yr(this)),this._lineSimplifier.simplify(this._linestringMap.values());return new _r(this._linestringMap).transform(this._inputGeom)}setDistanceTolerance(e){if(e<0)throw new h("Tolerance must be non-negative");this._lineSimplifier.setDistanceTolerance(e)}}class _r extends Re{constructor(){super(),_r.constructor_.apply(this,arguments)}static constructor_(){this._linestringMap=null;const e=arguments[0];this._linestringMap=e}transformCoordinates(e,t){if(0===e.size())return null;if(t instanceof G){const e=this._linestringMap.get(t);return this.createCoordinateSequence(e.getResultCoordinates())}return super.transformCoordinates.call(this,e,t)}}class yr{constructor(){yr.constructor_.apply(this,arguments)}static constructor_(){this.tps=null;const e=arguments[0];this.tps=e}filter(e){if(e instanceof G){const t=e;if(t.isEmpty())return null;const i=t.isClosed()?4:2,n=new ur(t,i);this.tps._linestringMap.put(t,n)}}get interfaces_(){return[u]}}fr.LineStringTransformer=_r,fr.LineStringMapBuilderFilter=yr;class br extends c{constructor(){super(),br.constructor_.apply(this,arguments)}static constructor_(){if(0===arguments.length)c.constructor_.call(this);else if(1===arguments.length){const e=arguments[0];c.constructor_.call(this,e)}}}class Cr{constructor(){Cr.constructor_.apply(this,arguments)}static constructor_(){if(this._m00=null,this._m01=null,this._m02=null,this._m10=null,this._m11=null,this._m12=null,0===arguments.length)this.setToIdentity();else if(1===arguments.length){if(arguments[0]instanceof Array){const e=arguments[0];this._m00=e[0],this._m01=e[1],this._m02=e[2],this._m10=e[3],this._m11=e[4],this._m12=e[5]}else if(arguments[0]instanceof Cr){const e=arguments[0];this.setTransformation(e)}}else if(6===arguments.length&&"number"==typeof arguments[5]&&"number"==typeof arguments[4]&&"number"==typeof arguments[3]&&"number"==typeof arguments[2]&&"number"==typeof arguments[0]&&"number"==typeof arguments[1]){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=arguments[4],o=arguments[5];this.setTransformation(e,t,i,n,r,o)}}static translationInstance(e,t){const i=new Cr;return i.setToTranslation(e,t),i}static shearInstance(e,t){const i=new Cr;return i.setToShear(e,t),i}static reflectionInstance(){if(2===arguments.length){const e=arguments[0],t=arguments[1],i=new Cr;return i.setToReflection(e,t),i}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=new Cr;return r.setToReflection(e,t,i,n),r}}static rotationInstance(){if(1===arguments.length){const e=arguments[0];return Cr.rotationInstance(Math.sin(e),Math.cos(e))}if(2===arguments.length){const e=arguments[0],t=arguments[1],i=new Cr;return i.setToRotation(e,t),i}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];return Cr.rotationInstance(Math.sin(e),Math.cos(e),t,i)}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=new Cr;return r.setToRotation(e,t,i,n),r}}static scaleInstance(){if(2===arguments.length){const e=arguments[0],t=arguments[1],i=new Cr;return i.setToScale(e,t),i}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=new Cr;return r.translate(-i,-n),r.scale(e,t),r.translate(i,n),r}}setToReflectionBasic(e,t,i,n){if(e===i&&t===n)throw new h("Reflection line points must be distinct");const r=i-e,o=n-t,s=Math.sqrt(r*r+o*o),a=o/s,l=r/s,c=2*a*l,u=l*l-a*a;return this._m00=u,this._m01=c,this._m02=0,this._m10=c,this._m11=-u,this._m12=0,this}getInverse(){const e=this.getDeterminant();if(0===e)throw new br("Transformation is non-invertible");const t=this._m11/e,i=-this._m10/e,n=-this._m01/e,r=this._m00/e,o=(this._m01*this._m12-this._m02*this._m11)/e,s=(-this._m00*this._m12+this._m10*this._m02)/e;return new Cr(t,n,o,i,r,s)}compose(e){const t=e._m00*this._m00+e._m01*this._m10,i=e._m00*this._m01+e._m01*this._m11,n=e._m00*this._m02+e._m01*this._m12+e._m02,r=e._m10*this._m00+e._m11*this._m10,o=e._m10*this._m01+e._m11*this._m11,s=e._m10*this._m02+e._m11*this._m12+e._m12;return this._m00=t,this._m01=i,this._m02=n,this._m10=r,this._m11=o,this._m12=s,this}equals(e){if(null===e)return!1;if(!(e instanceof Cr))return!1;const t=e;return this._m00===t._m00&&this._m01===t._m01&&this._m02===t._m02&&this._m10===t._m10&&this._m11===t._m11&&this._m12===t._m12}setToScale(e,t){return this._m00=e,this._m01=0,this._m02=0,this._m10=0,this._m11=t,this._m12=0,this}isIdentity(){return 1===this._m00&&0===this._m01&&0===this._m02&&0===this._m10&&1===this._m11&&0===this._m12}scale(e,t){return this.compose(Cr.scaleInstance(e,t)),this}setToIdentity(){return this._m00=1,this._m01=0,this._m02=0,this._m10=0,this._m11=1,this._m12=0,this}isGeometryChanged(){return!0}setTransformation(){if(1===arguments.length){const e=arguments[0];return this._m00=e._m00,this._m01=e._m01,this._m02=e._m02,this._m10=e._m10,this._m11=e._m11,this._m12=e._m12,this}if(6===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3],r=arguments[4],o=arguments[5];return this._m00=e,this._m01=t,this._m02=i,this._m10=n,this._m11=r,this._m12=o,this}}setToRotation(){if(1===arguments.length){const e=arguments[0];return this.setToRotation(Math.sin(e),Math.cos(e)),this}if(2===arguments.length){const e=arguments[0],t=arguments[1];return this._m00=t,this._m01=-e,this._m02=0,this._m10=e,this._m11=t,this._m12=0,this}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];return this.setToRotation(Math.sin(e),Math.cos(e),t,i),this}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];return this._m00=t,this._m01=-e,this._m02=i-i*t+n*e,this._m10=e,this._m11=t,this._m12=n-i*e-n*t,this}}getMatrixEntries(){return[this._m00,this._m01,this._m02,this._m10,this._m11,this._m12]}filter(e,t){this.transform(e,t)}rotate(){if(1===arguments.length){const e=arguments[0];return this.compose(Cr.rotationInstance(e)),this}if(2===arguments.length){const e=arguments[0],t=arguments[1];return this.compose(Cr.rotationInstance(e,t)),this}if(3===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2];return this.compose(Cr.rotationInstance(e,t,i)),this}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];return this.compose(Cr.rotationInstance(e,t,i,n)),this}}getDeterminant(){return this._m00*this._m11-this._m01*this._m10}composeBefore(e){const t=this._m00*e._m00+this._m01*e._m10,i=this._m00*e._m01+this._m01*e._m11,n=this._m00*e._m02+this._m01*e._m12+this._m02,r=this._m10*e._m00+this._m11*e._m10,o=this._m10*e._m01+this._m11*e._m11,s=this._m10*e._m02+this._m11*e._m12+this._m12;return this._m00=t,this._m01=i,this._m02=n,this._m10=r,this._m11=o,this._m12=s,this}setToShear(e,t){return this._m00=1,this._m01=e,this._m02=0,this._m10=t,this._m11=1,this._m12=0,this}isDone(){return!1}clone(){try{return null}catch(e){if(!(e instanceof c))throw e;x.shouldNeverReachHere()}return null}translate(e,t){return this.compose(Cr.translationInstance(e,t)),this}setToReflection(){if(2===arguments.length){const e=arguments[0],t=arguments[1];if(0===e&&0===t)throw new h("Reflection vector must be non-zero");if(e===t)return this._m00=0,this._m01=1,this._m02=0,this._m10=1,this._m11=0,this._m12=0,this;const i=Math.sqrt(e*e+t*t),n=t/i,r=e/i;return this.rotate(-n,r),this.scale(1,-1),this.rotate(n,r),this}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];if(e===i&&t===n)throw new h("Reflection line points must be distinct");this.setToTranslation(-e,-t);const r=i-e,o=n-t,s=Math.sqrt(r*r+o*o),a=o/s,l=r/s;return this.rotate(-a,l),this.scale(1,-1),this.rotate(a,l),this.translate(e,t),this}}toString(){return"AffineTransformation[["+this._m00+", "+this._m01+", "+this._m02+"], ["+this._m10+", "+this._m11+", "+this._m12+"]]"}setToTranslation(e,t){return this._m00=1,this._m01=0,this._m02=e,this._m10=0,this._m11=1,this._m12=t,this}shear(e,t){return this.compose(Cr.shearInstance(e,t)),this}transform(){if(1===arguments.length){const e=arguments[0].copy();return e.apply(this),e}if(2===arguments.length){if(arguments[0]instanceof v&&arguments[1]instanceof v){const e=arguments[0],t=arguments[1],i=this._m00*e.x+this._m01*e.y+this._m02,n=this._m10*e.x+this._m11*e.y+this._m12;return t.x=i,t.y=n,t}if(N(arguments[0],R)&&Number.isInteger(arguments[1])){const e=arguments[0],t=arguments[1],i=this._m00*e.getOrdinate(t,0)+this._m01*e.getOrdinate(t,1)+this._m02,n=this._m10*e.getOrdinate(t,0)+this._m11*e.getOrdinate(t,1)+this._m12;e.setOrdinate(t,0,i),e.setOrdinate(t,1,n)}}}reflect(){if(2===arguments.length){const e=arguments[0],t=arguments[1];return this.compose(Cr.reflectionInstance(e,t)),this}if(4===arguments.length){const e=arguments[0],t=arguments[1],i=arguments[2],n=arguments[3];return this.compose(Cr.reflectionInstance(e,t,i,n)),this}}get interfaces_(){return[g,F]}}class xr{constructor(){xr.constructor_.apply(this,arguments)}static constructor_(){if(this._geomFact=null,this._precModel=null,this._dim=new Sr,this._nPts=100,this._rotationAngle=0,0===arguments.length)xr.constructor_.call(this,new De);else if(1===arguments.length){const e=arguments[0];this._geomFact=e,this._precModel=e.getPrecisionModel()}}createSupercircle(e){const t=1/e,i=this._dim.getMinSize()/2,n=this._dim.getCentre(),r=Math.pow(i,e),o=i,s=Math.pow(r/2,t),a=Math.trunc(this._nPts/8),l=new Array(8*a+1).fill(null),c=s/a;for(let i=0;i<=a;i++){let s=0,h=o;if(0!==i){s=c*i;const n=Math.pow(s,e);h=Math.pow(r-n,t)}l[i]=this.coordTrans(s,h,n),l[2*a-i]=this.coordTrans(h,s,n),l[2*a+i]=this.coordTrans(h,-s,n),l[4*a-i]=this.coordTrans(s,-h,n),l[4*a+i]=this.coordTrans(-s,-h,n),l[6*a-i]=this.coordTrans(-h,-s,n),l[6*a+i]=this.coordTrans(-h,s,n),l[8*a-i]=this.coordTrans(-s,h,n)}l[l.length-1]=new v(l[0]);const h=this._geomFact.createLinearRing(l),u=this._geomFact.createPolygon(h);return this.rotate(u)}setNumPoints(e){this._nPts=e}setBase(e){this._dim.setBase(e)}setRotation(e){this._rotationAngle=e}setWidth(e){this._dim.setWidth(e)}createEllipse(){const e=this._dim.getEnvelope(),t=e.getWidth()/2,i=e.getHeight()/2,n=e.getMinX()+t,r=e.getMinY()+i,o=new Array(this._nPts+1).fill(null);let s=0;for(let e=0;e<this._nPts;e++){const a=e*(2*Math.PI/this._nPts),l=t*Math.cos(a)+n,c=i*Math.sin(a)+r;o[s++]=this.coord(l,c)}o[s]=new v(o[0]);const a=this._geomFact.createLinearRing(o),l=this._geomFact.createPolygon(a);return this.rotate(l)}coordTrans(e,t,i){return this.coord(e+i.x,t+i.y)}createSquircle(){return this.createSupercircle(4)}setEnvelope(e){this._dim.setEnvelope(e)}setCentre(e){this._dim.setCentre(e)}createArc(e,t){const i=this._dim.getEnvelope(),n=i.getWidth()/2,r=i.getHeight()/2,o=i.getMinX()+n,s=i.getMinY()+r;let a=t;(a<=0||a>2*Math.PI)&&(a=2*Math.PI);const l=a/(this._nPts-1),c=new Array(this._nPts).fill(null);let h=0;for(let t=0;t<this._nPts;t++){const i=e+t*l,a=n*Math.cos(i)+o,u=r*Math.sin(i)+s;c[h++]=this.coord(a,u)}const u=this._geomFact.createLineString(c);return this.rotate(u)}rotate(e){if(0!==this._rotationAngle){const t=Cr.rotationInstance(this._rotationAngle,this._dim.getCentre().x,this._dim.getCentre().y);e.apply(t)}return e}coord(e,t){const i=new v(e,t);return this._precModel.makePrecise(i),i}createArcPolygon(e,t){const i=this._dim.getEnvelope(),n=i.getWidth()/2,r=i.getHeight()/2,o=i.getMinX()+n,s=i.getMinY()+r;let a=t;(a<=0||a>2*Math.PI)&&(a=2*Math.PI);const l=a/(this._nPts-1),c=new Array(this._nPts+2).fill(null);let h=0;c[h++]=this.coord(o,s);for(let t=0;t<this._nPts;t++){const i=e+l*t,a=n*Math.cos(i)+o,u=r*Math.sin(i)+s;c[h++]=this.coord(a,u)}c[h++]=this.coord(o,s);const u=this._geomFact.createLinearRing(c),d=this._geomFact.createPolygon(u);return this.rotate(d)}createRectangle(){let e=null,t=0,i=Math.trunc(this._nPts/4);i<1&&(i=1);const n=this._dim.getEnvelope().getWidth()/i,r=this._dim.getEnvelope().getHeight()/i,o=new Array(4*i+1).fill(null),s=this._dim.getEnvelope();for(e=0;e<i;e++){const i=s.getMinX()+e*n,r=s.getMinY();o[t++]=this.coord(i,r)}for(e=0;e<i;e++){const i=s.getMaxX(),n=s.getMinY()+e*r;o[t++]=this.coord(i,n)}for(e=0;e<i;e++){const i=s.getMaxX()-e*n,r=s.getMaxY();o[t++]=this.coord(i,r)}for(e=0;e<i;e++){const i=s.getMinX(),n=s.getMaxY()-e*r;o[t++]=this.coord(i,n)}o[t++]=new v(o[0]);const a=this._geomFact.createLinearRing(o),l=this._geomFact.createPolygon(a);return this.rotate(l)}createCircle(){return this.createEllipse()}setHeight(e){this._dim.setHeight(e)}setSize(e){this._dim.setSize(e)}}class Sr{constructor(){Sr.constructor_.apply(this,arguments)}static constructor_(){this.base=null,this.centre=null,this.width=null,this.height=null}setBase(e){this.base=e}setWidth(e){this.width=e}getBase(){return this.base}getWidth(){return this.width}setEnvelope(e){this.width=e.getWidth(),this.height=e.getHeight(),this.base=new v(e.getMinX(),e.getMinY()),this.centre=new v(e.centre())}setCentre(e){this.centre=e}getMinSize(){return Math.min(this.width,this.height)}getEnvelope(){return null!==this.base?new E(this.base.x,this.base.x+this.width,this.base.y,this.base.y+this.height):null!==this.centre?new E(this.centre.x-this.width/2,this.centre.x+this.width/2,this.centre.y-this.height/2,this.centre.y+this.height/2):new E(0,this.width,0,this.height)}getCentre(){return null===this.centre&&(this.centre=new v(this.base.x+this.width/2,this.base.y+this.height/2)),this.centre}getHeight(){return this.height}setHeight(e){this.height=e}setSize(e){this.height=e,this.width=e}}xr.Dimensions=Sr;const Ir=e=>ir.isValid(e),Tr=(e,t)=>Xn.intersects(e,t),vr=(e,t)=>Jn.union(e,t),wr=(e,t)=>Xn.contains(e,t),Er=(e,t)=>Ji.bufferOp(e,t).norm(),Ar=e=>{if(!e)return null;const t=new Ae,i=new De(t);return new et(i).write(e)},Mr=e=>{const t=new rt,i=Nr(e);return t.read(i)},Nr=e=>{const t=[e.x,e.y,e.x+e.width,e.y,e.x+e.width,e.y+e.height,e.x,e.y+e.height,e.x,e.y];return`POLYGON((${t[0]} ${t[1]}, ${t[2]} ${t[3]}, ${t[4]} ${t[5]}, ${t[6]} ${t[7]}, ${t[8]} ${t[9]}))`},Dr=(e,t,i,n)=>(new De).createLineString([new v(e,t),new v(i,n)]),Rr=e=>{const t=e.map((e=>new v(e[0],e[1])));return(new De).createPolygon(t)},Lr=(e,t,i,n)=>{const r=new xr,o=r.coord(e,t);return r.setCentre(o),r.setWidth(i),r.setHeight(n),r.createEllipse()},Pr=(e,t,i,n)=>Math.sqrt(Math.pow(i-e,2)+Math.pow(n-t,2)),Or=(e,t,i,n)=>e<i||e===i&&t<n?-1:e===i&&t===n?0:1,kr=(e,t,i,n)=>-1===Or(e,t,i,n)?[e,t]:[i,n],Br=(e,t,i,n)=>-1!==Or(e,t,i,n)?[e,t]:[i,n],Fr=(e,t,i,n,r)=>{const o=((e,t,i,n)=>e===i?1/0:(n-t)/(i-e))(t,i,n,r),s=e/2;if(0===o)return[t,i+s,n,i+s,n,i-s,t,i-s];if(o===1/0)return[t-s,i,t-s,r,n+s,r,n+s,i];const a=Math.atan(o),l=s*Math.cos(a),c=s*Math.sin(a);return[t-c,i+l,n-c,r+l,n+c,r-l,t+c,i-l,t+l,i-c]},Gr=(e,t=5)=>fr.simplify(e,t),Wr=e=>{const t=[];for(let i=0;i<e.getNumGeometries();i++){let n=zr(e.getGeometryN(i));n=Er(n,0),t.push(n)}return(new De).createMultiPolygon(t)},zr=e=>{const t=e.getCoordinates(),i=[];i.push(t[0]);for(let e=0;e<t.length-1;e++){const n=t[e],r=t[e+1],o=new v(.75*n.x+.25*r.x,.75*n.y+.25*r.y),s=new v(.25*n.x+.75*r.x,.25*n.y+.75*r.y);i.push(o),i.push(s)}return i.push(t[t.length-1]),(new De).createPolygon(i)},Hr=(e,t,i,n,r)=>{const o=Dr(e,t,i,n);for(const s of r){const r=Dr(s[0],s[1],s[2],s[3]);if(wr(o,r)){const r=kr(e,t,i,n),o=Br(e,t,i,n),a=kr(s[0],s[1],s[2],s[3]),l=Br(s[0],s[1],s[2],s[3]);return[[r[0],r[1],a[0],a[1]],[l[0],l[1],o[0],o[1]]]}}return[[e,t,i,n]]},Ur=(e,t)=>e.c.length==t.c.length&&e.c[0]==t.c[0]&&e.c[1]==t.c[1]&&e.c[2]==t.c[2]&&e.c[3]==t.c[3]&&e.door==t.door&&JSON.stringify(e.flags)==JSON.stringify(t.flags),Vr=()=>{const t=canvas.scene.getEmbeddedCollection("Wall"),i=[];for(const n of t){n.getFlag(e,"dungeonVersion")&&i.push(n)}return i},Yr=(e,t,i)=>{let n=[];for(let r=0;r<t.getNumGeometries();r++){const o=t.getGeometryN(r);n=n.concat(qr(e,o,i))}return n},qr=(e,t,i)=>{const n=[],r=t.getExteriorRing().getCoordinates();for(let t=0;t<r.length-1;t++){const o=r[t].x,s=r[t].y,a=r[t+1].x,l=r[t+1].y,c=Hr(o,s,a,l,i);for(const t of c){const i=Zr(e,t[0],t[1],t[2],t[3]);n.push(i)}}const o=t.getNumInteriorRing();for(let i=0;i<o;i++){const r=t.getInteriorRingN(i).getCoordinates();for(let t=0;t<r.length-1;t++){const i=Zr(e,r[t].x,r[t].y,r[t+1].x,r[t+1].y);n.push(i)}}return n},jr=(e,t)=>{const i=[];for(const n of t){const t=Zr(e,n[0],n[1],n[2],n[3]);i.push(t)}return i},Kr=(e,t)=>{const i=[];for(const n of t){const t=eo(e,n[0],n[1],n[2],n[3]);i.push(t)}return i},Xr=(e,t)=>{const i=[];for(const n of t){const t=Qr(e,n[0],n[1],n[2],n[3]);i.push(t)}return i},Jr=(e,t)=>{const i=[];for(const n of t){const t=$r(e,n[0],n[1],n[2],n[3]);i.push(t)}return i},Zr=(i,n,r,o,s)=>{const a={c:[n,r,o,s],door:0,flags:{}};return a.flags[e]={},a.flags[e].dungeonVersion="1.0",t.threeDCanvasEnabled()&&(a.flags["levels-3d-preview"]={joinWall:!0,wallDepth:i.wallThickness,wallSidesTexture:i.threeDWallSidesTexture,wallSidesTint:i.threeDWallSidesTextureTint,wallTexture:i.threeDWallTexture,wallTint:i.threeDWallTextureTint}),a},Qr=(e,i,n,r,o)=>{const s=Zr(e,i,n,r,o);return s.door=1,t.threeDCanvasEnabled()&&(s.flags["levels-3d-preview"].joinWall=!1,s.flags["levels-3d-preview"].wallTexture=e.threeDDoorTexture,s.flags["levels-3d-preview"].wallTint=e.threeDDoorTextureTint),s},$r=(e,t,i,n,r)=>{const o=Zr(e,t,i,n,r);return o.door=2,o},eo=(e,t,i,n,r)=>{const o=Zr(e,t,i,n,r);return o.door=0,o.light=0,o.sight=0,o};class to{static FLAG_KEY="dungeonState";constructor(e,t,i,n,r,o,s){this.geometry=e,this.themeAreas=t,this.doors=i,this.secretDoors=n,this.interiorWalls=r,this.invisibleWalls=o,this.config=s}static startState(){return new to(null,[],[],[],[],[],{doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8})}clone(){return new to(this.geometry?this.geometry.copy():null,JSON.parse(JSON.stringify(this.themeAreas)),JSON.parse(JSON.stringify(this.doors)),this.secretDoors?[...this.secretDoors]:[],this.interiorWalls?[...this.interiorWalls]:[],this.invisibleWalls?[...this.invisibleWalls]:[],JSON.parse(JSON.stringify(this.config)))}toString(){return JSON.stringify({wkt:Ar(this.geometry),themeAreas:this.themeAreas,doors:this.doors,secretDoors:this.secretDoors,interiorWalls:this.interiorWalls,invisibleWalls:this.invisibleWalls,config:this.config})}static fromString(e){if(!e)return to.startState();const t=JSON.parse(e),i=(n=t.wkt)?(new rt).read(n):null;var n;const r=t.themeAreas?t.themeAreas:[],o=t.doors?t.doors:[],s=t.secretDoors?t.secretDoors:[],a=t.interiorWalls?t.interiorWalls:[],l=t.invisibleWalls?t.invisibleWalls:[],c=foundry.utils.mergeObject({doorColor:"#000000",doorFillColor:"#ffffff",doorFillOpacity:1,doorLineThickness:8,doorThickness:25,exteriorShadowColor:"#000000",exteriorShadowThickness:20,exteriorShadowOpacity:.5,floorColor:"#F2EDDF",floorOpacity:1,floorTexture:"",floorTextureRotation:0,floorTextureTint:"",interiorShadowColor:"#000000",interiorShadowThickness:8,interiorShadowOpacity:.5,invisibleWallColor:"#000000",invisibleWallFillColor:"#ffffff",invisibleWallLineThickness:2,invisibleWallFillOpacity:1,invisibleWallThickness:6,matchBaseWalls:!0,sceneBackgroundColor:"#999999",sceneGridColor:"#000000",sceneGridOpacity:.2,secretDoorSColor:"#ffffff",secretDoorStyleGM:"secret",secretDoorStylePlayer:"wall",threeDDoorTexture:"modules/dungeon-draw/assets/textures/3d_arena-gate-texture.webp",threeDDoorTextureTint:"",threeDWallTexture:"",threeDWallTextureTint:"",threeDWallSidesTexture:"",threeDWallSidesTextureTint:"",wallColor:"#000000",wallTexture:"",wallTextureTint:"",wallThickness:8},t.config);return new to(i,r,o,s,a,l,c)}async saveToJournalEntry(i){const n=this.toString();t.makeFoundryWalls()&&await(async e=>{if(!game.user.isGM)return;let t=[];if(e.geometry){const i=Gr(e.geometry,10),n=e.doors.concat(e.secretDoors,e.invisibleWalls);t=Yr(e.config,i,n)}const i=jr(e.config,e.interiorWalls),n=Kr(e.config,e.invisibleWalls),r=Xr(e.config,e.doors),o=Jr(e.config,e.secretDoors),s=t.concat(i,n,r,o),a=Vr(),l=[],c=[];for(const e of s){let t=!1;for(const i of a)if(Ur(e,i)){l.push(i),t=!0;break}t||c.push(e)}const h=l.map((e=>e.id)),u=a.filter((e=>!h.includes(e.id))).map((e=>e.id));if(c.length&&await canvas.scene.createEmbeddedDocuments("Wall",c),u.length)try{await canvas.scene.deleteEmbeddedDocuments("Wall",u)}catch(e){console.error(e)}})(this),await i.setFlag(e,"dungeonState",n)}static async loadFromJournalEntry(t){await this.maybeMigrateJournalEntry(t);const i=t.getFlag(e,"dungeonState");return to.fromString(i)}static async maybeMigrateJournalEntry(e){if(game.user.isGM)if(e.pages){const t=e.pages.find((e=>"text"===e.type));if(t?.text?.content){console.log("Migrating v10 page.text.content");const i=to.fromString(t.text.content);await i.saveToJournalEntry(e),await t.delete()}}else if(e.data.content){console.log("Migrating v9 journalEntry.data.content");const t=to.fromString(e.data.content);await t.saveToJournalEntry(e),await e.update({content:null})}}}const io=e=>{const t=e?.baseTexture?.resource?.source;t&&"VIDEO"===t.tagName&&(t.loop=!0,t.muted=!0,game.video.play(t))},no=async(e,t)=>{if(!t.geometry)return;const i=new PIXI.Graphics,n=new PIXI.Graphics,r=new PIXI.Graphics,o=new PIXI.Graphics;so(e,t.config,t.geometry);const s=new PIXI.Graphics;co(s,t.geometry),e.addChild(s),n.mask=s;const a=new PIXI.filters.AlphaFilter(t.config.interiorShadowOpacity),l=new PIXI.filters.BlurFilter;n.filters=[a,l],go(i,n,r,t.config,t.geometry);const c=new PIXI.Graphics,h=JSON.parse(JSON.stringify(t.config));h.wallColor="#000000";for(const e of t.interiorWalls)_o(n,t.config,e),t.config.wallTexture?po(c,h,e):po(r,t.config,e);for(const e of t.invisibleWalls)Co(n,t.config,e),fo(o,r,c,t.config,e);for(const e of t.doors)xo(n,t.config,e),yo(o,r,c,t.config,e);for(const e of t.secretDoors)_o(n,t.config,e),bo(o,r,c,t.config,e);if(e.addChild(i),e.addChild(n),t.config.wallTexture){uo(c,t.geometry,t.config.wallThickness),e.addChild(c);const i=Er(t.geometry,t.config.wallThickness/2),n=await oo(t.config.wallTexture);if(n?.valid){let e=null;t.config.wallTextureRotation&&(e=PIXI.Matrix.IDENTITY.clone(),e.rotate(t.config.wallTextureRotation*PIXI.DEG_TO_RAD)),io(n),r.beginTextureFill({texture:n,alpha:1,matrix:e});const o=i.getCoordinates().map((e=>[e.x,e.y])).flat();r.drawPolygon(o),r.endFill(),r.mask=c,t.config.wallTextureTint&&(r.tint=PIXI.utils.string2hex(t.config.wallTextureTint))}}e.addChild(r),e.addChild(o)},ro=async(e,t)=>{for(const i of t.themeAreas){const n=t.clone();n.config=i.config,n.config.doorColor=t.config.doorColor,n.config.doorFillColor=t.config.doorFillColor,n.config.doorFillOpacity=t.config.doorFillOpacity,n.config.doorThickness=t.config.doorThickness,n.config.matchBaseWalls&&(n.config.wallColor=t.config.wallColor,n.config.wallTexture=t.config.wallTexture,n.config.wallTextureTint=t.config.wallTextureTint,n.config.wallThickness=t.config.wallThickness),n.config.exteriorShadowOpacity=0;const r=new PIXI.Container,o=new PIXI.Graphics;o.beginFill(16777215,1),o.drawPolygon(i.points.flat()),o.endFill(),r.mask=o,Rr(i.points),await no(r,n),e.addChild(o),e.addChild(r)}},oo=async e=>{try{const t=await loadTexture(e);return t||ui.notifications.error(`${game.i18n.localize("DD.TextureLoadFailure")}: ${e}`),t}catch(e){console.log(e)}},so=(e,t,i)=>{if(!t.exteriorShadowThickness||!t.exteriorShadowOpacity||!i)return;const n=new PIXI.Graphics;n.lineStyle({width:t.wallThickness+t.exteriorShadowThickness,color:PIXI.utils.string2hex(t.interiorShadowColor),alignment:.5,join:"round"});for(let e=0;e<i.getNumGeometries();e++){const r=i.getGeometryN(e);ao(n,t,r)}const r=new PIXI.filters.AlphaFilter(t.exteriorShadowOpacity),o=new PIXI.filters.BlurFilter;n.filters=[r,o],e.addChild(n)},ao=(e,t,i)=>{const n=i.getExteriorRing();e.drawPolygon(n.getCoordinates().map((e=>[e.x,e.y])).flat());const r=i.getNumInteriorRing();for(let t=0;t<r;t++){const n=i.getInteriorRingN(t);e.drawPolygon(n.getCoordinates().map((e=>[e.x,e.y])).flat())}},lo=(e,t)=>{const i=t.getExteriorRing().getCoordinates().map((e=>[e.x,e.y])).flat();e.beginFill(16777215,1),e.drawPolygon(i),e.endFill();const n=t.getNumInteriorRing();for(let i=0;i<n;i++){const n=t.getInteriorRingN(i).getCoordinates().map((e=>[e.x,e.y])).flat();e.lineStyle(0,0,1,1,.5),e.beginHole(),e.drawPolygon(n),e.endHole()}},co=(e,t)=>{for(let i=0;i<t.getNumGeometries();i++){const n=t.getGeometryN(i);lo(e,n)}},ho=(e,t,i)=>{const n=t.getExteriorRing().getCoordinates().map((e=>[e.x,e.y])).flat();e.lineStyle(i,PIXI.utils.string2hex("#000000"),1,.5),e.drawPolygon(n);const r=t.getNumInteriorRing();for(let n=0;n<r;n++){const r=t.getInteriorRingN(n).getCoordinates().map((e=>[e.x,e.y])).flat();e.lineStyle(i,PIXI.utils.string2hex("#000000"),1),e.drawPolygon(r)}},uo=(e,t,i)=>{for(let n=0;n<t.getNumGeometries();n++){const r=t.getGeometryN(n);ho(e,r,i)}},go=(e,t,i,n,r)=>{for(let o=0;o<r.getNumGeometries();o++){const s=r.getGeometryN(o);mo(e,t,i,n,s)}},mo=async(e,t,i,n,r)=>{const o=r.getExteriorRing().getCoordinates().map((e=>[e.x,e.y])).flat();if(n.floorTexture){const t=await oo(n.floorTexture);if(t?.valid){let i=null;n.floorTextureRotation&&(i=PIXI.Matrix.IDENTITY.clone(),i.rotate(n.floorTextureRotation*PIXI.DEG_TO_RAD)),io(t),e.beginTextureFill({texture:t,alpha:n.floorOpacity,matrix:i}),e.drawPolygon(o),e.endFill(),n.floorTextureTint&&(e.tint=PIXI.utils.string2hex(n.floorTextureTint))}}else e.beginFill(PIXI.utils.string2hex(n.floorColor),n.floorOpacity),e.drawPolygon(o),e.endFill();const s=r.getNumInteriorRing();for(let t=0;t<s;t++){const i=r.getInteriorRingN(t).getCoordinates().map((e=>[e.x,e.y])).flat();e.lineStyle(0,0,1,1,.5),e.beginHole(),e.drawPolygon(i),e.endHole()}n.interiorShadowOpacity&&(t.lineStyle({width:n.wallThickness+n.interiorShadowThickness,color:PIXI.utils.string2hex(n.interiorShadowColor),alignment:.5,join:"round"}),t.drawPolygon(o)),n.wallTexture||(i.lineStyle(n.wallThickness,PIXI.utils.string2hex(n.wallColor),1,.5),i.drawPolygon(o));for(let e=0;e<s;e++){const o=r.getInteriorRingN(e).getCoordinates().map((e=>[e.x,e.y])).flat();t.drawPolygon(o),n.wallTexture||(i.lineStyle(n.wallThickness,PIXI.utils.string2hex(n.wallColor),1),i.drawPolygon(o))}},po=(e,t,i)=>{e.lineStyle({width:t.wallThickness,color:PIXI.utils.string2hex(t.wallColor),alpha:1,alignment:.5,cap:"round"}),e.moveTo(i[0],i[1]),e.lineTo(i[2],i[3])},fo=(e,t,i,n,r)=>{const o={doorColor:n.invisibleWallColor,doorLineThickness:n.invisibleWallLineThickness,doorFillColor:n.invisibleWallFillColor,doorFillOpacity:n.invisibleWallFillOpacity,doorThickness:n.invisibleWallThickness,wallColor:n.wallColor,wallTexture:n.wallTexture,wallThickness:n.wallThickness};yo(e,t,i,o,r),e.lineStyle({width:n.invisibleWallLineThickness,color:PIXI.utils.string2hex(n.invisibleWallColor),alpha:1,alignment:.5}),e.moveTo(r[0],r[1]),e.lineTo(r[2],r[3])},_o=(e,t,i)=>{e.lineStyle({width:t.wallThickness+t.interiorShadowThickness,color:PIXI.utils.string2hex(t.interiorShadowColor),alignment:.5,join:"round",cap:"round"}),e.moveTo(i[2],i[3]),e.lineTo(i[0],i[1])},yo=(e,t,i,n,r)=>{const o=Pr(r[0],r[1],r[2],r[3]),s=20/o,a=s+(o-40)/o,l=r[2]-r[0],c=r[3]-r[1],h=[r[0]+l*s,r[1]+c*s],u=[r[0]+l*a,r[1]+c*a],d=Fr(n.doorThickness,h[0],h[1],u[0],u[1]);n.wallTexture?(i.lineStyle({width:n.wallThickness,color:PIXI.utils.string2hex(n.wallColor),alpha:1,alignment:.5,cap:"round"}),i.moveTo(r[0],r[1]),i.lineTo(h[0],h[1]),i.moveTo(u[0],u[1]),i.lineTo(r[2],r[3])):(t.lineStyle({width:n.wallThickness,color:PIXI.utils.string2hex(n.wallColor),alpha:1,alignment:.5,cap:"round"}),t.moveTo(r[0],r[1]),t.lineTo(h[0],h[1]),t.moveTo(u[0],u[1]),t.lineTo(r[2],r[3])),n.doorFillOpacity&&e.beginFill(PIXI.utils.string2hex(n.doorFillColor),n.doorFillOpacity),e.lineStyle(n.doorLineThickness,PIXI.utils.string2hex(n.doorColor),1,.5),e.drawPolygon(d[0],d[1],d[2],d[3],d[4],d[5],d[6],d[7],d[0],d[1]),n.doorFillColor&&e.endFill()},bo=(e,t,i,n,r)=>{const o=game.user.isGM;if(o&&"door"===n.secretDoorStyleGM||!o&&"door"===n.secretDoorStylePlayer)return void yo(e,t,i,n,r);const s=Pr(r[0],r[1],r[2],r[3]),a=(s-40)/2/s,l=a+40/s,c=r[2]-r[0],h=r[3]-r[1],u=[r[0]+c*a,r[1]+h*a],d=[r[0]+.5*c,r[1]+.5*h],g=[r[0]+c*l,r[1]+h*l],m=Fr(30,u[0],u[1],g[0],g[1]);if(n.wallTexture?(i.lineStyle({width:n.wallThickness,color:PIXI.utils.string2hex("#000000"),alpha:1,alignment:.5,cap:"round"}),i.moveTo(r[0],r[1]),i.lineTo(r[2],r[3])):(t.lineStyle({width:n.wallThickness,color:PIXI.utils.string2hex(n.wallColor),alpha:1,alignment:.5,cap:"round"}),t.moveTo(r[0],r[1]),t.lineTo(r[2],r[3])),o&&"secret"===n.secretDoorStyleGM||!o&&"secret"===n.secretDoorStylePlayer){const t=Fr(50,u[0],u[1],d[0],d[1]),i=Fr(50,d[0],d[1],g[0],g[1]);e.lineStyle({width:5,color:PIXI.utils.string2hex(n.secretDoorSColor),alpha:1,alignment:.5,cap:"round"}),e.moveTo(m[6],m[7]),e.bezierCurveTo(t[0],t[1],t[2],t[3],d[0],d[1]),e.bezierCurveTo(i[6],i[7],i[4],i[5],m[2],m[3])}},Co=(e,t,i)=>{const n={doorLineThickness:t.invisibleWallLineThickness,doorThickness:t.invisibleWallThickness,interiorShadowColor:t.interiorShadowColor,interiorShadowThickness:t.interiorShadowThickness,wallThickness:t.wallThickness};xo(e,n,i)},xo=(e,t,i)=>{const n=Pr(i[0],i[1],i[2],i[3]),r=20/n,o=r+(n-40)/n,s=i[2]-i[0],a=i[3]-i[1],l=[i[0]+s*r,i[1]+a*r],c=[i[0]+s*o,i[1]+a*o],h=Fr(t.doorThickness,l[0],l[1],c[0],c[1]);e.lineStyle({width:t.wallThickness+t.interiorShadowThickness,color:PIXI.utils.string2hex(t.interiorShadowColor),alignment:.5,join:"round"}),e.moveTo(i[2],i[3]),e.lineTo(c[0],c[1]),e.moveTo(l[0],l[1]),e.lineTo(i[0],i[1]),e.lineStyle({width:t.doorLineThickness+t.interiorShadowThickness,color:PIXI.utils.string2hex(t.interiorShadowColor),alignment:.5,join:"round"}),e.drawPolygon(h[0],h[1],h[2],h[3],h[4],h[5],h[6],h[7],h[0],h[1])};class So extends PlaceableObject{constructor(e,t){super(t),this.journalEntry=e,this.history=[to.startState()],this.historyIndex=0}static embeddedName="Drawing";state(){return this.history[this.historyIndex]}async deleteAll(){const e=this.state(),t=to.startState();t.config=e.config,this.history=[t],this.historyIndex=0,await this.history[this.historyIndex].saveToJournalEntry(this.journalEntry),this.refresh()}async saveToSceneBackground(){const e=new PIXI.Container,t=new PIXI.Graphics,i=Math.ceil(canvas.scene.width*canvas.scene.padding/canvas.scene.grid.size)*canvas.scene.grid.size,n=Math.ceil(canvas.scene.height*canvas.scene.padding/canvas.scene.grid.size)*canvas.scene.grid.size,r=[i,n,i+canvas.scene.width,n,i+canvas.scene.width,n+canvas.scene.height,i,n+canvas.scene.height,i,n];t.beginFill(PIXI.utils.string2hex("#FFFFFF"),1),t.drawPolygon(r),t.endFill(),e.mask=t,this.mask=t;const o=new PIXI.Sprite;o.height=canvas.scene.height,o.width=canvas.scene.width,o.position.x=i,o.position.y=n,e.addChild(o),e.addChild(this);const s=`${canvas.scene.name}-dungeon.png`,a=await canvas.app.renderer.extract.base64(e),l=await fetch(a),c=await l.blob(),h=new File([c],s,{type:"image/png"});await FilePicker.upload("data","",h,{});const u=s;console.log(u),canvas.scene.img===u&&await canvas.scene.update({img:null},{render:!1}),await canvas.scene.update({img:u}),this.mask=null}draw(){return this.refresh(),this}refresh(){(async(e,t)=>{e.clear(),await no(e,t),await ro(e,t)})(this,this.state())}async maybeRefresh(e){if(e.id===this.journalEntry.id){const e=await to.loadFromJournalEntry(this.journalEntry);await this.pushState(e,!1)}}async loadFromJournalEntry(){const e=await to.loadFromJournalEntry(this.journalEntry);this.history=[e],this.historyIndex=0,this.refresh()}async undo(){this.historyIndex=Math.max(0,this.historyIndex-1),await this.history[this.historyIndex].saveToJournalEntry(this.journalEntry),await this.refresh()}async redo(){this.historyIndex=Math.min(this.history.length-1,this.historyIndex+1),await this.history[this.historyIndex].saveToJournalEntry(this.journalEntry),await this.refresh()}async pushState(e,t=!0){for(let e=this.history.length-1;e>this.historyIndex;e--)this.history.pop();this.history.push(e),this.historyIndex++,t&&await e.saveToJournalEntry(this.journalEntry),await this.refresh()}async setConfig(e){const t=this.state().clone();t.config=e,await this.pushState(t)}async addDoor(e,t,i,n){await this._addDoor(e,t,i,n,"doors")}async addSecretDoor(e,t,i,n){await this._addDoor(e,t,i,n,"secretDoors")}async addInvisibleWall(e,t,i,n){await this._addDoor(e,t,i,n,"invisibleWalls")}async _addDoor(e,t,i,n,r){const o=this.history[this.historyIndex].clone(),s=Dr(e,t,i,n),a=[],l=[];for(const r of o.interiorWalls){const o=Dr(r[0],r[1],r[2],r[3]);if(wr(o,s)){a.push(r);const o=kr(r[0],r[1],r[2],r[3]),s=Br(r[0],r[1],r[2],r[3]),c=kr(e,t,i,n),h=Br(e,t,i,n);l.push([o[0],o[1],c[0],c[1]]),l.push([h[0],h[1],s[0],s[1]])}}o.interiorWalls=o.interiorWalls.filter((e=>-1===a.indexOf(e))),o.interiorWalls=o.interiorWalls.concat(l),o[r].push([e,t,i,n]),await this.pushState(o)}async addInteriorWall(e,t,i,n){const r=this.history[this.historyIndex].clone(),o=Hr(e,t,i,n,r.doors);r.interiorWalls=r.interiorWalls.concat(o),await this.pushState(r)}async removeInteriorWalls(e){const t=Mr(e),i=this.history[this.historyIndex].interiorWalls.filter((e=>{const i=Dr(e[0],e[1],e[2],e[3]);return!Tr(t,i)}));if(i.length!=this.history[this.historyIndex].interiorWalls.length){const e=this.history[this.historyIndex].clone();e.interiorWalls=i,await this.pushState(e)}}async removeInvisibleWalls(e){const t=Mr(e),i=this.history[this.historyIndex].invisibleWalls.filter((e=>{const i=Dr(e[0],e[1],e[2],e[3]);return!Tr(t,i)}));if(i.length!=this.history[this.historyIndex].invisibleWalls.length){const e=this.history[this.historyIndex].clone();e.invisibleWalls=i,await this.pushState(e)}}async removeDoors(e){const t=Mr(e),i=this.history[this.historyIndex],n=i.doors.filter((e=>{const i=Dr(e[0],e[1],e[2],e[3]);return!Tr(t,i)}));if(n.length!=i.doors.length){const e=i.clone();e.doors=n,await this.pushState(e)}}async removeSecretDoors(e){const t=Mr(e),i=this.history[this.historyIndex],n=i.secretDoors.filter((e=>{const i=Dr(e[0],e[1],e[2],e[3]);return!Tr(t,i)}));if(n.length!=i.secretDoors.length){const e=i.clone();e.secretDoors=n,await this.pushState(e)}}async _addPoly(e){const t=this.history[this.historyIndex],i=t.clone();if(i.geometry){i.geometry=vr(i.geometry,e);if(n=t.geometry,r=e,Xn.touches(n,r)){const n=((e,t)=>On.intersection(e,t))(t.geometry,e),r=n.getCoordinates();if(r.length>1&&r.length%2==0)for(let e=0;e<r.length;e+=2){const t=Hr(r[e].x,r[e].y,r[e+1].x,r[e+1].y,i.doors);i.interiorWalls=i.interiorWalls.concat(t)}}else{const t=i.interiorWalls.filter((t=>{const i=Dr(t[0],t[1],t[2],t[3]);return!Tr(e,i)}));t.length!=i.interiorWalls.length&&(i.interiorWalls=t)}}else i.geometry=e;var n,r;await this.pushState(i)}async addRectangle(e){const t=Mr(e);this._addPoly(t)}async removeRectangle(e){const t=Mr(e);await this._removePoly(t)}async _removePoly(e){if(!this.history[this.historyIndex].geometry)return;if(!Tr(this.history[this.historyIndex].geometry,e))return;const t=this.history[this.historyIndex].clone();var i,n;t.geometry=(i=t.geometry,n=e,On.difference(i,n)),await this.pushState(t)}async addPolygon(e){const t=Rr(e);if(Ir(t))try{await this._addPoly(t)}catch(e){console.log(e),ui.notifications.error(game.i18n.localize("DD.ErrorAddingPolygon"))}else ui.notifications.error(game.i18n.localize("DD.ErrorInvalidShape"))}async removePolygon(e){const t=Rr(e);if(Ir(t))try{await this._removePoly(t)}catch(e){console.log(e),ui.notifications.error(game.i18n.localize("DD.ErrorRemovingPolygon"))}else ui.notifications.error(game.i18n.localize("DD.ErrorInvalidShape"))}async addEllipse(e,t,i,n){const r=Lr(e,t,i,n);if(Ir(r))try{await this._addPoly(r)}catch(e){console.log(e),ui.notifications.error(game.i18n.localize("DD.ErrorAddingPolygon"))}else ui.notifications.error(game.i18n.localize("DD.ErrorInvalidShape"))}async removeEllipse(e,t,i,n){const r=Lr(e,t,i,n);if(Ir(r))try{await this._removePoly(r)}catch(e){console.log(e),ui.notifications.error(game.i18n.localize("DD.ErrorRemovingPolygon"))}else ui.notifications.error(game.i18n.localize("DD.ErrorInvalidShape"))}async addThemeArea(e){const t=Rr(e);if(!Ir(t))return void ui.notifications.error(game.i18n.localize("DD.ErrorInvalidShape"));const n=(e=>{const t=e.split("."),n=t[0],r=t[1];if("custom"===n)return i()[r];return s[r]})(r()),o={points:e,config:n.config},a=this.history[this.historyIndex].clone();a.themeAreas.push(o),await this.pushState(a)}async removeThemeAreas(e){const t=Mr(e),i=this.history[this.historyIndex].themeAreas.filter((e=>{try{const i=Rr(e.points);return!Tr(t,i)}catch(e){return console.log(e),!1}}));if(i.length!=this.history[this.historyIndex].themeAreas.length){const e=this.history[this.historyIndex].clone();e.themeAreas=i,await this.pushState(e)}}}function Io(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function To(e,t){return e(t={exports:{}},t.exports),t.exports}var vo=To((function(e,t){function i(e,t){var i=[],n=[];return null==t&&(t=function(e,t){return i[0]===t?"[Circular ~]":"[Circular ~."+n.slice(0,i.indexOf(t)).join(".")+"]"}),function(r,o){if(i.length>0){var s=i.indexOf(this);~s?i.splice(s+1):i.push(this),~s?n.splice(s,1/0,r):n.push(r),~i.indexOf(o)&&(o=t.call(this,r,o))}else i.push(o);return null==e?o:e.call(this,r,o)}}(e.exports=function(e,t,n,r){return JSON.stringify(e,i(t,r),n)}).getSerialize=i}));vo.getSerialize;var wo=function(){var e=4022871197;return function(t){if(t){t=t.toString();for(var i=0;i<t.length;i++){var n=.02519603282416938*(e+=t.charCodeAt(i));n-=e=n>>>0,e=(n*=e)>>>0,e+=4294967296*(n-=e)}return 2.3283064365386963e-10*(e>>>0)}e=4022871197}},Eo=function(e){return function(){var t,i,n=48,r=1,o=n,s=new Array(n),a=0,l=new wo;for(t=0;t<n;t++)s[t]=l(Math.random());var c=function(){++o>=n&&(o=0);var e=1768863*s[o]+2.3283064365386963e-10*r;return s[o]=e-(r=0|e)},h=function(e){return Math.floor(e*(c()+11102230246251565e-32*(2097152*c()|0)))};h.string=function(e){var t,i="";for(t=0;t<e;t++)i+=String.fromCharCode(33+h(94));return i};var u=function(){var e=Array.prototype.slice.call(arguments);for(t=0;t<e.length;t++)for(i=0;i<n;i++)s[i]-=l(e[t]),s[i]<0&&(s[i]+=1)};return h.cleanString=function(e){return e=(e=(e=e.replace(/(^\s*)|(\s*$)/gi,"")).replace(/[\x00-\x1F]/gi,"")).replace(/\n /,"\n")},h.hashString=function(e){for(e=h.cleanString(e),l(e),t=0;t<e.length;t++)for(a=e.charCodeAt(t),i=0;i<n;i++)s[i]-=l(a),s[i]<0&&(s[i]+=1)},h.seed=function(e){null==e&&(e=Math.random()),"string"!=typeof e&&(e=vo(e,(function(e,t){return"function"==typeof t?t.toString():t}))),h.initState(),h.hashString(e)},h.addEntropy=function(){var e=[];for(t=0;t<arguments.length;t++)e.push(arguments[t]);u(a+++(new Date).getTime()+e.join("")+Math.random())},h.initState=function(){for(l(),t=0;t<n;t++)s[t]=l(" ");r=1,o=n},h.done=function(){l=null},void 0!==e&&h.seed(e),h.range=function(e){return h(e)},h.random=function(){return h(Number.MAX_VALUE-1)/Number.MAX_VALUE},h.floatBetween=function(e,t){return h.random()*(t-e)+e},h.intBetween=function(e,t){return Math.floor(h.random()*(t-e+1))+e},h}()};Eo.create=function(e){return new Eo(e)};var Ao=Eo,Mo=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i,n=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),r=(i=Ao)&&i.__esModule?i:{default:i};var o=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.rng=r.default.create(t)}return n(e,[{key:"int",value:function(e,t){return this.rng.intBetween(e,t)}},{key:"float",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.rng.floatBetween(e,t)}},{key:"vec",value:function(e,t){return[this.int(e[0],t[0]),this.int(e[1],t[1])]}},{key:"choose",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=this.rng.intBetween(0,e.length-1);return t?e.splice(i,1)[0]:e[i]}},{key:"maybe",value:function(e){return this.float()<=e}}]),e}();t.default=o}));Io(Mo);var No=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var i=[],n=!0,r=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(i.push(s.value),!t||i.length!==t);n=!0);}catch(e){r=!0,o=e}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return i}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},n=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}();function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[0,0],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;r(this,e),this.rows=[],this.size=[];for(var n=0;n<t[1];n++){for(var o=[],s=0;s<t[0];s++)o.push(i);this.rows.push(o)}}return n(e,[{key:"iter",value:function(e,t){for(var i=0;i<this.size[1];i++)for(var n=0;n<this.size[0];n++)e.apply(t,[[n,i],this.get([n,i])])}},{key:"get",value:function(e){var t=i(e,2),n=t[0],r=t[1];if(void 0!==this.rows[r])return this.rows[r][n]}},{key:"set",value:function(e,t){var n=i(e,2),r=n[0],o=n[1];this.rows[o][r]=t}},{key:"set_horizontal_line",value:function(e,t,n){for(var r=i(e,2),o=r[0],s=r[1],a=Math.abs(t),l=t<0?-1:1,c=0;c<=a;c++)this.set([o+c*l,s],n)}},{key:"set_vertical_line",value:function(e,t,n){for(var r=i(e,2),o=r[0],s=r[1],a=Math.abs(t),l=t<0?-1:1,c=0;c<=a;c++)this.set([o,s+c*l],n)}},{key:"get_square",value:function(t,n){for(var r=i(t,2),o=r[0],s=r[1],a=i(n,2),l=a[0],c=a[1],h=new e([l,c]),u=0;u<l;u++)for(var d=0;d<c;d++)h.set([u,d],this.get([o+u,s+d]));return h}},{key:"set_square",value:function(e,t,n){var r=i(e,2),o=r[0],s=r[1],a=i(t,2),l=a[0],c=a[1],h=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(h)for(var u=0;u<l;u++)for(var d=0;d<c;d++)this.set([o+u,s+d],n);else this.line_h([o,s],l-1,n),this.line_h([o,s+c-1],l-1,n),this.line_v([o,s],c-1,n),this.line_v([o+l-1,s],c-1,n)}}]),e}();t.default=o}));Io(No);var Do=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var i=[],n=!0,r=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(i.push(s.value),!t||i.length!==t);n=!0);}catch(e){r=!0,o=e}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return i}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function n(e,t,n,r){if(Array.isArray(e)&&Array.isArray(t)){var o=i(t,2);n=o[0],r=o[1];var s=i(e,2);e=s[0],t=s[1]}this.setValues(e,t,n,r)}var r=n.prototype;r.setValues=function(e,t,i,n){return this.x=e||0,this.y=t||0,this.width=i||0,this.height=n||0,this},r.extend=function(e,t,i,n){return n=n||0,e+(i=i||0)>this.x+this.width&&(this.width=e+i-this.x),t+n>this.y+this.height&&(this.height=t+n-this.y),e<this.x&&(this.width+=this.x-e,this.x=e),t<this.y&&(this.height+=this.y-t,this.y=t),this},r.pad=function(e,t,i,n){return this.x-=t,this.y-=e,this.width+=t+n,this.height+=e+i,this},r.copy=function(e){return this.setValues(e.x,e.y,e.width,e.height)},r.contains=function(e,t,i,n){return i=i||0,n=n||0,e>=this.x&&e+i<=this.x+this.width&&t>=this.y&&t+n<=this.y+this.height},r.union=function(e){return this.clone().extend(e.x,e.y,e.width,e.height)},r.intersection=function(e){var t=e.x,i=e.y,r=t+e.width,o=i+e.height;return this.x>t&&(t=this.x),this.y>i&&(i=this.y),this.x+this.width<r&&(r=this.x+this.width),this.y+this.height<o&&(o=this.y+this.height),r<=t||o<=i?null:new n(t,i,r-t,o-i)},r.intersects=function(e){return e.x<=this.x+this.width&&this.x<=e.x+e.width&&e.y<=this.y+this.height&&this.y<=e.y+e.height},r.isEmpty=function(){return this.width<=0||this.height<=0},r.clone=function(){return new n(this.x,this.y,this.width,this.height)},r.toString=function(){return"[Rectangle (x="+this.x+" y="+this.y+" width="+this.width+" height="+this.height+")]"},t.default=n}));Io(Do);var Ro=To((function(e,t){var i,n,r,o,s;function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}Object.defineProperty(t,"__esModule",{value:!0});var l=t.TOP=0,c=t.RIGHT=90,h=t.BOTTOM=180,u=t.LEFT=270;t.FACING=[l,c,h,u],t.FACING_TO_STRING=(a(i={},l,"top"),a(i,c,"right"),a(i,h,"bottom"),a(i,u,"left"),i),t.FACING_TO_MOD=(a(n={},l,[0,-1]),a(n,c,[1,0]),a(n,h,[0,1]),a(n,u,[-1,0]),n),t.FACING_INVERSE=(a(r={},l,h),a(r,c,u),a(r,h,l),a(r,u,c),r),t.FACING_MOD_RIGHT=(a(o={},l,c),a(o,c,h),a(o,h,u),a(o,u,l),o),t.FACING_MOD_LEFT=(a(s={},l,u),a(s,c,l),a(s,h,c),a(s,u,h),s)}));Io(Ro),Ro.TOP,Ro.RIGHT,Ro.BOTTOM,Ro.LEFT,Ro.FACING,Ro.FACING_TO_STRING,Ro.FACING_TO_MOD,Ro.FACING_INVERSE,Ro.FACING_MOD_RIGHT,Ro.FACING_MOD_LEFT;var Lo=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var i=[],n=!0,r=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(i.push(s.value),!t||i.length!==t);n=!0);}catch(e){r=!0,o=e}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return i}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function n(e,t){return[e[0]+t[0],e[1]+t[1]]}function r(e,t){return n(e,Ro.FACING_TO_MOD[t])}t.iter_adjacent=function(e,t){var n=i(e,2),r=n[0],o=n[1];t([r-1,o]),t([r,o-1]),t([r+1,o]),t([r,o+1])},t.iter_2d=function(e,t){for(var i=0;i<e[1];i++)for(var n=0;n<e[0];n++)t([n,i])},t.iter_range=function(e,t,i){var n=void 0,r=void 0,o=void 0,s=void 0;e[0]<t[0]?(n=e[0],o=t[0]):(n=t[0],o=e[0]);e[1]<t[1]?(r=e[1],s=t[1]):(r=t[1],s=e[1]);for(var a=n;a<=o;a++)for(var l=r;l<=s;l++)i([a,l])},t.intersects=function(e,t,i,n){return!i[0]>e[0]+t[0]||i[0]+n[0]<e[0]||i[1]>e[1]+t[1]||i[1]+n[1]<t[1]},t.array_test=function(e,t){for(var i=0;i<e.length;i++)if(t(e[i]))return!0;return!1},t.add=n,t.shift=r,t.shift_left=function(e,t){return r(e,(t-90+360)%360)},t.shift_right=function(e,t){return r(e,(t+90+360)%360)}}));Io(Lo),Lo.iter_adjacent,Lo.iter_2d,Lo.iter_range,Lo.intersects,Lo.array_test,Lo.add,Lo.shift,Lo.shift_left,Lo.shift_right;var Po=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var i=[],n=!0,r=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(i.push(s.value),!t||i.length!==t);n=!0);}catch(e){r=!0,o=e}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return i}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},n=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),r=s(No),o=s(Do);function s(e){return e&&e.__esModule?e:{default:e}}var a=0,l=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),t=Object.assign({size:[1,1],position:[0,0],parent:null,max_exits:10,tag:""},t),Object.assign(this,t),this.options=t,this.id=a++,this.walls=new r.default(this.size,!0),this.perimeter=[],this.exits=[],this.children=[]}return n(e,[{key:"is_exit",value:function(e){var t=i(e,2),n=t[0],r=t[1];return 0!==this.exits.filter((function(e){var t,i=(t=e,Array.isArray(t)?t:Array.from(t)),o=i[0],s=i[1];return i.slice(2),o===n&&s===r})).length}},{key:"get_non_wall_tiles",value:function(){var e=[];return this.walls.iter((function(t,i){i||e.push(t)})),e}},{key:"get_perimeter_by_facing",value:function(e){return this.perimeter.filter((function(t){var n=i(t,2),r=i(n[0],2);r[0],r[1];var o=n[1];return e===o}))}},{key:"get_inner_perimeter",value:function(){var e=this,t=[],i=void 0,n=void 0;return this.walls.iter((function(r,o){o||e.is_exit(r)||(i=!1,n=!1,(0,Lo.iter_adjacent)(r,(function(t){i=i||e.walls.get(t),n=n||e.is_exit(t)})),i&&!n&&t.push(r))})),t}},{key:"parent_pos",value:function(e){var t=i(e,2),n=t[0],r=t[1];return[this.position[0]+n,this.position[1]+r]}},{key:"global_pos",value:function(e){return e=this.parent_pos(e),this.parent&&(e=this.parent.global_pos(e)),e}},{key:"local_pos",value:function(e){return[e[0]-this.position[0],e[1]-this.position[1]]}},{key:"get_center_pos",value:function(){return[Math.floor(this.size[0]/2),Math.floor(this.size[1]/2)]}},{key:"add_perimeter",value:function(e,t,i){var n=this;(0,Lo.iter_range)(e,t,(function(e){n.perimeter.push([e,i])}))}},{key:"remove_perimeter",value:function(e){this.perimeter=this.perimeter.filter((function(t){var n=i(t,3),r=n[0],o=n[1];return n[2],!e.contains(r,o,1,1)}))}},{key:"intersects",value:function(e){return(0,Lo.intersects)(this.position,this.size,e.position,e.size)}},{key:"add_piece",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;(0,Lo.array_test)(this.children,(function(t){return t.id===e.id}))||(e.parent=this,t&&(e.position=t),this.children.push(e),this.paste_in(e))}},{key:"paste_in",value:function(e){var t=this;(0,Lo.iter_2d)(e.size,(function(i){e.walls.get(i)||t.walls.set(e.parent_pos(i),!1)}))}},{key:"add_exit",value:function(e,t){this.walls.set(e[0],!1),this.parent&&this.parent.paste_in(this),this.exits.push([e[0],e[1],t])}},{key:"print",value:function(){for(var e=0;e<this.size[1];e++){for(var t="",i=0;i<this.size[0];i++)this.start_pos&&this.start_pos[0]===i&&this.start_pos[1]===e?t+="s":t+=this.walls.get([i,e])?"x":" ";console.log(t)}}},{key:"rect",get:function(){return new o.default(this.position[0],this.position[1],this.size[0],this.size[1])}}]),e}();t.default=l}));Io(Po);var Oo=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),n=function e(t,i,n){null===t&&(t=Function.prototype);var r=Object.getOwnPropertyDescriptor(t,i);if(void 0===r){var o=Object.getPrototypeOf(t);return null===o?void 0:e(o,i,n)}if("value"in r)return r.value;var s=r.get;return void 0!==s?s.call(n):void 0},r=a(Mo),o=a(Po),s=a(Do);function a(e){return e&&e.__esModule?e:{default:e}}var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return i.random=new r.default(i.seed),i.start_pos=[0,0],i.minx=i.size[0],i.maxx=0,i.miny=i.size[1],i.maxy=0,i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"add_piece",value:function(e,i){n(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),"add_piece",this).call(this,e,i),this.minx=Math.min(this.minx,e.position[0]),this.maxx=Math.max(this.maxx,e.position[0]+e.size[0]),this.miny=Math.min(this.miny,e.position[1]),this.maxy=Math.max(this.maxy,e.position[1]+e.size[1])}},{key:"trim",value:function(){var e=this;this.size=[this.maxx-this.minx,this.maxy-this.miny],this.children.forEach((function(t){t.position=[t.position[0]-e.minx,t.position[1]-e.miny]})),this.start_pos=[this.start_pos[0]-this.minx,this.start_pos[1]-this.miny],this.walls=this.walls.get_square([this.minx,this.miny],this.size),this.minx=0,this.maxx=this.size[0],this.miny=0,this.maxy=this.size[1]}},{key:"generate",value:function(){throw new Error("not implemented")}},{key:"fits",value:function(e,t){var i=void 0,n=void 0,r=void 0;for(n=0;n<e.size[0];n++)for(r=0;r<e.size[1];r++)if(!1===(i=this.walls.get([t[0]+n,t[1]+r]))||null==i)return!1;return!0}},{key:"join_exits",value:function(e,t,i,n){e.add_exit(t,i),i.add_exit(n,e);var r=e.rect.intersection(i.rect);r&&(e.remove_perimeter(new s.default(e.local_pos([r[0],r[1]],[r.width,r.height]))),i.remove_perimeter(new s.default(i.local_pos([r[0],r[1]],[r.width,r.height]))))}},{key:"join",value:function(e,t,i,n){n||(n=this.random.choose(e.get_perimeter_by_facing(Ro.FACING_INVERSE[t[1]])));var r=e.parent_pos(n[0]),o=[r[0]-t[0][0],r[1]-t[0][1]];return!!this.fits(i,o)&&(this.join_exits(e,n,i,t),this.add_piece(i,o),!0)}},{key:"get_open_pieces",value:function(e){return e.filter((function(e){return e.exits.length<e.max_exits&&e.perimeter.length}))}}]),t}(o.default);t.default=l}));Io(Oo);var ko=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i,n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var i=[],n=!0,r=!1,o=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(i.push(s.value),!t||i.length!==t);n=!0);}catch(e){r=!0,o=e}finally{try{!n&&a.return&&a.return()}finally{if(r)throw o}}return i}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};var r=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),e.room_size=e.size,e.size=[e.size[0]+2,e.size[1]+2],e=Object.assign({},{symmetric:!1},e);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));if(i.walls.set_square([1,1],i.room_size,!1,!0),i.symmetric){var r=i.get_center_pos(),o=n(r,2),s=o[0],a=o[1];i.perimeter=[[[s,0],180],[[i.size[0]-1,a],270],[[s,i.size[1]-1],0],[[0,a],90]]}else i.add_perimeter([1,0],[i.size[0]-2,0],180),i.add_perimeter([0,1],[0,i.size[1]-2],90),i.add_perimeter([1,i.size[1]-1],[i.size[0]-2,i.size[1]-1],0),i.add_perimeter([i.size[0]-1,1],[i.size[0]-1,i.size[1]-2],270);return i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(((i=Po)&&i.__esModule?i:{default:i}).default);t.default=r}));Io(ko);var Bo=To((function(e,t){var i;Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(e=Object.assign({},{length:2,facing:0,max_exits:4},e)).size=0===e.facing||180===e.facing?[1,e.length]:[e.length,1];var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),n=i.size[0]-1,r=i.size[1]-1;return 180===i.facing?i.perimeter=[[[1,r],0],[[0,1],90],[[2,1],270],[[1,0],180]]:270===i.facing?i.perimeter=[[[0,1],90],[[n-1,0],180],[[n-1,2],0],[[n,1],270]]:0===i.facing?i.perimeter=[[[1,0],180],[[2,r-1],270],[[0,r-1],90],[[1,r],0]]:90===i.facing&&(i.perimeter=[[[n,1],270],[[1,2],0],[[1,0],180],[[0,1],90]]),i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(((i=ko)&&i.__esModule?i:{default:i}).default);t.default=n}));Io(Bo);var Fo=To((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),n=s(Oo),r=s(Bo),o=s(ko);function s(e){return e&&e.__esModule?e:{default:e}}var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),e=Object.assign({},{max_iterations:50,size:[100,100],rooms:{initial:{min_size:[3,3],max_size:[3,3],max_exits:1},any:{min_size:[2,2],max_size:[5,5],max_exits:4}},max_corridor_length:6,min_corridor_length:2,corridor_density:.5,symmetric_rooms:!1,interconnects:1,max_interconnect_length:10,room_count:10},e);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));i.room_tags=Object.keys(i.rooms).filter((function(e){return"any"!==e&&"initial"!==e}));for(var n=i.room_tags.length;n<i.room_count;n++)i.room_tags.push("any");return i.rooms=[],i.corridors=[],i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),i(t,[{key:"add_room",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=void 0,r=void 0;if(i)r=i,i=null;else{if(!(n=this.get_open_pieces(this.children))||!n.length)return console.log("ran out of choices connecting"),!1;r=this.random.choose(n)}if(t){if(this.join(r,t,e))return!0}else for(var o=e.perimeter.slice();o.length;)if(this.join(r,this.random.choose(o,!0),e))return!0;return!1}},{key:"new_corridor",value:function(){return new r.default({length:this.random.int(this.min_corridor_length,this.max_corridor_length),facing:this.random.choose(Ro.FACING)})}},{key:"add_interconnect",value:function(){var e={},t=void 0,i=void 0,n=void 0;this.children.forEach((function(i){i.exits.length<i.max_exits&&i.perimeter.forEach((function(r){n=i.parent_pos(r[0]),t=n[0]+"_"+n[1],e[t]=[r,i]}))}));for(var o=void 0,s=void 0,a=void 0,l=void 0,c=this.children.length-1;c--;c>=0)if((o=this.children[c]).exits.length<o.max_exits)for(var h=0;h<o.perimeter.length;h++)for(i=o.perimeter[h],n=o.parent_pos(i[0]),s=-1;s<=this.max_interconnect_length&&this.walls.get(n)&&this.walls.get((0,Lo.shift_left)(n,i[1]))&&this.walls.get((0,Lo.shift_right)(n,i[1]));){if(t=n[0]+"_"+n[1],e[t]&&e[t][1].id!==o.id)return l=e[t][1],s>-1?(a=new r.default({length:s,facing:i[1]}),!!this.join(o,a.perimeter[0],a,i)&&(this.join_exits(l,e[t][0],a,a.perimeter[a.perimeter.length-1]),!0)):(this.join_exits(l,e[t][0],o,i),!0);n=(0,Lo.shift)(n,i[1]),s++}}},{key:"new_room",value:function(e){e=e||this.random.choose(this.room_tags,!1);var t=this.options.rooms[e],i=new o.default({size:this.random.vec(t.min_size,t.max_size),max_exits:t.max_exits,symmetric:this.symmetric_rooms,tag:e});return this.room_tags.splice(this.room_tags.indexOf(e),1),"initial"===e&&(this.initial_room=i),i}},{key:"generate",value:function(){var e=this.options.room_count-1,t=this.new_room(this.options.rooms.initial?"initial":void 0),i=Math.round(this.corridor_density*e);this.add_piece(t,this.options.rooms.initial&&this.options.rooms.initial.position?this.options.rooms.initial.position:this.get_center_pos());for(var n=void 0,r=this.max_iterations;(i||e)&&--r;)if((n=this.random.int(1,e+i))<=i){var o=this.new_corridor(),s=this.add_room(o,o.perimeter[0]);i--,e>0&&s&&(this.add_room(this.new_room(),null,o),e--)}else this.add_room(this.new_room()),e--;for(n=0;n<this.interconnects;n++)this.add_interconnect();return this.trim(),this.initial_room&&(this.start_pos=this.initial_room.global_pos(this.initial_room.get_center_pos())),r>0}}]),t}(n.default);t.default=a}));Io(Fo);var Go=Fo.default,Wo=To((function(e,t){!function(){var i=9007199254740992,n="0123456789",r="abcdefghijklmnopqrstuvwxyz",o=r.toUpperCase(),s=n+"abcdef";function a(e){this.name="UnsupportedError",this.message=e||"This feature is not supported on this platform"}a.prototype=new Error,a.prototype.constructor=a;var l=Array.prototype.slice;function c(e){if(!(this instanceof c))return e||(e=null),null===e?new c:new c(e);if("function"==typeof e)return this.random=e,this;arguments.length&&(this.seed=0);for(var t=0;t<arguments.length;t++){var i=0;if("[object String]"===Object.prototype.toString.call(arguments[t]))for(var n=0;n<arguments[t].length;n++){for(var r=0,o=0;o<arguments[t].length;o++)r=arguments[t].charCodeAt(o)+(r<<6)+(r<<16)-r;i+=r}else i=arguments[t];this.seed+=(arguments.length-t)*i}return this.mt=this.mersenne_twister(this.seed),this.bimd5=this.blueimp_md5(),this.random=function(){return this.mt.random(this.seed)},this}function h(e,t){if(e=e||{},t)for(var i in t)void 0===e[i]&&(e[i]=t[i]);return e}function u(e,t){if(e)throw new RangeError(t)}c.prototype.VERSION="1.1.8";var d=function(){throw new Error("No Base64 encoder available.")};function g(e){this.c=e}function m(e){this.c=e}function p(e){this.c=e}function f(e){return function(){return this.natural(e)}}"function"==typeof btoa?d=btoa:"function"==typeof Buffer&&(d=function(e){return new Buffer(e).toString("base64")}),c.prototype.bool=function(e){return u((e=h(e,{likelihood:50})).likelihood<0||e.likelihood>100,"Chance: Likelihood accepts values from 0 to 100."),100*this.random()<e.likelihood},c.prototype.falsy=function(e){var t=(e=h(e,{pool:[!1,null,0,NaN,""]})).pool;return t[this.integer({min:0,max:t.length})]},c.prototype.animal=function(e){if(void 0!==(e=h(e)).type)return u(!this.get("animals")[e.type.toLowerCase()],"Please pick from desert, ocean, grassland, forest, zoo, pets, farm."),this.pick(this.get("animals")[e.type.toLowerCase()]);return this.pick(this.get("animals")[this.pick(["desert","forest","ocean","zoo","farm","pet","grassland"])])},c.prototype.character=function(e){var t,i,s="!@#$%^&*()[]";return t="lower"===(e=h(e)).casing?r:"upper"===e.casing?o:r+o,e.pool?i=e.pool:(i="",e.alpha&&(i+=t),e.numeric&&(i+=n),e.symbols&&(i+=s),i||(i=t+n+s)),i.charAt(this.natural({max:i.length-1}))},c.prototype.floating=function(e){u((e=h(e,{fixed:4})).fixed&&e.precision,"Chance: Cannot specify both fixed and precision.");var t=Math.pow(10,e.fixed),n=i/t,r=-n;u(e.min&&e.fixed&&e.min<r,"Chance: Min specified is out of range with fixed. Min should be, at least, "+r),u(e.max&&e.fixed&&e.max>n,"Chance: Max specified is out of range with fixed. Max should be, at most, "+n),e=h(e,{min:r,max:n});var o=(this.integer({min:e.min*t,max:e.max*t})/t).toFixed(e.fixed);return parseFloat(o)},c.prototype.integer=function(e){return u((e=h(e,{min:-9007199254740992,max:i})).min>e.max,"Chance: Min cannot be greater than Max."),Math.floor(this.random()*(e.max-e.min+1)+e.min)},c.prototype.natural=function(e){if("number"==typeof(e=h(e,{min:0,max:i})).numerals&&(u(e.numerals<1,"Chance: Numerals cannot be less than one."),e.min=Math.pow(10,e.numerals-1),e.max=Math.pow(10,e.numerals)-1),u(e.min<0,"Chance: Min cannot be less than zero."),e.exclude){for(var t in u(!Array.isArray(e.exclude),"Chance: exclude must be an array."),e.exclude)u(!Number.isInteger(e.exclude[t]),"Chance: exclude must be numbers.");var n=e.min+this.natural({max:e.max-e.min-e.exclude.length}),r=e.exclude.sort();for(var o in r){if(n<r[o])break;n++}return n}return this.integer(e)},c.prototype.prime=function(e){u((e=h(e,{min:0,max:1e4})).min<0,"Chance: Min cannot be less than zero."),u(e.min>e.max,"Chance: Min cannot be greater than Max.");var t=_.primes[_.primes.length-1];if(e.max>t)for(var i=t+2;i<=e.max;++i)this.is_prime(i)&&_.primes.push(i);var n=_.primes.filter((function(t){return t>=e.min&&t<=e.max}));return this.pick(n)},c.prototype.is_prime=function(e){if(e%1||e<2)return!1;if(e%2==0)return 2===e;if(e%3==0)return 3===e;for(var t=Math.sqrt(e),i=5;i<=t;i+=6)if(e%i==0||e%(i+2)==0)return!1;return!0},c.prototype.hex=function(e){u((e=h(e,{min:0,max:i,casing:"lower"})).min<0,"Chance: Min cannot be less than zero.");var t=this.natural({min:e.min,max:e.max});return"upper"===e.casing?t.toString(16).toUpperCase():t.toString(16)},c.prototype.letter=function(e){e=h(e,{casing:"lower"});var t=this.character({pool:"abcdefghijklmnopqrstuvwxyz"});return"upper"===e.casing&&(t=t.toUpperCase()),t},c.prototype.string=function(e){(e=h(e,{min:5,max:20})).length||(e.length=this.natural({min:e.min,max:e.max})),u(e.length<0,"Chance: Length cannot be less than zero.");var t=e.length;return this.n(this.character,t,e).join("")},g.prototype={substitute:function(){return this.c}},m.prototype={substitute:function(){if(!/[{}\\]/.test(this.c))throw new Error('Invalid escape sequence: "\\'+this.c+'".');return this.c}},p.prototype={replacers:{"#":function(e){return e.character({pool:n})},A:function(e){return e.character({pool:o})},a:function(e){return e.character({pool:r})}},substitute:function(e){var t=this.replacers[this.c];if(!t)throw new Error('Invalid replacement character: "'+this.c+'".');return t(e)}},c.prototype.template=function(e){if(!e)throw new Error("Template string is required");var t=this;return function(e){for(var t=[],i="identity",n=0;n<e.length;n++){var r=e[n];switch(i){case"escape":t.push(new m(r)),i="identity";break;case"identity":"{"===r?i="replace":"\\"===r?i="escape":t.push(new g(r));break;case"replace":"}"===r?i="identity":t.push(new p(r))}}return t}(e).map((function(e){return e.substitute(t)})).join("")},c.prototype.buffer=function(e){if("undefined"==typeof Buffer)throw new a("Sorry, the buffer() function is not supported on your platform");u((e=h(e,{length:this.natural({min:5,max:20})})).length<0,"Chance: Length cannot be less than zero.");var t=e.length,i=this.n(this.character,t,e);return Buffer.from(i)},c.prototype.capitalize=function(e){return e.charAt(0).toUpperCase()+e.substr(1)},c.prototype.mixin=function(e){for(var t in e)c.prototype[t]=e[t];return this},c.prototype.unique=function(e,t,i){u("function"!=typeof e,"Chance: The first argument must be a function.");var n=function(e,t){return-1!==e.indexOf(t)};i&&(n=i.comparator||n);for(var r,o=[],s=0,a=50*t,c=l.call(arguments,2);o.length<t;){var h=JSON.parse(JSON.stringify(c));if(n(o,r=e.apply(this,h))||(o.push(r),s=0),++s>a)throw new RangeError("Chance: num is likely too large for sample set")}return o},c.prototype.n=function(e,t){u("function"!=typeof e,"Chance: The first argument must be a function."),void 0===t&&(t=1);var i=t,n=[],r=l.call(arguments,2);for(i=Math.max(0,i);i--;null)n.push(e.apply(this,r));return n},c.prototype.pad=function(e,t,i){return i=i||"0",(e+="").length>=t?e:new Array(t-e.length+1).join(i)+e},c.prototype.pick=function(e,t){if(0===e.length)throw new RangeError("Chance: Cannot pick() from an empty array");return t&&1!==t?this.shuffle(e).slice(0,t):e[this.natural({max:e.length-1})]},c.prototype.pickone=function(e){if(0===e.length)throw new RangeError("Chance: Cannot pickone() from an empty array");return e[this.natural({max:e.length-1})]},c.prototype.pickset=function(e,t){if(0===t)return[];if(0===e.length)throw new RangeError("Chance: Cannot pickset() from an empty array");if(t<0)throw new RangeError("Chance: Count must be a positive number");if(t&&1!==t){var i=e.slice(0),n=i.length;return this.n((function(){var e=this.natural({max:--n}),t=i[e];return i[e]=i[n],t}),Math.min(n,t))}return[this.pickone(e)]},c.prototype.shuffle=function(e){for(var t,i=[],n=0,r=Number(e.length),o=function(e){return Array.apply(null,Array(e)).map((function(e,t){return t}))}(r),s=r-1,a=0;a<r;a++)n=o[t=this.natural({max:s})],i[a]=e[n],o[t]=o[s],s-=1;return i},c.prototype.weighted=function(e,t,i){if(e.length!==t.length)throw new RangeError("Chance: Length of array and weights must match");for(var n,r=0,o=0;o<t.length;++o){if(n=t[o],isNaN(n))throw new RangeError("Chance: All weights must be numbers");n>0&&(r+=n)}if(0===r)throw new RangeError("Chance: No valid entries in array weights");var s,a=this.random()*r,l=0,c=-1;for(o=0;o<t.length;++o){if(l+=n=t[o],n>0){if(a<=l){s=o;break}c=o}o===t.length-1&&(s=c)}var h=e[s];return(i=void 0!==i&&i)&&(e.splice(s,1),t.splice(s,1)),h},c.prototype.paragraph=function(e){var t=(e=h(e)).sentences||this.natural({min:3,max:7}),i=this.n(this.sentence,t),n=!0===e.linebreak?"\n":" ";return i.join(n)},c.prototype.sentence=function(e){var t,i=(e=h(e)).words||this.natural({min:12,max:18}),n=e.punctuation;return t=this.n(this.word,i).join(" "),t=this.capitalize(t),!1===n||/^[.?;!:]$/.test(n)||(n="."),n&&(t+=n),t},c.prototype.syllable=function(e){for(var t,i=(e=h(e)).length||this.natural({min:2,max:3}),n="bcdfghjklmnprstvwz",r="aeiou",o="",s=0;s<i;s++)o+=t=0===s?this.character({pool:"bcdfghjklmnprstvwzaeiou"}):-1===n.indexOf(t)?this.character({pool:n}):this.character({pool:r});return e.capitalize&&(o=this.capitalize(o)),o},c.prototype.word=function(e){u((e=h(e)).syllables&&e.length,"Chance: Cannot specify both syllables AND length.");var t=e.syllables||this.natural({min:1,max:3}),i="";if(e.length){do{i+=this.syllable()}while(i.length<e.length);i=i.substring(0,e.length)}else for(var n=0;n<t;n++)i+=this.syllable();return e.capitalize&&(i=this.capitalize(i)),i},c.prototype.age=function(e){var t;switch((e=h(e)).type){case"child":t={min:0,max:12};break;case"teen":t={min:13,max:19};break;case"adult":default:t={min:18,max:65};break;case"senior":t={min:65,max:100};break;case"all":t={min:0,max:100}}return this.natural(t)},c.prototype.birthday=function(e){var t=this.age(e),i=(new Date).getFullYear();if(e&&e.type){var n=new Date,r=new Date;n.setFullYear(i-t-1),r.setFullYear(i-t),e=h(e,{min:n,max:r})}else e=h(e,{year:i-t});return this.date(e)},c.prototype.cpf=function(e){e=h(e,{formatted:!0});var t=this.n(this.natural,9,{max:9}),i=2*t[8]+3*t[7]+4*t[6]+5*t[5]+6*t[4]+7*t[3]+8*t[2]+9*t[1]+10*t[0];(i=11-i%11)>=10&&(i=0);var n=2*i+3*t[8]+4*t[7]+5*t[6]+6*t[5]+7*t[4]+8*t[3]+9*t[2]+10*t[1]+11*t[0];(n=11-n%11)>=10&&(n=0);var r=""+t[0]+t[1]+t[2]+"."+t[3]+t[4]+t[5]+"."+t[6]+t[7]+t[8]+"-"+i+n;return e.formatted?r:r.replace(/\D/g,"")},c.prototype.cnpj=function(e){e=h(e,{formatted:!0});var t=this.n(this.natural,12,{max:12}),i=2*t[11]+3*t[10]+4*t[9]+5*t[8]+6*t[7]+7*t[6]+8*t[5]+9*t[4]+2*t[3]+3*t[2]+4*t[1]+5*t[0];(i=11-i%11)<2&&(i=0);var n=2*i+3*t[11]+4*t[10]+5*t[9]+6*t[8]+7*t[7]+8*t[6]+9*t[5]+2*t[4]+3*t[3]+4*t[2]+5*t[1]+6*t[0];(n=11-n%11)<2&&(n=0);var r=""+t[0]+t[1]+"."+t[2]+t[3]+t[4]+"."+t[5]+t[6]+t[7]+"/"+t[8]+t[9]+t[10]+t[11]+"-"+i+n;return e.formatted?r:r.replace(/\D/g,"")},c.prototype.first=function(e){return e=h(e,{gender:this.gender(),nationality:"en"}),this.pick(this.get("firstNames")[e.gender.toLowerCase()][e.nationality.toLowerCase()])},c.prototype.profession=function(e){return(e=h(e)).rank?this.pick(["Apprentice ","Junior ","Senior ","Lead "])+this.pick(this.get("profession")):this.pick(this.get("profession"))},c.prototype.company=function(){return this.pick(this.get("company"))},c.prototype.gender=function(e){return e=h(e,{extraGenders:[]}),this.pick(["Male","Female"].concat(e.extraGenders))},c.prototype.last=function(e){if("*"===(e=h(e,{nationality:"*"})).nationality){var t=[],i=this.get("lastNames");return Object.keys(i).forEach((function(e){t=t.concat(i[e])})),this.pick(t)}return this.pick(this.get("lastNames")[e.nationality.toLowerCase()])},c.prototype.israelId=function(){for(var e=this.string({pool:"0123456789",length:8}),t=0,i=0;i<e.length;i++){var n=e[i]*(i/2===parseInt(i/2)?1:2);n=this.pad(n,2).toString(),t+=n=parseInt(n[0])+parseInt(n[1])}return e+=(10-parseInt(t.toString().slice(-1))).toString().slice(-1)},c.prototype.mrz=function(e){var t,i,n,r,o=function(e){var t="<ABCDEFGHIJKLMNOPQRSTUVWXYXZ".split(""),i=[7,3,1],n=0;return"string"!=typeof e&&(e=e.toString()),e.split("").forEach((function(e,r){var o=t.indexOf(e);e=-1!==o?0===o?0:o+9:parseInt(e,10),n+=e*=i[r%i.length]})),n%10},s=this;return e=h(e,{first:this.first(),last:this.last(),passportNumber:this.integer({min:1e8,max:999999999}),dob:(t=s.birthday({type:"adult"}),[t.getFullYear().toString().substr(2),s.pad(t.getMonth()+1,2),s.pad(t.getDate(),2)].join("")),expiry:function(){var e=new Date;return[(e.getFullYear()+5).toString().substr(2),s.pad(e.getMonth()+1,2),s.pad(e.getDate(),2)].join("")}(),gender:"Female"===this.gender()?"F":"M",issuer:"GBR",nationality:"GBR"}),n=function(e){return new Array(e+1).join("<")},(r=["P<",(i=e).issuer,i.last.toUpperCase(),"<<",i.first.toUpperCase(),n(39-(i.last.length+i.first.length+2)),i.passportNumber,o(i.passportNumber),i.nationality,i.dob,o(i.dob),i.gender,i.expiry,o(i.expiry),n(14),o(n(14))].join(""))+o(r.substr(44,10)+r.substr(57,7)+r.substr(65,7))},c.prototype.name=function(e){e=h(e);var t,i=this.first(e),n=this.last(e);return t=e.middle?i+" "+this.first(e)+" "+n:e.middle_initial?i+" "+this.character({alpha:!0,casing:"upper"})+". "+n:i+" "+n,e.prefix&&(t=this.prefix(e)+" "+t),e.suffix&&(t=t+" "+this.suffix(e)),t},c.prototype.name_prefixes=function(e){var t=[{name:"Doctor",abbreviation:"Dr."}];return"male"!==(e=(e=e||"all").toLowerCase())&&"all"!==e||t.push({name:"Mister",abbreviation:"Mr."}),"female"!==e&&"all"!==e||(t.push({name:"Miss",abbreviation:"Miss"}),t.push({name:"Misses",abbreviation:"Mrs."})),t},c.prototype.prefix=function(e){return this.name_prefix(e)},c.prototype.name_prefix=function(e){return(e=h(e,{gender:"all"})).full?this.pick(this.name_prefixes(e.gender)).name:this.pick(this.name_prefixes(e.gender)).abbreviation},c.prototype.HIDN=function(){var e="";return e+=this.string({pool:"0123456789",length:6}),e+=this.string({pool:"ABCDEFGHIJKLMNOPQRSTUVWXYXZ",length:2})},c.prototype.ssn=function(e){var t="1234567890",i=(e=h(e,{ssnFour:!1,dashes:!0})).dashes?"-":"";return e.ssnFour?this.string({pool:t,length:4}):this.string({pool:t,length:3})+i+this.string({pool:t,length:2})+i+this.string({pool:t,length:4})},c.prototype.aadhar=function(e){var t="1234567890",i=(e=h(e,{onlyLastFour:!1,separatedByWhiteSpace:!0})).separatedByWhiteSpace?" ":"";return e.onlyLastFour?this.string({pool:t,length:4}):this.string({pool:t,length:4})+i+this.string({pool:t,length:4})+i+this.string({pool:t,length:4})},c.prototype.name_suffixes=function(){return[{name:"Doctor of Osteopathic Medicine",abbreviation:"D.O."},{name:"Doctor of Philosophy",abbreviation:"Ph.D."},{name:"Esquire",abbreviation:"Esq."},{name:"Junior",abbreviation:"Jr."},{name:"Juris Doctor",abbreviation:"J.D."},{name:"Master of Arts",abbreviation:"M.A."},{name:"Master of Business Administration",abbreviation:"M.B.A."},{name:"Master of Science",abbreviation:"M.S."},{name:"Medical Doctor",abbreviation:"M.D."},{name:"Senior",abbreviation:"Sr."},{name:"The Third",abbreviation:"III"},{name:"The Fourth",abbreviation:"IV"},{name:"Bachelor of Engineering",abbreviation:"B.E"},{name:"Bachelor of Technology",abbreviation:"B.TECH"}]},c.prototype.suffix=function(e){return this.name_suffix(e)},c.prototype.name_suffix=function(e){return(e=h(e)).full?this.pick(this.name_suffixes()).name:this.pick(this.name_suffixes()).abbreviation},c.prototype.nationalities=function(){return this.get("nationalities")},c.prototype.nationality=function(){return this.pick(this.nationalities()).name},c.prototype.android_id=function(){return"APA91"+this.string({pool:"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_",length:178})},c.prototype.apple_token=function(){return this.string({pool:"abcdef1234567890",length:64})},c.prototype.wp8_anid2=function(){return d(this.hash({length:32}))},c.prototype.wp7_anid=function(){return"A="+this.guid().replace(/-/g,"").toUpperCase()+"&E="+this.hash({length:3})+"&W="+this.integer({min:0,max:9})},c.prototype.bb_pin=function(){return this.hash({length:8})},c.prototype.avatar=function(e){var t={protocol:null,email:null,fileExtension:null,size:null,fallback:null,rating:null};if(e)if("string"==typeof e)t.email=e,e={};else{if("object"!=typeof e)return null;if("Array"===e.constructor)return null}else t.email=this.email(),e={};return(t=h(e,t)).email||(t.email=this.email()),t.protocol={http:"http",https:"https"}[t.protocol]?t.protocol+":":"",t.size=parseInt(t.size,0)?t.size:"",t.rating={g:"g",pg:"pg",r:"r",x:"x"}[t.rating]?t.rating:"",t.fallback={404:"404",mm:"mm",identicon:"identicon",monsterid:"monsterid",wavatar:"wavatar",retro:"retro",blank:"blank"}[t.fallback]?t.fallback:"",t.fileExtension={bmp:"bmp",gif:"gif",jpg:"jpg",png:"png"}[t.fileExtension]?t.fileExtension:"",t.protocol+"//www.gravatar.com/avatar/"+this.bimd5.md5(t.email)+(t.fileExtension?"."+t.fileExtension:"")+(t.size||t.rating||t.fallback?"?":"")+(t.size?"&s="+t.size.toString():"")+(t.rating?"&r="+t.rating:"")+(t.fallback?"&d="+t.fallback:"")},c.prototype.color=function(e){function t(e,t){return[e,e,e].join(t||"")}function i(e){var i=e?"rgba":"rgb",n=e?","+this.floating({min:p,max:f}):"";return i+"("+(o?t(this.natural({min:s,max:a}),","):this.natural({min:u,max:d})+","+this.natural({min:g,max:m})+","+this.natural({max:255}))+n+")"}function n(i,n,r){var h=r?"#":"",p="";return o?(p=t(this.pad(this.hex({min:s,max:a}),2)),"shorthex"===e.format&&(p=t(this.hex({min:0,max:15})))):p="shorthex"===e.format?this.pad(this.hex({min:Math.floor(l/16),max:Math.floor(c/16)}),1)+this.pad(this.hex({min:Math.floor(u/16),max:Math.floor(d/16)}),1)+this.pad(this.hex({min:Math.floor(g/16),max:Math.floor(m/16)}),1):void 0!==l||void 0!==c||void 0!==u||void 0!==d||void 0!==g||void 0!==m?this.pad(this.hex({min:l,max:c}),2)+this.pad(this.hex({min:u,max:d}),2)+this.pad(this.hex({min:g,max:m}),2):this.pad(this.hex({min:s,max:a}),2)+this.pad(this.hex({min:s,max:a}),2)+this.pad(this.hex({min:s,max:a}),2),h+p}var r,o=(e=h(e,{format:this.pick(["hex","shorthex","rgb","rgba","0x","name"]),grayscale:!1,casing:"lower",min:0,max:255,min_red:void 0,max_red:void 0,min_green:void 0,max_green:void 0,min_blue:void 0,max_blue:void 0,min_alpha:0,max_alpha:1})).grayscale,s=e.min,a=e.max,l=e.min_red,c=e.max_red,u=e.min_green,d=e.max_green,g=e.min_blue,m=e.max_blue,p=e.min_alpha,f=e.max_alpha;if(void 0===e.min_red&&(l=s),void 0===e.max_red&&(c=a),void 0===e.min_green&&(u=s),void 0===e.max_green&&(d=a),void 0===e.min_blue&&(g=s),void 0===e.max_blue&&(m=a),void 0===e.min_alpha&&(p=0),void 0===e.max_alpha&&(f=1),o&&0===s&&255===a&&void 0!==l&&void 0!==c&&(s=(l+u+g)/3,a=(c+d+m)/3),"hex"===e.format)r=n.call(this,2,6,!0);else if("shorthex"===e.format)r=n.call(this,1,3,!0);else if("rgb"===e.format)r=i.call(this,!1);else if("rgba"===e.format)r=i.call(this,!0);else{if("0x"!==e.format){if("name"===e.format)return this.pick(this.get("colorNames"));throw new RangeError('Invalid format provided. Please provide one of "hex", "shorthex", "rgb", "rgba", "0x" or "name".')}r="0x"+n.call(this,2,6)}return"upper"===e.casing&&(r=r.toUpperCase()),r},c.prototype.domain=function(e){return e=h(e),this.word()+"."+(e.tld||this.tld())},c.prototype.email=function(e){return e=h(e),this.word({length:e.length})+"@"+(e.domain||this.domain())},c.prototype.fbid=function(){return"10000"+this.string({pool:"1234567890",length:11})},c.prototype.google_analytics=function(){return"UA-"+this.pad(this.natural({max:999999}),6)+"-"+this.pad(this.natural({max:99}),2)},c.prototype.hashtag=function(){return"#"+this.word()},c.prototype.ip=function(){return this.natural({min:1,max:254})+"."+this.natural({max:255})+"."+this.natural({max:255})+"."+this.natural({min:1,max:254})},c.prototype.ipv6=function(){return this.n(this.hash,8,{length:4}).join(":")},c.prototype.klout=function(){return this.natural({min:1,max:99})},c.prototype.mac=function(e){return e=h(e,{delimiter:":"}),this.pad(this.natural({max:255}).toString(16),2)+e.delimiter+this.pad(this.natural({max:255}).toString(16),2)+e.delimiter+this.pad(this.natural({max:255}).toString(16),2)+e.delimiter+this.pad(this.natural({max:255}).toString(16),2)+e.delimiter+this.pad(this.natural({max:255}).toString(16),2)+e.delimiter+this.pad(this.natural({max:255}).toString(16),2)},c.prototype.semver=function(e){e=h(e,{include_prerelease:!0});var t=this.pickone(["^","~","<",">","<=",">=","="]);e.range&&(t=e.range);var i="";return e.include_prerelease&&(i=this.weighted(["","-dev","-beta","-alpha"],[50,10,5,1])),t+this.rpg("3d10").join(".")+i},c.prototype.tlds=function(){return["com","org","edu","gov","co.uk","net","io","ac","ad","ae","af","ag","ai","al","am","ao","aq","ar","as","at","au","aw","ax","az","ba","bb","bd","be","bf","bg","bh","bi","bj","bm","bn","bo","br","bs","bt","bv","bw","by","bz","ca","cc","cd","cf","cg","ch","ci","ck","cl","cm","cn","co","cr","cu","cv","cw","cx","cy","cz","de","dj","dk","dm","do","dz","ec","ee","eg","eh","er","es","et","eu","fi","fj","fk","fm","fo","fr","ga","gb","gd","ge","gf","gg","gh","gi","gl","gm","gn","gp","gq","gr","gs","gt","gu","gw","gy","hk","hm","hn","hr","ht","hu","id","ie","il","im","in","io","iq","ir","is","it","je","jm","jo","jp","ke","kg","kh","ki","km","kn","kp","kr","kw","ky","kz","la","lb","lc","li","lk","lr","ls","lt","lu","lv","ly","ma","mc","md","me","mg","mh","mk","ml","mm","mn","mo","mp","mq","mr","ms","mt","mu","mv","mw","mx","my","mz","na","nc","ne","nf","ng","ni","nl","no","np","nr","nu","nz","om","pa","pe","pf","pg","ph","pk","pl","pm","pn","pr","ps","pt","pw","py","qa","re","ro","rs","ru","rw","sa","sb","sc","sd","se","sg","sh","si","sj","sk","sl","sm","sn","so","sr","ss","st","su","sv","sx","sy","sz","tc","td","tf","tg","th","tj","tk","tl","tm","tn","to","tp","tr","tt","tv","tw","tz","ua","ug","uk","us","uy","uz","va","vc","ve","vg","vi","vn","vu","wf","ws","ye","yt","za","zm","zw"]},c.prototype.tld=function(){return this.pick(this.tlds())},c.prototype.twitter=function(){return"@"+this.word()},c.prototype.url=function(e){var t=(e=h(e,{protocol:"http",domain:this.domain(e),domain_prefix:"",path:this.word(),extensions:[]})).extensions.length>0?"."+this.pick(e.extensions):"",i=e.domain_prefix?e.domain_prefix+"."+e.domain:e.domain;return e.protocol+"://"+i+"/"+e.path+t},c.prototype.port=function(){return this.integer({min:0,max:65535})},c.prototype.locale=function(e){return(e=h(e)).region?this.pick(this.get("locale_regions")):this.pick(this.get("locale_languages"))},c.prototype.locales=function(e){return(e=h(e)).region?this.get("locale_regions"):this.get("locale_languages")},c.prototype.loremPicsum=function(e){var t=(e=h(e,{width:500,height:500,greyscale:!1,blurred:!1})).greyscale?"g/":"",i=e.blurred?"/?blur":"/?random";return"https://picsum.photos/"+t+e.width+"/"+e.height+i},c.prototype.address=function(e){return e=h(e),this.natural({min:5,max:2e3})+" "+this.street(e)},c.prototype.altitude=function(e){return e=h(e,{fixed:5,min:0,max:8848}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},c.prototype.areacode=function(e){var t=(e=h(e,{parens:!0})).exampleNumber?"555":this.natural({min:2,max:9}).toString()+this.natural({min:0,max:8}).toString()+this.natural({min:0,max:9}).toString();return e.parens?"("+t+")":t},c.prototype.city=function(){return this.capitalize(this.word({syllables:3}))},c.prototype.coordinates=function(e){return this.latitude(e)+", "+this.longitude(e)},c.prototype.countries=function(){return this.get("countries")},c.prototype.country=function(e){e=h(e);var t=this.pick(this.countries());return e.raw?t:e.full?t.name:t.abbreviation},c.prototype.depth=function(e){return e=h(e,{fixed:5,min:-10994,max:0}),this.floating({min:e.min,max:e.max,fixed:e.fixed})},c.prototype.geohash=function(e){return e=h(e,{length:7}),this.string({length:e.length,pool:"0123456789bcdefghjkmnpqrstuvwxyz"})},c.prototype.geojson=function(e){return this.latitude(e)+", "+this.longitude(e)+", "+this.altitude(e)},c.prototype.latitude=function(e){var[t,i,n]=["ddm","dms","dd"],r=(e=h(e,e&&e.format&&[t,i].includes(e.format.toLowerCase())?{min:0,max:89,fixed:4}:{fixed:5,min:-90,max:90,format:n})).format.toLowerCase();switch(r!==t&&r!==i||(u(e.min<0||e.min>89,"Chance: Min specified is out of range. Should be between 0 - 89"),u(e.max<0||e.max>89,"Chance: Max specified is out of range. Should be between 0 - 89"),u(e.fixed>4,"Chance: Fixed specified should be below or equal to 4")),r){case t:return this.integer({min:e.min,max:e.max})+"°"+this.floating({min:0,max:59,fixed:e.fixed});case i:return this.integer({min:e.min,max:e.max})+"°"+this.integer({min:0,max:59})+"’"+this.floating({min:0,max:59,fixed:e.fixed})+"”";default:return this.floating({min:e.min,max:e.max,fixed:e.fixed})}},c.prototype.longitude=function(e){var[t,i,n]=["ddm","dms","dd"],r=(e=h(e,e&&e.format&&[t,i].includes(e.format.toLowerCase())?{min:0,max:179,fixed:4}:{fixed:5,min:-180,max:180,format:n})).format.toLowerCase();switch(r!==t&&r!==i||(u(e.min<0||e.min>179,"Chance: Min specified is out of range. Should be between 0 - 179"),u(e.max<0||e.max>179,"Chance: Max specified is out of range. Should be between 0 - 179"),u(e.fixed>4,"Chance: Fixed specified should be below or equal to 4")),r){case t:return this.integer({min:e.min,max:e.max})+"°"+this.floating({min:0,max:59.9999,fixed:e.fixed});case i:return this.integer({min:e.min,max:e.max})+"°"+this.integer({min:0,max:59})+"’"+this.floating({min:0,max:59.9999,fixed:e.fixed})+"”";default:return this.floating({min:e.min,max:e.max,fixed:e.fixed})}},c.prototype.phone=function(e){var t,i,n=this,r=function(e){var t=[];return e.sections.forEach((function(e){t.push(n.string({pool:"0123456789",length:e}))})),e.area+t.join(" ")};switch((e=h(e,{formatted:!0,country:"us",mobile:!1,exampleNumber:!1})).formatted||(e.parens=!1),e.country){case"fr":e.mobile?(t=this.pick(["06","07"])+n.string({pool:"0123456789",length:8}),i=e.formatted?t.match(/../g).join(" "):t):(t=this.pick(["01"+this.pick(["30","34","39","40","41","42","43","44","45","46","47","48","49","53","55","56","58","60","64","69","70","72","73","74","75","76","77","78","79","80","81","82","83"])+n.string({pool:"0123456789",length:6}),"02"+this.pick(["14","18","22","23","28","29","30","31","32","33","34","35","36","37","38","40","41","43","44","45","46","47","48","49","50","51","52","53","54","56","57","61","62","69","72","76","77","78","85","90","96","97","98","99"])+n.string({pool:"0123456789",length:6}),"03"+this.pick(["10","20","21","22","23","24","25","26","27","28","29","39","44","45","51","52","54","55","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","80","81","82","83","84","85","86","87","88","89","90"])+n.string({pool:"0123456789",length:6}),"04"+this.pick(["11","13","15","20","22","26","27","30","32","34","37","42","43","44","50","56","57","63","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","88","89","90","91","92","93","94","95","97","98"])+n.string({pool:"0123456789",length:6}),"05"+this.pick(["08","16","17","19","24","31","32","33","34","35","40","45","46","47","49","53","55","56","57","58","59","61","62","63","64","65","67","79","81","82","86","87","90","94"])+n.string({pool:"0123456789",length:6}),"09"+n.string({pool:"0123456789",length:8})]),i=e.formatted?t.match(/../g).join(" "):t);break;case"uk":e.mobile?(t=this.pick([{area:"07"+this.pick(["4","5","7","8","9"]),sections:[2,6]},{area:"07624 ",sections:[6]}]),i=e.formatted?r(t):r(t).replace(" ","")):(t=this.pick([{area:"01"+this.character({pool:"234569"})+"1 ",sections:[3,4]},{area:"020 "+this.character({pool:"378"}),sections:[3,4]},{area:"023 "+this.character({pool:"89"}),sections:[3,4]},{area:"024 7",sections:[3,4]},{area:"028 "+this.pick(["25","28","37","71","82","90","92","95"]),sections:[2,4]},{area:"012"+this.pick(["04","08","54","76","97","98"])+" ",sections:[6]},{area:"013"+this.pick(["63","64","84","86"])+" ",sections:[6]},{area:"014"+this.pick(["04","20","60","61","80","88"])+" ",sections:[6]},{area:"015"+this.pick(["24","27","62","66"])+" ",sections:[6]},{area:"016"+this.pick(["06","29","35","47","59","95"])+" ",sections:[6]},{area:"017"+this.pick(["26","44","50","68"])+" ",sections:[6]},{area:"018"+this.pick(["27","37","84","97"])+" ",sections:[6]},{area:"019"+this.pick(["00","05","35","46","49","63","95"])+" ",sections:[6]}]),i=e.formatted?r(t):r(t).replace(" ","","g"));break;case"za":e.mobile?(t=this.pick(["060"+this.pick(["3","4","5","6","7","8","9"])+n.string({pool:"0123456789",length:6}),"061"+this.pick(["0","1","2","3","4","5","8"])+n.string({pool:"0123456789",length:6}),"06"+n.string({pool:"0123456789",length:7}),"071"+this.pick(["0","1","2","3","4","5","6","7","8","9"])+n.string({pool:"0123456789",length:6}),"07"+this.pick(["2","3","4","6","7","8","9"])+n.string({pool:"0123456789",length:7}),"08"+this.pick(["0","1","2","3","4","5"])+n.string({pool:"0123456789",length:7})]),i=e.formatted||t):(t=this.pick(["01"+this.pick(["0","1","2","3","4","5","6","7","8"])+n.string({pool:"0123456789",length:7}),"02"+this.pick(["1","2","3","4","7","8"])+n.string({pool:"0123456789",length:7}),"03"+this.pick(["1","2","3","5","6","9"])+n.string({pool:"0123456789",length:7}),"04"+this.pick(["1","2","3","4","5","6","7","8","9"])+n.string({pool:"0123456789",length:7}),"05"+this.pick(["1","3","4","6","7","8"])+n.string({pool:"0123456789",length:7})]),i=e.formatted||t);break;case"us":var o=this.areacode(e).toString(),s=this.natural({min:2,max:9}).toString()+this.natural({min:0,max:9}).toString()+this.natural({min:0,max:9}).toString(),a=this.natural({min:1e3,max:9999}).toString();i=e.formatted?o+" "+s+"-"+a:o+s+a;break;case"br":var l,c=this.pick(["11","12","13","14","15","16","17","18","19","21","22","24","27","28","31","32","33","34","35","37","38","41","42","43","44","45","46","47","48","49","51","53","54","55","61","62","63","64","65","66","67","68","69","71","73","74","75","77","79","81","82","83","84","85","86","87","88","89","91","92","93","94","95","96","97","98","99"]);l=e.mobile?"9"+n.string({pool:"0123456789",length:4}):this.natural({min:2e3,max:5999}).toString();var u=n.string({pool:"0123456789",length:4});i=e.formatted?"("+c+") "+l+"-"+u:c+l+u}return i},c.prototype.postal=function(){return this.character({pool:"XVTSRPNKLMHJGECBA"})+this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+" "+(this.natural({max:9})+this.character({alpha:!0,casing:"upper"})+this.natural({max:9}))},c.prototype.postcode=function(){return this.pick(this.get("postcodeAreas")).code+this.natural({max:9})+(this.bool()?this.character({alpha:!0,casing:"upper"}):"")+" "+(this.natural({max:9})+(this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})))},c.prototype.counties=function(e){return e=h(e,{country:"uk"}),this.get("counties")[e.country.toLowerCase()]},c.prototype.county=function(e){return this.pick(this.counties(e)).name},c.prototype.provinces=function(e){return e=h(e,{country:"ca"}),this.get("provinces")[e.country.toLowerCase()]},c.prototype.province=function(e){return e&&e.full?this.pick(this.provinces(e)).name:this.pick(this.provinces(e)).abbreviation},c.prototype.state=function(e){return e&&e.full?this.pick(this.states(e)).name:this.pick(this.states(e)).abbreviation},c.prototype.states=function(e){var t;switch((e=h(e,{country:"us",us_states_and_dc:!0})).country.toLowerCase()){case"us":var i=this.get("us_states_and_dc"),n=this.get("territories"),r=this.get("armed_forces");t=[],e.us_states_and_dc&&(t=t.concat(i)),e.territories&&(t=t.concat(n)),e.armed_forces&&(t=t.concat(r));break;case"it":case"mx":t=this.get("country_regions")[e.country.toLowerCase()];break;case"uk":t=this.get("counties")[e.country.toLowerCase()]}return t},c.prototype.street=function(e){var t;switch((e=h(e,{country:"us",syllables:2})).country.toLowerCase()){case"us":t=this.word({syllables:e.syllables}),t=this.capitalize(t),t+=" ",t+=e.short_suffix?this.street_suffix(e).abbreviation:this.street_suffix(e).name;break;case"it":t=this.word({syllables:e.syllables}),t=this.capitalize(t),t=(e.short_suffix?this.street_suffix(e).abbreviation:this.street_suffix(e).name)+" "+t}return t},c.prototype.street_suffix=function(e){return e=h(e,{country:"us"}),this.pick(this.street_suffixes(e))},c.prototype.street_suffixes=function(e){return e=h(e,{country:"us"}),this.get("street_suffixes")[e.country.toLowerCase()]},c.prototype.zip=function(e){var t=this.n(this.natural,5,{max:9});return e&&!0===e.plusfour&&(t.push("-"),t=t.concat(this.n(this.natural,4,{max:9}))),t.join("")},c.prototype.ampm=function(){return this.bool()?"am":"pm"},c.prototype.date=function(e){var t,i;if(e&&(e.min||e.max)){var n=void 0!==(e=h(e,{american:!0,string:!1})).min?e.min.getTime():1,r=void 0!==e.max?e.max.getTime():864e13;i=new Date(this.integer({min:n,max:r}))}else{var o=this.month({raw:!0}),s=o.days;e&&e.month&&(s=this.get("months")[(e.month%12+12)%12].days),e=h(e,{year:parseInt(this.year(),10),month:o.numeric-1,day:this.natural({min:1,max:s}),hour:this.hour({twentyfour:!0}),minute:this.minute(),second:this.second(),millisecond:this.millisecond(),american:!0,string:!1}),i=new Date(e.year,e.month,e.day,e.hour,e.minute,e.second,e.millisecond)}return t=e.american?i.getMonth()+1+"/"+i.getDate()+"/"+i.getFullYear():i.getDate()+"/"+(i.getMonth()+1)+"/"+i.getFullYear(),e.string?t:i},c.prototype.hammertime=function(e){return this.date(e).getTime()},c.prototype.hour=function(e){return u((e=h(e,{min:e&&e.twentyfour?0:1,max:e&&e.twentyfour?23:12})).min<0,"Chance: Min cannot be less than 0."),u(e.twentyfour&&e.max>23,"Chance: Max cannot be greater than 23 for twentyfour option."),u(!e.twentyfour&&e.max>12,"Chance: Max cannot be greater than 12."),u(e.min>e.max,"Chance: Min cannot be greater than Max."),this.natural({min:e.min,max:e.max})},c.prototype.millisecond=function(){return this.natural({max:999})},c.prototype.minute=c.prototype.second=function(e){return u((e=h(e,{min:0,max:59})).min<0,"Chance: Min cannot be less than 0."),u(e.max>59,"Chance: Max cannot be greater than 59."),u(e.min>e.max,"Chance: Min cannot be greater than Max."),this.natural({min:e.min,max:e.max})},c.prototype.month=function(e){u((e=h(e,{min:1,max:12})).min<1,"Chance: Min cannot be less than 1."),u(e.max>12,"Chance: Max cannot be greater than 12."),u(e.min>e.max,"Chance: Min cannot be greater than Max.");var t=this.pick(this.months().slice(e.min-1,e.max));return e.raw?t:t.name},c.prototype.months=function(){return this.get("months")},c.prototype.second=function(){return this.natural({max:59})},c.prototype.timestamp=function(){return this.natural({min:1,max:parseInt((new Date).getTime()/1e3,10)})},c.prototype.weekday=function(e){var t=["Monday","Tuesday","Wednesday","Thursday","Friday"];return(e=h(e,{weekday_only:!1})).weekday_only||(t.push("Saturday"),t.push("Sunday")),this.pickone(t)},c.prototype.year=function(e){return(e=h(e,{min:(new Date).getFullYear()})).max=void 0!==e.max?e.max:e.min+100,this.natural(e).toString()},c.prototype.cc=function(e){var t,i,n;return i=(t=(e=h(e)).type?this.cc_type({name:e.type,raw:!0}):this.cc_type({raw:!0})).prefix.split(""),n=t.length-t.prefix.length-1,(i=i.concat(this.n(this.integer,n,{min:0,max:9}))).push(this.luhn_calculate(i.join(""))),i.join("")},c.prototype.cc_types=function(){return this.get("cc_types")},c.prototype.cc_type=function(e){e=h(e);var t=this.cc_types(),i=null;if(e.name){for(var n=0;n<t.length;n++)if(t[n].name===e.name||t[n].short_name===e.name){i=t[n];break}if(null===i)throw new RangeError("Chance: Credit card type '"+e.name+"' is not supported")}else i=this.pick(t);return e.raw?i:i.name},c.prototype.currency_types=function(){return this.get("currency_types")},c.prototype.currency=function(){return this.pick(this.currency_types())},c.prototype.timezones=function(){return this.get("timezones")},c.prototype.timezone=function(){return this.pick(this.timezones())},c.prototype.currency_pair=function(e){var t=this.unique(this.currency,2,{comparator:function(e,t){return e.reduce((function(e,i){return e||i.code===t.code}),!1)}});return e?t[0].code+"/"+t[1].code:t},c.prototype.dollar=function(e){e=h(e,{max:1e4,min:0});var t=this.floating({min:e.min,max:e.max,fixed:2}).toString(),i=t.split(".")[1];return void 0===i?t+=".00":i.length<2&&(t+="0"),t<0?"-$"+t.replace("-",""):"$"+t},c.prototype.euro=function(e){return Number(this.dollar(e).replace("$","")).toLocaleString()+"€"},c.prototype.exp=function(e){e=h(e);var t={};return t.year=this.exp_year(),t.year===(new Date).getFullYear().toString()?t.month=this.exp_month({future:!0}):t.month=this.exp_month(),e.raw?t:t.month+"/"+t.year},c.prototype.exp_month=function(e){e=h(e);var t,i,n=(new Date).getMonth()+1;if(e.future&&12!==n)do{t=this.month({raw:!0}).numeric,i=parseInt(t,10)}while(i<=n);else t=this.month({raw:!0}).numeric;return t},c.prototype.exp_year=function(){var e=(new Date).getMonth()+1,t=(new Date).getFullYear();return this.year({min:12===e?t+1:t,max:t+10})},c.prototype.vat=function(e){if("it"===(e=h(e,{country:"it"})).country.toLowerCase())return this.it_vat()},c.prototype.iban=function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZ";return this.string({length:2,pool:e})+this.pad(this.integer({min:0,max:99}),2)+this.string({length:4,pool:"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"})+this.pad(this.natural(),this.natural({min:6,max:26}))},c.prototype.it_vat=function(){var e=this.natural({min:1,max:18e5});return(e=this.pad(e,7)+this.pad(this.pick(this.provinces({country:"it"})).code,3))+this.luhn_calculate(e)},c.prototype.cf=function(e){var t=(e=e||{}).gender?e.gender:this.gender(),i=e.first?e.first:this.first({gender:t,nationality:"it"}),n=e.last?e.last:this.last({nationality:"it"}),r=e.birthday?e.birthday:this.birthday(),o=e.city?e.city:this.pickone(["A","B","C","D","E","F","G","H","I","L","M","Z"])+this.pad(this.natural({max:999}),3),s=[],a=function(e,t){var i,n=[];return e.length<3?n=e.split("").concat("XXX".split("")).splice(0,3):((i=e.toUpperCase().split("").map((function(e){return-1!=="BCDFGHJKLMNPRSTVWZ".indexOf(e)?e:void 0})).join("")).length>3&&(i=t?i.substr(0,3):i[0]+i.substr(2,2)),i.length<3&&(n=i,i=e.toUpperCase().split("").map((function(e){return-1!=="AEIOU".indexOf(e)?e:void 0})).join("").substr(0,3-n.length)),n+=i),n};return s=s.concat(a(n,!0),a(i),function(e,t,i){return e.getFullYear().toString().substr(2)+["A","B","C","D","E","H","L","M","P","R","S","T"][e.getMonth()]+i.pad(e.getDate()+("female"===t.toLowerCase()?40:0),2)}(r,t,this),o.toUpperCase().split("")).join(""),(s+=function(e){for(var t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",i="ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ",n="ABCDEFGHIJKLMNOPQRSTUVWXYZ",r=0,o=0;o<15;o++)r+=o%2!=0?n.indexOf(i[t.indexOf(e[o])]):"BAKPLCQDREVOSFTGUHMINJWZYX".indexOf(i[t.indexOf(e[o])]);return n[r%26]}(s.toUpperCase())).toUpperCase()},c.prototype.pl_pesel=function(){for(var e=this.natural({min:1,max:9999999999}),t=this.pad(e,10).split(""),i=0;i<t.length;i++)t[i]=parseInt(t[i]);var n=(1*t[0]+3*t[1]+7*t[2]+9*t[3]+1*t[4]+3*t[5]+7*t[6]+9*t[7]+1*t[8]+3*t[9])%10;return 0!==n&&(n=10-n),t.join("")+n},c.prototype.pl_nip=function(){for(var e=this.natural({min:1,max:999999999}),t=this.pad(e,9).split(""),i=0;i<t.length;i++)t[i]=parseInt(t[i]);var n=(6*t[0]+5*t[1]+7*t[2]+2*t[3]+3*t[4]+4*t[5]+5*t[6]+6*t[7]+7*t[8])%11;return 10===n?this.pl_nip():t.join("")+n},c.prototype.pl_regon=function(){for(var e=this.natural({min:1,max:99999999}),t=this.pad(e,8).split(""),i=0;i<t.length;i++)t[i]=parseInt(t[i]);var n=(8*t[0]+9*t[1]+2*t[2]+3*t[3]+4*t[4]+5*t[5]+6*t[6]+7*t[7])%11;return 10===n&&(n=0),t.join("")+n},c.prototype.note=function(e){e=h(e,{notes:"flatKey"});var t={naturals:["C","D","E","F","G","A","B"],flats:["D♭","E♭","G♭","A♭","B♭"],sharps:["C♯","D♯","F♯","G♯","A♯"]};return t.all=t.naturals.concat(t.flats.concat(t.sharps)),t.flatKey=t.naturals.concat(t.flats),t.sharpKey=t.naturals.concat(t.sharps),this.pickone(t[e.notes])},c.prototype.midi_note=function(e){return e=h(e,{min:0,max:127}),this.integer({min:e.min,max:e.max})},c.prototype.chord_quality=function(e){var t=["maj","min","aug","dim"];return(e=h(e,{jazz:!0})).jazz&&(t=["maj7","min7","7","sus","dim","ø"]),this.pickone(t)},c.prototype.chord=function(e){return e=h(e),this.note(e)+this.chord_quality(e)},c.prototype.tempo=function(e){return e=h(e,{min:40,max:320}),this.integer({min:e.min,max:e.max})},c.prototype.coin=function(){return this.bool()?"heads":"tails"},c.prototype.d4=f({min:1,max:4}),c.prototype.d6=f({min:1,max:6}),c.prototype.d8=f({min:1,max:8}),c.prototype.d10=f({min:1,max:10}),c.prototype.d12=f({min:1,max:12}),c.prototype.d20=f({min:1,max:20}),c.prototype.d30=f({min:1,max:30}),c.prototype.d100=f({min:1,max:100}),c.prototype.rpg=function(e,t){if(t=h(t),e){var i=e.toLowerCase().split("d"),n=[];if(2!==i.length||!parseInt(i[0],10)||!parseInt(i[1],10))throw new Error("Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die");for(var r=i[0];r>0;r--)n[r-1]=this.natural({min:1,max:i[1]});return void 0!==t.sum&&t.sum?n.reduce((function(e,t){return e+t})):n}throw new RangeError("Chance: A type of die roll must be included")},c.prototype.guid=function(e){e=h(e,{version:5});var t="abcdef1234567890";return this.string({pool:t,length:8})+"-"+this.string({pool:t,length:4})+"-"+e.version+this.string({pool:t,length:3})+"-"+this.string({pool:"ab89",length:1})+this.string({pool:t,length:3})+"-"+this.string({pool:t,length:12})},c.prototype.hash=function(e){var t="upper"===(e=h(e,{length:40,casing:"lower"})).casing?s.toUpperCase():s;return this.string({pool:t,length:e.length})},c.prototype.luhn_check=function(e){var t=e.toString();return+t.substring(t.length-1)===this.luhn_calculate(+t.substring(0,t.length-1))},c.prototype.luhn_calculate=function(e){for(var t,i=e.toString().split("").reverse(),n=0,r=0,o=i.length;o>r;++r)t=+i[r],r%2==0&&(t*=2)>9&&(t-=9),n+=t;return 9*n%10},c.prototype.md5=function(e){var t={str:"",key:null,raw:!1};if(e)if("string"==typeof e)t.str=e,e={};else{if("object"!=typeof e)return null;if("Array"===e.constructor)return null}else t.str=this.string(),e={};if(!(t=h(e,t)).str)throw new Error("A parameter is required to return an md5 hash.");return this.bimd5.md5(t.str,t.key,t.raw)},c.prototype.file=function(e){var t,i=e||{},n="fileExtension",r=Object.keys(this.get("fileExtension"));if(t=this.word({length:i.length}),i.extension)return t+"."+i.extension;if(i.extensions){if(Array.isArray(i.extensions))return t+"."+this.pickone(i.extensions);if(i.extensions.constructor===Object){var o=i.extensions,s=Object.keys(o);return t+"."+this.pickone(o[this.pickone(s)])}throw new Error("Chance: Extensions must be an Array or Object")}if(i.fileType){var a=i.fileType;if(-1!==r.indexOf(a))return t+"."+this.pickone(this.get(n)[a]);throw new RangeError("Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'")}return t+"."+this.pickone(this.get(n)[this.pickone(r)])};var _={firstNames:{male:{en:["James","John","Robert","Michael","William","David","Richard","Joseph","Charles","Thomas","Christopher","Daniel","Matthew","George","Donald","Anthony","Paul","Mark","Edward","Steven","Kenneth","Andrew","Brian","Joshua","Kevin","Ronald","Timothy","Jason","Jeffrey","Frank","Gary","Ryan","Nicholas","Eric","Stephen","Jacob","Larry","Jonathan","Scott","Raymond","Justin","Brandon","Gregory","Samuel","Benjamin","Patrick","Jack","Henry","Walter","Dennis","Jerry","Alexander","Peter","Tyler","Douglas","Harold","Aaron","Jose","Adam","Arthur","Zachary","Carl","Nathan","Albert","Kyle","Lawrence","Joe","Willie","Gerald","Roger","Keith","Jeremy","Terry","Harry","Ralph","Sean","Jesse","Roy","Louis","Billy","Austin","Bruce","Eugene","Christian","Bryan","Wayne","Russell","Howard","Fred","Ethan","Jordan","Philip","Alan","Juan","Randy","Vincent","Bobby","Dylan","Johnny","Phillip","Victor","Clarence","Ernest","Martin","Craig","Stanley","Shawn","Travis","Bradley","Leonard","Earl","Gabriel","Jimmy","Francis","Todd","Noah","Danny","Dale","Cody","Carlos","Allen","Frederick","Logan","Curtis","Alex","Joel","Luis","Norman","Marvin","Glenn","Tony","Nathaniel","Rodney","Melvin","Alfred","Steve","Cameron","Chad","Edwin","Caleb","Evan","Antonio","Lee","Herbert","Jeffery","Isaac","Derek","Ricky","Marcus","Theodore","Elijah","Luke","Jesus","Eddie","Troy","Mike","Dustin","Ray","Adrian","Bernard","Leroy","Angel","Randall","Wesley","Ian","Jared","Mason","Hunter","Calvin","Oscar","Clifford","Jay","Shane","Ronnie","Barry","Lucas","Corey","Manuel","Leo","Tommy","Warren","Jackson","Isaiah","Connor","Don","Dean","Jon","Julian","Miguel","Bill","Lloyd","Charlie","Mitchell","Leon","Jerome","Darrell","Jeremiah","Alvin","Brett","Seth","Floyd","Jim","Blake","Micheal","Gordon","Trevor","Lewis","Erik","Edgar","Vernon","Devin","Gavin","Jayden","Chris","Clyde","Tom","Derrick","Mario","Brent","Marc","Herman","Chase","Dominic","Ricardo","Franklin","Maurice","Max","Aiden","Owen","Lester","Gilbert","Elmer","Gene","Francisco","Glen","Cory","Garrett","Clayton","Sam","Jorge","Chester","Alejandro","Jeff","Harvey","Milton","Cole","Ivan","Andre","Duane","Landon"],it:["Adolfo","Alberto","Aldo","Alessandro","Alessio","Alfredo","Alvaro","Andrea","Angelo","Angiolo","Antonino","Antonio","Attilio","Benito","Bernardo","Bruno","Carlo","Cesare","Christian","Claudio","Corrado","Cosimo","Cristian","Cristiano","Daniele","Dario","David","Davide","Diego","Dino","Domenico","Duccio","Edoardo","Elia","Elio","Emanuele","Emiliano","Emilio","Enrico","Enzo","Ettore","Fabio","Fabrizio","Federico","Ferdinando","Fernando","Filippo","Francesco","Franco","Gabriele","Giacomo","Giampaolo","Giampiero","Giancarlo","Gianfranco","Gianluca","Gianmarco","Gianni","Gino","Giorgio","Giovanni","Giuliano","Giulio","Giuseppe","Graziano","Gregorio","Guido","Iacopo","Jacopo","Lapo","Leonardo","Lorenzo","Luca","Luciano","Luigi","Manuel","Marcello","Marco","Marino","Mario","Massimiliano","Massimo","Matteo","Mattia","Maurizio","Mauro","Michele","Mirko","Mohamed","Nello","Neri","Niccolò","Nicola","Osvaldo","Otello","Paolo","Pier Luigi","Piero","Pietro","Raffaele","Remo","Renato","Renzo","Riccardo","Roberto","Rolando","Romano","Salvatore","Samuele","Sandro","Sergio","Silvano","Simone","Stefano","Thomas","Tommaso","Ubaldo","Ugo","Umberto","Valerio","Valter","Vasco","Vincenzo","Vittorio"],nl:["Aaron","Abel","Adam","Adriaan","Albert","Alexander","Ali","Arjen","Arno","Bart","Bas","Bastiaan","Benjamin","Bob","Boris","Bram","Brent","Cas","Casper","Chris","Christiaan","Cornelis","Daan","Daley","Damian","Dani","Daniel","Daniël","David","Dean","Dirk","Dylan","Egbert","Elijah","Erik","Erwin","Evert","Ezra","Fabian","Fedde","Finn","Florian","Floris","Frank","Frans","Frederik","Freek","Geert","Gerard","Gerben","Gerrit","Gijs","Guus","Hans","Hendrik","Henk","Herman","Hidde","Hugo","Jaap","Jan Jaap","Jan-Willem","Jack","Jacob","Jan","Jason","Jasper","Jayden","Jelle","Jelte","Jens","Jeroen","Jesse","Jim","Job","Joep","Johannes","John","Jonathan","Joris","Joshua","Joël","Julian","Kees","Kevin","Koen","Lars","Laurens","Leendert","Lennard","Lodewijk","Luc","Luca","Lucas","Lukas","Luuk","Maarten","Marcus","Martijn","Martin","Matthijs","Maurits","Max","Mees","Melle","Mick","Mika","Milan","Mohamed","Mohammed","Morris","Muhammed","Nathan","Nick","Nico","Niek","Niels","Noah","Noud","Olivier","Oscar","Owen","Paul","Pepijn","Peter","Pieter","Pim","Quinten","Reinier","Rens","Robin","Ruben","Sam","Samuel","Sander","Sebastiaan","Sem","Sep","Sepp","Siem","Simon","Stan","Stef","Steven","Stijn","Sven","Teun","Thijmen","Thijs","Thomas","Tijn","Tim","Timo","Tobias","Tom","Victor","Vince","Willem","Wim","Wouter","Yusuf"],fr:["Aaron","Abdon","Abel","Abélard","Abelin","Abondance","Abraham","Absalon","Acace","Achaire","Achille","Adalard","Adalbald","Adalbéron","Adalbert","Adalric","Adam","Adegrin","Adel","Adelin","Andelin","Adelphe","Adam","Adéodat","Adhémar","Adjutor","Adolphe","Adonis","Adon","Adrien","Agapet","Agathange","Agathon","Agilbert","Agénor","Agnan","Aignan","Agrippin","Aimable","Aimé","Alain","Alban","Albin","Aubin","Albéric","Albert","Albertet","Alcibiade","Alcide","Alcée","Alcime","Aldonce","Aldric","Aldéric","Aleaume","Alexandre","Alexis","Alix","Alliaume","Aleaume","Almine","Almire","Aloïs","Alphée","Alphonse","Alpinien","Alverède","Amalric","Amaury","Amandin","Amant","Ambroise","Amédée","Amélien","Amiel","Amour","Anaël","Anastase","Anatole","Ancelin","Andéol","Andoche","André","Andoche","Ange","Angelin","Angilbe","Anglebert","Angoustan","Anicet","Anne","Annibal","Ansbert","Anselme","Anthelme","Antheaume","Anthime","Antide","Antoine","Antonius","Antonin","Apollinaire","Apollon","Aquilin","Arcade","Archambaud","Archambeau","Archange","Archibald","Arian","Ariel","Ariste","Aristide","Armand","Armel","Armin","Arnould","Arnaud","Arolde","Arsène","Arsinoé","Arthaud","Arthème","Arthur","Ascelin","Athanase","Aubry","Audebert","Audouin","Audran","Audric","Auguste","Augustin","Aurèle","Aurélien","Aurian","Auxence","Axel","Aymard","Aymeric","Aymon","Aymond","Balthazar","Baptiste","Barnabé","Barthélemy","Bartimée","Basile","Bastien","Baudouin","Bénigne","Benjamin","Benoît","Bérenger","Bérard","Bernard","Bertrand","Blaise","Bon","Boniface","Bouchard","Brice","Brieuc","Bruno","Brunon","Calixte","Calliste","Camélien","Camille","Camillien","Candide","Caribert","Carloman","Cassandre","Cassien","Cédric","Céleste","Célestin","Célien","Césaire","César","Charles","Charlemagne","Childebert","Chilpéric","Chrétien","Christian","Christodule","Christophe","Chrysostome","Clarence","Claude","Claudien","Cléandre","Clément","Clotaire","Côme","Constance","Constant","Constantin","Corentin","Cyprien","Cyriaque","Cyrille","Cyril","Damien","Daniel","David","Delphin","Denis","Désiré","Didier","Dieudonné","Dimitri","Dominique","Dorian","Dorothée","Edgard","Edmond","Édouard","Éleuthère","Élie","Élisée","Émeric","Émile","Émilien","Emmanuel","Enguerrand","Épiphane","Éric","Esprit","Ernest","Étienne","Eubert","Eudes","Eudoxe","Eugène","Eusèbe","Eustache","Évariste","Évrard","Fabien","Fabrice","Falba","Félicité","Félix","Ferdinand","Fiacre","Fidèle","Firmin","Flavien","Flodoard","Florent","Florentin","Florestan","Florian","Fortuné","Foulques","Francisque","François","Français","Franciscus","Francs","Frédéric","Fulbert","Fulcran","Fulgence","Gabin","Gabriel","Gaël","Garnier","Gaston","Gaspard","Gatien","Gaud","Gautier","Gédéon","Geoffroy","Georges","Géraud","Gérard","Gerbert","Germain","Gervais","Ghislain","Gilbert","Gilles","Girart","Gislebert","Gondebaud","Gonthier","Gontran","Gonzague","Grégoire","Guérin","Gui","Guillaume","Gustave","Guy","Guyot","Hardouin","Hector","Hédelin","Hélier","Henri","Herbert","Herluin","Hervé","Hilaire","Hildebert","Hincmar","Hippolyte","Honoré","Hubert","Hugues","Innocent","Isabeau","Isidore","Jacques","Japhet","Jason","Jean","Jeannel","Jeannot","Jérémie","Jérôme","Joachim","Joanny","Job","Jocelyn","Joël","Johan","Jonas","Jonathan","Joseph","Josse","Josselin","Jourdain","Jude","Judicaël","Jules","Julien","Juste","Justin","Lambert","Landry","Laurent","Lazare","Léandre","Léon","Léonard","Léopold","Leu","Loup","Leufroy","Libère","Liétald","Lionel","Loïc","Longin","Lorrain","Lorraine","Lothaire","Louis","Loup","Luc","Lucas","Lucien","Ludolphe","Ludovic","Macaire","Malo","Mamert","Manassé","Marc","Marceau","Marcel","Marcelin","Marius","Marseille","Martial","Martin","Mathurin","Matthias","Mathias","Matthieu","Maugis","Maurice","Mauricet","Maxence","Maxime","Maximilien","Mayeul","Médéric","Melchior","Mence","Merlin","Mérovée","Michaël","Michel","Moïse","Morgan","Nathan","Nathanaël","Narcisse","Néhémie","Nestor","Nestor","Nicéphore","Nicolas","Noé","Noël","Norbert","Normand","Normands","Octave","Odilon","Odon","Oger","Olivier","Oury","Pacôme","Palémon","Parfait","Pascal","Paterne","Patrice","Paul","Pépin","Perceval","Philémon","Philibert","Philippe","Philothée","Pie","Pierre","Pierrick","Prosper","Quentin","Raoul","Raphaël","Raymond","Régis","Réjean","Rémi","Renaud","René","Reybaud","Richard","Robert","Roch","Rodolphe","Rodrigue","Roger","Roland","Romain","Romuald","Roméo","Rome","Ronan","Roselin","Salomon","Samuel","Savin","Savinien","Scholastique","Sébastien","Séraphin","Serge","Séverin","Sidoine","Sigebert","Sigismond","Silvère","Simon","Siméon","Sixte","Stanislas","Stéphane","Stephan","Sylvain","Sylvestre","Tancrède","Tanguy","Taurin","Théodore","Théodose","Théophile","Théophraste","Thibault","Thibert","Thierry","Thomas","Timoléon","Timothée","Titien","Tonnin","Toussaint","Trajan","Tristan","Turold","Tim","Ulysse","Urbain","Valentin","Valère","Valéry","Venance","Venant","Venceslas","Vianney","Victor","Victorien","Victorin","Vigile","Vincent","Vital","Vitalien","Vivien","Waleran","Wandrille","Xavier","Xénophon","Yves","Zacharie","Zaché","Zéphirin"]},female:{en:["Mary","Emma","Elizabeth","Minnie","Margaret","Ida","Alice","Bertha","Sarah","Annie","Clara","Ella","Florence","Cora","Martha","Laura","Nellie","Grace","Carrie","Maude","Mabel","Bessie","Jennie","Gertrude","Julia","Hattie","Edith","Mattie","Rose","Catherine","Lillian","Ada","Lillie","Helen","Jessie","Louise","Ethel","Lula","Myrtle","Eva","Frances","Lena","Lucy","Edna","Maggie","Pearl","Daisy","Fannie","Josephine","Dora","Rosa","Katherine","Agnes","Marie","Nora","May","Mamie","Blanche","Stella","Ellen","Nancy","Effie","Sallie","Nettie","Della","Lizzie","Flora","Susie","Maud","Mae","Etta","Harriet","Sadie","Caroline","Katie","Lydia","Elsie","Kate","Susan","Mollie","Alma","Addie","Georgia","Eliza","Lulu","Nannie","Lottie","Amanda","Belle","Charlotte","Rebecca","Ruth","Viola","Olive","Amelia","Hannah","Jane","Virginia","Emily","Matilda","Irene","Kathryn","Esther","Willie","Henrietta","Ollie","Amy","Rachel","Sara","Estella","Theresa","Augusta","Ora","Pauline","Josie","Lola","Sophia","Leona","Anne","Mildred","Ann","Beulah","Callie","Lou","Delia","Eleanor","Barbara","Iva","Louisa","Maria","Mayme","Evelyn","Estelle","Nina","Betty","Marion","Bettie","Dorothy","Luella","Inez","Lela","Rosie","Allie","Millie","Janie","Cornelia","Victoria","Ruby","Winifred","Alta","Celia","Christine","Beatrice","Birdie","Harriett","Mable","Myra","Sophie","Tillie","Isabel","Sylvia","Carolyn","Isabelle","Leila","Sally","Ina","Essie","Bertie","Nell","Alberta","Katharine","Lora","Rena","Mina","Rhoda","Mathilda","Abbie","Eula","Dollie","Hettie","Eunice","Fanny","Ola","Lenora","Adelaide","Christina","Lelia","Nelle","Sue","Johanna","Lilly","Lucinda","Minerva","Lettie","Roxie","Cynthia","Helena","Hilda","Hulda","Bernice","Genevieve","Jean","Cordelia","Marian","Francis","Jeanette","Adeline","Gussie","Leah","Lois","Lura","Mittie","Hallie","Isabella","Olga","Phoebe","Teresa","Hester","Lida","Lina","Winnie","Claudia","Marguerite","Vera","Cecelia","Bess","Emilie","Rosetta","Verna","Myrtie","Cecilia","Elva","Olivia","Ophelia","Georgie","Elnora","Violet","Adele","Lily","Linnie","Loretta","Madge","Polly","Virgie","Eugenia","Lucile","Lucille","Mabelle","Rosalie"],it:["Ada","Adriana","Alessandra","Alessia","Alice","Angela","Anna","Anna Maria","Annalisa","Annita","Annunziata","Antonella","Arianna","Asia","Assunta","Aurora","Barbara","Beatrice","Benedetta","Bianca","Bruna","Camilla","Carla","Carlotta","Carmela","Carolina","Caterina","Catia","Cecilia","Chiara","Cinzia","Clara","Claudia","Costanza","Cristina","Daniela","Debora","Diletta","Dina","Donatella","Elena","Eleonora","Elisa","Elisabetta","Emanuela","Emma","Eva","Federica","Fernanda","Fiorella","Fiorenza","Flora","Franca","Francesca","Gabriella","Gaia","Gemma","Giada","Gianna","Gina","Ginevra","Giorgia","Giovanna","Giulia","Giuliana","Giuseppa","Giuseppina","Grazia","Graziella","Greta","Ida","Ilaria","Ines","Iolanda","Irene","Irma","Isabella","Jessica","Laura","Lea","Letizia","Licia","Lidia","Liliana","Lina","Linda","Lisa","Livia","Loretta","Luana","Lucia","Luciana","Lucrezia","Luisa","Manuela","Mara","Marcella","Margherita","Maria","Maria Cristina","Maria Grazia","Maria Luisa","Maria Pia","Maria Teresa","Marina","Marisa","Marta","Martina","Marzia","Matilde","Melissa","Michela","Milena","Mirella","Monica","Natalina","Nella","Nicoletta","Noemi","Olga","Paola","Patrizia","Piera","Pierina","Raffaella","Rebecca","Renata","Rina","Rita","Roberta","Rosa","Rosanna","Rossana","Rossella","Sabrina","Sandra","Sara","Serena","Silvana","Silvia","Simona","Simonetta","Sofia","Sonia","Stefania","Susanna","Teresa","Tina","Tiziana","Tosca","Valentina","Valeria","Vanda","Vanessa","Vanna","Vera","Veronica","Vilma","Viola","Virginia","Vittoria"],nl:["Ada","Arianne","Afke","Amanda","Amber","Amy","Aniek","Anita","Anja","Anna","Anne","Annelies","Annemarie","Annette","Anouk","Astrid","Aukje","Barbara","Bianca","Carla","Carlijn","Carolien","Chantal","Charlotte","Claudia","Daniëlle","Debora","Diane","Dora","Eline","Elise","Ella","Ellen","Emma","Esmee","Evelien","Esther","Erica","Eva","Femke","Fleur","Floor","Froukje","Gea","Gerda","Hanna","Hanneke","Heleen","Hilde","Ilona","Ina","Inge","Ingrid","Iris","Isabel","Isabelle","Janneke","Jasmijn","Jeanine","Jennifer","Jessica","Johanna","Joke","Julia","Julie","Karen","Karin","Katja","Kim","Lara","Laura","Lena","Lianne","Lieke","Lilian","Linda","Lisa","Lisanne","Lotte","Louise","Maaike","Manon","Marga","Maria","Marissa","Marit","Marjolein","Martine","Marleen","Melissa","Merel","Miranda","Michelle","Mirjam","Mirthe","Naomi","Natalie","Nienke","Nina","Noortje","Olivia","Patricia","Paula","Paulien","Ramona","Ria","Rianne","Roos","Rosanne","Ruth","Sabrina","Sandra","Sanne","Sara","Saskia","Silvia","Sofia","Sophie","Sonja","Suzanne","Tamara","Tess","Tessa","Tineke","Valerie","Vanessa","Veerle","Vera","Victoria","Wendy","Willeke","Yvonne","Zoë"],fr:["Abdon","Abel","Abigaëlle","Abigaïl","Acacius","Acanthe","Adalbert","Adalsinde","Adegrine","Adélaïde","Adèle","Adélie","Adeline","Adeltrude","Adolphe","Adonis","Adrastée","Adrehilde","Adrienne","Agathe","Agilbert","Aglaé","Aignan","Agneflète","Agnès","Agrippine","Aimé","Alaine","Alaïs","Albane","Albérade","Alberte","Alcide","Alcine","Alcyone","Aldegonde","Aleth","Alexandrine","Alexine","Alice","Aliénor","Aliette","Aline","Alix","Alizé","Aloïse","Aloyse","Alphonsine","Althée","Amaliane","Amalthée","Amande","Amandine","Amant","Amarande","Amaranthe","Amaryllis","Ambre","Ambroisie","Amélie","Améthyste","Aminte","Anaël","Anaïs","Anastasie","Anatole","Ancelin","Andrée","Anémone","Angadrême","Angèle","Angeline","Angélique","Angilbert","Anicet","Annabelle","Anne","Annette","Annick","Annie","Annonciade","Ansbert","Anstrudie","Anthelme","Antigone","Antoinette","Antonine","Aphélie","Apolline","Apollonie","Aquiline","Arabelle","Arcadie","Archange","Argine","Ariane","Aricie","Ariel","Arielle","Arlette","Armance","Armande","Armandine","Armelle","Armide","Armelle","Armin","Arnaud","Arsène","Arsinoé","Artémis","Arthur","Ascelin","Ascension","Assomption","Astarté","Astérie","Astrée","Astrid","Athalie","Athanasie","Athina","Aube","Albert","Aude","Audrey","Augustine","Aure","Aurélie","Aurélien","Aurèle","Aurore","Auxence","Aveline","Abigaëlle","Avoye","Axelle","Aymard","Azalée","Adèle","Adeline","Barbe","Basilisse","Bathilde","Béatrice","Béatrix","Bénédicte","Bérengère","Bernadette","Berthe","Bertille","Beuve","Blanche","Blanc","Blandine","Brigitte","Brune","Brunehilde","Callista","Camille","Capucine","Carine","Caroline","Cassandre","Catherine","Cécile","Céleste","Célestine","Céline","Chantal","Charlène","Charline","Charlotte","Chloé","Christelle","Christiane","Christine","Claire","Clara","Claude","Claudine","Clarisse","Clémence","Clémentine","Cléo","Clio","Clotilde","Coline","Conception","Constance","Coralie","Coraline","Corentine","Corinne","Cyrielle","Daniel","Daniel","Daphné","Débora","Delphine","Denise","Diane","Dieudonné","Dominique","Doriane","Dorothée","Douce","Édith","Edmée","Éléonore","Éliane","Élia","Éliette","Élisabeth","Élise","Ella","Élodie","Éloïse","Elsa","Émeline","Émérance","Émérentienne","Émérencie","Émilie","Emma","Emmanuelle","Emmelie","Ernestine","Esther","Estelle","Eudoxie","Eugénie","Eulalie","Euphrasie","Eusébie","Évangéline","Eva","Ève","Évelyne","Fanny","Fantine","Faustine","Félicie","Fernande","Flavie","Fleur","Flore","Florence","Florie","Fortuné","France","Francia","Françoise","Francine","Gabrielle","Gaëlle","Garance","Geneviève","Georgette","Gerberge","Germaine","Gertrude","Gisèle","Guenièvre","Guilhemine","Guillemette","Gustave","Gwenael","Hélène","Héloïse","Henriette","Hermine","Hermione","Hippolyte","Honorine","Hortense","Huguette","Ines","Irène","Irina","Iris","Isabeau","Isabelle","Iseult","Isolde","Ismérie","Jacinthe","Jacqueline","Jade","Janine","Jeanne","Jocelyne","Joëlle","Joséphine","Judith","Julia","Julie","Jules","Juliette","Justine","Katy","Kathy","Katie","Laura","Laure","Laureline","Laurence","Laurene","Lauriane","Laurianne","Laurine","Léa","Léna","Léonie","Léon","Léontine","Lorraine","Lucie","Lucienne","Lucille","Ludivine","Lydie","Lydie","Megane","Madeleine","Magali","Maguelone","Mallaury","Manon","Marceline","Margot","Marguerite","Marianne","Marie","Myriam","Marie","Marine","Marion","Marlène","Marthe","Martine","Mathilde","Maud","Maureen","Mauricette","Maxime","Mélanie","Melissa","Mélissandre","Mélisande","Mélodie","Michel","Micheline","Mireille","Miriam","Moïse","Monique","Morgane","Muriel","Mylène","Nadège","Nadine","Nathalie","Nicole","Nicolette","Nine","Noël","Noémie","Océane","Odette","Odile","Olive","Olivia","Olympe","Ombline","Ombeline","Ophélie","Oriande","Oriane","Ozanne","Pascale","Pascaline","Paule","Paulette","Pauline","Priscille","Prisca","Prisque","Pécine","Pélagie","Pénélope","Perrine","Pétronille","Philippine","Philomène","Philothée","Primerose","Prudence","Pulchérie","Quentine","Quiéta","Quintia","Quintilla","Rachel","Raphaëlle","Raymonde","Rebecca","Régine","Réjeanne","René","Rita","Rita","Rolande","Romane","Rosalie","Rose","Roseline","Sabine","Salomé","Sandra","Sandrine","Sarah","Ségolène","Séverine","Sibylle","Simone","Sixt","Solange","Soline","Solène","Sophie","Stéphanie","Suzanne","Sylvain","Sylvie","Tatiana","Thaïs","Théodora","Thérèse","Tiphaine","Ursule","Valentine","Valérie","Véronique","Victoire","Victorine","Vinciane","Violette","Virginie","Viviane","Xavière","Yolande","Ysaline","Yvette","Yvonne","Zélie","Zita","Zoé"]}},lastNames:{en:["Smith","Johnson","Williams","Jones","Brown","Davis","Miller","Wilson","Moore","Taylor","Anderson","Thomas","Jackson","White","Harris","Martin","Thompson","Garcia","Martinez","Robinson","Clark","Rodriguez","Lewis","Lee","Walker","Hall","Allen","Young","Hernandez","King","Wright","Lopez","Hill","Scott","Green","Adams","Baker","Gonzalez","Nelson","Carter","Mitchell","Perez","Roberts","Turner","Phillips","Campbell","Parker","Evans","Edwards","Collins","Stewart","Sanchez","Morris","Rogers","Reed","Cook","Morgan","Bell","Murphy","Bailey","Rivera","Cooper","Richardson","Cox","Howard","Ward","Torres","Peterson","Gray","Ramirez","James","Watson","Brooks","Kelly","Sanders","Price","Bennett","Wood","Barnes","Ross","Henderson","Coleman","Jenkins","Perry","Powell","Long","Patterson","Hughes","Flores","Washington","Butler","Simmons","Foster","Gonzales","Bryant","Alexander","Russell","Griffin","Diaz","Hayes","Myers","Ford","Hamilton","Graham","Sullivan","Wallace","Woods","Cole","West","Jordan","Owens","Reynolds","Fisher","Ellis","Harrison","Gibson","McDonald","Cruz","Marshall","Ortiz","Gomez","Murray","Freeman","Wells","Webb","Simpson","Stevens","Tucker","Porter","Hunter","Hicks","Crawford","Henry","Boyd","Mason","Morales","Kennedy","Warren","Dixon","Ramos","Reyes","Burns","Gordon","Shaw","Holmes","Rice","Robertson","Hunt","Black","Daniels","Palmer","Mills","Nichols","Grant","Knight","Ferguson","Rose","Stone","Hawkins","Dunn","Perkins","Hudson","Spencer","Gardner","Stephens","Payne","Pierce","Berry","Matthews","Arnold","Wagner","Willis","Ray","Watkins","Olson","Carroll","Duncan","Snyder","Hart","Cunningham","Bradley","Lane","Andrews","Ruiz","Harper","Fox","Riley","Armstrong","Carpenter","Weaver","Greene","Lawrence","Elliott","Chavez","Sims","Austin","Peters","Kelley","Franklin","Lawson","Fields","Gutierrez","Ryan","Schmidt","Carr","Vasquez","Castillo","Wheeler","Chapman","Oliver","Montgomery","Richards","Williamson","Johnston","Banks","Meyer","Bishop","McCoy","Howell","Alvarez","Morrison","Hansen","Fernandez","Garza","Harvey","Little","Burton","Stanley","Nguyen","George","Jacobs","Reid","Kim","Fuller","Lynch","Dean","Gilbert","Garrett","Romero","Welch","Larson","Frazier","Burke","Hanson","Day","Mendoza","Moreno","Bowman","Medina","Fowler","Brewer","Hoffman","Carlson","Silva","Pearson","Holland","Douglas","Fleming","Jensen","Vargas","Byrd","Davidson","Hopkins","May","Terry","Herrera","Wade","Soto","Walters","Curtis","Neal","Caldwell","Lowe","Jennings","Barnett","Graves","Jimenez","Horton","Shelton","Barrett","Obrien","Castro","Sutton","Gregory","McKinney","Lucas","Miles","Craig","Rodriquez","Chambers","Holt","Lambert","Fletcher","Watts","Bates","Hale","Rhodes","Pena","Beck","Newman","Haynes","McDaniel","Mendez","Bush","Vaughn","Parks","Dawson","Santiago","Norris","Hardy","Love","Steele","Curry","Powers","Schultz","Barker","Guzman","Page","Munoz","Ball","Keller","Chandler","Weber","Leonard","Walsh","Lyons","Ramsey","Wolfe","Schneider","Mullins","Benson","Sharp","Bowen","Daniel","Barber","Cummings","Hines","Baldwin","Griffith","Valdez","Hubbard","Salazar","Reeves","Warner","Stevenson","Burgess","Santos","Tate","Cross","Garner","Mann","Mack","Moss","Thornton","Dennis","McGee","Farmer","Delgado","Aguilar","Vega","Glover","Manning","Cohen","Harmon","Rodgers","Robbins","Newton","Todd","Blair","Higgins","Ingram","Reese","Cannon","Strickland","Townsend","Potter","Goodwin","Walton","Rowe","Hampton","Ortega","Patton","Swanson","Joseph","Francis","Goodman","Maldonado","Yates","Becker","Erickson","Hodges","Rios","Conner","Adkins","Webster","Norman","Malone","Hammond","Flowers","Cobb","Moody","Quinn","Blake","Maxwell","Pope","Floyd","Osborne","Paul","McCarthy","Guerrero","Lindsey","Estrada","Sandoval","Gibbs","Tyler","Gross","Fitzgerald","Stokes","Doyle","Sherman","Saunders","Wise","Colon","Gill","Alvarado","Greer","Padilla","Simon","Waters","Nunez","Ballard","Schwartz","McBride","Houston","Christensen","Klein","Pratt","Briggs","Parsons","McLaughlin","Zimmerman","French","Buchanan","Moran","Copeland","Roy","Pittman","Brady","McCormick","Holloway","Brock","Poole","Frank","Logan","Owen","Bass","Marsh","Drake","Wong","Jefferson","Park","Morton","Abbott","Sparks","Patrick","Norton","Huff","Clayton","Massey","Lloyd","Figueroa","Carson","Bowers","Roberson","Barton","Tran","Lamb","Harrington","Casey","Boone","Cortez","Clarke","Mathis","Singleton","Wilkins","Cain","Bryan","Underwood","Hogan","McKenzie","Collier","Luna","Phelps","McGuire","Allison","Bridges","Wilkerson","Nash","Summers","Atkins"],it:["Acciai","Aglietti","Agostini","Agresti","Ahmed","Aiazzi","Albanese","Alberti","Alessi","Alfani","Alinari","Alterini","Amato","Ammannati","Ancillotti","Andrei","Andreini","Andreoni","Angeli","Anichini","Antonelli","Antonini","Arena","Ariani","Arnetoli","Arrighi","Baccani","Baccetti","Bacci","Bacherini","Badii","Baggiani","Baglioni","Bagni","Bagnoli","Baldassini","Baldi","Baldini","Ballerini","Balli","Ballini","Balloni","Bambi","Banchi","Bandinelli","Bandini","Bani","Barbetti","Barbieri","Barchielli","Bardazzi","Bardelli","Bardi","Barducci","Bargellini","Bargiacchi","Barni","Baroncelli","Baroncini","Barone","Baroni","Baronti","Bartalesi","Bartoletti","Bartoli","Bartolini","Bartoloni","Bartolozzi","Basagni","Basile","Bassi","Batacchi","Battaglia","Battaglini","Bausi","Becagli","Becattini","Becchi","Becucci","Bellandi","Bellesi","Belli","Bellini","Bellucci","Bencini","Benedetti","Benelli","Beni","Benini","Bensi","Benucci","Benvenuti","Berlincioni","Bernacchioni","Bernardi","Bernardini","Berni","Bernini","Bertelli","Berti","Bertini","Bessi","Betti","Bettini","Biagi","Biagini","Biagioni","Biagiotti","Biancalani","Bianchi","Bianchini","Bianco","Biffoli","Bigazzi","Bigi","Biliotti","Billi","Binazzi","Bindi","Bini","Biondi","Bizzarri","Bocci","Bogani","Bolognesi","Bonaiuti","Bonanni","Bonciani","Boncinelli","Bondi","Bonechi","Bongini","Boni","Bonini","Borchi","Boretti","Borghi","Borghini","Borgioli","Borri","Borselli","Boschi","Bottai","Bracci","Braccini","Brandi","Braschi","Bravi","Brazzini","Breschi","Brilli","Brizzi","Brogelli","Brogi","Brogioni","Brunelli","Brunetti","Bruni","Bruno","Brunori","Bruschi","Bucci","Bucciarelli","Buccioni","Bucelli","Bulli","Burberi","Burchi","Burgassi","Burroni","Bussotti","Buti","Caciolli","Caiani","Calabrese","Calamai","Calamandrei","Caldini","Calo'","Calonaci","Calosi","Calvelli","Cambi","Camiciottoli","Cammelli","Cammilli","Campolmi","Cantini","Capanni","Capecchi","Caponi","Cappelletti","Cappelli","Cappellini","Cappugi","Capretti","Caputo","Carbone","Carboni","Cardini","Carlesi","Carletti","Carli","Caroti","Carotti","Carrai","Carraresi","Carta","Caruso","Casalini","Casati","Caselli","Casini","Castagnoli","Castellani","Castelli","Castellucci","Catalano","Catarzi","Catelani","Cavaciocchi","Cavallaro","Cavallini","Cavicchi","Cavini","Ceccarelli","Ceccatelli","Ceccherelli","Ceccherini","Cecchi","Cecchini","Cecconi","Cei","Cellai","Celli","Cellini","Cencetti","Ceni","Cenni","Cerbai","Cesari","Ceseri","Checcacci","Checchi","Checcucci","Cheli","Chellini","Chen","Cheng","Cherici","Cherubini","Chiaramonti","Chiarantini","Chiarelli","Chiari","Chiarini","Chiarugi","Chiavacci","Chiesi","Chimenti","Chini","Chirici","Chiti","Ciabatti","Ciampi","Cianchi","Cianfanelli","Cianferoni","Ciani","Ciapetti","Ciappi","Ciardi","Ciatti","Cicali","Ciccone","Cinelli","Cini","Ciobanu","Ciolli","Cioni","Cipriani","Cirillo","Cirri","Ciucchi","Ciuffi","Ciulli","Ciullini","Clemente","Cocchi","Cognome","Coli","Collini","Colombo","Colzi","Comparini","Conforti","Consigli","Conte","Conti","Contini","Coppini","Coppola","Corsi","Corsini","Corti","Cortini","Cosi","Costa","Costantini","Costantino","Cozzi","Cresci","Crescioli","Cresti","Crini","Curradi","D'Agostino","D'Alessandro","D'Amico","D'Angelo","Daddi","Dainelli","Dallai","Danti","Davitti","De Angelis","De Luca","De Marco","De Rosa","De Santis","De Simone","De Vita","Degl'Innocenti","Degli Innocenti","Dei","Del Lungo","Del Re","Di Marco","Di Stefano","Dini","Diop","Dobre","Dolfi","Donati","Dondoli","Dong","Donnini","Ducci","Dumitru","Ermini","Esposito","Evangelisti","Fabbri","Fabbrini","Fabbrizzi","Fabbroni","Fabbrucci","Fabiani","Facchini","Faggi","Fagioli","Failli","Faini","Falciani","Falcini","Falcone","Fallani","Falorni","Falsini","Falugiani","Fancelli","Fanelli","Fanetti","Fanfani","Fani","Fantappie'","Fantechi","Fanti","Fantini","Fantoni","Farina","Fattori","Favilli","Fedi","Fei","Ferrante","Ferrara","Ferrari","Ferraro","Ferretti","Ferri","Ferrini","Ferroni","Fiaschi","Fibbi","Fiesoli","Filippi","Filippini","Fini","Fioravanti","Fiore","Fiorentini","Fiorini","Fissi","Focardi","Foggi","Fontana","Fontanelli","Fontani","Forconi","Formigli","Forte","Forti","Fortini","Fossati","Fossi","Francalanci","Franceschi","Franceschini","Franchi","Franchini","Franci","Francini","Francioni","Franco","Frassineti","Frati","Fratini","Frilli","Frizzi","Frosali","Frosini","Frullini","Fusco","Fusi","Gabbrielli","Gabellini","Gagliardi","Galanti","Galardi","Galeotti","Galletti","Galli","Gallo","Gallori","Gambacciani","Gargani","Garofalo","Garuglieri","Gashi","Gasperini","Gatti","Gelli","Gensini","Gentile","Gentili","Geri","Gerini","Gheri","Ghini","Giachetti","Giachi","Giacomelli","Gianassi","Giani","Giannelli","Giannetti","Gianni","Giannini","Giannoni","Giannotti","Giannozzi","Gigli","Giordano","Giorgetti","Giorgi","Giovacchini","Giovannelli","Giovannetti","Giovannini","Giovannoni","Giuliani","Giunti","Giuntini","Giusti","Gonnelli","Goretti","Gori","Gradi","Gramigni","Grassi","Grasso","Graziani","Grazzini","Greco","Grifoni","Grillo","Grimaldi","Grossi","Gualtieri","Guarducci","Guarino","Guarnieri","Guasti","Guerra","Guerri","Guerrini","Guidi","Guidotti","He","Hoxha","Hu","Huang","Iandelli","Ignesti","Innocenti","Jin","La Rosa","Lai","Landi","Landini","Lanini","Lapi","Lapini","Lari","Lascialfari","Lastrucci","Latini","Lazzeri","Lazzerini","Lelli","Lenzi","Leonardi","Leoncini","Leone","Leoni","Lepri","Li","Liao","Lin","Linari","Lippi","Lisi","Livi","Lombardi","Lombardini","Lombardo","Longo","Lopez","Lorenzi","Lorenzini","Lorini","Lotti","Lu","Lucchesi","Lucherini","Lunghi","Lupi","Madiai","Maestrini","Maffei","Maggi","Maggini","Magherini","Magini","Magnani","Magnelli","Magni","Magnolfi","Magrini","Malavolti","Malevolti","Manca","Mancini","Manetti","Manfredi","Mangani","Mannelli","Manni","Mannini","Mannucci","Manuelli","Manzini","Marcelli","Marchese","Marchetti","Marchi","Marchiani","Marchionni","Marconi","Marcucci","Margheri","Mari","Mariani","Marilli","Marinai","Marinari","Marinelli","Marini","Marino","Mariotti","Marsili","Martelli","Martinelli","Martini","Martino","Marzi","Masi","Masini","Masoni","Massai","Materassi","Mattei","Matteini","Matteucci","Matteuzzi","Mattioli","Mattolini","Matucci","Mauro","Mazzanti","Mazzei","Mazzetti","Mazzi","Mazzini","Mazzocchi","Mazzoli","Mazzoni","Mazzuoli","Meacci","Mecocci","Meini","Melani","Mele","Meli","Mengoni","Menichetti","Meoni","Merlini","Messeri","Messina","Meucci","Miccinesi","Miceli","Micheli","Michelini","Michelozzi","Migliori","Migliorini","Milani","Miniati","Misuri","Monaco","Montagnani","Montagni","Montanari","Montelatici","Monti","Montigiani","Montini","Morandi","Morandini","Morelli","Moretti","Morganti","Mori","Morini","Moroni","Morozzi","Mugnai","Mugnaini","Mustafa","Naldi","Naldini","Nannelli","Nanni","Nannini","Nannucci","Nardi","Nardini","Nardoni","Natali","Ndiaye","Nencetti","Nencini","Nencioni","Neri","Nesi","Nesti","Niccolai","Niccoli","Niccolini","Nigi","Nistri","Nocentini","Noferini","Novelli","Nucci","Nuti","Nutini","Oliva","Olivieri","Olmi","Orlandi","Orlandini","Orlando","Orsini","Ortolani","Ottanelli","Pacciani","Pace","Paci","Pacini","Pagani","Pagano","Paggetti","Pagliai","Pagni","Pagnini","Paladini","Palagi","Palchetti","Palloni","Palmieri","Palumbo","Pampaloni","Pancani","Pandolfi","Pandolfini","Panerai","Panichi","Paoletti","Paoli","Paolini","Papi","Papini","Papucci","Parenti","Parigi","Parisi","Parri","Parrini","Pasquini","Passeri","Pecchioli","Pecorini","Pellegrini","Pepi","Perini","Perrone","Peruzzi","Pesci","Pestelli","Petri","Petrini","Petrucci","Pettini","Pezzati","Pezzatini","Piani","Piazza","Piazzesi","Piazzini","Piccardi","Picchi","Piccini","Piccioli","Pieraccini","Pieraccioni","Pieralli","Pierattini","Pieri","Pierini","Pieroni","Pietrini","Pini","Pinna","Pinto","Pinzani","Pinzauti","Piras","Pisani","Pistolesi","Poggesi","Poggi","Poggiali","Poggiolini","Poli","Pollastri","Porciani","Pozzi","Pratellesi","Pratesi","Prosperi","Pruneti","Pucci","Puccini","Puccioni","Pugi","Pugliese","Puliti","Querci","Quercioli","Raddi","Radu","Raffaelli","Ragazzini","Ranfagni","Ranieri","Rastrelli","Raugei","Raveggi","Renai","Renzi","Rettori","Ricci","Ricciardi","Ridi","Ridolfi","Rigacci","Righi","Righini","Rinaldi","Risaliti","Ristori","Rizzo","Rocchi","Rocchini","Rogai","Romagnoli","Romanelli","Romani","Romano","Romei","Romeo","Romiti","Romoli","Romolini","Rontini","Rosati","Roselli","Rosi","Rossetti","Rossi","Rossini","Rovai","Ruggeri","Ruggiero","Russo","Sabatini","Saccardi","Sacchetti","Sacchi","Sacco","Salerno","Salimbeni","Salucci","Salvadori","Salvestrini","Salvi","Salvini","Sanesi","Sani","Sanna","Santi","Santini","Santoni","Santoro","Santucci","Sardi","Sarri","Sarti","Sassi","Sbolci","Scali","Scarpelli","Scarselli","Scopetani","Secci","Selvi","Senatori","Senesi","Serafini","Sereni","Serra","Sestini","Sguanci","Sieni","Signorini","Silvestri","Simoncini","Simonetti","Simoni","Singh","Sodi","Soldi","Somigli","Sorbi","Sorelli","Sorrentino","Sottili","Spina","Spinelli","Staccioli","Staderini","Stefanelli","Stefani","Stefanini","Stella","Susini","Tacchi","Tacconi","Taddei","Tagliaferri","Tamburini","Tanganelli","Tani","Tanini","Tapinassi","Tarchi","Tarchiani","Targioni","Tassi","Tassini","Tempesti","Terzani","Tesi","Testa","Testi","Tilli","Tinti","Tirinnanzi","Toccafondi","Tofanari","Tofani","Tognaccini","Tonelli","Tonini","Torelli","Torrini","Tosi","Toti","Tozzi","Trambusti","Trapani","Tucci","Turchi","Ugolini","Ulivi","Valente","Valenti","Valentini","Vangelisti","Vanni","Vannini","Vannoni","Vannozzi","Vannucchi","Vannucci","Ventura","Venturi","Venturini","Vestri","Vettori","Vichi","Viciani","Vieri","Vigiani","Vignoli","Vignolini","Vignozzi","Villani","Vinci","Visani","Vitale","Vitali","Viti","Viviani","Vivoli","Volpe","Volpi","Wang","Wu","Xu","Yang","Ye","Zagli","Zani","Zanieri","Zanobini","Zecchi","Zetti","Zhang","Zheng","Zhou","Zhu","Zingoni","Zini","Zoppi"],nl:["Albers","Alblas","Appelman","Baars","Baas","Bakker","Blank","Bleeker","Blok","Blom","Boer","Boers","Boldewijn","Boon","Boot","Bos","Bosch","Bosma","Bosman","Bouma","Bouman","Bouwman","Brands","Brouwer","Burger","Buijs","Buitenhuis","Ceder","Cohen","Dekker","Dekkers","Dijkman","Dijkstra","Driessen","Drost","Engel","Evers","Faber","Franke","Gerritsen","Goedhart","Goossens","Groen","Groenenberg","Groot","Haan","Hart","Heemskerk","Hendriks","Hermans","Hoekstra","Hofman","Hopman","Huisman","Jacobs","Jansen","Janssen","Jonker","Jaspers","Keijzer","Klaassen","Klein","Koek","Koenders","Kok","Kool","Koopman","Koopmans","Koning","Koster","Kramer","Kroon","Kuijpers","Kuiper","Kuipers","Kurt","Koster","Kwakman","Los","Lubbers","Maas","Markus","Martens","Meijer","Mol","Molenaar","Mulder","Nieuwenhuis","Peeters","Peters","Pengel","Pieters","Pool","Post","Postma","Prins","Pronk","Reijnders","Rietveld","Roest","Roos","Sanders","Schaap","Scheffer","Schenk","Schilder","Schipper","Schmidt","Scholten","Schouten","Schut","Schutte","Schuurman","Simons","Smeets","Smit","Smits","Snel","Swinkels","Tas","Terpstra","Timmermans","Tol","Tromp","Troost","Valk","Veenstra","Veldkamp","Verbeek","Verheul","Verhoeven","Vermeer","Vermeulen","Verweij","Vink","Visser","Voorn","Vos","Wagenaar","Wiersema","Willems","Willemsen","Witteveen","Wolff","Wolters","Zijlstra","Zwart","de Beer","de Boer","de Bruijn","de Bruin","de Graaf","de Groot","de Haan","de Haas","de Jager","de Jong","de Jonge","de Koning","de Lange","de Leeuw","de Ridder","de Rooij","de Ruiter","de Vos","de Vries","de Waal","de Wit","de Zwart","van Beek","van Boven","van Dam","van Dijk","van Dongen","van Doorn","van Egmond","van Eijk","van Es","van Gelder","van Gelderen","van Houten","van Hulst","van Kempen","van Kesteren","van Leeuwen","van Loon","van Mill","van Noord","van Ommen","van Ommeren","van Oosten","van Oostveen","van Rijn","van Schaik","van Veen","van Vliet","van Wijk","van Wijngaarden","van den Poel","van de Pol","van den Ploeg","van de Ven","van den Berg","van den Bosch","van den Brink","van den Broek","van den Heuvel","van der Heijden","van der Horst","van der Hulst","van der Kroon","van der Laan","van der Linden","van der Meer","van der Meij","van der Meulen","van der Molen","van der Sluis","van der Spek","van der Veen","van der Velde","van der Velden","van der Vliet","van der Wal"],uk:["Smith","Jones","Williams","Taylor","Brown","Davies","Evans","Wilson","Thomas","Johnson","Roberts","Robinson","Thompson","Wright","Walker","White","Edwards","Hughes","Green","Hall","Lewis","Harris","Clarke","Patel","Jackson","Wood","Turner","Martin","Cooper","Hill","Ward","Morris","Moore","Clark","Lee","King","Baker","Harrison","Morgan","Allen","James","Scott","Phillips","Watson","Davis","Parker","Price","Bennett","Young","Griffiths","Mitchell","Kelly","Cook","Carter","Richardson","Bailey","Collins","Bell","Shaw","Murphy","Miller","Cox","Richards","Khan","Marshall","Anderson","Simpson","Ellis","Adams","Singh","Begum","Wilkinson","Foster","Chapman","Powell","Webb","Rogers","Gray","Mason","Ali","Hunt","Hussain","Campbell","Matthews","Owen","Palmer","Holmes","Mills","Barnes","Knight","Lloyd","Butler","Russell","Barker","Fisher","Stevens","Jenkins","Murray","Dixon","Harvey","Graham","Pearson","Ahmed","Fletcher","Walsh","Kaur","Gibson","Howard","Andrews","Stewart","Elliott","Reynolds","Saunders","Payne","Fox","Ford","Pearce","Day","Brooks","West","Lawrence","Cole","Atkinson","Bradley","Spencer","Gill","Dawson","Ball","Burton","O'brien","Watts","Rose","Booth","Perry","Ryan","Grant","Wells","Armstrong","Francis","Rees","Hayes","Hart","Hudson","Newman","Barrett","Webster","Hunter","Gregory","Carr","Lowe","Page","Marsh","Riley","Dunn","Woods","Parsons","Berry","Stone","Reid","Holland","Hawkins","Harding","Porter","Robertson","Newton","Oliver","Reed","Kennedy","Williamson","Bird","Gardner","Shah","Dean","Lane","Cooke","Bates","Henderson","Parry","Burgess","Bishop","Walton","Burns","Nicholson","Shepherd","Ross","Cross","Long","Freeman","Warren","Nicholls","Hamilton","Byrne","Sutton","Mcdonald","Yates","Hodgson","Robson","Curtis","Hopkins","O'connor","Harper","Coleman","Watkins","Moss","Mccarthy","Chambers","O'neill","Griffin","Sharp","Hardy","Wheeler","Potter","Osborne","Johnston","Gordon","Doyle","Wallace","George","Jordan","Hutchinson","Rowe","Burke","May","Pritchard","Gilbert","Willis","Higgins","Read","Miles","Stevenson","Stephenson","Hammond","Arnold","Buckley","Walters","Hewitt","Barber","Nelson","Slater","Austin","Sullivan","Whitehead","Mann","Frost","Lambert","Stephens","Blake","Akhtar","Lynch","Goodwin","Barton","Woodward","Thomson","Cunningham","Quinn","Barnett","Baxter","Bibi","Clayton","Nash","Greenwood","Jennings","Holt","Kemp","Poole","Gallagher","Bond","Stokes","Tucker","Davidson","Fowler","Heath","Norman","Middleton","Lawson","Banks","French","Stanley","Jarvis","Gibbs","Ferguson","Hayward","Carroll","Douglas","Dickinson","Todd","Barlow","Peters","Lucas","Knowles","Hartley","Miah","Simmons","Morton","Alexander","Field","Morrison","Norris","Townsend","Preston","Hancock","Thornton","Baldwin","Burrows","Briggs","Parkinson","Reeves","Macdonald","Lamb","Black","Abbott","Sanders","Thorpe","Holden","Tomlinson","Perkins","Ashton","Rhodes","Fuller","Howe","Bryant","Vaughan","Dale","Davey","Weston","Bartlett","Whittaker","Davison","Kent","Skinner","Birch","Morley","Daniels","Glover","Howell","Cartwright","Pugh","Humphreys","Goddard","Brennan","Wall","Kirby","Bowen","Savage","Bull","Wong","Dobson","Smart","Wilkins","Kirk","Fraser","Duffy","Hicks","Patterson","Bradshaw","Little","Archer","Warner","Waters","O'sullivan","Farrell","Brookes","Atkins","Kay","Dodd","Bentley","Flynn","John","Schofield","Short","Haynes","Wade","Butcher","Henry","Sanderson","Crawford","Sheppard","Bolton","Coates","Giles","Gould","Houghton","Gibbons","Pratt","Manning","Law","Hooper","Noble","Dyer","Rahman","Clements","Moran","Sykes","Chan","Doherty","Connolly","Joyce","Franklin","Hobbs","Coles","Herbert","Steele","Kerr","Leach","Winter","Owens","Duncan","Naylor","Fleming","Horton","Finch","Fitzgerald","Randall","Carpenter","Marsden","Browne","Garner","Pickering","Hale","Dennis","Vincent","Chadwick","Chandler","Sharpe","Nolan","Lyons","Hurst","Collier","Peacock","Howarth","Faulkner","Rice","Pollard","Welch","Norton","Gough","Sinclair","Blackburn","Bryan","Conway","Power","Cameron","Daly","Allan","Hanson","Gardiner","Boyle","Myers","Turnbull","Wallis","Mahmood","Sims","Swift","Iqbal","Pope","Brady","Chamberlain","Rowley","Tyler","Farmer","Metcalfe","Hilton","Godfrey","Holloway","Parkin","Bray","Talbot","Donnelly","Nixon","Charlton","Benson","Whitehouse","Barry","Hope","Lord","North","Storey","Connor","Potts","Bevan","Hargreaves","Mclean","Mistry","Bruce","Howells","Hyde","Parkes","Wyatt","Fry","Lees","O'donnell","Craig","Forster","Mckenzie","Humphries","Mellor","Carey","Ingram","Summers","Leonard"],de:["Müller","Schmidt","Schneider","Fischer","Weber","Meyer","Wagner","Becker","Schulz","Hoffmann","Schäfer","Koch","Bauer","Richter","Klein","Wolf","Schröder","Neumann","Schwarz","Zimmermann","Braun","Krüger","Hofmann","Hartmann","Lange","Schmitt","Werner","Schmitz","Krause","Meier","Lehmann","Schmid","Schulze","Maier","Köhler","Herrmann","König","Walter","Mayer","Huber","Kaiser","Fuchs","Peters","Lang","Scholz","Möller","Weiß","Jung","Hahn","Schubert","Vogel","Friedrich","Keller","Günther","Frank","Berger","Winkler","Roth","Beck","Lorenz","Baumann","Franke","Albrecht","Schuster","Simon","Ludwig","Böhm","Winter","Kraus","Martin","Schumacher","Krämer","Vogt","Stein","Jäger","Otto","Sommer","Groß","Seidel","Heinrich","Brandt","Haas","Schreiber","Graf","Schulte","Dietrich","Ziegler","Kuhn","Kühn","Pohl","Engel","Horn","Busch","Bergmann","Thomas","Voigt","Sauer","Arnold","Wolff","Pfeiffer"],jp:["Sato","Suzuki","Takahashi","Tanaka","Watanabe","Ito","Yamamoto","Nakamura","Kobayashi","Kato","Yoshida","Yamada","Sasaki","Yamaguchi","Saito","Matsumoto","Inoue","Kimura","Hayashi","Shimizu","Yamazaki","Mori","Abe","Ikeda","Hashimoto","Yamashita","Ishikawa","Nakajima","Maeda","Fujita","Ogawa","Goto","Okada","Hasegawa","Murakami","Kondo","Ishii","Saito","Sakamoto","Endo","Aoki","Fujii","Nishimura","Fukuda","Ota","Miura","Fujiwara","Okamoto","Matsuda","Nakagawa","Nakano","Harada","Ono","Tamura","Takeuchi","Kaneko","Wada","Nakayama","Ishida","Ueda","Morita","Hara","Shibata","Sakai","Kudo","Yokoyama","Miyazaki","Miyamoto","Uchida","Takagi","Ando","Taniguchi","Ohno","Maruyama","Imai","Takada","Fujimoto","Takeda","Murata","Ueno","Sugiyama","Masuda","Sugawara","Hirano","Kojima","Otsuka","Chiba","Kubo","Matsui","Iwasaki","Sakurai","Kinoshita","Noguchi","Matsuo","Nomura","Kikuchi","Sano","Onishi","Sugimoto","Arai"],es:["Garcia","Fernandez","Lopez","Martinez","Gonzalez","Rodriguez","Sanchez","Perez","Martin","Gomez","Ruiz","Diaz","Hernandez","Alvarez","Jimenez","Moreno","Munoz","Alonso","Romero","Navarro","Gutierrez","Torres","Dominguez","Gil","Vazquez","Blanco","Serrano","Ramos","Castro","Suarez","Sanz","Rubio","Ortega","Molina","Delgado","Ortiz","Morales","Ramirez","Marin","Iglesias","Santos","Castillo","Garrido","Calvo","Pena","Cruz","Cano","Nunez","Prieto","Diez","Lozano","Vidal","Pascual","Ferrer","Medina","Vega","Leon","Herrero","Vicente","Mendez","Guerrero","Fuentes","Campos","Nieto","Cortes","Caballero","Ibanez","Lorenzo","Pastor","Gimenez","Saez","Soler","Marquez","Carrasco","Herrera","Montero","Arias","Crespo","Flores","Andres","Aguilar","Hidalgo","Cabrera","Mora","Duran","Velasco","Rey","Pardo","Roman","Vila","Bravo","Merino","Moya","Soto","Izquierdo","Reyes","Redondo","Marcos","Carmona","Menendez"],fr:["Martin","Bernard","Thomas","Petit","Robert","Richard","Durand","Dubois","Moreau","Laurent","Simon","Michel","Lefèvre","Leroy","Roux","David","Bertrand","Morel","Fournier","Girard","Bonnet","Dupont","Lambert","Fontaine","Rousseau","Vincent","Müller","Lefèvre","Faure","André","Mercier","Blanc","Guérin","Boyer","Garnier","Chevalier","François","Legrand","Gauthier","Garcia","Perrin","Robin","Clément","Morin","Nicolas","Henry","Roussel","Matthieu","Gautier","Masson","Marchand","Duval","Denis","Dumont","Marie","Lemaire","Noël","Meyer","Dufour","Meunier","Brun","Blanchard","Giraud","Joly","Rivière","Lucas","Brunet","Gaillard","Barbier","Arnaud","Martínez","Gérard","Roche","Renard","Schmitt","Roy","Leroux","Colin","Vidal","Caron","Picard","Roger","Fabre","Aubert","Lemoine","Renaud","Dumas","Lacroix","Olivier","Philippe","Bourgeois","Pierre","Benoît","Rey","Leclerc","Payet","Rolland","Leclercq","Guillaume","Lecomte","López","Jean","Dupuy","Guillot","Hubert","Berger","Carpentier","Sánchez","Dupuis","Moulin","Louis","Deschamps","Huet","Vasseur","Perez","Boucher","Fleury","Royer","Klein","Jacquet","Adam","Paris","Poirier","Marty","Aubry","Guyot","Carré","Charles","Renault","Charpentier","Ménard","Maillard","Baron","Bertin","Bailly","Hervé","Schneider","Fernández","Le GallGall","Collet","Léger","Bouvier","Julien","Prévost","Millet","Perrot","Daniel","Le RouxRoux","Cousin","Germain","Breton","Besson","Langlois","Rémi","Le GoffGoff","Pelletier","Lévêque","Perrier","Leblanc","Barré","Lebrun","Marchal","Weber","Mallet","Hamon","Boulanger","Jacob","Monnier","Michaud","Rodríguez","Guichard","Gillet","Étienne","Grondin","Poulain","Tessier","Chevallier","Collin","Chauvin","Da SilvaSilva","Bouchet","Gay","Lemaître","Bénard","Maréchal","Humbert","Reynaud","Antoine","Hoarau","Perret","Barthélemy","Cordier","Pichon","Lejeune","Gilbert","Lamy","Delaunay","Pasquier","Carlier","LaporteLaporte"]},postcodeAreas:[{code:"AB"},{code:"AL"},{code:"B"},{code:"BA"},{code:"BB"},{code:"BD"},{code:"BH"},{code:"BL"},{code:"BN"},{code:"BR"},{code:"BS"},{code:"BT"},{code:"CA"},{code:"CB"},{code:"CF"},{code:"CH"},{code:"CM"},{code:"CO"},{code:"CR"},{code:"CT"},{code:"CV"},{code:"CW"},{code:"DA"},{code:"DD"},{code:"DE"},{code:"DG"},{code:"DH"},{code:"DL"},{code:"DN"},{code:"DT"},{code:"DY"},{code:"E"},{code:"EC"},{code:"EH"},{code:"EN"},{code:"EX"},{code:"FK"},{code:"FY"},{code:"G"},{code:"GL"},{code:"GU"},{code:"GY"},{code:"HA"},{code:"HD"},{code:"HG"},{code:"HP"},{code:"HR"},{code:"HS"},{code:"HU"},{code:"HX"},{code:"IG"},{code:"IM"},{code:"IP"},{code:"IV"},{code:"JE"},{code:"KA"},{code:"KT"},{code:"KW"},{code:"KY"},{code:"L"},{code:"LA"},{code:"LD"},{code:"LE"},{code:"LL"},{code:"LN"},{code:"LS"},{code:"LU"},{code:"M"},{code:"ME"},{code:"MK"},{code:"ML"},{code:"N"},{code:"NE"},{code:"NG"},{code:"NN"},{code:"NP"},{code:"NR"},{code:"NW"},{code:"OL"},{code:"OX"},{code:"PA"},{code:"PE"},{code:"PH"},{code:"PL"},{code:"PO"},{code:"PR"},{code:"RG"},{code:"RH"},{code:"RM"},{code:"S"},{code:"SA"},{code:"SE"},{code:"SG"},{code:"SK"},{code:"SL"},{code:"SM"},{code:"SN"},{code:"SO"},{code:"SP"},{code:"SR"},{code:"SS"},{code:"ST"},{code:"SW"},{code:"SY"},{code:"TA"},{code:"TD"},{code:"TF"},{code:"TN"},{code:"TQ"},{code:"TR"},{code:"TS"},{code:"TW"},{code:"UB"},{code:"W"},{code:"WA"},{code:"WC"},{code:"WD"},{code:"WF"},{code:"WN"},{code:"WR"},{code:"WS"},{code:"WV"},{code:"YO"},{code:"ZE"}],countries:[{name:"Afghanistan",abbreviation:"AF"},{name:"Åland Islands",abbreviation:"AX"},{name:"Albania",abbreviation:"AL"},{name:"Algeria",abbreviation:"DZ"},{name:"American Samoa",abbreviation:"AS"},{name:"Andorra",abbreviation:"AD"},{name:"Angola",abbreviation:"AO"},{name:"Anguilla",abbreviation:"AI"},{name:"Antarctica",abbreviation:"AQ"},{name:"Antigua & Barbuda",abbreviation:"AG"},{name:"Argentina",abbreviation:"AR"},{name:"Armenia",abbreviation:"AM"},{name:"Aruba",abbreviation:"AW"},{name:"Ascension Island",abbreviation:"AC"},{name:"Australia",abbreviation:"AU"},{name:"Austria",abbreviation:"AT"},{name:"Azerbaijan",abbreviation:"AZ"},{name:"Bahamas",abbreviation:"BS"},{name:"Bahrain",abbreviation:"BH"},{name:"Bangladesh",abbreviation:"BD"},{name:"Barbados",abbreviation:"BB"},{name:"Belarus",abbreviation:"BY"},{name:"Belgium",abbreviation:"BE"},{name:"Belize",abbreviation:"BZ"},{name:"Benin",abbreviation:"BJ"},{name:"Bermuda",abbreviation:"BM"},{name:"Bhutan",abbreviation:"BT"},{name:"Bolivia",abbreviation:"BO"},{name:"Bosnia & Herzegovina",abbreviation:"BA"},{name:"Botswana",abbreviation:"BW"},{name:"Brazil",abbreviation:"BR"},{name:"British Indian Ocean Territory",abbreviation:"IO"},{name:"British Virgin Islands",abbreviation:"VG"},{name:"Brunei",abbreviation:"BN"},{name:"Bulgaria",abbreviation:"BG"},{name:"Burkina Faso",abbreviation:"BF"},{name:"Burundi",abbreviation:"BI"},{name:"Cambodia",abbreviation:"KH"},{name:"Cameroon",abbreviation:"CM"},{name:"Canada",abbreviation:"CA"},{name:"Canary Islands",abbreviation:"IC"},{name:"Cape Verde",abbreviation:"CV"},{name:"Caribbean Netherlands",abbreviation:"BQ"},{name:"Cayman Islands",abbreviation:"KY"},{name:"Central African Republic",abbreviation:"CF"},{name:"Ceuta & Melilla",abbreviation:"EA"},{name:"Chad",abbreviation:"TD"},{name:"Chile",abbreviation:"CL"},{name:"China",abbreviation:"CN"},{name:"Christmas Island",abbreviation:"CX"},{name:"Cocos (Keeling) Islands",abbreviation:"CC"},{name:"Colombia",abbreviation:"CO"},{name:"Comoros",abbreviation:"KM"},{name:"Congo - Brazzaville",abbreviation:"CG"},{name:"Congo - Kinshasa",abbreviation:"CD"},{name:"Cook Islands",abbreviation:"CK"},{name:"Costa Rica",abbreviation:"CR"},{name:"Côte d'Ivoire",abbreviation:"CI"},{name:"Croatia",abbreviation:"HR"},{name:"Cuba",abbreviation:"CU"},{name:"Curaçao",abbreviation:"CW"},{name:"Cyprus",abbreviation:"CY"},{name:"Czech Republic",abbreviation:"CZ"},{name:"Denmark",abbreviation:"DK"},{name:"Diego Garcia",abbreviation:"DG"},{name:"Djibouti",abbreviation:"DJ"},{name:"Dominica",abbreviation:"DM"},{name:"Dominican Republic",abbreviation:"DO"},{name:"Ecuador",abbreviation:"EC"},{name:"Egypt",abbreviation:"EG"},{name:"El Salvador",abbreviation:"SV"},{name:"Equatorial Guinea",abbreviation:"GQ"},{name:"Eritrea",abbreviation:"ER"},{name:"Estonia",abbreviation:"EE"},{name:"Ethiopia",abbreviation:"ET"},{name:"Falkland Islands",abbreviation:"FK"},{name:"Faroe Islands",abbreviation:"FO"},{name:"Fiji",abbreviation:"FJ"},{name:"Finland",abbreviation:"FI"},{name:"France",abbreviation:"FR"},{name:"French Guiana",abbreviation:"GF"},{name:"French Polynesia",abbreviation:"PF"},{name:"French Southern Territories",abbreviation:"TF"},{name:"Gabon",abbreviation:"GA"},{name:"Gambia",abbreviation:"GM"},{name:"Georgia",abbreviation:"GE"},{name:"Germany",abbreviation:"DE"},{name:"Ghana",abbreviation:"GH"},{name:"Gibraltar",abbreviation:"GI"},{name:"Greece",abbreviation:"GR"},{name:"Greenland",abbreviation:"GL"},{name:"Grenada",abbreviation:"GD"},{name:"Guadeloupe",abbreviation:"GP"},{name:"Guam",abbreviation:"GU"},{name:"Guatemala",abbreviation:"GT"},{name:"Guernsey",abbreviation:"GG"},{name:"Guinea",abbreviation:"GN"},{name:"Guinea-Bissau",abbreviation:"GW"},{name:"Guyana",abbreviation:"GY"},{name:"Haiti",abbreviation:"HT"},{name:"Honduras",abbreviation:"HN"},{name:"Hong Kong SAR China",abbreviation:"HK"},{name:"Hungary",abbreviation:"HU"},{name:"Iceland",abbreviation:"IS"},{name:"India",abbreviation:"IN"},{name:"Indonesia",abbreviation:"ID"},{name:"Iran",abbreviation:"IR"},{name:"Iraq",abbreviation:"IQ"},{name:"Ireland",abbreviation:"IE"},{name:"Isle of Man",abbreviation:"IM"},{name:"Israel",abbreviation:"IL"},{name:"Italy",abbreviation:"IT"},{name:"Jamaica",abbreviation:"JM"},{name:"Japan",abbreviation:"JP"},{name:"Jersey",abbreviation:"JE"},{name:"Jordan",abbreviation:"JO"},{name:"Kazakhstan",abbreviation:"KZ"},{name:"Kenya",abbreviation:"KE"},{name:"Kiribati",abbreviation:"KI"},{name:"Kosovo",abbreviation:"XK"},{name:"Kuwait",abbreviation:"KW"},{name:"Kyrgyzstan",abbreviation:"KG"},{name:"Laos",abbreviation:"LA"},{name:"Latvia",abbreviation:"LV"},{name:"Lebanon",abbreviation:"LB"},{name:"Lesotho",abbreviation:"LS"},{name:"Liberia",abbreviation:"LR"},{name:"Libya",abbreviation:"LY"},{name:"Liechtenstein",abbreviation:"LI"},{name:"Lithuania",abbreviation:"LT"},{name:"Luxembourg",abbreviation:"LU"},{name:"Macau SAR China",abbreviation:"MO"},{name:"Macedonia",abbreviation:"MK"},{name:"Madagascar",abbreviation:"MG"},{name:"Malawi",abbreviation:"MW"},{name:"Malaysia",abbreviation:"MY"},{name:"Maldives",abbreviation:"MV"},{name:"Mali",abbreviation:"ML"},{name:"Malta",abbreviation:"MT"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Martinique",abbreviation:"MQ"},{name:"Mauritania",abbreviation:"MR"},{name:"Mauritius",abbreviation:"MU"},{name:"Mayotte",abbreviation:"YT"},{name:"Mexico",abbreviation:"MX"},{name:"Micronesia",abbreviation:"FM"},{name:"Moldova",abbreviation:"MD"},{name:"Monaco",abbreviation:"MC"},{name:"Mongolia",abbreviation:"MN"},{name:"Montenegro",abbreviation:"ME"},{name:"Montserrat",abbreviation:"MS"},{name:"Morocco",abbreviation:"MA"},{name:"Mozambique",abbreviation:"MZ"},{name:"Myanmar (Burma)",abbreviation:"MM"},{name:"Namibia",abbreviation:"NA"},{name:"Nauru",abbreviation:"NR"},{name:"Nepal",abbreviation:"NP"},{name:"Netherlands",abbreviation:"NL"},{name:"New Caledonia",abbreviation:"NC"},{name:"New Zealand",abbreviation:"NZ"},{name:"Nicaragua",abbreviation:"NI"},{name:"Niger",abbreviation:"NE"},{name:"Nigeria",abbreviation:"NG"},{name:"Niue",abbreviation:"NU"},{name:"Norfolk Island",abbreviation:"NF"},{name:"North Korea",abbreviation:"KP"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Norway",abbreviation:"NO"},{name:"Oman",abbreviation:"OM"},{name:"Pakistan",abbreviation:"PK"},{name:"Palau",abbreviation:"PW"},{name:"Palestinian Territories",abbreviation:"PS"},{name:"Panama",abbreviation:"PA"},{name:"Papua New Guinea",abbreviation:"PG"},{name:"Paraguay",abbreviation:"PY"},{name:"Peru",abbreviation:"PE"},{name:"Philippines",abbreviation:"PH"},{name:"Pitcairn Islands",abbreviation:"PN"},{name:"Poland",abbreviation:"PL"},{name:"Portugal",abbreviation:"PT"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Qatar",abbreviation:"QA"},{name:"Réunion",abbreviation:"RE"},{name:"Romania",abbreviation:"RO"},{name:"Russia",abbreviation:"RU"},{name:"Rwanda",abbreviation:"RW"},{name:"Samoa",abbreviation:"WS"},{name:"San Marino",abbreviation:"SM"},{name:"São Tomé and Príncipe",abbreviation:"ST"},{name:"Saudi Arabia",abbreviation:"SA"},{name:"Senegal",abbreviation:"SN"},{name:"Serbia",abbreviation:"RS"},{name:"Seychelles",abbreviation:"SC"},{name:"Sierra Leone",abbreviation:"SL"},{name:"Singapore",abbreviation:"SG"},{name:"Sint Maarten",abbreviation:"SX"},{name:"Slovakia",abbreviation:"SK"},{name:"Slovenia",abbreviation:"SI"},{name:"Solomon Islands",abbreviation:"SB"},{name:"Somalia",abbreviation:"SO"},{name:"South Africa",abbreviation:"ZA"},{name:"South Georgia & South Sandwich Islands",abbreviation:"GS"},{name:"South Korea",abbreviation:"KR"},{name:"South Sudan",abbreviation:"SS"},{name:"Spain",abbreviation:"ES"},{name:"Sri Lanka",abbreviation:"LK"},{name:"St. Barthélemy",abbreviation:"BL"},{name:"St. Helena",abbreviation:"SH"},{name:"St. Kitts & Nevis",abbreviation:"KN"},{name:"St. Lucia",abbreviation:"LC"},{name:"St. Martin",abbreviation:"MF"},{name:"St. Pierre & Miquelon",abbreviation:"PM"},{name:"St. Vincent & Grenadines",abbreviation:"VC"},{name:"Sudan",abbreviation:"SD"},{name:"Suriname",abbreviation:"SR"},{name:"Svalbard & Jan Mayen",abbreviation:"SJ"},{name:"Swaziland",abbreviation:"SZ"},{name:"Sweden",abbreviation:"SE"},{name:"Switzerland",abbreviation:"CH"},{name:"Syria",abbreviation:"SY"},{name:"Taiwan",abbreviation:"TW"},{name:"Tajikistan",abbreviation:"TJ"},{name:"Tanzania",abbreviation:"TZ"},{name:"Thailand",abbreviation:"TH"},{name:"Timor-Leste",abbreviation:"TL"},{name:"Togo",abbreviation:"TG"},{name:"Tokelau",abbreviation:"TK"},{name:"Tonga",abbreviation:"TO"},{name:"Trinidad & Tobago",abbreviation:"TT"},{name:"Tristan da Cunha",abbreviation:"TA"},{name:"Tunisia",abbreviation:"TN"},{name:"Turkey",abbreviation:"TR"},{name:"Turkmenistan",abbreviation:"TM"},{name:"Turks & Caicos Islands",abbreviation:"TC"},{name:"Tuvalu",abbreviation:"TV"},{name:"U.S. Outlying Islands",abbreviation:"UM"},{name:"U.S. Virgin Islands",abbreviation:"VI"},{name:"Uganda",abbreviation:"UG"},{name:"Ukraine",abbreviation:"UA"},{name:"United Arab Emirates",abbreviation:"AE"},{name:"United Kingdom",abbreviation:"GB"},{name:"United States",abbreviation:"US"},{name:"Uruguay",abbreviation:"UY"},{name:"Uzbekistan",abbreviation:"UZ"},{name:"Vanuatu",abbreviation:"VU"},{name:"Vatican City",abbreviation:"VA"},{name:"Venezuela",abbreviation:"VE"},{name:"Vietnam",abbreviation:"VN"},{name:"Wallis & Futuna",abbreviation:"WF"},{name:"Western Sahara",abbreviation:"EH"},{name:"Yemen",abbreviation:"YE"},{name:"Zambia",abbreviation:"ZM"},{name:"Zimbabwe",abbreviation:"ZW"}],counties:{uk:[{name:"Bath and North East Somerset"},{name:"Aberdeenshire"},{name:"Anglesey"},{name:"Angus"},{name:"Bedford"},{name:"Blackburn with Darwen"},{name:"Blackpool"},{name:"Bournemouth"},{name:"Bracknell Forest"},{name:"Brighton & Hove"},{name:"Bristol"},{name:"Buckinghamshire"},{name:"Cambridgeshire"},{name:"Carmarthenshire"},{name:"Central Bedfordshire"},{name:"Ceredigion"},{name:"Cheshire East"},{name:"Cheshire West and Chester"},{name:"Clackmannanshire"},{name:"Conwy"},{name:"Cornwall"},{name:"County Antrim"},{name:"County Armagh"},{name:"County Down"},{name:"County Durham"},{name:"County Fermanagh"},{name:"County Londonderry"},{name:"County Tyrone"},{name:"Cumbria"},{name:"Darlington"},{name:"Denbighshire"},{name:"Derby"},{name:"Derbyshire"},{name:"Devon"},{name:"Dorset"},{name:"Dumfries and Galloway"},{name:"Dundee"},{name:"East Lothian"},{name:"East Riding of Yorkshire"},{name:"East Sussex"},{name:"Edinburgh?"},{name:"Essex"},{name:"Falkirk"},{name:"Fife"},{name:"Flintshire"},{name:"Gloucestershire"},{name:"Greater London"},{name:"Greater Manchester"},{name:"Gwent"},{name:"Gwynedd"},{name:"Halton"},{name:"Hampshire"},{name:"Hartlepool"},{name:"Herefordshire"},{name:"Hertfordshire"},{name:"Highlands"},{name:"Hull"},{name:"Isle of Wight"},{name:"Isles of Scilly"},{name:"Kent"},{name:"Lancashire"},{name:"Leicester"},{name:"Leicestershire"},{name:"Lincolnshire"},{name:"Lothian"},{name:"Luton"},{name:"Medway"},{name:"Merseyside"},{name:"Mid Glamorgan"},{name:"Middlesbrough"},{name:"Milton Keynes"},{name:"Monmouthshire"},{name:"Moray"},{name:"Norfolk"},{name:"North East Lincolnshire"},{name:"North Lincolnshire"},{name:"North Somerset"},{name:"North Yorkshire"},{name:"Northamptonshire"},{name:"Northumberland"},{name:"Nottingham"},{name:"Nottinghamshire"},{name:"Oxfordshire"},{name:"Pembrokeshire"},{name:"Perth and Kinross"},{name:"Peterborough"},{name:"Plymouth"},{name:"Poole"},{name:"Portsmouth"},{name:"Powys"},{name:"Reading"},{name:"Redcar and Cleveland"},{name:"Rutland"},{name:"Scottish Borders"},{name:"Shropshire"},{name:"Slough"},{name:"Somerset"},{name:"South Glamorgan"},{name:"South Gloucestershire"},{name:"South Yorkshire"},{name:"Southampton"},{name:"Southend-on-Sea"},{name:"Staffordshire"},{name:"Stirlingshire"},{name:"Stockton-on-Tees"},{name:"Stoke-on-Trent"},{name:"Strathclyde"},{name:"Suffolk"},{name:"Surrey"},{name:"Swindon"},{name:"Telford and Wrekin"},{name:"Thurrock"},{name:"Torbay"},{name:"Tyne and Wear"},{name:"Warrington"},{name:"Warwickshire"},{name:"West Berkshire"},{name:"West Glamorgan"},{name:"West Lothian"},{name:"West Midlands"},{name:"West Sussex"},{name:"West Yorkshire"},{name:"Western Isles"},{name:"Wiltshire"},{name:"Windsor and Maidenhead"},{name:"Wokingham"},{name:"Worcestershire"},{name:"Wrexham"},{name:"York"}]},provinces:{ca:[{name:"Alberta",abbreviation:"AB"},{name:"British Columbia",abbreviation:"BC"},{name:"Manitoba",abbreviation:"MB"},{name:"New Brunswick",abbreviation:"NB"},{name:"Newfoundland and Labrador",abbreviation:"NL"},{name:"Nova Scotia",abbreviation:"NS"},{name:"Ontario",abbreviation:"ON"},{name:"Prince Edward Island",abbreviation:"PE"},{name:"Quebec",abbreviation:"QC"},{name:"Saskatchewan",abbreviation:"SK"},{name:"Northwest Territories",abbreviation:"NT"},{name:"Nunavut",abbreviation:"NU"},{name:"Yukon",abbreviation:"YT"}],it:[{name:"Agrigento",abbreviation:"AG",code:84},{name:"Alessandria",abbreviation:"AL",code:6},{name:"Ancona",abbreviation:"AN",code:42},{name:"Aosta",abbreviation:"AO",code:7},{name:"L'Aquila",abbreviation:"AQ",code:66},{name:"Arezzo",abbreviation:"AR",code:51},{name:"Ascoli-Piceno",abbreviation:"AP",code:44},{name:"Asti",abbreviation:"AT",code:5},{name:"Avellino",abbreviation:"AV",code:64},{name:"Bari",abbreviation:"BA",code:72},{name:"Barletta-Andria-Trani",abbreviation:"BT",code:72},{name:"Belluno",abbreviation:"BL",code:25},{name:"Benevento",abbreviation:"BN",code:62},{name:"Bergamo",abbreviation:"BG",code:16},{name:"Biella",abbreviation:"BI",code:96},{name:"Bologna",abbreviation:"BO",code:37},{name:"Bolzano",abbreviation:"BZ",code:21},{name:"Brescia",abbreviation:"BS",code:17},{name:"Brindisi",abbreviation:"BR",code:74},{name:"Cagliari",abbreviation:"CA",code:92},{name:"Caltanissetta",abbreviation:"CL",code:85},{name:"Campobasso",abbreviation:"CB",code:70},{name:"Carbonia Iglesias",abbreviation:"CI",code:70},{name:"Caserta",abbreviation:"CE",code:61},{name:"Catania",abbreviation:"CT",code:87},{name:"Catanzaro",abbreviation:"CZ",code:79},{name:"Chieti",abbreviation:"CH",code:69},{name:"Como",abbreviation:"CO",code:13},{name:"Cosenza",abbreviation:"CS",code:78},{name:"Cremona",abbreviation:"CR",code:19},{name:"Crotone",abbreviation:"KR",code:101},{name:"Cuneo",abbreviation:"CN",code:4},{name:"Enna",abbreviation:"EN",code:86},{name:"Fermo",abbreviation:"FM",code:86},{name:"Ferrara",abbreviation:"FE",code:38},{name:"Firenze",abbreviation:"FI",code:48},{name:"Foggia",abbreviation:"FG",code:71},{name:"Forli-Cesena",abbreviation:"FC",code:71},{name:"Frosinone",abbreviation:"FR",code:60},{name:"Genova",abbreviation:"GE",code:10},{name:"Gorizia",abbreviation:"GO",code:31},{name:"Grosseto",abbreviation:"GR",code:53},{name:"Imperia",abbreviation:"IM",code:8},{name:"Isernia",abbreviation:"IS",code:94},{name:"La-Spezia",abbreviation:"SP",code:66},{name:"Latina",abbreviation:"LT",code:59},{name:"Lecce",abbreviation:"LE",code:75},{name:"Lecco",abbreviation:"LC",code:97},{name:"Livorno",abbreviation:"LI",code:49},{name:"Lodi",abbreviation:"LO",code:98},{name:"Lucca",abbreviation:"LU",code:46},{name:"Macerata",abbreviation:"MC",code:43},{name:"Mantova",abbreviation:"MN",code:20},{name:"Massa-Carrara",abbreviation:"MS",code:45},{name:"Matera",abbreviation:"MT",code:77},{name:"Medio Campidano",abbreviation:"VS",code:77},{name:"Messina",abbreviation:"ME",code:83},{name:"Milano",abbreviation:"MI",code:15},{name:"Modena",abbreviation:"MO",code:36},{name:"Monza-Brianza",abbreviation:"MB",code:36},{name:"Napoli",abbreviation:"NA",code:63},{name:"Novara",abbreviation:"NO",code:3},{name:"Nuoro",abbreviation:"NU",code:91},{name:"Ogliastra",abbreviation:"OG",code:91},{name:"Olbia Tempio",abbreviation:"OT",code:91},{name:"Oristano",abbreviation:"OR",code:95},{name:"Padova",abbreviation:"PD",code:28},{name:"Palermo",abbreviation:"PA",code:82},{name:"Parma",abbreviation:"PR",code:34},{name:"Pavia",abbreviation:"PV",code:18},{name:"Perugia",abbreviation:"PG",code:54},{name:"Pesaro-Urbino",abbreviation:"PU",code:41},{name:"Pescara",abbreviation:"PE",code:68},{name:"Piacenza",abbreviation:"PC",code:33},{name:"Pisa",abbreviation:"PI",code:50},{name:"Pistoia",abbreviation:"PT",code:47},{name:"Pordenone",abbreviation:"PN",code:93},{name:"Potenza",abbreviation:"PZ",code:76},{name:"Prato",abbreviation:"PO",code:100},{name:"Ragusa",abbreviation:"RG",code:88},{name:"Ravenna",abbreviation:"RA",code:39},{name:"Reggio-Calabria",abbreviation:"RC",code:35},{name:"Reggio-Emilia",abbreviation:"RE",code:35},{name:"Rieti",abbreviation:"RI",code:57},{name:"Rimini",abbreviation:"RN",code:99},{name:"Roma",abbreviation:"Roma",code:58},{name:"Rovigo",abbreviation:"RO",code:29},{name:"Salerno",abbreviation:"SA",code:65},{name:"Sassari",abbreviation:"SS",code:90},{name:"Savona",abbreviation:"SV",code:9},{name:"Siena",abbreviation:"SI",code:52},{name:"Siracusa",abbreviation:"SR",code:89},{name:"Sondrio",abbreviation:"SO",code:14},{name:"Taranto",abbreviation:"TA",code:73},{name:"Teramo",abbreviation:"TE",code:67},{name:"Terni",abbreviation:"TR",code:55},{name:"Torino",abbreviation:"TO",code:1},{name:"Trapani",abbreviation:"TP",code:81},{name:"Trento",abbreviation:"TN",code:22},{name:"Treviso",abbreviation:"TV",code:26},{name:"Trieste",abbreviation:"TS",code:32},{name:"Udine",abbreviation:"UD",code:30},{name:"Varese",abbreviation:"VA",code:12},{name:"Venezia",abbreviation:"VE",code:27},{name:"Verbania",abbreviation:"VB",code:27},{name:"Vercelli",abbreviation:"VC",code:2},{name:"Verona",abbreviation:"VR",code:23},{name:"Vibo-Valentia",abbreviation:"VV",code:102},{name:"Vicenza",abbreviation:"VI",code:24},{name:"Viterbo",abbreviation:"VT",code:56}]},nationalities:[{name:"Afghan"},{name:"Albanian"},{name:"Algerian"},{name:"American"},{name:"Andorran"},{name:"Angolan"},{name:"Antiguans"},{name:"Argentinean"},{name:"Armenian"},{name:"Australian"},{name:"Austrian"},{name:"Azerbaijani"},{name:"Bahami"},{name:"Bahraini"},{name:"Bangladeshi"},{name:"Barbadian"},{name:"Barbudans"},{name:"Batswana"},{name:"Belarusian"},{name:"Belgian"},{name:"Belizean"},{name:"Beninese"},{name:"Bhutanese"},{name:"Bolivian"},{name:"Bosnian"},{name:"Brazilian"},{name:"British"},{name:"Bruneian"},{name:"Bulgarian"},{name:"Burkinabe"},{name:"Burmese"},{name:"Burundian"},{name:"Cambodian"},{name:"Cameroonian"},{name:"Canadian"},{name:"Cape Verdean"},{name:"Central African"},{name:"Chadian"},{name:"Chilean"},{name:"Chinese"},{name:"Colombian"},{name:"Comoran"},{name:"Congolese"},{name:"Costa Rican"},{name:"Croatian"},{name:"Cuban"},{name:"Cypriot"},{name:"Czech"},{name:"Danish"},{name:"Djibouti"},{name:"Dominican"},{name:"Dutch"},{name:"East Timorese"},{name:"Ecuadorean"},{name:"Egyptian"},{name:"Emirian"},{name:"Equatorial Guinean"},{name:"Eritrean"},{name:"Estonian"},{name:"Ethiopian"},{name:"Fijian"},{name:"Filipino"},{name:"Finnish"},{name:"French"},{name:"Gabonese"},{name:"Gambian"},{name:"Georgian"},{name:"German"},{name:"Ghanaian"},{name:"Greek"},{name:"Grenadian"},{name:"Guatemalan"},{name:"Guinea-Bissauan"},{name:"Guinean"},{name:"Guyanese"},{name:"Haitian"},{name:"Herzegovinian"},{name:"Honduran"},{name:"Hungarian"},{name:"I-Kiribati"},{name:"Icelander"},{name:"Indian"},{name:"Indonesian"},{name:"Iranian"},{name:"Iraqi"},{name:"Irish"},{name:"Israeli"},{name:"Italian"},{name:"Ivorian"},{name:"Jamaican"},{name:"Japanese"},{name:"Jordanian"},{name:"Kazakhstani"},{name:"Kenyan"},{name:"Kittian and Nevisian"},{name:"Kuwaiti"},{name:"Kyrgyz"},{name:"Laotian"},{name:"Latvian"},{name:"Lebanese"},{name:"Liberian"},{name:"Libyan"},{name:"Liechtensteiner"},{name:"Lithuanian"},{name:"Luxembourger"},{name:"Macedonian"},{name:"Malagasy"},{name:"Malawian"},{name:"Malaysian"},{name:"Maldivan"},{name:"Malian"},{name:"Maltese"},{name:"Marshallese"},{name:"Mauritanian"},{name:"Mauritian"},{name:"Mexican"},{name:"Micronesian"},{name:"Moldovan"},{name:"Monacan"},{name:"Mongolian"},{name:"Moroccan"},{name:"Mosotho"},{name:"Motswana"},{name:"Mozambican"},{name:"Namibian"},{name:"Nauruan"},{name:"Nepalese"},{name:"New Zealander"},{name:"Nicaraguan"},{name:"Nigerian"},{name:"Nigerien"},{name:"North Korean"},{name:"Northern Irish"},{name:"Norwegian"},{name:"Omani"},{name:"Pakistani"},{name:"Palauan"},{name:"Panamanian"},{name:"Papua New Guinean"},{name:"Paraguayan"},{name:"Peruvian"},{name:"Polish"},{name:"Portuguese"},{name:"Qatari"},{name:"Romani"},{name:"Russian"},{name:"Rwandan"},{name:"Saint Lucian"},{name:"Salvadoran"},{name:"Samoan"},{name:"San Marinese"},{name:"Sao Tomean"},{name:"Saudi"},{name:"Scottish"},{name:"Senegalese"},{name:"Serbian"},{name:"Seychellois"},{name:"Sierra Leonean"},{name:"Singaporean"},{name:"Slovakian"},{name:"Slovenian"},{name:"Solomon Islander"},{name:"Somali"},{name:"South African"},{name:"South Korean"},{name:"Spanish"},{name:"Sri Lankan"},{name:"Sudanese"},{name:"Surinamer"},{name:"Swazi"},{name:"Swedish"},{name:"Swiss"},{name:"Syrian"},{name:"Taiwanese"},{name:"Tajik"},{name:"Tanzanian"},{name:"Thai"},{name:"Togolese"},{name:"Tongan"},{name:"Trinidadian or Tobagonian"},{name:"Tunisian"},{name:"Turkish"},{name:"Tuvaluan"},{name:"Ugandan"},{name:"Ukrainian"},{name:"Uruguaya"},{name:"Uzbekistani"},{name:"Venezuela"},{name:"Vietnamese"},{name:"Wels"},{name:"Yemenit"},{name:"Zambia"},{name:"Zimbabwe"}],locale_languages:["aa","ab","ae","af","ak","am","an","ar","as","av","ay","az","ba","be","bg","bh","bi","bm","bn","bo","br","bs","ca","ce","ch","co","cr","cs","cu","cv","cy","da","de","dv","dz","ee","el","en","eo","es","et","eu","fa","ff","fi","fj","fo","fr","fy","ga","gd","gl","gn","gu","gv","ha","he","hi","ho","hr","ht","hu","hy","hz","ia","id","ie","ig","ii","ik","io","is","it","iu","ja","jv","ka","kg","ki","kj","kk","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","la","lb","lg","li","ln","lo","lt","lu","lv","mg","mh","mi","mk","ml","mn","mr","ms","mt","my","na","nb","nd","ne","ng","nl","nn","no","nr","nv","ny","oc","oj","om","or","os","pa","pi","pl","ps","pt","qu","rm","rn","ro","ru","rw","sa","sc","sd","se","sg","si","sk","sl","sm","sn","so","sq","sr","ss","st","su","sv","sw","ta","te","tg","th","ti","tk","tl","tn","to","tr","ts","tt","tw","ty","ug","uk","ur","uz","ve","vi","vo","wa","wo","xh","yi","yo","za","zh","zu"],locale_regions:["agq-CM","asa-TZ","ast-ES","bas-CM","bem-ZM","bez-TZ","brx-IN","cgg-UG","chr-US","dav-KE","dje-NE","dsb-DE","dua-CM","dyo-SN","ebu-KE","ewo-CM","fil-PH","fur-IT","gsw-CH","gsw-FR","gsw-LI","guz-KE","haw-US","hsb-DE","jgo-CM","jmc-TZ","kab-DZ","kam-KE","kde-TZ","kea-CV","khq-ML","kkj-CM","kln-KE","kok-IN","ksb-TZ","ksf-CM","ksh-DE","lag-TZ","lkt-US","luo-KE","luy-KE","mas-KE","mas-TZ","mer-KE","mfe-MU","mgh-MZ","mgo-CM","mua-CM","naq-NA","nmg-CM","nnh-CM","nus-SD","nyn-UG","rof-TZ","rwk-TZ","sah-RU","saq-KE","sbp-TZ","seh-MZ","ses-ML","shi-Latn","shi-Latn-MA","shi-Tfng","shi-Tfng-MA","smn-FI","teo-KE","teo-UG","twq-NE","tzm-Latn","tzm-Latn-MA","vai-Latn","vai-Latn-LR","vai-Vaii","vai-Vaii-LR","vun-TZ","wae-CH","xog-UG","yav-CM","zgh-MA","af-NA","af-ZA","ak-GH","am-ET","ar-001","ar-AE","ar-BH","ar-DJ","ar-DZ","ar-EG","ar-EH","ar-ER","ar-IL","ar-IQ","ar-JO","ar-KM","ar-KW","ar-LB","ar-LY","ar-MA","ar-MR","ar-OM","ar-PS","ar-QA","ar-SA","ar-SD","ar-SO","ar-SS","ar-SY","ar-TD","ar-TN","ar-YE","as-IN","az-Cyrl","az-Cyrl-AZ","az-Latn","az-Latn-AZ","be-BY","bg-BG","bm-Latn","bm-Latn-ML","bn-BD","bn-IN","bo-CN","bo-IN","br-FR","bs-Cyrl","bs-Cyrl-BA","bs-Latn","bs-Latn-BA","ca-AD","ca-ES","ca-ES-VALENCIA","ca-FR","ca-IT","cs-CZ","cy-GB","da-DK","da-GL","de-AT","de-BE","de-CH","de-DE","de-LI","de-LU","dz-BT","ee-GH","ee-TG","el-CY","el-GR","en-001","en-150","en-AG","en-AI","en-AS","en-AU","en-BB","en-BE","en-BM","en-BS","en-BW","en-BZ","en-CA","en-CC","en-CK","en-CM","en-CX","en-DG","en-DM","en-ER","en-FJ","en-FK","en-FM","en-GB","en-GD","en-GG","en-GH","en-GI","en-GM","en-GU","en-GY","en-HK","en-IE","en-IM","en-IN","en-IO","en-JE","en-JM","en-KE","en-KI","en-KN","en-KY","en-LC","en-LR","en-LS","en-MG","en-MH","en-MO","en-MP","en-MS","en-MT","en-MU","en-MW","en-MY","en-NA","en-NF","en-NG","en-NR","en-NU","en-NZ","en-PG","en-PH","en-PK","en-PN","en-PR","en-PW","en-RW","en-SB","en-SC","en-SD","en-SG","en-SH","en-SL","en-SS","en-SX","en-SZ","en-TC","en-TK","en-TO","en-TT","en-TV","en-TZ","en-UG","en-UM","en-US","en-US-POSIX","en-VC","en-VG","en-VI","en-VU","en-WS","en-ZA","en-ZM","en-ZW","eo-001","es-419","es-AR","es-BO","es-CL","es-CO","es-CR","es-CU","es-DO","es-EA","es-EC","es-ES","es-GQ","es-GT","es-HN","es-IC","es-MX","es-NI","es-PA","es-PE","es-PH","es-PR","es-PY","es-SV","es-US","es-UY","es-VE","et-EE","eu-ES","fa-AF","fa-IR","ff-CM","ff-GN","ff-MR","ff-SN","fi-FI","fo-FO","fr-BE","fr-BF","fr-BI","fr-BJ","fr-BL","fr-CA","fr-CD","fr-CF","fr-CG","fr-CH","fr-CI","fr-CM","fr-DJ","fr-DZ","fr-FR","fr-GA","fr-GF","fr-GN","fr-GP","fr-GQ","fr-HT","fr-KM","fr-LU","fr-MA","fr-MC","fr-MF","fr-MG","fr-ML","fr-MQ","fr-MR","fr-MU","fr-NC","fr-NE","fr-PF","fr-PM","fr-RE","fr-RW","fr-SC","fr-SN","fr-SY","fr-TD","fr-TG","fr-TN","fr-VU","fr-WF","fr-YT","fy-NL","ga-IE","gd-GB","gl-ES","gu-IN","gv-IM","ha-Latn","ha-Latn-GH","ha-Latn-NE","ha-Latn-NG","he-IL","hi-IN","hr-BA","hr-HR","hu-HU","hy-AM","id-ID","ig-NG","ii-CN","is-IS","it-CH","it-IT","it-SM","ja-JP","ka-GE","ki-KE","kk-Cyrl","kk-Cyrl-KZ","kl-GL","km-KH","kn-IN","ko-KP","ko-KR","ks-Arab","ks-Arab-IN","kw-GB","ky-Cyrl","ky-Cyrl-KG","lb-LU","lg-UG","ln-AO","ln-CD","ln-CF","ln-CG","lo-LA","lt-LT","lu-CD","lv-LV","mg-MG","mk-MK","ml-IN","mn-Cyrl","mn-Cyrl-MN","mr-IN","ms-Latn","ms-Latn-BN","ms-Latn-MY","ms-Latn-SG","mt-MT","my-MM","nb-NO","nb-SJ","nd-ZW","ne-IN","ne-NP","nl-AW","nl-BE","nl-BQ","nl-CW","nl-NL","nl-SR","nl-SX","nn-NO","om-ET","om-KE","or-IN","os-GE","os-RU","pa-Arab","pa-Arab-PK","pa-Guru","pa-Guru-IN","pl-PL","ps-AF","pt-AO","pt-BR","pt-CV","pt-GW","pt-MO","pt-MZ","pt-PT","pt-ST","pt-TL","qu-BO","qu-EC","qu-PE","rm-CH","rn-BI","ro-MD","ro-RO","ru-BY","ru-KG","ru-KZ","ru-MD","ru-RU","ru-UA","rw-RW","se-FI","se-NO","se-SE","sg-CF","si-LK","sk-SK","sl-SI","sn-ZW","so-DJ","so-ET","so-KE","so-SO","sq-AL","sq-MK","sq-XK","sr-Cyrl","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-RS","sr-Cyrl-XK","sr-Latn","sr-Latn-BA","sr-Latn-ME","sr-Latn-RS","sr-Latn-XK","sv-AX","sv-FI","sv-SE","sw-CD","sw-KE","sw-TZ","sw-UG","ta-IN","ta-LK","ta-MY","ta-SG","te-IN","th-TH","ti-ER","ti-ET","to-TO","tr-CY","tr-TR","ug-Arab","ug-Arab-CN","uk-UA","ur-IN","ur-PK","uz-Arab","uz-Arab-AF","uz-Cyrl","uz-Cyrl-UZ","uz-Latn","uz-Latn-UZ","vi-VN","yi-001","yo-BJ","yo-NG","zh-Hans","zh-Hans-CN","zh-Hans-HK","zh-Hans-MO","zh-Hans-SG","zh-Hant","zh-Hant-HK","zh-Hant-MO","zh-Hant-TW","zu-ZA"],us_states_and_dc:[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],territories:[{name:"American Samoa",abbreviation:"AS"},{name:"Federated States of Micronesia",abbreviation:"FM"},{name:"Guam",abbreviation:"GU"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Virgin Islands, U.S.",abbreviation:"VI"}],armed_forces:[{name:"Armed Forces Europe",abbreviation:"AE"},{name:"Armed Forces Pacific",abbreviation:"AP"},{name:"Armed Forces the Americas",abbreviation:"AA"}],country_regions:{it:[{name:"Valle d'Aosta",abbreviation:"VDA"},{name:"Piemonte",abbreviation:"PIE"},{name:"Lombardia",abbreviation:"LOM"},{name:"Veneto",abbreviation:"VEN"},{name:"Trentino Alto Adige",abbreviation:"TAA"},{name:"Friuli Venezia Giulia",abbreviation:"FVG"},{name:"Liguria",abbreviation:"LIG"},{name:"Emilia Romagna",abbreviation:"EMR"},{name:"Toscana",abbreviation:"TOS"},{name:"Umbria",abbreviation:"UMB"},{name:"Marche",abbreviation:"MAR"},{name:"Abruzzo",abbreviation:"ABR"},{name:"Lazio",abbreviation:"LAZ"},{name:"Campania",abbreviation:"CAM"},{name:"Puglia",abbreviation:"PUG"},{name:"Basilicata",abbreviation:"BAS"},{name:"Molise",abbreviation:"MOL"},{name:"Calabria",abbreviation:"CAL"},{name:"Sicilia",abbreviation:"SIC"},{name:"Sardegna",abbreviation:"SAR"}],mx:[{name:"Aguascalientes",abbreviation:"AGU"},{name:"Baja California",abbreviation:"BCN"},{name:"Baja California Sur",abbreviation:"BCS"},{name:"Campeche",abbreviation:"CAM"},{name:"Chiapas",abbreviation:"CHP"},{name:"Chihuahua",abbreviation:"CHH"},{name:"Ciudad de México",abbreviation:"DIF"},{name:"Coahuila",abbreviation:"COA"},{name:"Colima",abbreviation:"COL"},{name:"Durango",abbreviation:"DUR"},{name:"Guanajuato",abbreviation:"GUA"},{name:"Guerrero",abbreviation:"GRO"},{name:"Hidalgo",abbreviation:"HID"},{name:"Jalisco",abbreviation:"JAL"},{name:"México",abbreviation:"MEX"},{name:"Michoacán",abbreviation:"MIC"},{name:"Morelos",abbreviation:"MOR"},{name:"Nayarit",abbreviation:"NAY"},{name:"Nuevo León",abbreviation:"NLE"},{name:"Oaxaca",abbreviation:"OAX"},{name:"Puebla",abbreviation:"PUE"},{name:"Querétaro",abbreviation:"QUE"},{name:"Quintana Roo",abbreviation:"ROO"},{name:"San Luis Potosí",abbreviation:"SLP"},{name:"Sinaloa",abbreviation:"SIN"},{name:"Sonora",abbreviation:"SON"},{name:"Tabasco",abbreviation:"TAB"},{name:"Tamaulipas",abbreviation:"TAM"},{name:"Tlaxcala",abbreviation:"TLA"},{name:"Veracruz",abbreviation:"VER"},{name:"Yucatán",abbreviation:"YUC"},{name:"Zacatecas",abbreviation:"ZAC"}]},street_suffixes:{us:[{name:"Avenue",abbreviation:"Ave"},{name:"Boulevard",abbreviation:"Blvd"},{name:"Center",abbreviation:"Ctr"},{name:"Circle",abbreviation:"Cir"},{name:"Court",abbreviation:"Ct"},{name:"Drive",abbreviation:"Dr"},{name:"Extension",abbreviation:"Ext"},{name:"Glen",abbreviation:"Gln"},{name:"Grove",abbreviation:"Grv"},{name:"Heights",abbreviation:"Hts"},{name:"Highway",abbreviation:"Hwy"},{name:"Junction",abbreviation:"Jct"},{name:"Key",abbreviation:"Key"},{name:"Lane",abbreviation:"Ln"},{name:"Loop",abbreviation:"Loop"},{name:"Manor",abbreviation:"Mnr"},{name:"Mill",abbreviation:"Mill"},{name:"Park",abbreviation:"Park"},{name:"Parkway",abbreviation:"Pkwy"},{name:"Pass",abbreviation:"Pass"},{name:"Path",abbreviation:"Path"},{name:"Pike",abbreviation:"Pike"},{name:"Place",abbreviation:"Pl"},{name:"Plaza",abbreviation:"Plz"},{name:"Point",abbreviation:"Pt"},{name:"Ridge",abbreviation:"Rdg"},{name:"River",abbreviation:"Riv"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Trail",abbreviation:"Trl"},{name:"Turnpike",abbreviation:"Tpke"},{name:"View",abbreviation:"Vw"},{name:"Way",abbreviation:"Way"}],it:[{name:"Accesso",abbreviation:"Acc."},{name:"Alzaia",abbreviation:"Alz."},{name:"Arco",abbreviation:"Arco"},{name:"Archivolto",abbreviation:"Acv."},{name:"Arena",abbreviation:"Arena"},{name:"Argine",abbreviation:"Argine"},{name:"Bacino",abbreviation:"Bacino"},{name:"Banchi",abbreviation:"Banchi"},{name:"Banchina",abbreviation:"Ban."},{name:"Bastioni",abbreviation:"Bas."},{name:"Belvedere",abbreviation:"Belv."},{name:"Borgata",abbreviation:"B.ta"},{name:"Borgo",abbreviation:"B.go"},{name:"Calata",abbreviation:"Cal."},{name:"Calle",abbreviation:"Calle"},{name:"Campiello",abbreviation:"Cam."},{name:"Campo",abbreviation:"Cam."},{name:"Canale",abbreviation:"Can."},{name:"Carraia",abbreviation:"Carr."},{name:"Cascina",abbreviation:"Cascina"},{name:"Case sparse",abbreviation:"c.s."},{name:"Cavalcavia",abbreviation:"Cv."},{name:"Circonvallazione",abbreviation:"Cv."},{name:"Complanare",abbreviation:"C.re"},{name:"Contrada",abbreviation:"C.da"},{name:"Corso",abbreviation:"C.so"},{name:"Corte",abbreviation:"C.te"},{name:"Cortile",abbreviation:"C.le"},{name:"Diramazione",abbreviation:"Dir."},{name:"Fondaco",abbreviation:"F.co"},{name:"Fondamenta",abbreviation:"F.ta"},{name:"Fondo",abbreviation:"F.do"},{name:"Frazione",abbreviation:"Fr."},{name:"Isola",abbreviation:"Is."},{name:"Largo",abbreviation:"L.go"},{name:"Litoranea",abbreviation:"Lit."},{name:"Lungolago",abbreviation:"L.go lago"},{name:"Lungo Po",abbreviation:"l.go Po"},{name:"Molo",abbreviation:"Molo"},{name:"Mura",abbreviation:"Mura"},{name:"Passaggio privato",abbreviation:"pass. priv."},{name:"Passeggiata",abbreviation:"Pass."},{name:"Piazza",abbreviation:"P.zza"},{name:"Piazzale",abbreviation:"P.le"},{name:"Ponte",abbreviation:"P.te"},{name:"Portico",abbreviation:"P.co"},{name:"Rampa",abbreviation:"Rampa"},{name:"Regione",abbreviation:"Reg."},{name:"Rione",abbreviation:"R.ne"},{name:"Rio",abbreviation:"Rio"},{name:"Ripa",abbreviation:"Ripa"},{name:"Riva",abbreviation:"Riva"},{name:"Rondò",abbreviation:"Rondò"},{name:"Rotonda",abbreviation:"Rot."},{name:"Sagrato",abbreviation:"Sagr."},{name:"Salita",abbreviation:"Sal."},{name:"Scalinata",abbreviation:"Scal."},{name:"Scalone",abbreviation:"Scal."},{name:"Slargo",abbreviation:"Sl."},{name:"Sottoportico",abbreviation:"Sott."},{name:"Strada",abbreviation:"Str."},{name:"Stradale",abbreviation:"Str.le"},{name:"Strettoia",abbreviation:"Strett."},{name:"Traversa",abbreviation:"Trav."},{name:"Via",abbreviation:"V."},{name:"Viale",abbreviation:"V.le"},{name:"Vicinale",abbreviation:"Vic.le"},{name:"Vicolo",abbreviation:"Vic."}],uk:[{name:"Avenue",abbreviation:"Ave"},{name:"Close",abbreviation:"Cl"},{name:"Court",abbreviation:"Ct"},{name:"Crescent",abbreviation:"Cr"},{name:"Drive",abbreviation:"Dr"},{name:"Garden",abbreviation:"Gdn"},{name:"Gardens",abbreviation:"Gdns"},{name:"Green",abbreviation:"Gn"},{name:"Grove",abbreviation:"Gr"},{name:"Lane",abbreviation:"Ln"},{name:"Mount",abbreviation:"Mt"},{name:"Place",abbreviation:"Pl"},{name:"Park",abbreviation:"Pk"},{name:"Ridge",abbreviation:"Rdg"},{name:"Road",abbreviation:"Rd"},{name:"Square",abbreviation:"Sq"},{name:"Street",abbreviation:"St"},{name:"Terrace",abbreviation:"Ter"},{name:"Valley",abbreviation:"Val"}]},months:[{name:"January",short_name:"Jan",numeric:"01",days:31},{name:"February",short_name:"Feb",numeric:"02",days:28},{name:"March",short_name:"Mar",numeric:"03",days:31},{name:"April",short_name:"Apr",numeric:"04",days:30},{name:"May",short_name:"May",numeric:"05",days:31},{name:"June",short_name:"Jun",numeric:"06",days:30},{name:"July",short_name:"Jul",numeric:"07",days:31},{name:"August",short_name:"Aug",numeric:"08",days:31},{name:"September",short_name:"Sep",numeric:"09",days:30},{name:"October",short_name:"Oct",numeric:"10",days:31},{name:"November",short_name:"Nov",numeric:"11",days:30},{name:"December",short_name:"Dec",numeric:"12",days:31}],cc_types:[{name:"American Express",short_name:"amex",prefix:"34",length:15},{name:"Bankcard",short_name:"bankcard",prefix:"5610",length:16},{name:"China UnionPay",short_name:"chinaunion",prefix:"62",length:16},{name:"Diners Club Carte Blanche",short_name:"dccarte",prefix:"300",length:14},{name:"Diners Club enRoute",short_name:"dcenroute",prefix:"2014",length:15},{name:"Diners Club International",short_name:"dcintl",prefix:"36",length:14},{name:"Diners Club United States & Canada",short_name:"dcusc",prefix:"54",length:16},{name:"Discover Card",short_name:"discover",prefix:"6011",length:16},{name:"InstaPayment",short_name:"instapay",prefix:"637",length:16},{name:"JCB",short_name:"jcb",prefix:"3528",length:16},{name:"Laser",short_name:"laser",prefix:"6304",length:16},{name:"Maestro",short_name:"maestro",prefix:"5018",length:16},{name:"Mastercard",short_name:"mc",prefix:"51",length:16},{name:"Solo",short_name:"solo",prefix:"6334",length:16},{name:"Switch",short_name:"switch",prefix:"4903",length:16},{name:"Visa",short_name:"visa",prefix:"4",length:16},{name:"Visa Electron",short_name:"electron",prefix:"4026",length:16}],currency_types:[{code:"AED",name:"United Arab Emirates Dirham"},{code:"AFN",name:"Afghanistan Afghani"},{code:"ALL",name:"Albania Lek"},{code:"AMD",name:"Armenia Dram"},{code:"ANG",name:"Netherlands Antilles Guilder"},{code:"AOA",name:"Angola Kwanza"},{code:"ARS",name:"Argentina Peso"},{code:"AUD",name:"Australia Dollar"},{code:"AWG",name:"Aruba Guilder"},{code:"AZN",name:"Azerbaijan New Manat"},{code:"BAM",name:"Bosnia and Herzegovina Convertible Marka"},{code:"BBD",name:"Barbados Dollar"},{code:"BDT",name:"Bangladesh Taka"},{code:"BGN",name:"Bulgaria Lev"},{code:"BHD",name:"Bahrain Dinar"},{code:"BIF",name:"Burundi Franc"},{code:"BMD",name:"Bermuda Dollar"},{code:"BND",name:"Brunei Darussalam Dollar"},{code:"BOB",name:"Bolivia Boliviano"},{code:"BRL",name:"Brazil Real"},{code:"BSD",name:"Bahamas Dollar"},{code:"BTN",name:"Bhutan Ngultrum"},{code:"BWP",name:"Botswana Pula"},{code:"BYR",name:"Belarus Ruble"},{code:"BZD",name:"Belize Dollar"},{code:"CAD",name:"Canada Dollar"},{code:"CDF",name:"Congo/Kinshasa Franc"},{code:"CHF",name:"Switzerland Franc"},{code:"CLP",name:"Chile Peso"},{code:"CNY",name:"China Yuan Renminbi"},{code:"COP",name:"Colombia Peso"},{code:"CRC",name:"Costa Rica Colon"},{code:"CUC",name:"Cuba Convertible Peso"},{code:"CUP",name:"Cuba Peso"},{code:"CVE",name:"Cape Verde Escudo"},{code:"CZK",name:"Czech Republic Koruna"},{code:"DJF",name:"Djibouti Franc"},{code:"DKK",name:"Denmark Krone"},{code:"DOP",name:"Dominican Republic Peso"},{code:"DZD",name:"Algeria Dinar"},{code:"EGP",name:"Egypt Pound"},{code:"ERN",name:"Eritrea Nakfa"},{code:"ETB",name:"Ethiopia Birr"},{code:"EUR",name:"Euro Member Countries"},{code:"FJD",name:"Fiji Dollar"},{code:"FKP",name:"Falkland Islands (Malvinas) Pound"},{code:"GBP",name:"United Kingdom Pound"},{code:"GEL",name:"Georgia Lari"},{code:"GGP",name:"Guernsey Pound"},{code:"GHS",name:"Ghana Cedi"},{code:"GIP",name:"Gibraltar Pound"},{code:"GMD",name:"Gambia Dalasi"},{code:"GNF",name:"Guinea Franc"},{code:"GTQ",name:"Guatemala Quetzal"},{code:"GYD",name:"Guyana Dollar"},{code:"HKD",name:"Hong Kong Dollar"},{code:"HNL",name:"Honduras Lempira"},{code:"HRK",name:"Croatia Kuna"},{code:"HTG",name:"Haiti Gourde"},{code:"HUF",name:"Hungary Forint"},{code:"IDR",name:"Indonesia Rupiah"},{code:"ILS",name:"Israel Shekel"},{code:"IMP",name:"Isle of Man Pound"},{code:"INR",name:"India Rupee"},{code:"IQD",name:"Iraq Dinar"},{code:"IRR",name:"Iran Rial"},{code:"ISK",name:"Iceland Krona"},{code:"JEP",name:"Jersey Pound"},{code:"JMD",name:"Jamaica Dollar"},{code:"JOD",name:"Jordan Dinar"},{code:"JPY",name:"Japan Yen"},{code:"KES",name:"Kenya Shilling"},{code:"KGS",name:"Kyrgyzstan Som"},{code:"KHR",name:"Cambodia Riel"},{code:"KMF",name:"Comoros Franc"},{code:"KPW",name:"Korea (North) Won"},{code:"KRW",name:"Korea (South) Won"},{code:"KWD",name:"Kuwait Dinar"},{code:"KYD",name:"Cayman Islands Dollar"},{code:"KZT",name:"Kazakhstan Tenge"},{code:"LAK",name:"Laos Kip"},{code:"LBP",name:"Lebanon Pound"},{code:"LKR",name:"Sri Lanka Rupee"},{code:"LRD",name:"Liberia Dollar"},{code:"LSL",name:"Lesotho Loti"},{code:"LTL",name:"Lithuania Litas"},{code:"LYD",name:"Libya Dinar"},{code:"MAD",name:"Morocco Dirham"},{code:"MDL",name:"Moldova Leu"},{code:"MGA",name:"Madagascar Ariary"},{code:"MKD",name:"Macedonia Denar"},{code:"MMK",name:"Myanmar (Burma) Kyat"},{code:"MNT",name:"Mongolia Tughrik"},{code:"MOP",name:"Macau Pataca"},{code:"MRO",name:"Mauritania Ouguiya"},{code:"MUR",name:"Mauritius Rupee"},{code:"MVR",name:"Maldives (Maldive Islands) Rufiyaa"},{code:"MWK",name:"Malawi Kwacha"},{code:"MXN",name:"Mexico Peso"},{code:"MYR",name:"Malaysia Ringgit"},{code:"MZN",name:"Mozambique Metical"},{code:"NAD",name:"Namibia Dollar"},{code:"NGN",name:"Nigeria Naira"},{code:"NIO",name:"Nicaragua Cordoba"},{code:"NOK",name:"Norway Krone"},{code:"NPR",name:"Nepal Rupee"},{code:"NZD",name:"New Zealand Dollar"},{code:"OMR",name:"Oman Rial"},{code:"PAB",name:"Panama Balboa"},{code:"PEN",name:"Peru Nuevo Sol"},{code:"PGK",name:"Papua New Guinea Kina"},{code:"PHP",name:"Philippines Peso"},{code:"PKR",name:"Pakistan Rupee"},{code:"PLN",name:"Poland Zloty"},{code:"PYG",name:"Paraguay Guarani"},{code:"QAR",name:"Qatar Riyal"},{code:"RON",name:"Romania New Leu"},{code:"RSD",name:"Serbia Dinar"},{code:"RUB",name:"Russia Ruble"},{code:"RWF",name:"Rwanda Franc"},{code:"SAR",name:"Saudi Arabia Riyal"},{code:"SBD",name:"Solomon Islands Dollar"},{code:"SCR",name:"Seychelles Rupee"},{code:"SDG",name:"Sudan Pound"},{code:"SEK",name:"Sweden Krona"},{code:"SGD",name:"Singapore Dollar"},{code:"SHP",name:"Saint Helena Pound"},{code:"SLL",name:"Sierra Leone Leone"},{code:"SOS",name:"Somalia Shilling"},{code:"SPL",name:"Seborga Luigino"},{code:"SRD",name:"Suriname Dollar"},{code:"STD",name:"São Tomé and Príncipe Dobra"},{code:"SVC",name:"El Salvador Colon"},{code:"SYP",name:"Syria Pound"},{code:"SZL",name:"Swaziland Lilangeni"},{code:"THB",name:"Thailand Baht"},{code:"TJS",name:"Tajikistan Somoni"},{code:"TMT",name:"Turkmenistan Manat"},{code:"TND",name:"Tunisia Dinar"},{code:"TOP",name:"Tonga Pa'anga"},{code:"TRY",name:"Turkey Lira"},{code:"TTD",name:"Trinidad and Tobago Dollar"},{code:"TVD",name:"Tuvalu Dollar"},{code:"TWD",name:"Taiwan New Dollar"},{code:"TZS",name:"Tanzania Shilling"},{code:"UAH",name:"Ukraine Hryvnia"},{code:"UGX",name:"Uganda Shilling"},{code:"USD",name:"United States Dollar"},{code:"UYU",name:"Uruguay Peso"},{code:"UZS",name:"Uzbekistan Som"},{code:"VEF",name:"Venezuela Bolivar"},{code:"VND",name:"Viet Nam Dong"},{code:"VUV",name:"Vanuatu Vatu"},{code:"WST",name:"Samoa Tala"},{code:"XAF",name:"Communauté Financière Africaine (BEAC) CFA Franc BEAC"},{code:"XCD",name:"East Caribbean Dollar"},{code:"XDR",name:"International Monetary Fund (IMF) Special Drawing Rights"},{code:"XOF",name:"Communauté Financière Africaine (BCEAO) Franc"},{code:"XPF",name:"Comptoirs Français du Pacifique (CFP) Franc"},{code:"YER",name:"Yemen Rial"},{code:"ZAR",name:"South Africa Rand"},{code:"ZMW",name:"Zambia Kwacha"},{code:"ZWD",name:"Zimbabwe Dollar"}],colorNames:["AliceBlue","Black","Navy","DarkBlue","MediumBlue","Blue","DarkGreen","Green","Teal","DarkCyan","DeepSkyBlue","DarkTurquoise","MediumSpringGreen","Lime","SpringGreen","Aqua","Cyan","MidnightBlue","DodgerBlue","LightSeaGreen","ForestGreen","SeaGreen","DarkSlateGray","LimeGreen","MediumSeaGreen","Turquoise","RoyalBlue","SteelBlue","DarkSlateBlue","MediumTurquoise","Indigo","DarkOliveGreen","CadetBlue","CornflowerBlue","RebeccaPurple","MediumAquaMarine","DimGray","SlateBlue","OliveDrab","SlateGray","LightSlateGray","MediumSlateBlue","LawnGreen","Chartreuse","Aquamarine","Maroon","Purple","Olive","Gray","SkyBlue","LightSkyBlue","BlueViolet","DarkRed","DarkMagenta","SaddleBrown","Ivory","White","DarkSeaGreen","LightGreen","MediumPurple","DarkViolet","PaleGreen","DarkOrchid","YellowGreen","Sienna","Brown","DarkGray","LightBlue","GreenYellow","PaleTurquoise","LightSteelBlue","PowderBlue","FireBrick","DarkGoldenRod","MediumOrchid","RosyBrown","DarkKhaki","Silver","MediumVioletRed","IndianRed","Peru","Chocolate","Tan","LightGray","Thistle","Orchid","GoldenRod","PaleVioletRed","Crimson","Gainsboro","Plum","BurlyWood","LightCyan","Lavender","DarkSalmon","Violet","PaleGoldenRod","LightCoral","Khaki","AliceBlue","HoneyDew","Azure","SandyBrown","Wheat","Beige","WhiteSmoke","MintCream","GhostWhite","Salmon","AntiqueWhite","Linen","LightGoldenRodYellow","OldLace","Red","Fuchsia","Magenta","DeepPink","OrangeRed","Tomato","HotPink","Coral","DarkOrange","LightSalmon","Orange","LightPink","Pink","Gold","PeachPuff","NavajoWhite","Moccasin","Bisque","MistyRose","BlanchedAlmond","PapayaWhip","LavenderBlush","SeaShell","Cornsilk","LemonChiffon","FloralWhite","Snow","Yellow","LightYellow"],company:["3Com Corp","3M Company","A.G. Edwards Inc.","Abbott Laboratories","Abercrombie & Fitch Co.","ABM Industries Incorporated","Ace Hardware Corporation","ACT Manufacturing Inc.","Acterna Corp.","Adams Resources & Energy, Inc.","ADC Telecommunications, Inc.","Adelphia Communications Corporation","Administaff, Inc.","Adobe Systems Incorporated","Adolph Coors Company","Advance Auto Parts, Inc.","Advanced Micro Devices, Inc.","AdvancePCS, Inc.","Advantica Restaurant Group, Inc.","The AES Corporation","Aetna Inc.","Affiliated Computer Services, Inc.","AFLAC Incorporated","AGCO Corporation","Agilent Technologies, Inc.","Agway Inc.","Apartment Investment and Management Company","Air Products and Chemicals, Inc.","Airborne, Inc.","Airgas, Inc.","AK Steel Holding Corporation","Alaska Air Group, Inc.","Alberto-Culver Company","Albertson's, Inc.","Alcoa Inc.","Alleghany Corporation","Allegheny Energy, Inc.","Allegheny Technologies Incorporated","Allergan, Inc.","ALLETE, Inc.","Alliant Energy Corporation","Allied Waste Industries, Inc.","Allmerica Financial Corporation","The Allstate Corporation","ALLTEL Corporation","The Alpine Group, Inc.","Amazon.com, Inc.","AMC Entertainment Inc.","American Power Conversion Corporation","Amerada Hess Corporation","AMERCO","Ameren Corporation","America West Holdings Corporation","American Axle & Manufacturing Holdings, Inc.","American Eagle Outfitters, Inc.","American Electric Power Company, Inc.","American Express Company","American Financial Group, Inc.","American Greetings Corporation","American International Group, Inc.","American Standard Companies Inc.","American Water Works Company, Inc.","AmerisourceBergen Corporation","Ames Department Stores, Inc.","Amgen Inc.","Amkor Technology, Inc.","AMR Corporation","AmSouth Bancorp.","Amtran, Inc.","Anadarko Petroleum Corporation","Analog Devices, Inc.","Anheuser-Busch Companies, Inc.","Anixter International Inc.","AnnTaylor Inc.","Anthem, Inc.","AOL Time Warner Inc.","Aon Corporation","Apache Corporation","Apple Computer, Inc.","Applera Corporation","Applied Industrial Technologies, Inc.","Applied Materials, Inc.","Aquila, Inc.","ARAMARK Corporation","Arch Coal, Inc.","Archer Daniels Midland Company","Arkansas Best Corporation","Armstrong Holdings, Inc.","Arrow Electronics, Inc.","ArvinMeritor, Inc.","Ashland Inc.","Astoria Financial Corporation","AT&T Corp.","Atmel Corporation","Atmos Energy Corporation","Audiovox Corporation","Autoliv, Inc.","Automatic Data Processing, Inc.","AutoNation, Inc.","AutoZone, Inc.","Avaya Inc.","Avery Dennison Corporation","Avista Corporation","Avnet, Inc.","Avon Products, Inc.","Baker Hughes Incorporated","Ball Corporation","Bank of America Corporation","The Bank of New York Company, Inc.","Bank One Corporation","Banknorth Group, Inc.","Banta Corporation","Barnes & Noble, Inc.","Bausch & Lomb Incorporated","Baxter International Inc.","BB&T Corporation","The Bear Stearns Companies Inc.","Beazer Homes USA, Inc.","Beckman Coulter, Inc.","Becton, Dickinson and Company","Bed Bath & Beyond Inc.","Belk, Inc.","Bell Microproducts Inc.","BellSouth Corporation","Belo Corp.","Bemis Company, Inc.","Benchmark Electronics, Inc.","Berkshire Hathaway Inc.","Best Buy Co., Inc.","Bethlehem Steel Corporation","Beverly Enterprises, Inc.","Big Lots, Inc.","BJ Services Company","BJ's Wholesale Club, Inc.","The Black & Decker Corporation","Black Hills Corporation","BMC Software, Inc.","The Boeing Company","Boise Cascade Corporation","Borders Group, Inc.","BorgWarner Inc.","Boston Scientific Corporation","Bowater Incorporated","Briggs & Stratton Corporation","Brightpoint, Inc.","Brinker International, Inc.","Bristol-Myers Squibb Company","Broadwing, Inc.","Brown Shoe Company, Inc.","Brown-Forman Corporation","Brunswick Corporation","Budget Group, Inc.","Burlington Coat Factory Warehouse Corporation","Burlington Industries, Inc.","Burlington Northern Santa Fe Corporation","Burlington Resources Inc.","C. H. Robinson Worldwide Inc.","Cablevision Systems Corp","Cabot Corp","Cadence Design Systems, Inc.","Calpine Corp.","Campbell Soup Co.","Capital One Financial Corp.","Cardinal Health Inc.","Caremark Rx Inc.","Carlisle Cos. Inc.","Carpenter Technology Corp.","Casey's General Stores Inc.","Caterpillar Inc.","CBRL Group Inc.","CDI Corp.","CDW Computer Centers Inc.","CellStar Corp.","Cendant Corp","Cenex Harvest States Cooperatives","Centex Corp.","CenturyTel Inc.","Ceridian Corp.","CH2M Hill Cos. Ltd.","Champion Enterprises Inc.","Charles Schwab Corp.","Charming Shoppes Inc.","Charter Communications Inc.","Charter One Financial Inc.","ChevronTexaco Corp.","Chiquita Brands International Inc.","Chubb Corp","Ciena Corp.","Cigna Corp","Cincinnati Financial Corp.","Cinergy Corp.","Cintas Corp.","Circuit City Stores Inc.","Cisco Systems Inc.","Citigroup, Inc","Citizens Communications Co.","CKE Restaurants Inc.","Clear Channel Communications Inc.","The Clorox Co.","CMGI Inc.","CMS Energy Corp.","CNF Inc.","Coca-Cola Co.","Coca-Cola Enterprises Inc.","Colgate-Palmolive Co.","Collins & Aikman Corp.","Comcast Corp.","Comdisco Inc.","Comerica Inc.","Comfort Systems USA Inc.","Commercial Metals Co.","Community Health Systems Inc.","Compass Bancshares Inc","Computer Associates International Inc.","Computer Sciences Corp.","Compuware Corp.","Comverse Technology Inc.","ConAgra Foods Inc.","Concord EFS Inc.","Conectiv, Inc","Conoco Inc","Conseco Inc.","Consolidated Freightways Corp.","Consolidated Edison Inc.","Constellation Brands Inc.","Constellation Emergy Group Inc.","Continental Airlines Inc.","Convergys Corp.","Cooper Cameron Corp.","Cooper Industries Ltd.","Cooper Tire & Rubber Co.","Corn Products International Inc.","Corning Inc.","Costco Wholesale Corp.","Countrywide Credit Industries Inc.","Coventry Health Care Inc.","Cox Communications Inc.","Crane Co.","Crompton Corp.","Crown Cork & Seal Co. Inc.","CSK Auto Corp.","CSX Corp.","Cummins Inc.","CVS Corp.","Cytec Industries Inc.","D&K Healthcare Resources, Inc.","D.R. Horton Inc.","Dana Corporation","Danaher Corporation","Darden Restaurants Inc.","DaVita Inc.","Dean Foods Company","Deere & Company","Del Monte Foods Co","Dell Computer Corporation","Delphi Corp.","Delta Air Lines Inc.","Deluxe Corporation","Devon Energy Corporation","Di Giorgio Corporation","Dial Corporation","Diebold Incorporated","Dillard's Inc.","DIMON Incorporated","Dole Food Company, Inc.","Dollar General Corporation","Dollar Tree Stores, Inc.","Dominion Resources, Inc.","Domino's Pizza LLC","Dover Corporation, Inc.","Dow Chemical Company","Dow Jones & Company, Inc.","DPL Inc.","DQE Inc.","Dreyer's Grand Ice Cream, Inc.","DST Systems, Inc.","DTE Energy Co.","E.I. Du Pont de Nemours and Company","Duke Energy Corp","Dun & Bradstreet Inc.","DURA Automotive Systems Inc.","DynCorp","Dynegy Inc.","E*Trade Group, Inc.","E.W. Scripps Company","Earthlink, Inc.","Eastman Chemical Company","Eastman Kodak Company","Eaton Corporation","Echostar Communications Corporation","Ecolab Inc.","Edison International","EGL Inc.","El Paso Corporation","Electronic Arts Inc.","Electronic Data Systems Corp.","Eli Lilly and Company","EMC Corporation","Emcor Group Inc.","Emerson Electric Co.","Encompass Services Corporation","Energizer Holdings Inc.","Energy East Corporation","Engelhard Corporation","Enron Corp.","Entergy Corporation","Enterprise Products Partners L.P.","EOG Resources, Inc.","Equifax Inc.","Equitable Resources Inc.","Equity Office Properties Trust","Equity Residential Properties Trust","Estee Lauder Companies Inc.","Exelon Corporation","Exide Technologies","Expeditors International of Washington Inc.","Express Scripts Inc.","ExxonMobil Corporation","Fairchild Semiconductor International Inc.","Family Dollar Stores Inc.","Farmland Industries Inc.","Federal Mogul Corp.","Federated Department Stores Inc.","Federal Express Corp.","Felcor Lodging Trust Inc.","Ferro Corp.","Fidelity National Financial Inc.","Fifth Third Bancorp","First American Financial Corp.","First Data Corp.","First National of Nebraska Inc.","First Tennessee National Corp.","FirstEnergy Corp.","Fiserv Inc.","Fisher Scientific International Inc.","FleetBoston Financial Co.","Fleetwood Enterprises Inc.","Fleming Companies Inc.","Flowers Foods Inc.","Flowserv Corp","Fluor Corp","FMC Corp","Foamex International Inc","Foot Locker Inc","Footstar Inc.","Ford Motor Co","Forest Laboratories Inc.","Fortune Brands Inc.","Foster Wheeler Ltd.","FPL Group Inc.","Franklin Resources Inc.","Freeport McMoran Copper & Gold Inc.","Frontier Oil Corp","Furniture Brands International Inc.","Gannett Co., Inc.","Gap Inc.","Gateway Inc.","GATX Corporation","Gemstar-TV Guide International Inc.","GenCorp Inc.","General Cable Corporation","General Dynamics Corporation","General Electric Company","General Mills Inc","General Motors Corporation","Genesis Health Ventures Inc.","Gentek Inc.","Gentiva Health Services Inc.","Genuine Parts Company","Genuity Inc.","Genzyme Corporation","Georgia Gulf Corporation","Georgia-Pacific Corporation","Gillette Company","Gold Kist Inc.","Golden State Bancorp Inc.","Golden West Financial Corporation","Goldman Sachs Group Inc.","Goodrich Corporation","The Goodyear Tire & Rubber Company","Granite Construction Incorporated","Graybar Electric Company Inc.","Great Lakes Chemical Corporation","Great Plains Energy Inc.","GreenPoint Financial Corp.","Greif Bros. Corporation","Grey Global Group Inc.","Group 1 Automotive Inc.","Guidant Corporation","H&R Block Inc.","H.B. Fuller Company","H.J. Heinz Company","Halliburton Co.","Harley-Davidson Inc.","Harman International Industries Inc.","Harrah's Entertainment Inc.","Harris Corp.","Harsco Corp.","Hartford Financial Services Group Inc.","Hasbro Inc.","Hawaiian Electric Industries Inc.","HCA Inc.","Health Management Associates Inc.","Health Net Inc.","Healthsouth Corp","Henry Schein Inc.","Hercules Inc.","Herman Miller Inc.","Hershey Foods Corp.","Hewlett-Packard Company","Hibernia Corp.","Hillenbrand Industries Inc.","Hilton Hotels Corp.","Hollywood Entertainment Corp.","Home Depot Inc.","Hon Industries Inc.","Honeywell International Inc.","Hormel Foods Corp.","Host Marriott Corp.","Household International Corp.","Hovnanian Enterprises Inc.","Hub Group Inc.","Hubbell Inc.","Hughes Supply Inc.","Humana Inc.","Huntington Bancshares Inc.","Idacorp Inc.","IDT Corporation","IKON Office Solutions Inc.","Illinois Tool Works Inc.","IMC Global Inc.","Imperial Sugar Company","IMS Health Inc.","Ingles Market Inc","Ingram Micro Inc.","Insight Enterprises Inc.","Integrated Electrical Services Inc.","Intel Corporation","International Paper Co.","Interpublic Group of Companies Inc.","Interstate Bakeries Corporation","International Business Machines Corp.","International Flavors & Fragrances Inc.","International Multifoods Corporation","Intuit Inc.","IT Group Inc.","ITT Industries Inc.","Ivax Corp.","J.B. Hunt Transport Services Inc.","J.C. Penny Co.","J.P. Morgan Chase & Co.","Jabil Circuit Inc.","Jack In The Box Inc.","Jacobs Engineering Group Inc.","JDS Uniphase Corp.","Jefferson-Pilot Co.","John Hancock Financial Services Inc.","Johnson & Johnson","Johnson Controls Inc.","Jones Apparel Group Inc.","KB Home","Kellogg Company","Kellwood Company","Kelly Services Inc.","Kemet Corp.","Kennametal Inc.","Kerr-McGee Corporation","KeyCorp","KeySpan Corp.","Kimball International Inc.","Kimberly-Clark Corporation","Kindred Healthcare Inc.","KLA-Tencor Corporation","K-Mart Corp.","Knight-Ridder Inc.","Kohl's Corp.","KPMG Consulting Inc.","Kroger Co.","L-3 Communications Holdings Inc.","Laboratory Corporation of America Holdings","Lam Research Corporation","LandAmerica Financial Group Inc.","Lands' End Inc.","Landstar System Inc.","La-Z-Boy Inc.","Lear Corporation","Legg Mason Inc.","Leggett & Platt Inc.","Lehman Brothers Holdings Inc.","Lennar Corporation","Lennox International Inc.","Level 3 Communications Inc.","Levi Strauss & Co.","Lexmark International Inc.","Limited Inc.","Lincoln National Corporation","Linens 'n Things Inc.","Lithia Motors Inc.","Liz Claiborne Inc.","Lockheed Martin Corporation","Loews Corporation","Longs Drug Stores Corporation","Louisiana-Pacific Corporation","Lowe's Companies Inc.","LSI Logic Corporation","The LTV Corporation","The Lubrizol Corporation","Lucent Technologies Inc.","Lyondell Chemical Company","M & T Bank Corporation","Magellan Health Services Inc.","Mail-Well Inc.","Mandalay Resort Group","Manor Care Inc.","Manpower Inc.","Marathon Oil Corporation","Mariner Health Care Inc.","Markel Corporation","Marriott International Inc.","Marsh & McLennan Companies Inc.","Marsh Supermarkets Inc.","Marshall & Ilsley Corporation","Martin Marietta Materials Inc.","Masco Corporation","Massey Energy Company","MasTec Inc.","Mattel Inc.","Maxim Integrated Products Inc.","Maxtor Corporation","Maxxam Inc.","The May Department Stores Company","Maytag Corporation","MBNA Corporation","McCormick & Company Incorporated","McDonald's Corporation","The McGraw-Hill Companies Inc.","McKesson Corporation","McLeodUSA Incorporated","M.D.C. Holdings Inc.","MDU Resources Group Inc.","MeadWestvaco Corporation","Medtronic Inc.","Mellon Financial Corporation","The Men's Wearhouse Inc.","Merck & Co., Inc.","Mercury General Corporation","Merrill Lynch & Co. Inc.","Metaldyne Corporation","Metals USA Inc.","MetLife Inc.","Metris Companies Inc","MGIC Investment Corporation","MGM Mirage","Michaels Stores Inc.","Micron Technology Inc.","Microsoft Corporation","Milacron Inc.","Millennium Chemicals Inc.","Mirant Corporation","Mohawk Industries Inc.","Molex Incorporated","The MONY Group Inc.","Morgan Stanley Dean Witter & Co.","Motorola Inc.","MPS Group Inc.","Murphy Oil Corporation","Nabors Industries Inc","Nacco Industries Inc","Nash Finch Company","National City Corp.","National Commerce Financial Corporation","National Fuel Gas Company","National Oilwell Inc","National Rural Utilities Cooperative Finance Corporation","National Semiconductor Corporation","National Service Industries Inc","Navistar International Corporation","NCR Corporation","The Neiman Marcus Group Inc.","New Jersey Resources Corporation","New York Times Company","Newell Rubbermaid Inc","Newmont Mining Corporation","Nextel Communications Inc","Nicor Inc","Nike Inc","NiSource Inc","Noble Energy Inc","Nordstrom Inc","Norfolk Southern Corporation","Nortek Inc","North Fork Bancorporation Inc","Northeast Utilities System","Northern Trust Corporation","Northrop Grumman Corporation","NorthWestern Corporation","Novellus Systems Inc","NSTAR","NTL Incorporated","Nucor Corp","Nvidia Corp","NVR Inc","Northwest Airlines Corp","Occidental Petroleum Corp","Ocean Energy Inc","Office Depot Inc.","OfficeMax Inc","OGE Energy Corp","Oglethorpe Power Corp.","Ohio Casualty Corp.","Old Republic International Corp.","Olin Corp.","OM Group Inc","Omnicare Inc","Omnicom Group","On Semiconductor Corp","ONEOK Inc","Oracle Corp","Oshkosh Truck Corp","Outback Steakhouse Inc.","Owens & Minor Inc.","Owens Corning","Owens-Illinois Inc","Oxford Health Plans Inc","Paccar Inc","PacifiCare Health Systems Inc","Packaging Corp. of America","Pactiv Corp","Pall Corp","Pantry Inc","Park Place Entertainment Corp","Parker Hannifin Corp.","Pathmark Stores Inc.","Paychex Inc","Payless Shoesource Inc","Penn Traffic Co.","Pennzoil-Quaker State Company","Pentair Inc","Peoples Energy Corp.","PeopleSoft Inc","Pep Boys Manny, Moe & Jack","Potomac Electric Power Co.","Pepsi Bottling Group Inc.","PepsiAmericas Inc.","PepsiCo Inc.","Performance Food Group Co.","Perini Corp","PerkinElmer Inc","Perot Systems Corp","Petco Animal Supplies Inc.","Peter Kiewit Sons', Inc.","PETsMART Inc","Pfizer Inc","Pacific Gas & Electric Corp.","Pharmacia Corp","Phar Mor Inc.","Phelps Dodge Corp.","Philip Morris Companies Inc.","Phillips Petroleum Co","Phillips Van Heusen Corp.","Phoenix Companies Inc","Pier 1 Imports Inc.","Pilgrim's Pride Corporation","Pinnacle West Capital Corp","Pioneer-Standard Electronics Inc.","Pitney Bowes Inc.","Pittston Brinks Group","Plains All American Pipeline LP","PNC Financial Services Group Inc.","PNM Resources Inc","Polaris Industries Inc.","Polo Ralph Lauren Corp","PolyOne Corp","Popular Inc","Potlatch Corp","PPG Industries Inc","PPL Corp","Praxair Inc","Precision Castparts Corp","Premcor Inc.","Pride International Inc","Primedia Inc","Principal Financial Group Inc.","Procter & Gamble Co.","Pro-Fac Cooperative Inc.","Progress Energy Inc","Progressive Corporation","Protective Life Corp","Provident Financial Group","Providian Financial Corp.","Prudential Financial Inc.","PSS World Medical Inc","Public Service Enterprise Group Inc.","Publix Super Markets Inc.","Puget Energy Inc.","Pulte Homes Inc","Qualcomm Inc","Quanta Services Inc.","Quantum Corp","Quest Diagnostics Inc.","Questar Corp","Quintiles Transnational","Qwest Communications Intl Inc","R.J. Reynolds Tobacco Company","R.R. Donnelley & Sons Company","Radio Shack Corporation","Raymond James Financial Inc.","Raytheon Company","Reader's Digest Association Inc.","Reebok International Ltd.","Regions Financial Corp.","Regis Corporation","Reliance Steel & Aluminum Co.","Reliant Energy Inc.","Rent A Center Inc","Republic Services Inc","Revlon Inc","RGS Energy Group Inc","Rite Aid Corp","Riverwood Holding Inc.","RoadwayCorp","Robert Half International Inc.","Rock-Tenn Co","Rockwell Automation Inc","Rockwell Collins Inc","Rohm & Haas Co.","Ross Stores Inc","RPM Inc.","Ruddick Corp","Ryder System Inc","Ryerson Tull Inc","Ryland Group Inc.","Sabre Holdings Corp","Safeco Corp","Safeguard Scientifics Inc.","Safeway Inc","Saks Inc","Sanmina-SCI Inc","Sara Lee Corp","SBC Communications Inc","Scana Corp.","Schering-Plough Corp","Scholastic Corp","SCI Systems Onc.","Science Applications Intl. Inc.","Scientific-Atlanta Inc","Scotts Company","Seaboard Corp","Sealed Air Corp","Sears Roebuck & Co","Sempra Energy","Sequa Corp","Service Corp. International","ServiceMaster Co","Shaw Group Inc","Sherwin-Williams Company","Shopko Stores Inc","Siebel Systems Inc","Sierra Health Services Inc","Sierra Pacific Resources","Silgan Holdings Inc.","Silicon Graphics Inc","Simon Property Group Inc","SLM Corporation","Smith International Inc","Smithfield Foods Inc","Smurfit-Stone Container Corp","Snap-On Inc","Solectron Corp","Solutia Inc","Sonic Automotive Inc.","Sonoco Products Co.","Southern Company","Southern Union Company","SouthTrust Corp.","Southwest Airlines Co","Southwest Gas Corp","Sovereign Bancorp Inc.","Spartan Stores Inc","Spherion Corp","Sports Authority Inc","Sprint Corp.","SPX Corp","St. Jude Medical Inc","St. Paul Cos.","Staff Leasing Inc.","StanCorp Financial Group Inc","Standard Pacific Corp.","Stanley Works","Staples Inc","Starbucks Corp","Starwood Hotels & Resorts Worldwide Inc","State Street Corp.","Stater Bros. Holdings Inc.","Steelcase Inc","Stein Mart Inc","Stewart & Stevenson Services Inc","Stewart Information Services Corp","Stilwell Financial Inc","Storage Technology Corporation","Stryker Corp","Sun Healthcare Group Inc.","Sun Microsystems Inc.","SunGard Data Systems Inc.","Sunoco Inc.","SunTrust Banks Inc","Supervalu Inc","Swift Transportation, Co., Inc","Symbol Technologies Inc","Synovus Financial Corp.","Sysco Corp","Systemax Inc.","Target Corp.","Tech Data Corporation","TECO Energy Inc","Tecumseh Products Company","Tektronix Inc","Teleflex Incorporated","Telephone & Data Systems Inc","Tellabs Inc.","Temple-Inland Inc","Tenet Healthcare Corporation","Tenneco Automotive Inc.","Teradyne Inc","Terex Corp","Tesoro Petroleum Corp.","Texas Industries Inc.","Texas Instruments Incorporated","Textron Inc","Thermo Electron Corporation","Thomas & Betts Corporation","Tiffany & Co","Timken Company","TJX Companies Inc","TMP Worldwide Inc","Toll Brothers Inc","Torchmark Corporation","Toro Company","Tower Automotive Inc.","Toys 'R' Us Inc","Trans World Entertainment Corp.","TransMontaigne Inc","Transocean Inc","TravelCenters of America Inc.","Triad Hospitals Inc","Tribune Company","Trigon Healthcare Inc.","Trinity Industries Inc","Trump Hotels & Casino Resorts Inc.","TruServ Corporation","TRW Inc","TXU Corp","Tyson Foods Inc","U.S. Bancorp","U.S. Industries Inc.","UAL Corporation","UGI Corporation","Unified Western Grocers Inc","Union Pacific Corporation","Union Planters Corp","Unisource Energy Corp","Unisys Corporation","United Auto Group Inc","United Defense Industries Inc.","United Parcel Service Inc","United Rentals Inc","United Stationers Inc","United Technologies Corporation","UnitedHealth Group Incorporated","Unitrin Inc","Universal Corporation","Universal Forest Products Inc","Universal Health Services Inc","Unocal Corporation","Unova Inc","UnumProvident Corporation","URS Corporation","US Airways Group Inc","US Oncology Inc","USA Interactive","USFreighways Corporation","USG Corporation","UST Inc","Valero Energy Corporation","Valspar Corporation","Value City Department Stores Inc","Varco International Inc","Vectren Corporation","Veritas Software Corporation","Verizon Communications Inc","VF Corporation","Viacom Inc","Viad Corp","Viasystems Group Inc","Vishay Intertechnology Inc","Visteon Corporation","Volt Information Sciences Inc","Vulcan Materials Company","W.R. Berkley Corporation","W.R. Grace & Co","W.W. Grainger Inc","Wachovia Corporation","Wakenhut Corporation","Walgreen Co","Wallace Computer Services Inc","Wal-Mart Stores Inc","Walt Disney Co","Walter Industries Inc","Washington Mutual Inc","Washington Post Co.","Waste Management Inc","Watsco Inc","Weatherford International Inc","Weis Markets Inc.","Wellpoint Health Networks Inc","Wells Fargo & Company","Wendy's International Inc","Werner Enterprises Inc","WESCO International Inc","Western Digital Inc","Western Gas Resources Inc","WestPoint Stevens Inc","Weyerhauser Company","WGL Holdings Inc","Whirlpool Corporation","Whole Foods Market Inc","Willamette Industries Inc.","Williams Companies Inc","Williams Sonoma Inc","Winn Dixie Stores Inc","Wisconsin Energy Corporation","Wm Wrigley Jr Company","World Fuel Services Corporation","WorldCom Inc","Worthington Industries Inc","WPS Resources Corporation","Wyeth","Wyndham International Inc","Xcel Energy Inc","Xerox Corp","Xilinx Inc","XO Communications Inc","Yellow Corporation","York International Corp","Yum Brands Inc.","Zale Corporation","Zions Bancorporation"],fileExtension:{raster:["bmp","gif","gpl","ico","jpeg","psd","png","psp","raw","tiff"],vector:["3dv","amf","awg","ai","cgm","cdr","cmx","dxf","e2d","egt","eps","fs","odg","svg","xar"],"3d":["3dmf","3dm","3mf","3ds","an8","aoi","blend","cal3d","cob","ctm","iob","jas","max","mb","mdx","obj","x","x3d"],document:["doc","docx","dot","html","xml","odt","odm","ott","csv","rtf","tex","xhtml","xps"]},timezones:[{name:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{name:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{name:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{name:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{name:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{name:"Pacific Daylight Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-07:00) Pacific Time (US & Canada)",utc:["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver","America/Whitehorse"]},{name:"Pacific Standard Time",abbr:"PST",offset:-8,isdst:!1,text:"(UTC-08:00) Pacific Time (US & Canada)",utc:["America/Dawson","America/Los_Angeles","America/Tijuana","America/Vancouver","America/Whitehorse","PST8PDT"]},{name:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson_Creek","America/Hermosillo","America/Phoenix","Etc/GMT+7"]},{name:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{name:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{name:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{name:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{name:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{name:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{name:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{name:"Eastern Standard Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto","EST5EDT"]},{name:"US Eastern Standard Time",abbr:"UEDT",offset:-4,isdst:!0,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{name:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{name:"Paraguay Standard Time",abbr:"PYT",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{name:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{name:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{name:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{name:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{name:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{name:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{name:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{name:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{name:"Greenland Standard Time",abbr:"GDT",offset:-3,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{name:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{name:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{name:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{name:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old",utc:[]},{name:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{name:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{name:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{name:"UTC",abbr:"UTC",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{name:"GMT Standard Time",abbr:"GMT",offset:0,isdst:!1,text:"(UTC) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{name:"British Summer Time",abbr:"BST",offset:1,isdst:!0,text:"(UTC+01:00) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{name:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Lisbon",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Lisbon"]},{name:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{name:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{name:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{name:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{name:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{name:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{name:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{name:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{name:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{name:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{name:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!0,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{name:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau","Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Nicosia","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{name:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{name:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{name:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!1,text:"(UTC+03:00) Istanbul",utc:["Europe/Istanbul"]},{name:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{name:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{name:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{name:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{name:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+02:00) Kaliningrad",utc:["Europe/Kaliningrad"]},{name:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{name:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{name:"Moscow Standard Time",abbr:"MSK",offset:3,isdst:!1,text:"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk",utc:["Europe/Kirov","Europe/Moscow","Europe/Simferopol","Europe/Volgograd","Europe/Minsk"]},{name:"Samara Time",abbr:"SAMT",offset:4,isdst:!1,text:"(UTC+04:00) Samara, Ulyanovsk, Saratov",utc:["Europe/Astrakhan","Europe/Samara","Europe/Ulyanovsk"]},{name:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{name:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{name:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{name:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{name:"Georgian Standard Time",abbr:"GET",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{name:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{name:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{name:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{name:"Yekaterinburg Time",abbr:"YEKT",offset:5,isdst:!1,text:"(UTC+05:00) Yekaterinburg",utc:["Asia/Yekaterinburg"]},{name:"Pakistan Standard Time",abbr:"PKT",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{name:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Kolkata"]},{name:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{name:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Kathmandu"]},{name:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Nur-Sultan (Astana)",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{name:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{name:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{name:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{name:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{name:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{name:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{name:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{name:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{name:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{name:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{name:"North Asia East Standard Time",abbr:"NAEST",offset:8,isdst:!1,text:"(UTC+08:00) Irkutsk",utc:["Asia/Irkutsk"]},{name:"Japan Standard Time",abbr:"JST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{name:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{name:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{name:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{name:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{name:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{name:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{name:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{name:"Yakutsk Standard Time",abbr:"YST",offset:9,isdst:!1,text:"(UTC+09:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{name:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{name:"Vladivostok Standard Time",abbr:"VST",offset:11,isdst:!1,text:"(UTC+11:00) Vladivostok",utc:["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{name:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{name:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{name:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{name:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{name:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old",utc:["Asia/Kamchatka"]},{name:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{name:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}],profession:["Airline Pilot","Academic Team","Accountant","Account Executive","Actor","Actuary","Acquisition Analyst","Administrative Asst.","Administrative Analyst","Administrator","Advertising Director","Aerospace Engineer","Agent","Agricultural Inspector","Agricultural Scientist","Air Traffic Controller","Animal Trainer","Anthropologist","Appraiser","Architect","Art Director","Artist","Astronomer","Athletic Coach","Auditor","Author","Baker","Banker","Bankruptcy Attorney","Benefits Manager","Biologist","Bio-feedback Specialist","Biomedical Engineer","Biotechnical Researcher","Broadcaster","Broker","Building Manager","Building Contractor","Building Inspector","Business Analyst","Business Planner","Business Manager","Buyer","Call Center Manager","Career Counselor","Cash Manager","Ceramic Engineer","Chief Executive Officer","Chief Operation Officer","Chef","Chemical Engineer","Chemist","Child Care Manager","Chief Medical Officer","Chiropractor","Cinematographer","City Housing Manager","City Manager","Civil Engineer","Claims Manager","Clinical Research Assistant","Collections Manager","Compliance Manager","Comptroller","Computer Manager","Commercial Artist","Communications Affairs Director","Communications Director","Communications Engineer","Compensation Analyst","Computer Programmer","Computer Ops. Manager","Computer Engineer","Computer Operator","Computer Graphics Specialist","Construction Engineer","Construction Manager","Consultant","Consumer Relations Manager","Contract Administrator","Copyright Attorney","Copywriter","Corporate Planner","Corrections Officer","Cosmetologist","Credit Analyst","Cruise Director","Chief Information Officer","Chief Technology Officer","Customer Service Manager","Cryptologist","Dancer","Data Security Manager","Database Manager","Day Care Instructor","Dentist","Designer","Design Engineer","Desktop Publisher","Developer","Development Officer","Diamond Merchant","Dietitian","Direct Marketer","Director","Distribution Manager","Diversity Manager","Economist","EEO Compliance Manager","Editor","Education Adminator","Electrical Engineer","Electro Optical Engineer","Electronics Engineer","Embassy Management","Employment Agent","Engineer Technician","Entrepreneur","Environmental Analyst","Environmental Attorney","Environmental Engineer","Environmental Specialist","Escrow Officer","Estimator","Executive Assistant","Executive Director","Executive Recruiter","Facilities Manager","Family Counselor","Fashion Events Manager","Fashion Merchandiser","Fast Food Manager","Film Producer","Film Production Assistant","Financial Analyst","Financial Planner","Financier","Fine Artist","Wildlife Specialist","Fitness Consultant","Flight Attendant","Flight Engineer","Floral Designer","Food & Beverage Director","Food Service Manager","Forestry Technician","Franchise Management","Franchise Sales","Fraud Investigator","Freelance Writer","Fund Raiser","General Manager","Geologist","General Counsel","Geriatric Specialist","Gerontologist","Glamour Photographer","Golf Club Manager","Gourmet Chef","Graphic Designer","Grounds Keeper","Hazardous Waste Manager","Health Care Manager","Health Therapist","Health Service Administrator","Hearing Officer","Home Economist","Horticulturist","Hospital Administrator","Hotel Manager","Human Resources Manager","Importer","Industrial Designer","Industrial Engineer","Information Director","Inside Sales","Insurance Adjuster","Interior Decorator","Internal Controls Director","International Acct.","International Courier","International Lawyer","Interpreter","Investigator","Investment Banker","Investment Manager","IT Architect","IT Project Manager","IT Systems Analyst","Jeweler","Joint Venture Manager","Journalist","Labor Negotiator","Labor Organizer","Labor Relations Manager","Lab Services Director","Lab Technician","Land Developer","Landscape Architect","Law Enforcement Officer","Lawyer","Lead Software Engineer","Lead Software Test Engineer","Leasing Manager","Legal Secretary","Library Manager","Litigation Attorney","Loan Officer","Lobbyist","Logistics Manager","Maintenance Manager","Management Consultant","Managed Care Director","Managing Partner","Manufacturing Director","Manpower Planner","Marine Biologist","Market Res. Analyst","Marketing Director","Materials Manager","Mathematician","Membership Chairman","Mechanic","Mechanical Engineer","Media Buyer","Medical Investor","Medical Secretary","Medical Technician","Mental Health Counselor","Merchandiser","Metallurgical Engineering","Meteorologist","Microbiologist","MIS Manager","Motion Picture Director","Multimedia Director","Musician","Network Administrator","Network Specialist","Network Operator","New Product Manager","Novelist","Nuclear Engineer","Nuclear Specialist","Nutritionist","Nursing Administrator","Occupational Therapist","Oceanographer","Office Manager","Operations Manager","Operations Research Director","Optical Technician","Optometrist","Organizational Development Manager","Outplacement Specialist","Paralegal","Park Ranger","Patent Attorney","Payroll Specialist","Personnel Specialist","Petroleum Engineer","Pharmacist","Photographer","Physical Therapist","Physician","Physician Assistant","Physicist","Planning Director","Podiatrist","Political Analyst","Political Scientist","Politician","Portfolio Manager","Preschool Management","Preschool Teacher","Principal","Private Banker","Private Investigator","Probation Officer","Process Engineer","Producer","Product Manager","Product Engineer","Production Engineer","Production Planner","Professional Athlete","Professional Coach","Professor","Project Engineer","Project Manager","Program Manager","Property Manager","Public Administrator","Public Safety Director","PR Specialist","Publisher","Purchasing Agent","Publishing Director","Quality Assurance Specialist","Quality Control Engineer","Quality Control Inspector","Radiology Manager","Railroad Engineer","Real Estate Broker","Recreational Director","Recruiter","Redevelopment Specialist","Regulatory Affairs Manager","Registered Nurse","Rehabilitation Counselor","Relocation Manager","Reporter","Research Specialist","Restaurant Manager","Retail Store Manager","Risk Analyst","Safety Engineer","Sales Engineer","Sales Trainer","Sales Promotion Manager","Sales Representative","Sales Manager","Service Manager","Sanitation Engineer","Scientific Programmer","Scientific Writer","Securities Analyst","Security Consultant","Security Director","Seminar Presenter","Ship's Officer","Singer","Social Director","Social Program Planner","Social Research","Social Scientist","Social Worker","Sociologist","Software Developer","Software Engineer","Software Test Engineer","Soil Scientist","Special Events Manager","Special Education Teacher","Special Projects Director","Speech Pathologist","Speech Writer","Sports Event Manager","Statistician","Store Manager","Strategic Alliance Director","Strategic Planning Director","Stress Reduction Specialist","Stockbroker","Surveyor","Structural Engineer","Superintendent","Supply Chain Director","System Engineer","Systems Analyst","Systems Programmer","System Administrator","Tax Specialist","Teacher","Technical Support Specialist","Technical Illustrator","Technical Writer","Technology Director","Telecom Analyst","Telemarketer","Theatrical Director","Title Examiner","Tour Escort","Tour Guide Director","Traffic Manager","Trainer Translator","Transportation Manager","Travel Agent","Treasurer","TV Programmer","Underwriter","Union Representative","University Administrator","University Dean","Urban Planner","Veterinarian","Vendor Relations Director","Viticulturist","Warehouse Manager"],animals:{ocean:["Acantharea","Anemone","Angelfish King","Ahi Tuna","Albacore","American Oyster","Anchovy","Armored Snail","Arctic Char","Atlantic Bluefin Tuna","Atlantic Cod","Atlantic Goliath Grouper","Atlantic Trumpetfish","Atlantic Wolffish","Baleen Whale","Banded Butterflyfish","Banded Coral Shrimp","Banded Sea Krait","Barnacle","Barndoor Skate","Barracuda","Basking Shark","Bass","Beluga Whale","Bluebanded Goby","Bluehead Wrasse","Bluefish","Bluestreak Cleaner-Wrasse","Blue Marlin","Blue Shark","Blue Spiny Lobster","Blue Tang","Blue Whale","Broadclub Cuttlefish","Bull Shark","Chambered Nautilus","Chilean Basket Star","Chilean Jack Mackerel","Chinook Salmon","Christmas Tree Worm","Clam","Clown Anemonefish","Clown Triggerfish","Cod","Coelacanth","Cockscomb Cup Coral","Common Fangtooth","Conch","Cookiecutter Shark","Copepod","Coral","Corydoras","Cownose Ray","Crab","Crown-of-Thorns Starfish","Cushion Star","Cuttlefish","California Sea Otters","Dolphin","Dolphinfish","Dory","Devil Fish","Dugong","Dumbo Octopus","Dungeness Crab","Eccentric Sand Dollar","Edible Sea Cucumber","Eel","Elephant Seal","Elkhorn Coral","Emperor Shrimp","Estuarine Crocodile","Fathead Sculpin","Fiddler Crab","Fin Whale","Flameback","Flamingo Tongue Snail","Flashlight Fish","Flatback Turtle","Flatfish","Flying Fish","Flounder","Fluke","French Angelfish","Frilled Shark","Fugu (also called Pufferfish)","Gar","Geoduck","Giant Barrel Sponge","Giant Caribbean Sea Anemone","Giant Clam","Giant Isopod","Giant Kingfish","Giant Oarfish","Giant Pacific Octopus","Giant Pyrosome","Giant Sea Star","Giant Squid","Glowing Sucker Octopus","Giant Tube Worm","Goblin Shark","Goosefish","Great White Shark","Greenland Shark","Grey Atlantic Seal","Grouper","Grunion","Guineafowl Puffer","Haddock","Hake","Halibut","Hammerhead Shark","Hapuka","Harbor Porpoise","Harbor Seal","Hatchetfish","Hawaiian Monk Seal","Hawksbill Turtle","Hector's Dolphin","Hermit Crab","Herring","Hoki","Horn Shark","Horseshoe Crab","Humpback Anglerfish","Humpback Whale","Icefish","Imperator Angelfish","Irukandji Jellyfish","Isopod","Ivory Bush Coral","Japanese Spider Crab","Jellyfish","John Dory","Juan Fernandez Fur Seal","Killer Whale","Kiwa Hirsuta","Krill","Lagoon Triggerfish","Lamprey","Leafy Seadragon","Leopard Seal","Limpet","Ling","Lionfish","Lions Mane Jellyfish","Lobe Coral","Lobster","Loggerhead Turtle","Longnose Sawshark","Longsnout Seahorse","Lophelia Coral","Marrus Orthocanna","Manatee","Manta Ray","Marlin","Megamouth Shark","Mexican Lookdown","Mimic Octopus","Moon Jelly","Mollusk","Monkfish","Moray Eel","Mullet","Mussel","Megaladon","Napoleon Wrasse","Nassau Grouper","Narwhal","Nautilus","Needlefish","Northern Seahorse","North Atlantic Right Whale","Northern Red Snapper","Norway Lobster","Nudibranch","Nurse Shark","Oarfish","Ocean Sunfish","Oceanic Whitetip Shark","Octopus","Olive Sea Snake","Orange Roughy","Ostracod","Otter","Oyster","Pacific Angelshark","Pacific Blackdragon","Pacific Halibut","Pacific Sardine","Pacific Sea Nettle Jellyfish","Pacific White Sided Dolphin","Pantropical Spotted Dolphin","Patagonian Toothfish","Peacock Mantis Shrimp","Pelagic Thresher Shark","Penguin","Peruvian Anchoveta","Pilchard","Pink Salmon","Pinniped","Plankton","Porpoise","Polar Bear","Portuguese Man o' War","Pycnogonid Sea Spider","Quahog","Queen Angelfish","Queen Conch","Queen Parrotfish","Queensland Grouper","Ragfish","Ratfish","Rattail Fish","Ray","Red Drum","Red King Crab","Ringed Seal","Risso's Dolphin","Ross Seals","Sablefish","Salmon","Sand Dollar","Sandbar Shark","Sawfish","Sarcastic Fringehead","Scalloped Hammerhead Shark","Seahorse","Sea Cucumber","Sea Lion","Sea Urchin","Seal","Shark","Shortfin Mako Shark","Shovelnose Guitarfish","Shrimp","Silverside Fish","Skipjack Tuna","Slender Snipe Eel","Smalltooth Sawfish","Smelts","Sockeye Salmon","Southern Stingray","Sponge","Spotted Porcupinefish","Spotted Dolphin","Spotted Eagle Ray","Spotted Moray","Squid","Squidworm","Starfish","Stickleback","Stonefish","Stoplight Loosejaw","Sturgeon","Swordfish","Tan Bristlemouth","Tasseled Wobbegong","Terrible Claw Lobster","Threespot Damselfish","Tiger Prawn","Tiger Shark","Tilefish","Toadfish","Tropical Two-Wing Flyfish","Tuna","Umbrella Squid","Velvet Crab","Venus Flytrap Sea Anemone","Vigtorniella Worm","Viperfish","Vampire Squid","Vaquita","Wahoo","Walrus","West Indian Manatee","Whale","Whale Shark","Whiptail Gulper","White-Beaked Dolphin","White-Ring Garden Eel","White Shrimp","Wobbegong","Wrasse","Wreckfish","Xiphosura","Yellowtail Damselfish","Yelloweye Rockfish","Yellow Cup Black Coral","Yellow Tube Sponge","Yellowfin Tuna","Zebrashark","Zooplankton"],desert:["Aardwolf","Addax","African Wild Ass","Ant","Antelope","Armadillo","Baboon","Badger","Bat","Bearded Dragon","Beetle","Bird","Black-footed Cat","Boa","Brown Bear","Bustard","Butterfly","Camel","Caracal","Caracara","Caterpillar","Centipede","Cheetah","Chipmunk","Chuckwalla","Climbing Mouse","Coati","Cobra","Cotton Rat","Cougar","Courser","Crane Fly","Crow","Dassie Rat","Dove","Dunnart","Eagle","Echidna","Elephant","Emu","Falcon","Fly","Fox","Frogmouth","Gecko","Geoffroy's Cat","Gerbil","Grasshopper","Guanaco","Gundi","Hamster","Hawk","Hedgehog","Hyena","Hyrax","Jackal","Kangaroo","Kangaroo Rat","Kestrel","Kowari","Kultarr","Leopard","Lion","Macaw","Meerkat","Mouse","Oryx","Ostrich","Owl","Pronghorn","Python","Rabbit","Raccoon","Rattlesnake","Rhinoceros","Sand Cat","Spectacled Bear","Spiny Mouse","Starling","Stick Bug","Tarantula","Tit","Toad","Tortoise","Tyrant Flycatcher","Viper","Vulture","Waxwing","Xerus","Zebra"],grassland:["Aardvark","Aardwolf","Accentor","African Buffalo","African Wild Dog","Alpaca","Anaconda","Ant","Anteater","Antelope","Armadillo","Baboon","Badger","Bandicoot","Barbet","Bat","Bee","Bee-eater","Beetle","Bird","Bison","Black-footed Cat","Black-footed Ferret","Bluebird","Boa","Bowerbird","Brown Bear","Bush Dog","Bushshrike","Bustard","Butterfly","Buzzard","Caracal","Caracara","Cardinal","Caterpillar","Cheetah","Chipmunk","Civet","Climbing Mouse","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Common Genet","Cotton Rat","Cougar","Courser","Coyote","Crane","Crane Fly","Cricket","Crow","Culpeo","Death Adder","Deer","Deer Mouse","Dingo","Dinosaur","Dove","Drongo","Duck","Duiker","Dunnart","Eagle","Echidna","Elephant","Elk","Emu","Falcon","Finch","Flea","Fly","Flying Frog","Fox","Frog","Frogmouth","Garter Snake","Gazelle","Gecko","Geoffroy's Cat","Gerbil","Giant Tortoise","Giraffe","Grasshopper","Grison","Groundhog","Grouse","Guanaco","Guinea Pig","Hamster","Harrier","Hartebeest","Hawk","Hedgehog","Helmetshrike","Hippopotamus","Hornbill","Hyena","Hyrax","Impala","Jackal","Jaguar","Jaguarundi","Kangaroo","Kangaroo Rat","Kestrel","Kultarr","Ladybug","Leopard","Lion","Macaw","Meerkat","Mouse","Newt","Oryx","Ostrich","Owl","Pangolin","Pheasant","Prairie Dog","Pronghorn","Przewalski's Horse","Python","Quoll","Rabbit","Raven","Rhinoceros","Shelduck","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Tamandua","Tasmanian Devil","Thornbill","Thrush","Toad","Tortoise"],forest:["Agouti","Anaconda","Anoa","Ant","Anteater","Antelope","Armadillo","Asian Black Bear","Aye-aye","Babirusa","Baboon","Badger","Bandicoot","Banteng","Barbet","Basilisk","Bat","Bearded Dragon","Bee","Bee-eater","Beetle","Bettong","Binturong","Bird-of-paradise","Bongo","Bowerbird","Bulbul","Bush Dog","Bushbaby","Bushshrike","Butterfly","Buzzard","Caecilian","Cardinal","Cassowary","Caterpillar","Centipede","Chameleon","Chimpanzee","Cicada","Civet","Clouded Leopard","Coati","Cobra","Cockatoo","Cockroach","Colugo","Cotinga","Cotton Rat","Cougar","Crane Fly","Cricket","Crocodile","Crow","Cuckoo","Cuscus","Death Adder","Deer","Dhole","Dingo","Dinosaur","Drongo","Duck","Duiker","Eagle","Echidna","Elephant","Finch","Flat-headed Cat","Flea","Flowerpecker","Fly","Flying Frog","Fossa","Frog","Frogmouth","Gaur","Gecko","Gorilla","Grison","Hawaiian Honeycreeper","Hawk","Hedgehog","Helmetshrike","Hornbill","Hyrax","Iguana","Jackal","Jaguar","Jaguarundi","Kestrel","Ladybug","Lemur","Leopard","Lion","Macaw","Mandrill","Margay","Monkey","Mouse","Mouse Deer","Newt","Okapi","Old World Flycatcher","Orangutan","Owl","Pangolin","Peafowl","Pheasant","Possum","Python","Quokka","Rabbit","Raccoon","Red Panda","Red River Hog","Rhinoceros","Sloth Bear","Spectacled Bear","Squirrel","Starling","Stick Bug","Sun Bear","Tamandua","Tamarin","Tapir","Tarantula","Thrush","Tiger","Tit","Toad","Tortoise","Toucan","Trogon","Trumpeter","Turaco","Turtle","Tyrant Flycatcher","Viper","Vulture","Wallaby","Warbler","Wasp","Waxwing","Weaver","Weaver-finch","Whistler","White-eye","Whydah","Woodswallow","Worm","Wren","Xenops","Yellowjacket","Accentor","African Buffalo","American Black Bear","Anole","Bird","Bison","Boa","Brown Bear","Chipmunk","Common Genet","Copperhead","Coyote","Deer Mouse","Dormouse","Elk","Emu","Fisher","Fox","Garter Snake","Giant Panda","Giant Tortoise","Groundhog","Grouse","Guanaco","Himalayan Tahr","Kangaroo","Koala","Numbat","Quoll","Raccoon dog","Tasmanian Devil","Thornbill","Turkey","Vole","Weasel","Wildcat","Wolf","Wombat","Woodchuck","Woodpecker"],farm:["Alpaca","Buffalo","Banteng","Cow","Cat","Chicken","Carp","Camel","Donkey","Dog","Duck","Emu","Goat","Gayal","Guinea","Goose","Horse","Honey","Llama","Pig","Pigeon","Rhea","Rabbit","Sheep","Silkworm","Turkey","Yak","Zebu"],pet:["Bearded Dragon","Birds","Burro","Cats","Chameleons","Chickens","Chinchillas","Chinese Water Dragon","Cows","Dogs","Donkey","Ducks","Ferrets","Fish","Geckos","Geese","Gerbils","Goats","Guinea Fowl","Guinea Pigs","Hamsters","Hedgehogs","Horses","Iguanas","Llamas","Lizards","Mice","Mule","Peafowl","Pigs and Hogs","Pigeons","Ponies","Pot Bellied Pig","Rabbits","Rats","Sheep","Skinks","Snakes","Stick Insects","Sugar Gliders","Tarantula","Turkeys","Turtles"],zoo:["Aardvark","African Wild Dog","Aldabra Tortoise","American Alligator","American Bison","Amur Tiger","Anaconda","Andean Condor","Asian Elephant","Baby Doll Sheep","Bald Eagle","Barred Owl","Blue Iguana","Boer Goat","California Sea Lion","Caribbean Flamingo","Chinchilla","Collared Lemur","Coquerel's Sifaka","Cuban Amazon Parrot","Ebony Langur","Fennec Fox","Fossa","Gelada","Giant Anteater","Giraffe","Gorilla","Grizzly Bear","Henkel's Leaf-tailed Gecko","Indian Gharial","Indian Rhinoceros","King Cobra","King Vulture","Komodo Dragon","Linne's Two-toed Sloth","Lion","Little Penguin","Madagascar Tree Boa","Magellanic Penguin","Malayan Tapir","Malayan Tiger","Matschies Tree Kangaroo","Mini Donkey","Monarch Butterfly","Nile crocodile","North American Porcupine","Nubian Ibex","Okapi","Poison Dart Frog","Polar Bear","Pygmy Marmoset","Radiated Tortoise","Red Panda","Red Ruffed Lemur","Ring-tailed Lemur","Ring-tailed Mongoose","Rock Hyrax","Small Clawed Asian Otter","Snow Leopard","Snowy Owl","Southern White-faced Owl","Southern White Rhinocerous","Squirrel Monkey","Tufted Puffin","White Cheeked Gibbon","White-throated Bee Eater","Zebra"]},primes:[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007],emotions:["love","joy","surprise","anger","sadness","fear"]},y=Object.prototype.hasOwnProperty,b=Object.keys||function(e){var t=[];for(var i in e)y.call(e,i)&&t.push(i);return t};function C(e,t){var i=Array.isArray(e),n=t||(i?new Array(e.length):{});return i?function(e,t){for(var i=0,n=e.length;i<n;i++)t[i]=e[i]}(e,n):function(e,t){for(var i,n=b(e),r=0,o=n.length;r<o;r++)t[i=n[r]]=e[i]||t[i]}(e,n),n}c.prototype.get=function(e){return C(_[e])},c.prototype.mac_address=function(e){(e=h(e)).separator||(e.separator=e.networkVersion?".":":");var t="ABCDEF1234567890";return e.networkVersion?this.n(this.string,3,{pool:t,length:4}).join(e.separator):this.n(this.string,6,{pool:t,length:2}).join(e.separator)},c.prototype.normal=function(e){if(u((e=h(e,{mean:0,dev:1,pool:[]})).pool.constructor!==Array,"Chance: The pool option must be a valid array."),u("number"!=typeof e.mean,"Chance: Mean (mean) must be a number"),u("number"!=typeof e.dev,"Chance: Standard deviation (dev) must be a number"),e.pool.length>0)return this.normal_pool(e);var t,i,n,r=e.mean,o=e.dev;do{t=(i=2*this.random()-1)*i+(n=2*this.random()-1)*n}while(t>=1);return o*(i*Math.sqrt(-2*Math.log(t)/t))+r},c.prototype.normal_pool=function(e){var t=0;do{var i=Math.round(this.normal({mean:e.mean,dev:e.dev}));if(i<e.pool.length&&i>=0)return e.pool[i];t++}while(t<100);throw new RangeError("Chance: Your pool is too small for the given mean and standard deviation. Please adjust.")},c.prototype.radio=function(e){var t="";switch((e=h(e,{side:"?"})).side.toLowerCase()){case"east":case"e":t="W";break;case"west":case"w":t="K";break;default:t=this.character({pool:"KW"})}return t+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})+this.character({alpha:!0,casing:"upper"})},c.prototype.set=function(e,t){"string"==typeof e?_[e]=t:_=C(e,_)},c.prototype.tv=function(e){return this.radio(e)},c.prototype.cnpj=function(){var e=this.n(this.natural,8,{max:9}),t=2+6*e[7]+7*e[6]+8*e[5]+9*e[4]+2*e[3]+3*e[2]+4*e[1]+5*e[0];(t=11-t%11)>=10&&(t=0);var i=2*t+3+7*e[7]+8*e[6]+9*e[5]+2*e[4]+3*e[3]+4*e[2]+5*e[1]+6*e[0];return(i=11-i%11)>=10&&(i=0),""+e[0]+e[1]+"."+e[2]+e[3]+e[4]+"."+e[5]+e[6]+e[7]+"/0001-"+t+i},c.prototype.emotion=function(){return this.pick(this.get("emotions"))},c.prototype.mersenne_twister=function(e){return new x(e)},c.prototype.blueimp_md5=function(){return new S};var x=function(e){void 0===e&&(e=Math.floor(Math.random()*Math.pow(10,13))),this.N=624,this.M=397,this.MATRIX_A=2567483615,this.UPPER_MASK=2147483648,this.LOWER_MASK=2147483647,this.mt=new Array(this.N),this.mti=this.N+1,this.init_genrand(e)};x.prototype.init_genrand=function(e){for(this.mt[0]=e>>>0,this.mti=1;this.mti<this.N;this.mti++)e=this.mt[this.mti-1]^this.mt[this.mti-1]>>>30,this.mt[this.mti]=(1812433253*((4294901760&e)>>>16)<<16)+1812433253*(65535&e)+this.mti,this.mt[this.mti]>>>=0},x.prototype.init_by_array=function(e,t){var i,n,r=1,o=0;for(this.init_genrand(19650218),i=this.N>t?this.N:t;i;i--)n=this.mt[r-1]^this.mt[r-1]>>>30,this.mt[r]=(this.mt[r]^(1664525*((4294901760&n)>>>16)<<16)+1664525*(65535&n))+e[o]+o,this.mt[r]>>>=0,o++,++r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1),o>=t&&(o=0);for(i=this.N-1;i;i--)n=this.mt[r-1]^this.mt[r-1]>>>30,this.mt[r]=(this.mt[r]^(1566083941*((4294901760&n)>>>16)<<16)+1566083941*(65535&n))-r,this.mt[r]>>>=0,++r>=this.N&&(this.mt[0]=this.mt[this.N-1],r=1);this.mt[0]=2147483648},x.prototype.genrand_int32=function(){var e,t=new Array(0,this.MATRIX_A);if(this.mti>=this.N){var i;for(this.mti===this.N+1&&this.init_genrand(5489),i=0;i<this.N-this.M;i++)e=this.mt[i]&this.UPPER_MASK|this.mt[i+1]&this.LOWER_MASK,this.mt[i]=this.mt[i+this.M]^e>>>1^t[1&e];for(;i<this.N-1;i++)e=this.mt[i]&this.UPPER_MASK|this.mt[i+1]&this.LOWER_MASK,this.mt[i]=this.mt[i+(this.M-this.N)]^e>>>1^t[1&e];e=this.mt[this.N-1]&this.UPPER_MASK|this.mt[0]&this.LOWER_MASK,this.mt[this.N-1]=this.mt[this.M-1]^e>>>1^t[1&e],this.mti=0}return e=this.mt[this.mti++],e^=e>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,(e^=e>>>18)>>>0},x.prototype.genrand_int31=function(){return this.genrand_int32()>>>1},x.prototype.genrand_real1=function(){return this.genrand_int32()*(1/4294967295)},x.prototype.random=function(){return this.genrand_int32()*(1/4294967296)},x.prototype.genrand_real3=function(){return(this.genrand_int32()+.5)*(1/4294967296)},x.prototype.genrand_res53=function(){return(67108864*(this.genrand_int32()>>>5)+(this.genrand_int32()>>>6))*(1/9007199254740992)};var S=function(){};S.prototype.VERSION="1.0.1",S.prototype.safe_add=function(e,t){var i=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(i>>16)<<16|65535&i},S.prototype.bit_roll=function(e,t){return e<<t|e>>>32-t},S.prototype.md5_cmn=function(e,t,i,n,r,o){return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(t,e),this.safe_add(n,o)),r),i)},S.prototype.md5_ff=function(e,t,i,n,r,o,s){return this.md5_cmn(t&i|~t&n,e,t,r,o,s)},S.prototype.md5_gg=function(e,t,i,n,r,o,s){return this.md5_cmn(t&n|i&~n,e,t,r,o,s)},S.prototype.md5_hh=function(e,t,i,n,r,o,s){return this.md5_cmn(t^i^n,e,t,r,o,s)},S.prototype.md5_ii=function(e,t,i,n,r,o,s){return this.md5_cmn(i^(t|~n),e,t,r,o,s)},S.prototype.binl_md5=function(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;var i,n,r,o,s,a=1732584193,l=-271733879,c=-1732584194,h=271733878;for(i=0;i<e.length;i+=16)n=a,r=l,o=c,s=h,a=this.md5_ff(a,l,c,h,e[i],7,-680876936),h=this.md5_ff(h,a,l,c,e[i+1],12,-389564586),c=this.md5_ff(c,h,a,l,e[i+2],17,606105819),l=this.md5_ff(l,c,h,a,e[i+3],22,-1044525330),a=this.md5_ff(a,l,c,h,e[i+4],7,-176418897),h=this.md5_ff(h,a,l,c,e[i+5],12,1200080426),c=this.md5_ff(c,h,a,l,e[i+6],17,-1473231341),l=this.md5_ff(l,c,h,a,e[i+7],22,-45705983),a=this.md5_ff(a,l,c,h,e[i+8],7,1770035416),h=this.md5_ff(h,a,l,c,e[i+9],12,-1958414417),c=this.md5_ff(c,h,a,l,e[i+10],17,-42063),l=this.md5_ff(l,c,h,a,e[i+11],22,-1990404162),a=this.md5_ff(a,l,c,h,e[i+12],7,1804603682),h=this.md5_ff(h,a,l,c,e[i+13],12,-40341101),c=this.md5_ff(c,h,a,l,e[i+14],17,-1502002290),l=this.md5_ff(l,c,h,a,e[i+15],22,1236535329),a=this.md5_gg(a,l,c,h,e[i+1],5,-165796510),h=this.md5_gg(h,a,l,c,e[i+6],9,-1069501632),c=this.md5_gg(c,h,a,l,e[i+11],14,643717713),l=this.md5_gg(l,c,h,a,e[i],20,-373897302),a=this.md5_gg(a,l,c,h,e[i+5],5,-701558691),h=this.md5_gg(h,a,l,c,e[i+10],9,38016083),c=this.md5_gg(c,h,a,l,e[i+15],14,-660478335),l=this.md5_gg(l,c,h,a,e[i+4],20,-405537848),a=this.md5_gg(a,l,c,h,e[i+9],5,568446438),h=this.md5_gg(h,a,l,c,e[i+14],9,-1019803690),c=this.md5_gg(c,h,a,l,e[i+3],14,-187363961),l=this.md5_gg(l,c,h,a,e[i+8],20,1163531501),a=this.md5_gg(a,l,c,h,e[i+13],5,-1444681467),h=this.md5_gg(h,a,l,c,e[i+2],9,-51403784),c=this.md5_gg(c,h,a,l,e[i+7],14,1735328473),l=this.md5_gg(l,c,h,a,e[i+12],20,-1926607734),a=this.md5_hh(a,l,c,h,e[i+5],4,-378558),h=this.md5_hh(h,a,l,c,e[i+8],11,-2022574463),c=this.md5_hh(c,h,a,l,e[i+11],16,1839030562),l=this.md5_hh(l,c,h,a,e[i+14],23,-35309556),a=this.md5_hh(a,l,c,h,e[i+1],4,-1530992060),h=this.md5_hh(h,a,l,c,e[i+4],11,1272893353),c=this.md5_hh(c,h,a,l,e[i+7],16,-155497632),l=this.md5_hh(l,c,h,a,e[i+10],23,-1094730640),a=this.md5_hh(a,l,c,h,e[i+13],4,681279174),h=this.md5_hh(h,a,l,c,e[i],11,-358537222),c=this.md5_hh(c,h,a,l,e[i+3],16,-722521979),l=this.md5_hh(l,c,h,a,e[i+6],23,76029189),a=this.md5_hh(a,l,c,h,e[i+9],4,-640364487),h=this.md5_hh(h,a,l,c,e[i+12],11,-421815835),c=this.md5_hh(c,h,a,l,e[i+15],16,530742520),l=this.md5_hh(l,c,h,a,e[i+2],23,-995338651),a=this.md5_ii(a,l,c,h,e[i],6,-198630844),h=this.md5_ii(h,a,l,c,e[i+7],10,1126891415),c=this.md5_ii(c,h,a,l,e[i+14],15,-1416354905),l=this.md5_ii(l,c,h,a,e[i+5],21,-57434055),a=this.md5_ii(a,l,c,h,e[i+12],6,1700485571),h=this.md5_ii(h,a,l,c,e[i+3],10,-1894986606),c=this.md5_ii(c,h,a,l,e[i+10],15,-1051523),l=this.md5_ii(l,c,h,a,e[i+1],21,-2054922799),a=this.md5_ii(a,l,c,h,e[i+8],6,1873313359),h=this.md5_ii(h,a,l,c,e[i+15],10,-30611744),c=this.md5_ii(c,h,a,l,e[i+6],15,-1560198380),l=this.md5_ii(l,c,h,a,e[i+13],21,1309151649),a=this.md5_ii(a,l,c,h,e[i+4],6,-145523070),h=this.md5_ii(h,a,l,c,e[i+11],10,-1120210379),c=this.md5_ii(c,h,a,l,e[i+2],15,718787259),l=this.md5_ii(l,c,h,a,e[i+9],21,-343485551),a=this.safe_add(a,n),l=this.safe_add(l,r),c=this.safe_add(c,o),h=this.safe_add(h,s);return[a,l,c,h]},S.prototype.binl2rstr=function(e){var t,i="";for(t=0;t<32*e.length;t+=8)i+=String.fromCharCode(e[t>>5]>>>t%32&255);return i},S.prototype.rstr2binl=function(e){var t,i=[];for(i[(e.length>>2)-1]=void 0,t=0;t<i.length;t+=1)i[t]=0;for(t=0;t<8*e.length;t+=8)i[t>>5]|=(255&e.charCodeAt(t/8))<<t%32;return i},S.prototype.rstr_md5=function(e){return this.binl2rstr(this.binl_md5(this.rstr2binl(e),8*e.length))},S.prototype.rstr_hmac_md5=function(e,t){var i,n,r=this.rstr2binl(e),o=[],s=[];for(o[15]=s[15]=void 0,r.length>16&&(r=this.binl_md5(r,8*e.length)),i=0;i<16;i+=1)o[i]=909522486^r[i],s[i]=1549556828^r[i];return n=this.binl_md5(o.concat(this.rstr2binl(t)),512+8*t.length),this.binl2rstr(this.binl_md5(s.concat(n),640))},S.prototype.rstr2hex=function(e){var t,i,n="0123456789abcdef",r="";for(i=0;i<e.length;i+=1)t=e.charCodeAt(i),r+=n.charAt(t>>>4&15)+n.charAt(15&t);return r},S.prototype.str2rstr_utf8=function(e){return unescape(encodeURIComponent(e))},S.prototype.raw_md5=function(e){return this.rstr_md5(this.str2rstr_utf8(e))},S.prototype.hex_md5=function(e){return this.rstr2hex(this.raw_md5(e))},S.prototype.raw_hmac_md5=function(e,t){return this.rstr_hmac_md5(this.str2rstr_utf8(e),this.str2rstr_utf8(t))},S.prototype.hex_hmac_md5=function(e,t){return this.rstr2hex(this.raw_hmac_md5(e,t))},S.prototype.md5=function(e,t,i){return t?i?this.raw_hmac_md5(t,e):this.hex_hmac_md5(t,e):i?this.raw_md5(e):this.hex_md5(e)},e.exports&&(t=e.exports=c),t.Chance=c,"undefined"!=typeof importScripts&&(chance=new c,self.Chance=c),"object"==typeof window&&"object"==typeof window.document&&(window.Chance=c,window.chance=new c)}()}));Wo.Chance;var zo=To((function(e,t){function i(e,t){if(!(this instanceof i))return new i(e,t);this.x=e||0,this.y=t||0}e.exports=i,i.fromArray=function(e){return new i(e[0]||0,e[1]||0)},i.fromObject=function(e){return new i(e.x||0,e.y||0)},i.prototype.addX=function(e){return this.x+=e.x,this},i.prototype.addY=function(e){return this.y+=e.y,this},i.prototype.add=function(e){return this.x+=e.x,this.y+=e.y,this},i.prototype.addScalar=function(e){return this.x+=e,this.y+=e,this},i.prototype.addScalarX=function(e){return this.x+=e,this},i.prototype.addScalarY=function(e){return this.y+=e,this},i.prototype.subtractX=function(e){return this.x-=e.x,this},i.prototype.subtractY=function(e){return this.y-=e.y,this},i.prototype.subtract=function(e){return this.x-=e.x,this.y-=e.y,this},i.prototype.subtractScalar=function(e){return this.x-=e,this.y-=e,this},i.prototype.subtractScalarX=function(e){return this.x-=e,this},i.prototype.subtractScalarY=function(e){return this.y-=e,this},i.prototype.divideX=function(e){return this.x/=e.x,this},i.prototype.divideY=function(e){return this.y/=e.y,this},i.prototype.divide=function(e){return this.x/=e.x,this.y/=e.y,this},i.prototype.divideScalar=function(e){return 0!==e?(this.x/=e,this.y/=e):(this.x=0,this.y=0),this},i.prototype.divideScalarX=function(e){return 0!==e?this.x/=e:this.x=0,this},i.prototype.divideScalarY=function(e){return 0!==e?this.y/=e:this.y=0,this},i.prototype.invertX=function(){return this.x*=-1,this},i.prototype.invertY=function(){return this.y*=-1,this},i.prototype.invert=function(){return this.invertX(),this.invertY(),this},i.prototype.multiplyX=function(e){return this.x*=e.x,this},i.prototype.multiplyY=function(e){return this.y*=e.y,this},i.prototype.multiply=function(e){return this.x*=e.x,this.y*=e.y,this},i.prototype.multiplyScalar=function(e){return this.x*=e,this.y*=e,this},i.prototype.multiplyScalarX=function(e){return this.x*=e,this},i.prototype.multiplyScalarY=function(e){return this.y*=e,this},i.prototype.normalize=function(){var e=this.length();return 0===e?(this.x=1,this.y=0):this.divide(i(e,e)),this},i.prototype.norm=i.prototype.normalize,i.prototype.limit=function(e,t){return Math.abs(this.x)>e&&(this.x*=t),Math.abs(this.y)>e&&(this.y*=t),this},i.prototype.randomize=function(e,t){return this.randomizeX(e,t),this.randomizeY(e,t),this},i.prototype.randomizeX=function(e,t){var i=Math.min(e.x,t.x),n=Math.max(e.x,t.x);return this.x=r(i,n),this},i.prototype.randomizeY=function(e,t){var i=Math.min(e.y,t.y),n=Math.max(e.y,t.y);return this.y=r(i,n),this},i.prototype.randomizeAny=function(e,t){return Math.round(Math.random())?this.randomizeX(e,t):this.randomizeY(e,t),this},i.prototype.unfloat=function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},i.prototype.toFixed=function(e){return void 0===e&&(e=8),this.x=this.x.toFixed(e),this.y=this.y.toFixed(e),this},i.prototype.mixX=function(e,t){return void 0===t&&(t=.5),this.x=(1-t)*this.x+t*e.x,this},i.prototype.mixY=function(e,t){return void 0===t&&(t=.5),this.y=(1-t)*this.y+t*e.y,this},i.prototype.mix=function(e,t){return this.mixX(e,t),this.mixY(e,t),this},i.prototype.clone=function(){return new i(this.x,this.y)},i.prototype.copyX=function(e){return this.x=e.x,this},i.prototype.copyY=function(e){return this.y=e.y,this},i.prototype.copy=function(e){return this.copyX(e),this.copyY(e),this},i.prototype.zero=function(){return this.x=this.y=0,this},i.prototype.dot=function(e){return this.x*e.x+this.y*e.y},i.prototype.cross=function(e){return this.x*e.y-this.y*e.x},i.prototype.projectOnto=function(e){var t=(this.x*e.x+this.y*e.y)/(e.x*e.x+e.y*e.y);return this.x=t*e.x,this.y=t*e.y,this},i.prototype.horizontalAngle=function(){return Math.atan2(this.y,this.x)},i.prototype.horizontalAngleDeg=function(){return o(this.horizontalAngle())},i.prototype.verticalAngle=function(){return Math.atan2(this.x,this.y)},i.prototype.verticalAngleDeg=function(){return o(this.verticalAngle())},i.prototype.angle=i.prototype.horizontalAngle,i.prototype.angleDeg=i.prototype.horizontalAngleDeg,i.prototype.direction=i.prototype.horizontalAngle,i.prototype.rotate=function(e){var t=this.x*Math.cos(e)-this.y*Math.sin(e),i=this.x*Math.sin(e)+this.y*Math.cos(e);return this.x=t,this.y=i,this},i.prototype.rotateDeg=function(e){return e=s(e),this.rotate(e)},i.prototype.rotateTo=function(e){return this.rotate(e-this.angle())},i.prototype.rotateToDeg=function(e){return e=s(e),this.rotateTo(e)},i.prototype.rotateBy=function(e){var t=this.angle()+e;return this.rotate(t)},i.prototype.rotateByDeg=function(e){return e=s(e),this.rotateBy(e)},i.prototype.distanceX=function(e){return this.x-e.x},i.prototype.absDistanceX=function(e){return Math.abs(this.distanceX(e))},i.prototype.distanceY=function(e){return this.y-e.y},i.prototype.absDistanceY=function(e){return Math.abs(this.distanceY(e))},i.prototype.distance=function(e){return Math.sqrt(this.distanceSq(e))},i.prototype.distanceSq=function(e){var t=this.distanceX(e),i=this.distanceY(e);return t*t+i*i},i.prototype.length=function(){return Math.sqrt(this.lengthSq())},i.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y},i.prototype.magnitude=i.prototype.length,i.prototype.isZero=function(){return 0===this.x&&0===this.y},i.prototype.isEqualTo=function(e){return this.x===e.x&&this.y===e.y},i.prototype.toString=function(){return"x:"+this.x+", y:"+this.y},i.prototype.toArray=function(){return[this.x,this.y]},i.prototype.toObject=function(){return{x:this.x,y:this.y}};var n=180/Math.PI;function r(e,t){return Math.floor(Math.random()*(t-e+1)+e)}function o(e){return e*n}function s(e){return e/n}})),Ho="object"==typeof self&&self.self===self&&self||"object"==typeof global&&global.global===global&&global||Function("return this")()||{},Uo=Array.prototype,Vo=Object.prototype,Yo="undefined"!=typeof Symbol?Symbol.prototype:null,qo=Uo.push,jo=Uo.slice,Ko=Vo.toString,Xo=Vo.hasOwnProperty,Jo="undefined"!=typeof ArrayBuffer,Zo="undefined"!=typeof DataView,Qo=Array.isArray,$o=Object.keys,es=Object.create,ts=Jo&&ArrayBuffer.isView,is=isNaN,ns=isFinite,rs=!{toString:null}.propertyIsEnumerable("toString"),os=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"],ss=Math.pow(2,53)-1;function as(e,t){return t=null==t?e.length-1:+t,function(){for(var i=Math.max(arguments.length-t,0),n=Array(i),r=0;r<i;r++)n[r]=arguments[r+t];switch(t){case 0:return e.call(this,n);case 1:return e.call(this,arguments[0],n);case 2:return e.call(this,arguments[0],arguments[1],n)}var o=Array(t+1);for(r=0;r<t;r++)o[r]=arguments[r];return o[t]=n,e.apply(this,o)}}function ls(e){var t=typeof e;return"function"===t||"object"===t&&!!e}function cs(e){return void 0===e}function hs(e){return!0===e||!1===e||"[object Boolean]"===Ko.call(e)}function us(e){var t="[object "+e+"]";return function(e){return Ko.call(e)===t}}const ds=us("String"),gs=us("Number"),ms=us("Date"),ps=us("RegExp"),fs=us("Error"),_s=us("Symbol"),ys=us("ArrayBuffer");var bs=us("Function"),Cs=Ho.document&&Ho.document.childNodes;"function"!=typeof/./&&"object"!=typeof Int8Array&&"function"!=typeof Cs&&(bs=function(e){return"function"==typeof e||!1});const xs=bs,Ss=us("Object");var Is=Zo&&Ss(new DataView(new ArrayBuffer(8))),Ts="undefined"!=typeof Map&&Ss(new Map),vs=us("DataView");const ws=Is?function(e){return null!=e&&xs(e.getInt8)&&ys(e.buffer)}:vs,Es=Qo||us("Array");function As(e,t){return null!=e&&Xo.call(e,t)}var Ms=us("Arguments");!function(){Ms(arguments)||(Ms=function(e){return As(e,"callee")})}();const Ns=Ms;function Ds(e){return gs(e)&&is(e)}function Rs(e){return function(){return e}}function Ls(e){return function(t){var i=e(t);return"number"==typeof i&&i>=0&&i<=ss}}function Ps(e){return function(t){return null==t?void 0:t[e]}}const Os=Ps("byteLength"),ks=Ls(Os);var Bs=/\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\]/;const Fs=Jo?function(e){return ts?ts(e)&&!ws(e):ks(e)&&Bs.test(Ko.call(e))}:Rs(!1),Gs=Ps("length");function Ws(e,t){t=function(e){for(var t={},i=e.length,n=0;n<i;++n)t[e[n]]=!0;return{contains:function(e){return!0===t[e]},push:function(i){return t[i]=!0,e.push(i)}}}(t);var i=os.length,n=e.constructor,r=xs(n)&&n.prototype||Vo,o="constructor";for(As(e,o)&&!t.contains(o)&&t.push(o);i--;)(o=os[i])in e&&e[o]!==r[o]&&!t.contains(o)&&t.push(o)}function zs(e){if(!ls(e))return[];if($o)return $o(e);var t=[];for(var i in e)As(e,i)&&t.push(i);return rs&&Ws(e,t),t}function Hs(e,t){var i=zs(t),n=i.length;if(null==e)return!n;for(var r=Object(e),o=0;o<n;o++){var s=i[o];if(t[s]!==r[s]||!(s in r))return!1}return!0}function Us(e){return e instanceof Us?e:this instanceof Us?void(this._wrapped=e):new Us(e)}function Vs(e){return new Uint8Array(e.buffer||e,e.byteOffset||0,Os(e))}Us.VERSION="1.13.2",Us.prototype.value=function(){return this._wrapped},Us.prototype.valueOf=Us.prototype.toJSON=Us.prototype.value,Us.prototype.toString=function(){return String(this._wrapped)};function Ys(e,t,i,n){if(e===t)return 0!==e||1/e==1/t;if(null==e||null==t)return!1;if(e!=e)return t!=t;var r=typeof e;return("function"===r||"object"===r||"object"==typeof t)&&qs(e,t,i,n)}function qs(e,t,i,n){e instanceof Us&&(e=e._wrapped),t instanceof Us&&(t=t._wrapped);var r=Ko.call(e);if(r!==Ko.call(t))return!1;if(Is&&"[object Object]"==r&&ws(e)){if(!ws(t))return!1;r="[object DataView]"}switch(r){case"[object RegExp]":case"[object String]":return""+e==""+t;case"[object Number]":return+e!=+e?+t!=+t:0==+e?1/+e==1/t:+e==+t;case"[object Date]":case"[object Boolean]":return+e==+t;case"[object Symbol]":return Yo.valueOf.call(e)===Yo.valueOf.call(t);case"[object ArrayBuffer]":case"[object DataView]":return qs(Vs(e),Vs(t),i,n)}var o="[object Array]"===r;if(!o&&Fs(e)){if(Os(e)!==Os(t))return!1;if(e.buffer===t.buffer&&e.byteOffset===t.byteOffset)return!0;o=!0}if(!o){if("object"!=typeof e||"object"!=typeof t)return!1;var s=e.constructor,a=t.constructor;if(s!==a&&!(xs(s)&&s instanceof s&&xs(a)&&a instanceof a)&&"constructor"in e&&"constructor"in t)return!1}n=n||[];for(var l=(i=i||[]).length;l--;)if(i[l]===e)return n[l]===t;if(i.push(e),n.push(t),o){if((l=e.length)!==t.length)return!1;for(;l--;)if(!Ys(e[l],t[l],i,n))return!1}else{var c,h=zs(e);if(l=h.length,zs(t).length!==l)return!1;for(;l--;)if(!As(t,c=h[l])||!Ys(e[c],t[c],i,n))return!1}return i.pop(),n.pop(),!0}function js(e){if(!ls(e))return[];var t=[];for(var i in e)t.push(i);return rs&&Ws(e,t),t}function Ks(e){var t=Gs(e);return function(i){if(null==i)return!1;var n=js(i);if(Gs(n))return!1;for(var r=0;r<t;r++)if(!xs(i[e[r]]))return!1;return e!==$s||!xs(i[Xs])}}var Xs="forEach",Js=["clear","delete"],Zs=["get","has","set"],Qs=Js.concat(Xs,Zs),$s=Js.concat(Zs),ea=["add"].concat(Js,Xs,"has");const ta=Ts?Ks(Qs):us("Map"),ia=Ts?Ks($s):us("WeakMap"),na=Ts?Ks(ea):us("Set"),ra=us("WeakSet");function oa(e){for(var t=zs(e),i=t.length,n=Array(i),r=0;r<i;r++)n[r]=e[t[r]];return n}function sa(e){for(var t={},i=zs(e),n=0,r=i.length;n<r;n++)t[e[i[n]]]=i[n];return t}function aa(e){var t=[];for(var i in e)xs(e[i])&&t.push(i);return t.sort()}function la(e,t){return function(i){var n=arguments.length;if(t&&(i=Object(i)),n<2||null==i)return i;for(var r=1;r<n;r++)for(var o=arguments[r],s=e(o),a=s.length,l=0;l<a;l++){var c=s[l];t&&void 0!==i[c]||(i[c]=o[c])}return i}}const ca=la(js),ha=la(zs),ua=la(js,!0);function da(e){if(!ls(e))return{};if(es)return es(e);var t=function(){};t.prototype=e;var i=new t;return t.prototype=null,i}function ga(e){return Es(e)?e:[e]}function ma(e){return Us.toPath(e)}function pa(e,t){for(var i=t.length,n=0;n<i;n++){if(null==e)return;e=e[t[n]]}return i?e:void 0}function fa(e,t,i){var n=pa(e,ma(t));return cs(n)?i:n}function _a(e){return e}function ya(e){return e=ha({},e),function(t){return Hs(t,e)}}function ba(e){return e=ma(e),function(t){return pa(t,e)}}function Ca(e,t,i){if(void 0===t)return e;switch(null==i?3:i){case 1:return function(i){return e.call(t,i)};case 3:return function(i,n,r){return e.call(t,i,n,r)};case 4:return function(i,n,r,o){return e.call(t,i,n,r,o)}}return function(){return e.apply(t,arguments)}}function xa(e,t,i){return null==e?_a:xs(e)?Ca(e,t,i):ls(e)&&!Es(e)?ya(e):ba(e)}function Sa(e,t){return xa(e,t,1/0)}function Ia(e,t,i){return Us.iteratee!==Sa?Us.iteratee(e,t):xa(e,t,i)}function Ta(){}function va(e,t){return null==t&&(t=e,e=0),e+Math.floor(Math.random()*(t-e+1))}Us.toPath=ga,Us.iteratee=Sa;const wa=Date.now||function(){return(new Date).getTime()};function Ea(e){var t=function(t){return e[t]},i="(?:"+zs(e).join("|")+")",n=RegExp(i),r=RegExp(i,"g");return function(e){return e=null==e?"":""+e,n.test(e)?e.replace(r,t):e}}const Aa={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},Ma=Ea(Aa),Na=Ea(sa(Aa)),Da=Us.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var Ra=/(.)^/,La={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},Pa=/\\|'|\r|\n|\u2028|\u2029/g;function Oa(e){return"\\"+La[e]}var ka=/^\s*(\w|\$)+\s*$/;var Ba=0;function Fa(e,t,i,n,r){if(!(n instanceof t))return e.apply(i,r);var o=da(e.prototype),s=e.apply(o,r);return ls(s)?s:o}var Ga=as((function(e,t){var i=Ga.placeholder,n=function(){for(var r=0,o=t.length,s=Array(o),a=0;a<o;a++)s[a]=t[a]===i?arguments[r++]:t[a];for(;r<arguments.length;)s.push(arguments[r++]);return Fa(e,n,this,this,s)};return n}));Ga.placeholder=Us;const Wa=as((function(e,t,i){if(!xs(e))throw new TypeError("Bind must be called on a function");var n=as((function(r){return Fa(e,n,t,this,i.concat(r))}));return n})),za=Ls(Gs);function Ha(e,t,i,n){if(n=n||[],t||0===t){if(t<=0)return n.concat(e)}else t=1/0;for(var r=n.length,o=0,s=Gs(e);o<s;o++){var a=e[o];if(za(a)&&(Es(a)||Ns(a)))if(t>1)Ha(a,t-1,i,n),r=n.length;else for(var l=0,c=a.length;l<c;)n[r++]=a[l++];else i||(n[r++]=a)}return n}const Ua=as((function(e,t){var i=(t=Ha(t,!1,!1)).length;if(i<1)throw new Error("bindAll must be passed function names");for(;i--;){var n=t[i];e[n]=Wa(e[n],e)}return e}));const Va=as((function(e,t,i){return setTimeout((function(){return e.apply(null,i)}),t)})),Ya=Ga(Va,Us,1);function qa(e){return function(){return!e.apply(this,arguments)}}function ja(e,t){var i;return function(){return--e>0&&(i=t.apply(this,arguments)),e<=1&&(t=null),i}}const Ka=Ga(ja,2);function Xa(e,t,i){t=Ia(t,i);for(var n,r=zs(e),o=0,s=r.length;o<s;o++)if(t(e[n=r[o]],n,e))return n}function Ja(e){return function(t,i,n){i=Ia(i,n);for(var r=Gs(t),o=e>0?0:r-1;o>=0&&o<r;o+=e)if(i(t[o],o,t))return o;return-1}}const Za=Ja(1),Qa=Ja(-1);function $a(e,t,i,n){for(var r=(i=Ia(i,n,1))(t),o=0,s=Gs(e);o<s;){var a=Math.floor((o+s)/2);i(e[a])<r?o=a+1:s=a}return o}function el(e,t,i){return function(n,r,o){var s=0,a=Gs(n);if("number"==typeof o)e>0?s=o>=0?o:Math.max(o+a,s):a=o>=0?Math.min(o+1,a):o+a+1;else if(i&&o&&a)return n[o=i(n,r)]===r?o:-1;if(r!=r)return(o=t(jo.call(n,s,a),Ds))>=0?o+s:-1;for(o=e>0?s:a-1;o>=0&&o<a;o+=e)if(n[o]===r)return o;return-1}}const tl=el(1,Za,$a),il=el(-1,Qa);function nl(e,t,i){var n=(za(e)?Za:Xa)(e,t,i);if(void 0!==n&&-1!==n)return e[n]}function rl(e,t,i){var n,r;if(t=Ca(t,i),za(e))for(n=0,r=e.length;n<r;n++)t(e[n],n,e);else{var o=zs(e);for(n=0,r=o.length;n<r;n++)t(e[o[n]],o[n],e)}return e}function ol(e,t,i){t=Ia(t,i);for(var n=!za(e)&&zs(e),r=(n||e).length,o=Array(r),s=0;s<r;s++){var a=n?n[s]:s;o[s]=t(e[a],a,e)}return o}function sl(e){var t=function(t,i,n,r){var o=!za(t)&&zs(t),s=(o||t).length,a=e>0?0:s-1;for(r||(n=t[o?o[a]:a],a+=e);a>=0&&a<s;a+=e){var l=o?o[a]:a;n=i(n,t[l],l,t)}return n};return function(e,i,n,r){var o=arguments.length>=3;return t(e,Ca(i,r,4),n,o)}}const al=sl(1),ll=sl(-1);function cl(e,t,i){var n=[];return t=Ia(t,i),rl(e,(function(e,i,r){t(e,i,r)&&n.push(e)})),n}function hl(e,t,i){t=Ia(t,i);for(var n=!za(e)&&zs(e),r=(n||e).length,o=0;o<r;o++){var s=n?n[o]:o;if(!t(e[s],s,e))return!1}return!0}function ul(e,t,i){t=Ia(t,i);for(var n=!za(e)&&zs(e),r=(n||e).length,o=0;o<r;o++){var s=n?n[o]:o;if(t(e[s],s,e))return!0}return!1}function dl(e,t,i,n){return za(e)||(e=oa(e)),("number"!=typeof i||n)&&(i=0),tl(e,t,i)>=0}const gl=as((function(e,t,i){var n,r;return xs(t)?r=t:(t=ma(t),n=t.slice(0,-1),t=t[t.length-1]),ol(e,(function(e){var o=r;if(!o){if(n&&n.length&&(e=pa(e,n)),null==e)return;o=e[t]}return null==o?o:o.apply(e,i)}))}));function ml(e,t){return ol(e,ba(t))}function pl(e,t,i){var n,r,o=-1/0,s=-1/0;if(null==t||"number"==typeof t&&"object"!=typeof e[0]&&null!=e)for(var a=0,l=(e=za(e)?e:oa(e)).length;a<l;a++)null!=(n=e[a])&&n>o&&(o=n);else t=Ia(t,i),rl(e,(function(e,i,n){((r=t(e,i,n))>s||r===-1/0&&o===-1/0)&&(o=e,s=r)}));return o}var fl=/[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;function _l(e){return e?Es(e)?jo.call(e):ds(e)?e.match(fl):za(e)?ol(e,_a):oa(e):[]}function yl(e,t,i){if(null==t||i)return za(e)||(e=oa(e)),e[va(e.length-1)];var n=_l(e),r=Gs(n);t=Math.max(Math.min(t,r),0);for(var o=r-1,s=0;s<t;s++){var a=va(s,o),l=n[s];n[s]=n[a],n[a]=l}return n.slice(0,t)}function bl(e,t){return function(i,n,r){var o=t?[[],[]]:{};return n=Ia(n,r),rl(i,(function(t,r){var s=n(t,r,i);e(o,t,s)})),o}}const Cl=bl((function(e,t,i){As(e,i)?e[i].push(t):e[i]=[t]})),xl=bl((function(e,t,i){e[i]=t})),Sl=bl((function(e,t,i){As(e,i)?e[i]++:e[i]=1})),Il=bl((function(e,t,i){e[i?0:1].push(t)}),!0);function Tl(e,t,i){return t in i}const vl=as((function(e,t){var i={},n=t[0];if(null==e)return i;xs(n)?(t.length>1&&(n=Ca(n,t[1])),t=js(e)):(n=Tl,t=Ha(t,!1,!1),e=Object(e));for(var r=0,o=t.length;r<o;r++){var s=t[r],a=e[s];n(a,s,e)&&(i[s]=a)}return i})),wl=as((function(e,t){var i,n=t[0];return xs(n)?(n=qa(n),t.length>1&&(i=t[1])):(t=ol(Ha(t,!1,!1),String),n=function(e,i){return!dl(t,i)}),vl(e,n,i)}));function El(e,t,i){return jo.call(e,0,Math.max(0,e.length-(null==t||i?1:t)))}function Al(e,t,i){return null==e||e.length<1?null==t||i?void 0:[]:null==t||i?e[0]:El(e,e.length-t)}function Ml(e,t,i){return jo.call(e,null==t||i?1:t)}const Nl=as((function(e,t){return t=Ha(t,!0,!0),cl(e,(function(e){return!dl(t,e)}))})),Dl=as((function(e,t){return Nl(e,t)}));function Rl(e,t,i,n){hs(t)||(n=i,i=t,t=!1),null!=i&&(i=Ia(i,n));for(var r=[],o=[],s=0,a=Gs(e);s<a;s++){var l=e[s],c=i?i(l,s,e):l;t&&!i?(s&&o===c||r.push(l),o=c):i?dl(o,c)||(o.push(c),r.push(l)):dl(r,l)||r.push(l)}return r}const Ll=as((function(e){return Rl(Ha(e,!0,!0))}));function Pl(e){for(var t=e&&pl(e,Gs).length||0,i=Array(t),n=0;n<t;n++)i[n]=ml(e,n);return i}const Ol=as(Pl);function kl(e,t){return e._chain?Us(t).chain():t}function Bl(e){return rl(aa(e),(function(t){var i=Us[t]=e[t];Us.prototype[t]=function(){var e=[this._wrapped];return qo.apply(e,arguments),kl(this,i.apply(Us,e))}})),Us}rl(["pop","push","reverse","shift","sort","splice","unshift"],(function(e){var t=Uo[e];Us.prototype[e]=function(){var i=this._wrapped;return null!=i&&(t.apply(i,arguments),"shift"!==e&&"splice"!==e||0!==i.length||delete i[0]),kl(this,i)}})),rl(["concat","join","slice"],(function(e){var t=Uo[e];Us.prototype[e]=function(){var e=this._wrapped;return null!=e&&(e=t.apply(e,arguments)),kl(this,e)}}));const Fl=Object.freeze({__proto__:null,VERSION:"1.13.2",restArguments:as,isObject:ls,isNull:function(e){return null===e},isUndefined:cs,isBoolean:hs,isElement:function(e){return!(!e||1!==e.nodeType)},isString:ds,isNumber:gs,isDate:ms,isRegExp:ps,isError:fs,isSymbol:_s,isArrayBuffer:ys,isDataView:ws,isArray:Es,isFunction:xs,isArguments:Ns,isFinite:function(e){return!_s(e)&&ns(e)&&!isNaN(parseFloat(e))},isNaN:Ds,isTypedArray:Fs,isEmpty:function(e){if(null==e)return!0;var t=Gs(e);return"number"==typeof t&&(Es(e)||ds(e)||Ns(e))?0===t:0===Gs(zs(e))},isMatch:Hs,isEqual:function(e,t){return Ys(e,t)},isMap:ta,isWeakMap:ia,isSet:na,isWeakSet:ra,keys:zs,allKeys:js,values:oa,pairs:function(e){for(var t=zs(e),i=t.length,n=Array(i),r=0;r<i;r++)n[r]=[t[r],e[t[r]]];return n},invert:sa,functions:aa,methods:aa,extend:ca,extendOwn:ha,assign:ha,defaults:ua,create:function(e,t){var i=da(e);return t&&ha(i,t),i},clone:function(e){return ls(e)?Es(e)?e.slice():ca({},e):e},tap:function(e,t){return t(e),e},get:fa,has:function(e,t){for(var i=(t=ma(t)).length,n=0;n<i;n++){var r=t[n];if(!As(e,r))return!1;e=e[r]}return!!i},mapObject:function(e,t,i){t=Ia(t,i);for(var n=zs(e),r=n.length,o={},s=0;s<r;s++){var a=n[s];o[a]=t(e[a],a,e)}return o},identity:_a,constant:Rs,noop:Ta,toPath:ga,property:ba,propertyOf:function(e){return null==e?Ta:function(t){return fa(e,t)}},matcher:ya,matches:ya,times:function(e,t,i){var n=Array(Math.max(0,e));t=Ca(t,i,1);for(var r=0;r<e;r++)n[r]=t(r);return n},random:va,now:wa,escape:Ma,unescape:Na,templateSettings:Da,template:function(e,t,i){!t&&i&&(t=i),t=ua({},t,Us.templateSettings);var n=RegExp([(t.escape||Ra).source,(t.interpolate||Ra).source,(t.evaluate||Ra).source].join("|")+"|$","g"),r=0,o="__p+='";e.replace(n,(function(t,i,n,s,a){return o+=e.slice(r,a).replace(Pa,Oa),r=a+t.length,i?o+="'+\n((__t=("+i+"))==null?'':_.escape(__t))+\n'":n?o+="'+\n((__t=("+n+"))==null?'':__t)+\n'":s&&(o+="';\n"+s+"\n__p+='"),t})),o+="';\n";var s,a=t.variable;if(a){if(!ka.test(a))throw new Error("variable is not a bare identifier: "+a)}else o="with(obj||{}){\n"+o+"}\n",a="obj";o="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+o+"return __p;\n";try{s=new Function(a,"_",o)}catch(e){throw e.source=o,e}var l=function(e){return s.call(this,e,Us)};return l.source="function("+a+"){\n"+o+"}",l},result:function(e,t,i){var n=(t=ma(t)).length;if(!n)return xs(i)?i.call(e):i;for(var r=0;r<n;r++){var o=null==e?void 0:e[t[r]];void 0===o&&(o=i,r=n),e=xs(o)?o.call(e):o}return e},uniqueId:function(e){var t=++Ba+"";return e?e+t:t},chain:function(e){var t=Us(e);return t._chain=!0,t},iteratee:Sa,partial:Ga,bind:Wa,bindAll:Ua,memoize:function(e,t){var i=function(n){var r=i.cache,o=""+(t?t.apply(this,arguments):n);return As(r,o)||(r[o]=e.apply(this,arguments)),r[o]};return i.cache={},i},delay:Va,defer:Ya,throttle:function(e,t,i){var n,r,o,s,a=0;i||(i={});var l=function(){a=!1===i.leading?0:wa(),n=null,s=e.apply(r,o),n||(r=o=null)},c=function(){var c=wa();a||!1!==i.leading||(a=c);var h=t-(c-a);return r=this,o=arguments,h<=0||h>t?(n&&(clearTimeout(n),n=null),a=c,s=e.apply(r,o),n||(r=o=null)):n||!1===i.trailing||(n=setTimeout(l,h)),s};return c.cancel=function(){clearTimeout(n),a=0,n=r=o=null},c},debounce:function(e,t,i){var n,r,o,s,a,l=function(){var c=wa()-r;t>c?n=setTimeout(l,t-c):(n=null,i||(s=e.apply(a,o)),n||(o=a=null))},c=as((function(c){return a=this,o=c,r=wa(),n||(n=setTimeout(l,t),i&&(s=e.apply(a,o))),s}));return c.cancel=function(){clearTimeout(n),n=o=a=null},c},wrap:function(e,t){return Ga(t,e)},negate:qa,compose:function(){var e=arguments,t=e.length-1;return function(){for(var i=t,n=e[t].apply(this,arguments);i--;)n=e[i].call(this,n);return n}},after:function(e,t){return function(){if(--e<1)return t.apply(this,arguments)}},before:ja,once:Ka,findKey:Xa,findIndex:Za,findLastIndex:Qa,sortedIndex:$a,indexOf:tl,lastIndexOf:il,find:nl,detect:nl,findWhere:function(e,t){return nl(e,ya(t))},each:rl,forEach:rl,map:ol,collect:ol,reduce:al,foldl:al,inject:al,reduceRight:ll,foldr:ll,filter:cl,select:cl,reject:function(e,t,i){return cl(e,qa(Ia(t)),i)},every:hl,all:hl,some:ul,any:ul,contains:dl,includes:dl,include:dl,invoke:gl,pluck:ml,where:function(e,t){return cl(e,ya(t))},max:pl,min:function(e,t,i){var n,r,o=1/0,s=1/0;if(null==t||"number"==typeof t&&"object"!=typeof e[0]&&null!=e)for(var a=0,l=(e=za(e)?e:oa(e)).length;a<l;a++)null!=(n=e[a])&&n<o&&(o=n);else t=Ia(t,i),rl(e,(function(e,i,n){((r=t(e,i,n))<s||r===1/0&&o===1/0)&&(o=e,s=r)}));return o},shuffle:function(e){return yl(e,1/0)},sample:yl,sortBy:function(e,t,i){var n=0;return t=Ia(t,i),ml(ol(e,(function(e,i,r){return{value:e,index:n++,criteria:t(e,i,r)}})).sort((function(e,t){var i=e.criteria,n=t.criteria;if(i!==n){if(i>n||void 0===i)return 1;if(i<n||void 0===n)return-1}return e.index-t.index})),"value")},groupBy:Cl,indexBy:xl,countBy:Sl,partition:Il,toArray:_l,size:function(e){return null==e?0:za(e)?e.length:zs(e).length},pick:vl,omit:wl,first:Al,head:Al,take:Al,initial:El,last:function(e,t,i){return null==e||e.length<1?null==t||i?void 0:[]:null==t||i?e[e.length-1]:Ml(e,Math.max(0,e.length-t))},rest:Ml,tail:Ml,drop:Ml,compact:function(e){return cl(e,Boolean)},flatten:function(e,t){return Ha(e,t,!1)},without:Dl,uniq:Rl,unique:Rl,union:Ll,intersection:function(e){for(var t=[],i=arguments.length,n=0,r=Gs(e);n<r;n++){var o=e[n];if(!dl(t,o)){var s;for(s=1;s<i&&dl(arguments[s],o);s++);s===i&&t.push(o)}}return t},difference:Nl,unzip:Pl,transpose:Pl,zip:Ol,object:function(e,t){for(var i={},n=0,r=Gs(e);n<r;n++)t?i[e[n]]=t[n]:i[e[n][0]]=e[n][1];return i},range:function(e,t,i){null==t&&(t=e||0,e=0),i||(i=t<e?-1:1);for(var n=Math.max(Math.ceil((t-e)/i),0),r=Array(n),o=0;o<n;o++,e+=i)r[o]=e;return r},chunk:function(e,t){if(null==t||t<1)return[];for(var i=[],n=0,r=e.length;n<r;)i.push(jo.call(e,n,n+=t));return i},mixin:Bl,default:Us});var Gl=Bl(Fl);Gl._=Gl;const Wl=function(e,t,i,n){this.x=e,this.y=t,this.width=i,this.height=n};Wl.prototype.getBoundingBox=function(){return{top:this.y,right:this.x+this.width-1,bottom:this.y+this.height-1,left:this.x}},Wl.prototype.containsTile=function(e,t){const i=this.getBoundingBox();return!(e<i.left||e>i.right||t<i.top||t>i.bottom)},Wl.prototype.intersects=function(e){if(!e.getBoundingBox)throw new Error("Given entity has no method getBoundingBox");var t=this.getBoundingBox(),i=e.getBoundingBox();return!(i.left>t.right||i.right<t.left||i.top>t.bottom||i.bottom<t.top)},Wl.prototype.toJS=function(){return{x:this.x,y:this.y,width:this.width,height:this.height}};var zl=Wl;const Hl=function(e,t,i){this.type=e,this.neighbours=[],this.x=t,this.y=i};Hl.prototype.setNeighbours=function(e){return this.neighbours=e,this},Hl.prototype.toJS=function(){return{x:this.x,y:this.y,type:this.type}};var Ul=Hl;const Vl=e=>{const t=[];return e.neighbours.n&&t.push(e.neighbours.n),e.neighbours.e&&t.push(e.neighbours.e),e.neighbours.s&&t.push(e.neighbours.s),e.neighbours.w&&t.push(e.neighbours.w),t},Yl=new Wo,ql=function(){var e,t,i=[],n=-1;const r=[new zo(0,1),new zo(1,0),new zo(0,-1),new zo(-1,0)],o=t=>{e=t};let s,a=[];const l=(e,i)=>t.integer({min:e,max:i}),c=(e,t)=>a[e][t],h=t=>{let i={};var n,r;for(n=0;n<e.width;n++)for(a.push([]),r=0;r<e.height;r++)a[n].push(new Ul(t,n,r));for(n=0;n<e.width;n++)for(r=0;r<e.height;r++)i={},a[n][r-1]&&(i.n=a[n][r-1]),a[n+1]&&a[n+1][r-1]&&(i.ne=a[n+1][r-1]),a[n+1]&&a[n+1][r]&&(i.e=a[n+1][r]),a[n+1]&&a[n+1][r+1]&&(i.se=a[n+1][r+1]),a[n]&&a[n][r+1]&&(i.s=a[n][r+1]),a[n-1]&&a[n-1][r+1]&&(i.sw=a[n-1][r+1]),a[n-1]&&a[n-1][r]&&(i.w=a[n-1][r]),a[n-1]&&a[n-1][r-1]&&(i.nw=a[n-1][r-1]),a[n][r].setNeighbours(i);return a},u=()=>{const e=[],t=[];for(const t of i)e.push(t.toJS());for(let e=0;e<a.length;e++){t[e]||t.push([]);for(let i=0;i<a[e].length;i++){const n=a[e][i];t[e].push(n.toJS())}}return{tiles:t,rooms:e,seed:s}},d=(e,t)=>{var i,n=[];if(Object.keys(a[e][t].neighbours).filter((e=>"floor"===e.type)).length>0)return;b(),C(e,t),n.push(new zo(e,t));let o=0;for(;n.length&&o<500;){o++;var s=n[n.length-1],c=[];for(let e of r)y(s,e)&&c.push(e);if(c.length){var h,u=c.map((e=>e.toString()));if(i&&u.indexOf(i.toString())>-1&&l(1,100)>50)h=i.clone();else{h=c[l(0,c.length-1)].clone()}let e=s.clone().add(h).toObject();C(e.x,e.y);let t=s.clone().add(h).add(h).toObject();C(t.x,t.y),n.push(s.clone().add(h).add(h)),i=h.clone()}else n.pop(),i=null}},g=()=>{for(var t=0;t<50;t++){var n=2*l(1,3)+1,r=2*l(0,1+Math.floor(n/2)),o=n,s=n;f(2)?o+=r:s+=r,o=Math.min(o,e.width-4),s=Math.min(o,e.height-4);var a=2*l(0,Math.floor((e.width-o)/2))+1,c=2*l(0,Math.floor((e.height-s)/2))+1;a+o>e.width&&(a=Math.max(1,e.width-o-1)),c+s>e.height&&(c=Math.max(1,e.height-s-1));var h=new zl(a,c,o,s),u=!1;for(var d of i)if(h.intersects(d)){u=!0;break}u||(i.push(h),b(),m(a,c,o,s))}},m=(e,t,i,n)=>{for(var r=e;r<e+i;r++)for(var o=t;o<t+n;o++)C(r,o)},p=()=>{let e={};a.forEach((t=>{t.forEach((t=>{if("floor"===t.type)return;let i=Gl.unique(Vl(t).map((e=>e.region)).filter((e=>!Gl.isUndefined(e))));if(i.length<=1)return;let n=i.join("-");e[n]||(e[n]=[]),e[n].push(t)}))})),Gl.each(e,(e=>{let t=l(0,e.length-1);e[t].type="door",e.splice(t,1),e.forEach((e=>{f(50)&&(e.type="door")}))}))},f=e=>1===l(1,e),_=()=>{var e=!1;const t=()=>{let e=!0;return a.forEach((t=>{t.forEach((t=>{"wall"!==t.type&&Vl(t).filter((e=>"wall"!==e.type)).length<=1&&!i.find((e=>e.containsTile(t.x,t.y)))&&(t.type="wall",e=!1)}))})),e};for(;!e;)e=!0,e=t()},y=(e,t)=>{let i=e.clone().add(t).add(t).add(t).toObject();if(!a[i.x]||!a[i.x][i.y])return!1;if("wall"!==c(i.x,i.y).type)return!1;let n=e.clone().add(t).add(t).toObject();return"floor"!==c(n.x,n.y).type},b=()=>++n,C=(e,t,i="floor")=>{((e,t,i)=>{if(a[e]&&a[e][t])return a[e][t].type=i,a[e][t].region=n,a[e][t];throw new RangeError(`tile at ${e}, ${t} is unreachable`)})(e,t,i)};return{build:e=>{if(e.width<5)throw new RangeError(`DungeoneerError: options.width must not be less than 5, received ${e.width}`);if(e.height<5)throw new RangeError(`DungeoneerError: options.height must not be less than 5, received ${e.height}`);e.width%2==0&&(e.width+=1),e.height%2==0&&(e.height+=1);const n=e.seed||`${Yl.word({length:7})}-${Yl.word({length:7})}`;t=new Wo(n),s=n,o(e),h("wall"),g();for(var r=1;r<e.height;r+=2)for(var l=1;l<e.width;l+=2)"floor"!==c(l,r).type&&d(l,r);return p(),_(),{rooms:i,tiles:a,seed:n,toJS:u}}}};var jl=e=>(new ql).build(e);const Kl=2.3283064365386963e-10;class Xl{constructor(){this._seed=0,this._s0=0,this._s1=0,this._s2=0,this._c=0}getSeed(){return this._seed}setSeed(e){return e=e<1?1/e:e,this._seed=e,this._s0=(e>>>0)*Kl,e=69069*e+1>>>0,this._s1=e*Kl,e=69069*e+1>>>0,this._s2=e*Kl,this._c=1,this}getUniform(){let e=2091639*this._s0+this._c*Kl;return this._s0=this._s1,this._s1=this._s2,this._c=0|e,this._s2=e-this._c,this._s2}getUniformInt(e,t){let i=Math.max(e,t),n=Math.min(e,t);return Math.floor(this.getUniform()*(i-n+1))+n}getNormal(e=0,t=1){let i,n,r;do{i=2*this.getUniform()-1,n=2*this.getUniform()-1,r=i*i+n*n}while(r>1||0==r);return e+i*Math.sqrt(-2*Math.log(r)/r)*t}getPercentage(){return 1+Math.floor(100*this.getUniform())}getItem(e){return e.length?e[Math.floor(this.getUniform()*e.length)]:null}shuffle(e){let t=[],i=e.slice();for(;i.length;){let e=i.indexOf(this.getItem(i));t.push(i.splice(e,1)[0])}return t}getWeightedValue(e){let t=0;for(let i in e)t+=e[i];let i,n=this.getUniform()*t,r=0;for(i in e)if(r+=e[i],n<r)return i;return i}getState(){return[this._s0,this._s1,this._s2,this._c]}setState(e){return this._s0=e[0],this._s1=e[1],this._s2=e[2],this._c=e[3],this}clone(){return(new Xl).setState(this.getState())}}const Jl=(new Xl).setSeed(Date.now());(()=>{class e extends class extends class{getContainer(){return null}setOptions(e){this._options=e}}{constructor(){super(),this._ctx=document.createElement("canvas").getContext("2d")}schedule(e){requestAnimationFrame(e)}getContainer(){return this._ctx.canvas}setOptions(e){super.setOptions(e);const t=`${e.fontStyle?`${e.fontStyle} `:""} ${e.fontSize}px ${e.fontFamily}`;this._ctx.font=t,this._updateSize(),this._ctx.font=t,this._ctx.textAlign="center",this._ctx.textBaseline="middle"}clear(){this._ctx.fillStyle=this._options.bg,this._ctx.fillRect(0,0,this._ctx.canvas.width,this._ctx.canvas.height)}eventToPosition(e,t){let i=this._ctx.canvas,n=i.getBoundingClientRect();return e-=n.left,t-=n.top,e*=i.width/n.width,t*=i.height/n.height,e<0||t<0||e>=i.width||t>=i.height?[-1,-1]:this._normalizedEventToPosition(e,t)}}{constructor(){super(),this._spacingX=0,this._spacingY=0,this._canvasCache={}}setOptions(e){super.setOptions(e),this._canvasCache={}}draw(t,i){e.cache?this._drawWithCache(t):this._drawNoCache(t,i)}_drawWithCache(e){let t,[i,n,r,o,s]=e,a=""+r+o+s;if(a in this._canvasCache)t=this._canvasCache[a];else{let e=this._options.border;t=document.createElement("canvas");let i=t.getContext("2d");if(t.width=this._spacingX,t.height=this._spacingY,i.fillStyle=s,i.fillRect(e,e,t.width-e,t.height-e),r){i.fillStyle=o,i.font=this._ctx.font,i.textAlign="center",i.textBaseline="middle";let e=[].concat(r);for(let t=0;t<e.length;t++)i.fillText(e[t],this._spacingX/2,Math.ceil(this._spacingY/2))}this._canvasCache[a]=t}this._ctx.drawImage(t,i*this._spacingX,n*this._spacingY)}_drawNoCache(e,t){let[i,n,r,o,s]=e;if(t){let e=this._options.border;this._ctx.fillStyle=s,this._ctx.fillRect(i*this._spacingX+e,n*this._spacingY+e,this._spacingX-e,this._spacingY-e)}if(!r)return;this._ctx.fillStyle=o;let a=[].concat(r);for(let e=0;e<a.length;e++)this._ctx.fillText(a[e],(i+.5)*this._spacingX,Math.ceil((n+.5)*this._spacingY))}computeSize(e,t){return[Math.floor(e/this._spacingX),Math.floor(t/this._spacingY)]}computeFontSize(e,t){let i=Math.floor(e/this._options.width),n=Math.floor(t/this._options.height),r=this._ctx.font;this._ctx.font="100px "+this._options.fontFamily;let o=Math.ceil(this._ctx.measureText("W").width);this._ctx.font=r;let s=o/100*n/i;return s>1&&(n=Math.floor(n/s)),Math.floor(n/this._options.spacing)}_normalizedEventToPosition(e,t){return[Math.floor(e/this._spacingX),Math.floor(t/this._spacingY)]}_updateSize(){const e=this._options,t=Math.ceil(this._ctx.measureText("W").width);this._spacingX=Math.ceil(e.spacing*t),this._spacingY=Math.ceil(e.spacing*e.fontSize),e.forceSquareRatio&&(this._spacingX=this._spacingY=Math.max(this._spacingX,this._spacingY)),this._ctx.canvas.width=e.width*this._spacingX,this._ctx.canvas.height=e.height*this._spacingY}}e.cache=!1})();const Zl={4:[[0,-1],[1,0],[0,1],[-1,0]],8:[[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1]],6:[[-1,-1],[1,-1],[2,0],[1,1],[-1,1],[-2,0]]};class Ql{constructor(e=80,t=25){this._width=e,this._height=t}_fillMap(e){let t=[];for(let i=0;i<this._width;i++){t.push([]);for(let n=0;n<this._height;n++)t[i].push(e)}return t}}class $l extends Ql{constructor(e,t){super(e,t),this._rooms=[],this._corridors=[]}getRooms(){return this._rooms}getCorridors(){return this._corridors}}class ec{}class tc extends ec{constructor(e,t,i,n,r,o){super(),this._x1=e,this._y1=t,this._x2=i,this._y2=n,this._doors={},void 0!==r&&void 0!==o&&this.addDoor(r,o)}static createRandomAt(e,t,i,n,r){let o=r.roomWidth[0],s=r.roomWidth[1],a=Jl.getUniformInt(o,s);o=r.roomHeight[0],s=r.roomHeight[1];let l=Jl.getUniformInt(o,s);if(1==i){let i=t-Math.floor(Jl.getUniform()*l);return new this(e+1,i,e+a,i+l-1,e,t)}if(-1==i){let i=t-Math.floor(Jl.getUniform()*l);return new this(e-a,i,e-1,i+l-1,e,t)}if(1==n){let i=e-Math.floor(Jl.getUniform()*a);return new this(i,t+1,i+a-1,t+l,e,t)}if(-1==n){let i=e-Math.floor(Jl.getUniform()*a);return new this(i,t-l,i+a-1,t-1,e,t)}throw new Error("dx or dy must be 1 or -1")}static createRandomCenter(e,t,i){let n=i.roomWidth[0],r=i.roomWidth[1],o=Jl.getUniformInt(n,r);n=i.roomHeight[0],r=i.roomHeight[1];let s=Jl.getUniformInt(n,r),a=e-Math.floor(Jl.getUniform()*o),l=t-Math.floor(Jl.getUniform()*s);return new this(a,l,a+o-1,l+s-1)}static createRandom(e,t,i){let n=i.roomWidth[0],r=i.roomWidth[1],o=Jl.getUniformInt(n,r);n=i.roomHeight[0],r=i.roomHeight[1];let s=Jl.getUniformInt(n,r),a=e-o-1,l=t-s-1,c=1+Math.floor(Jl.getUniform()*a),h=1+Math.floor(Jl.getUniform()*l);return new this(c,h,c+o-1,h+s-1)}addDoor(e,t){return this._doors[e+","+t]=1,this}getDoors(e){for(let t in this._doors){let i=t.split(",");e(parseInt(i[0]),parseInt(i[1]))}return this}clearDoors(){return this._doors={},this}addDoors(e){let t=this._x1-1,i=this._x2+1,n=this._y1-1,r=this._y2+1;for(let o=t;o<=i;o++)for(let s=n;s<=r;s++)o!=t&&o!=i&&s!=n&&s!=r||e(o,s)||this.addDoor(o,s);return this}debug(){console.log("room",this._x1,this._y1,this._x2,this._y2)}isValid(e,t){let i=this._x1-1,n=this._x2+1,r=this._y1-1,o=this._y2+1;for(let s=i;s<=n;s++)for(let a=r;a<=o;a++)if(s==i||s==n||a==r||a==o){if(!e(s,a))return!1}else if(!t(s,a))return!1;return!0}create(e){let t=this._x1-1,i=this._x2+1,n=this._y1-1,r=this._y2+1,o=0;for(let s=t;s<=i;s++)for(let a=n;a<=r;a++)o=s+","+a in this._doors?2:s==t||s==i||a==n||a==r?1:0,e(s,a,o)}getCenter(){return[Math.round((this._x1+this._x2)/2),Math.round((this._y1+this._y2)/2)]}getLeft(){return this._x1}getRight(){return this._x2}getTop(){return this._y1}getBottom(){return this._y2}}class ic extends ec{constructor(e,t,i,n){super(),this._startX=e,this._startY=t,this._endX=i,this._endY=n,this._endsWithAWall=!0}static createRandomAt(e,t,i,n,r){let o=r.corridorLength[0],s=r.corridorLength[1],a=Jl.getUniformInt(o,s);return new this(e,t,e+i*a,t+n*a)}debug(){console.log("corridor",this._startX,this._startY,this._endX,this._endY)}isValid(e,t){let i=this._startX,n=this._startY,r=this._endX-i,o=this._endY-n,s=1+Math.max(Math.abs(r),Math.abs(o));r&&(r/=Math.abs(r)),o&&(o/=Math.abs(o));let a=o,l=-r,c=!0;for(let h=0;h<s;h++){let u=i+h*r,d=n+h*o;if(t(u,d)||(c=!1),e(u+a,d+l)||(c=!1),e(u-a,d-l)||(c=!1),!c){s=h,this._endX=u-r,this._endY=d-o;break}}if(0==s)return!1;if(1==s&&e(this._endX+r,this._endY+o))return!1;let h=!e(this._endX+r+a,this._endY+o+l),u=!e(this._endX+r-a,this._endY+o-l);return this._endsWithAWall=e(this._endX+r,this._endY+o),!h&&!u||!this._endsWithAWall}create(e){let t=this._startX,i=this._startY,n=this._endX-t,r=this._endY-i,o=1+Math.max(Math.abs(n),Math.abs(r));n&&(n/=Math.abs(n)),r&&(r/=Math.abs(r));for(let s=0;s<o;s++){e(t+s*n,i+s*r,0)}return!0}createPriorityWalls(e){if(!this._endsWithAWall)return;let t=this._startX,i=this._startY,n=this._endX-t,r=this._endY-i;n&&(n/=Math.abs(n)),r&&(r/=Math.abs(r));let o=r,s=-n;e(this._endX+n,this._endY+r),e(this._endX+o,this._endY+s),e(this._endX-o,this._endY-s)}}const nc={room:tc,corridor:ic};function rc(e,t,i){i[t[e+1]]=i[e],t[i[e]]=t[e+1],i[e]=e+1,t[e+1]=e}function oc(e,t,i){i[t[e]]=i[e],t[i[e]]=t[e],i[e]=e,t[e]=e}const sc={Arena:class extends Ql{create(e){let t=this._width-1,i=this._height-1;for(let n=0;n<=t;n++)for(let r=0;r<=i;r++){e(n,r,n&&r&&n<t&&r<i?0:1)}return this}},Uniform:class extends $l{constructor(e,t,i){super(e,t),this._options={roomWidth:[3,9],roomHeight:[3,5],roomDugPercentage:.1,timeLimit:1e3},Object.assign(this._options,i),this._map=[],this._dug=0,this._roomAttempts=20,this._corridorAttempts=20,this._connected=[],this._unconnected=[],this._digCallback=this._digCallback.bind(this),this._canBeDugCallback=this._canBeDugCallback.bind(this),this._isWallCallback=this._isWallCallback.bind(this)}create(e){let t=Date.now();for(;;){if(Date.now()-t>this._options.timeLimit)return null;if(this._map=this._fillMap(1),this._dug=0,this._rooms=[],this._unconnected=[],this._generateRooms(),!(this._rooms.length<2)&&this._generateCorridors())break}if(e)for(let t=0;t<this._width;t++)for(let i=0;i<this._height;i++)e(t,i,this._map[t][i]);return this}_generateRooms(){let e,t=this._width-2,i=this._height-2;do{if(e=this._generateRoom(),this._dug/(t*i)>this._options.roomDugPercentage)break}while(e)}_generateRoom(){let e=0;for(;e<this._roomAttempts;){e++;let t=tc.createRandom(this._width,this._height,this._options);if(t.isValid(this._isWallCallback,this._canBeDugCallback))return t.create(this._digCallback),this._rooms.push(t),t}return null}_generateCorridors(){let e=0;for(;e<this._corridorAttempts;){e++,this._corridors=[],this._map=this._fillMap(1);for(let e=0;e<this._rooms.length;e++){let t=this._rooms[e];t.clearDoors(),t.create(this._digCallback)}for(this._unconnected=Jl.shuffle(this._rooms.slice()),this._connected=[],this._unconnected.length&&this._connected.push(this._unconnected.pop());;){let e=Jl.getItem(this._connected);if(!e)break;let t=this._closestRoom(this._unconnected,e);if(!t)break;let i=this._closestRoom(this._connected,t);if(!i)break;if(!this._connectRooms(t,i))break;if(!this._unconnected.length)return!0}}return!1}_closestRoom(e,t){let i=1/0,n=t.getCenter(),r=null;for(let t=0;t<e.length;t++){let o=e[t],s=o.getCenter(),a=s[0]-n[0],l=s[1]-n[1],c=a*a+l*l;c<i&&(i=c,r=o)}return r}_connectRooms(e,t){let i,n,r,o,s,a,l,c=e.getCenter(),h=t.getCenter(),u=h[0]-c[0],d=h[1]-c[1];if(Math.abs(u)<Math.abs(d)?(r=d>0?2:0,o=(r+2)%4,s=t.getLeft(),a=t.getRight(),l=0):(r=u>0?1:3,o=(r+2)%4,s=t.getTop(),a=t.getBottom(),l=1),i=this._placeInWall(e,r),!i)return!1;if(i[l]>=s&&i[l]<=a){n=i.slice();let e=0;switch(o){case 0:e=t.getTop()-1;break;case 1:e=t.getRight()+1;break;case 2:e=t.getBottom()+1;break;case 3:e=t.getLeft()-1}n[(l+1)%2]=e,this._digLine([i,n])}else if(i[l]<s-1||i[l]>a+1){let e=i[l]-h[l],r=0;switch(o){case 0:case 1:r=e<0?3:1;break;case 2:case 3:r=e<0?1:3}if(o=(o+r)%4,n=this._placeInWall(t,o),!n)return!1;let s=[0,0];s[l]=i[l];let a=(l+1)%2;s[a]=n[a],this._digLine([i,s,n])}else{let e=(l+1)%2;if(n=this._placeInWall(t,o),!n)return!1;let r=Math.round((n[e]+i[e])/2),s=[0,0],a=[0,0];s[l]=i[l],s[e]=r,a[l]=n[l],a[e]=r,this._digLine([i,s,a,n])}return e.addDoor(i[0],i[1]),t.addDoor(n[0],n[1]),l=this._unconnected.indexOf(e),-1!=l&&(this._unconnected.splice(l,1),this._connected.push(e)),l=this._unconnected.indexOf(t),-1!=l&&(this._unconnected.splice(l,1),this._connected.push(t)),!0}_placeInWall(e,t){let i=[0,0],n=[0,0],r=0;switch(t){case 0:n=[1,0],i=[e.getLeft(),e.getTop()-1],r=e.getRight()-e.getLeft()+1;break;case 1:n=[0,1],i=[e.getRight()+1,e.getTop()],r=e.getBottom()-e.getTop()+1;break;case 2:n=[1,0],i=[e.getLeft(),e.getBottom()+1],r=e.getRight()-e.getLeft()+1;break;case 3:n=[0,1],i=[e.getLeft()-1,e.getTop()],r=e.getBottom()-e.getTop()+1}let o=[],s=-2;for(let e=0;e<r;e++){let t=i[0]+e*n[0],r=i[1]+e*n[1];o.push(null),1==this._map[t][r]?s!=e-1&&(o[e]=[t,r]):(s=e,e&&(o[e-1]=null))}for(let e=o.length-1;e>=0;e--)o[e]||o.splice(e,1);return o.length?Jl.getItem(o):null}_digLine(e){for(let t=1;t<e.length;t++){let i=e[t-1],n=e[t],r=new ic(i[0],i[1],n[0],n[1]);r.create(this._digCallback),this._corridors.push(r)}}_digCallback(e,t,i){this._map[e][t]=i,0==i&&this._dug++}_isWallCallback(e,t){return!(e<0||t<0||e>=this._width||t>=this._height)&&1==this._map[e][t]}_canBeDugCallback(e,t){return!(e<1||t<1||e+1>=this._width||t+1>=this._height)&&1==this._map[e][t]}},Cellular:class extends Ql{constructor(e,t,i={}){super(e,t),this._options={born:[5,6,7,8],survive:[4,5,6,7,8],topology:8},this.setOptions(i),this._dirs=Zl[this._options.topology],this._map=this._fillMap(0)}randomize(e){for(let t=0;t<this._width;t++)for(let i=0;i<this._height;i++)this._map[t][i]=Jl.getUniform()<e?1:0;return this}setOptions(e){Object.assign(this._options,e)}set(e,t,i){this._map[e][t]=i}create(e){let t=this._fillMap(0),i=this._options.born,n=this._options.survive;for(let e=0;e<this._height;e++){let r=1,o=0;6==this._options.topology&&(r=2,o=e%2);for(let s=o;s<this._width;s+=r){let r=this._map[s][e],o=this._getNeighbors(s,e);r&&-1!=n.indexOf(o)?t[s][e]=1:r||-1==i.indexOf(o)||(t[s][e]=1)}}this._map=t,e&&this._serviceCallback(e)}_serviceCallback(e){for(let t=0;t<this._height;t++){let i=1,n=0;6==this._options.topology&&(i=2,n=t%2);for(let r=n;r<this._width;r+=i)e(r,t,this._map[r][t])}}_getNeighbors(e,t){let i=0;for(let n=0;n<this._dirs.length;n++){let r=this._dirs[n],o=e+r[0],s=t+r[1];o<0||o>=this._width||s<0||s>=this._height||(i+=1==this._map[o][s]?1:0)}return i}connect(e,t,i){t||(t=0);let n=[],r={},o=1,s=[0,0];6==this._options.topology&&(o=2,s=[0,1]);for(let e=0;e<this._height;e++)for(let i=s[e%2];i<this._width;i+=o)if(this._freeSpace(i,e,t)){let t=[i,e];r[this._pointKey(t)]=t,n.push([i,e])}let a=n[Jl.getUniformInt(0,n.length-1)],l=this._pointKey(a),c={};for(c[l]=a,delete r[l],this._findConnected(c,r,[a],!1,t);Object.keys(r).length>0;){let e=this._getFromTo(c,r),n=e[0],o=e[1],s={};s[this._pointKey(n)]=n,this._findConnected(s,r,[n],!0,t),(6==this._options.topology?this._tunnelToConnected6:this._tunnelToConnected).call(this,o,n,c,r,t,i);for(let e in s){let i=s[e];this._map[i[0]][i[1]]=t,c[e]=i,delete r[e]}}e&&this._serviceCallback(e)}_getFromTo(e,t){let i,n=[0,0],r=[0,0],o=Object.keys(e),s=Object.keys(t);for(let a=0;a<5;a++){if(o.length<s.length){let i=o;r=e[i[Jl.getUniformInt(0,i.length-1)]],n=this._getClosest(r,t)}else{let i=s;n=t[i[Jl.getUniformInt(0,i.length-1)]],r=this._getClosest(n,e)}if(i=(n[0]-r[0])*(n[0]-r[0])+(n[1]-r[1])*(n[1]-r[1]),i<64)break}return[n,r]}_getClosest(e,t){let i=null,n=null;for(let r in t){let o=t[r],s=(o[0]-e[0])*(o[0]-e[0])+(o[1]-e[1])*(o[1]-e[1]);(null==n||s<n)&&(n=s,i=o)}return i}_findConnected(e,t,i,n,r){for(;i.length>0;){let o,s=i.splice(0,1)[0];o=6==this._options.topology?[[s[0]+2,s[1]],[s[0]+1,s[1]-1],[s[0]-1,s[1]-1],[s[0]-2,s[1]],[s[0]-1,s[1]+1],[s[0]+1,s[1]+1]]:[[s[0]+1,s[1]],[s[0]-1,s[1]],[s[0],s[1]+1],[s[0],s[1]-1]];for(let s=0;s<o.length;s++){let a=this._pointKey(o[s]);null==e[a]&&this._freeSpace(o[s][0],o[s][1],r)&&(e[a]=o[s],n||delete t[a],i.push(o[s]))}}}_tunnelToConnected(e,t,i,n,r,o){let s,a;t[0]<e[0]?(s=t,a=e):(s=e,a=t);for(let e=s[0];e<=a[0];e++){this._map[e][s[1]]=r;let t=[e,s[1]],o=this._pointKey(t);i[o]=t,delete n[o]}o&&s[0]<a[0]&&o(s,[a[0],s[1]]);let l=a[0];t[1]<e[1]?(s=t,a=e):(s=e,a=t);for(let e=s[1];e<a[1];e++){this._map[l][e]=r;let t=[l,e],o=this._pointKey(t);i[o]=t,delete n[o]}o&&s[1]<a[1]&&o([a[0],s[1]],[a[0],a[1]])}_tunnelToConnected6(e,t,i,n,r,o){let s,a;t[0]<e[0]?(s=t,a=e):(s=e,a=t);let l=s[0],c=s[1];for(;l!=a[0]||c!=a[1];){let e=2;c<a[1]?(c++,e=1):c>a[1]&&(c--,e=1),l<a[0]?l+=e:l>a[0]||a[1]%2?l-=e:l+=e,this._map[l][c]=r;let t=[l,c],o=this._pointKey(t);i[o]=t,delete n[o]}o&&o(t,e)}_freeSpace(e,t,i){return e>=0&&e<this._width&&t>=0&&t<this._height&&this._map[e][t]==i}_pointKey(e){return e[0]+"."+e[1]}},Digger:class extends $l{constructor(e,t,i={}){super(e,t),this._options=Object.assign({roomWidth:[3,9],roomHeight:[3,5],corridorLength:[3,10],dugPercentage:.2,timeLimit:1e3},i),this._features={room:4,corridor:4},this._map=[],this._featureAttempts=20,this._walls={},this._dug=0,this._digCallback=this._digCallback.bind(this),this._canBeDugCallback=this._canBeDugCallback.bind(this),this._isWallCallback=this._isWallCallback.bind(this),this._priorityWallCallback=this._priorityWallCallback.bind(this)}create(e){this._rooms=[],this._corridors=[],this._map=this._fillMap(1),this._walls={},this._dug=0;let t=(this._width-2)*(this._height-2);this._firstRoom();let i,n=Date.now();do{if(i=0,Date.now()-n>this._options.timeLimit)break;let e=this._findWall();if(!e)break;let t=e.split(","),r=parseInt(t[0]),o=parseInt(t[1]),s=this._getDiggingDirection(r,o);if(!s)continue;let a=0;do{if(a++,this._tryFeature(r,o,s[0],s[1])){this._removeSurroundingWalls(r,o),this._removeSurroundingWalls(r-s[0],o-s[1]);break}}while(a<this._featureAttempts);for(let e in this._walls)this._walls[e]>1&&i++}while(this._dug/t<this._options.dugPercentage||i);if(this._addDoors(),e)for(let t=0;t<this._width;t++)for(let i=0;i<this._height;i++)e(t,i,this._map[t][i]);return this._walls={},this._map=[],this}_digCallback(e,t,i){0==i||2==i?(this._map[e][t]=0,this._dug++):this._walls[e+","+t]=1}_isWallCallback(e,t){return!(e<0||t<0||e>=this._width||t>=this._height)&&1==this._map[e][t]}_canBeDugCallback(e,t){return!(e<1||t<1||e+1>=this._width||t+1>=this._height)&&1==this._map[e][t]}_priorityWallCallback(e,t){this._walls[e+","+t]=2}_firstRoom(){let e=Math.floor(this._width/2),t=Math.floor(this._height/2),i=tc.createRandomCenter(e,t,this._options);this._rooms.push(i),i.create(this._digCallback)}_findWall(){let e=[],t=[];for(let i in this._walls){2==this._walls[i]?t.push(i):e.push(i)}let i=t.length?t:e;if(!i.length)return null;let n=Jl.getItem(i.sort());return delete this._walls[n],n}_tryFeature(e,t,i,n){let r=Jl.getWeightedValue(this._features),o=nc[r].createRandomAt(e,t,i,n,this._options);return!!o.isValid(this._isWallCallback,this._canBeDugCallback)&&(o.create(this._digCallback),o instanceof tc&&this._rooms.push(o),o instanceof ic&&(o.createPriorityWalls(this._priorityWallCallback),this._corridors.push(o)),!0)}_removeSurroundingWalls(e,t){let i=Zl[4];for(let n=0;n<i.length;n++){let r=i[n],o=e+r[0],s=t+r[1];delete this._walls[o+","+s],o=e+2*r[0],s=t+2*r[1],delete this._walls[o+","+s]}}_getDiggingDirection(e,t){if(e<=0||t<=0||e>=this._width-1||t>=this._height-1)return null;let i=null,n=Zl[4];for(let r=0;r<n.length;r++){let o=n[r],s=e+o[0],a=t+o[1];if(!this._map[s][a]){if(i)return null;i=o}}return i?[-i[0],-i[1]]:null}_addDoors(){let e=this._map;function t(t,i){return 1==e[t][i]}for(let e=0;e<this._rooms.length;e++){let i=this._rooms[e];i.clearDoors(),i.addDoors(t)}}},EllerMaze:class extends Ql{create(e){let t,i=this._fillMap(1),n=Math.ceil((this._width-2)/2),r=9/24,o=[],s=[];for(let e=0;e<n;e++)o.push(e),s.push(e);for(o.push(n-1),t=1;t+3<this._height;t+=2)for(let e=0;e<n;e++){let n=2*e+1,a=t;i[n][a]=0,e!=o[e+1]&&Jl.getUniform()>r&&(rc(e,o,s),i[n+1][a]=0),e!=o[e]&&Jl.getUniform()>r?oc(e,o,s):i[n][a+1]=0}for(let e=0;e<n;e++){let n=2*e+1,a=t;i[n][a]=0,e!=o[e+1]&&(e==o[e]||Jl.getUniform()>r)&&(rc(e,o,s),i[n+1][a]=0),oc(e,o,s)}for(let t=0;t<this._width;t++)for(let n=0;n<this._height;n++)e(t,n,i[t][n]);return this}},DividedMaze:class extends Ql{constructor(){super(...arguments),this._stack=[],this._map=[]}create(e){let t=this._width,i=this._height;this._map=[];for(let e=0;e<t;e++){this._map.push([]);for(let n=0;n<i;n++){let r=0==e||0==n||e+1==t||n+1==i;this._map[e].push(r?1:0)}}this._stack=[[1,1,t-2,i-2]],this._process();for(let n=0;n<t;n++)for(let t=0;t<i;t++)e(n,t,this._map[n][t]);return this._map=[],this}_process(){for(;this._stack.length;){let e=this._stack.shift();this._partitionRoom(e)}}_partitionRoom(e){let t=[],i=[];for(let i=e[0]+1;i<e[2];i++){let n=this._map[i][e[1]-1],r=this._map[i][e[3]+1];!n||!r||i%2||t.push(i)}for(let t=e[1]+1;t<e[3];t++){let n=this._map[e[0]-1][t],r=this._map[e[2]+1][t];!n||!r||t%2||i.push(t)}if(!t.length||!i.length)return;let n=Jl.getItem(t),r=Jl.getItem(i);this._map[n][r]=1;let o=[],s=[];o.push(s);for(let t=e[0];t<n;t++)this._map[t][r]=1,t%2&&s.push([t,r]);s=[],o.push(s);for(let t=n+1;t<=e[2];t++)this._map[t][r]=1,t%2&&s.push([t,r]);s=[],o.push(s);for(let t=e[1];t<r;t++)this._map[n][t]=1,t%2&&s.push([n,t]);s=[],o.push(s);for(let t=r+1;t<=e[3];t++)this._map[n][t]=1,t%2&&s.push([n,t]);let a=Jl.getItem(o);for(let e=0;e<o.length;e++){let t=o[e];if(t==a)continue;let i=Jl.getItem(t);this._map[i[0]][i[1]]=0}this._stack.push([e[0],e[1],n-1,r-1]),this._stack.push([n+1,e[1],e[2],r-1]),this._stack.push([e[0],r+1,n-1,e[3]]),this._stack.push([n+1,r+1,e[2],e[3]])}},IceyMaze:class extends Ql{constructor(e,t,i=0){super(e,t),this._regularity=i,this._map=[]}create(e){let t=this._width,i=this._height,n=this._fillMap(1);t-=t%2?1:2,i-=i%2?1:2;let r=0,o=0,s=0,a=0,l=0,c=!1,h=[[0,0],[0,0],[0,0],[0,0]];do{if(r=1+2*Math.floor(Jl.getUniform()*(t-1)/2),o=1+2*Math.floor(Jl.getUniform()*(i-1)/2),l||(n[r][o]=0),!n[r][o]){this._randomize(h);do{0==Math.floor(Jl.getUniform()*(this._regularity+1))&&this._randomize(h),c=!0;for(let e=0;e<4;e++)if(s=r+2*h[e][0],a=o+2*h[e][1],this._isFree(n,s,a,t,i)){n[s][a]=0,n[r+h[e][0]][o+h[e][1]]=0,r=s,o=a,c=!1,l++;break}}while(!c)}}while(l+1<t*i/4);for(let t=0;t<this._width;t++)for(let i=0;i<this._height;i++)e(t,i,n[t][i]);return this._map=[],this}_randomize(e){for(let t=0;t<4;t++)e[t][0]=0,e[t][1]=0;switch(Math.floor(4*Jl.getUniform())){case 0:e[0][0]=-1,e[1][0]=1,e[2][1]=-1,e[3][1]=1;break;case 1:e[3][0]=-1,e[2][0]=1,e[1][1]=-1,e[0][1]=1;break;case 2:e[2][0]=-1,e[3][0]=1,e[0][1]=-1,e[1][1]=1;break;case 3:e[1][0]=-1,e[0][0]=1,e[3][1]=-1,e[2][1]=1}}_isFree(e,t,i,n,r){return!(t<1||i<1||t>=n||i>=r)&&e[t][i]}},Rogue:class extends Ql{constructor(e,t,i){super(e,t),this.map=[],this.rooms=[],this.connectedCells=[],(i=Object.assign({cellWidth:3,cellHeight:3},i)).hasOwnProperty("roomWidth")||(i.roomWidth=this._calculateRoomSize(this._width,i.cellWidth)),i.hasOwnProperty("roomHeight")||(i.roomHeight=this._calculateRoomSize(this._height,i.cellHeight)),this._options=i}create(e){if(this.map=this._fillMap(1),this.rooms=[],this.connectedCells=[],this._initRooms(),this._connectRooms(),this._connectUnconnectedRooms(),this._createRandomRoomConnections(),this._createRooms(),this._createCorridors(),e)for(let t=0;t<this._width;t++)for(let i=0;i<this._height;i++)e(t,i,this.map[t][i]);return this}_calculateRoomSize(e,t){let i=Math.floor(e/t*.8),n=Math.floor(e/t*.25);return n<2&&(n=2),i<2&&(i=2),[n,i]}_initRooms(){for(let e=0;e<this._options.cellWidth;e++){this.rooms.push([]);for(let t=0;t<this._options.cellHeight;t++)this.rooms[e].push({x:0,y:0,width:0,height:0,connections:[],cellx:e,celly:t})}}_connectRooms(){let e,t,i,n,r,o,s=Jl.getUniformInt(0,this._options.cellWidth-1),a=Jl.getUniformInt(0,this._options.cellHeight-1),l=!1;do{o=[0,2,4,6],o=Jl.shuffle(o);do{if(l=!1,e=o.pop(),t=s+Zl[8][e][0],i=a+Zl[8][e][1],!(t<0||t>=this._options.cellWidth||i<0||i>=this._options.cellHeight)){if(n=this.rooms[s][a],n.connections.length>0&&n.connections[0][0]==t&&n.connections[0][1]==i)break;r=this.rooms[t][i],0==r.connections.length&&(r.connections.push([s,a]),this.connectedCells.push([t,i]),s=t,a=i,l=!0)}}while(o.length>0&&0==l)}while(o.length>0)}_connectUnconnectedRooms(){let e,t,i,n=this._options.cellWidth,r=this._options.cellHeight;this.connectedCells=Jl.shuffle(this.connectedCells);for(let o=0;o<this._options.cellWidth;o++)for(let s=0;s<this._options.cellHeight;s++)if(e=this.rooms[o][s],0==e.connections.length){let a=[0,2,4,6];a=Jl.shuffle(a),i=!1;do{let e=a.pop(),l=o+Zl[8][e][0],c=s+Zl[8][e][1];if(!(l<0||l>=n||c<0||c>=r)){if(t=this.rooms[l][c],i=!0,0==t.connections.length)break;for(let e=0;e<t.connections.length;e++)if(t.connections[e][0]==o&&t.connections[e][1]==s){i=!1;break}if(i)break}}while(a.length);i?e.connections.push([t.cellx,t.celly]):console.log("-- Unable to connect room.")}}_createRandomRoomConnections(){}_createRooms(){let e,t,i,n,r,o=this._width,s=this._height,a=this._options.cellWidth,l=this._options.cellHeight,c=Math.floor(this._width/a),h=Math.floor(this._height/l),u=this._options.roomWidth,d=this._options.roomHeight;for(let g=0;g<a;g++)for(let a=0;a<l;a++){if(i=c*g,n=h*a,0==i&&(i=1),0==n&&(n=1),e=Jl.getUniformInt(u[0],u[1]),t=Jl.getUniformInt(d[0],d[1]),a>0)for(r=this.rooms[g][a-1];n-(r.y+r.height)<3;)n++;if(g>0)for(r=this.rooms[g-1][a];i-(r.x+r.width)<3;)i++;let l=Math.round(Jl.getUniformInt(0,c-e)/2),m=Math.round(Jl.getUniformInt(0,h-t)/2);for(;i+l+e>=o;)l?l--:e--;for(;n+m+t>=s;)m?m--:t--;i+=l,n+=m,this.rooms[g][a].x=i,this.rooms[g][a].y=n,this.rooms[g][a].width=e,this.rooms[g][a].height=t;for(let r=i;r<i+e;r++)for(let e=n;e<n+t;e++)this.map[r][e]=0}}_getWallPosition(e,t){let i,n,r;return 1==t||3==t?(i=Jl.getUniformInt(e.x+1,e.x+e.width-2),1==t?(n=e.y-2,r=n+1):(n=e.y+e.height+1,r=n-1),this.map[i][r]=0):(n=Jl.getUniformInt(e.y+1,e.y+e.height-2),2==t?(i=e.x+e.width+1,r=i-1):(i=e.x-2,r=i+1),this.map[r][n]=0),[i,n]}_drawCorridor(e,t){let i,n,r,o,s=t[0]-e[0],a=t[1]-e[1],l=e[0],c=e[1],h=[],u=Math.abs(s),d=Math.abs(a),g=Jl.getUniform(),m=g,p=1-g;for(n=s>0?2:6,r=a>0?4:0,u<d?(i=Math.ceil(d*m),h.push([r,i]),h.push([n,u]),i=Math.floor(d*p),h.push([r,i])):(i=Math.ceil(u*m),h.push([n,i]),h.push([r,d]),i=Math.floor(u*p),h.push([n,i])),this.map[l][c]=0;h.length>0;)for(o=h.pop();o[1]>0;)l+=Zl[8][o[0]][0],c+=Zl[8][o[0]][1],this.map[l][c]=0,o[1]=o[1]-1}_createCorridors(){let e,t,i,n,r,o=this._options.cellWidth,s=this._options.cellHeight;for(let a=0;a<o;a++)for(let o=0;o<s;o++){e=this.rooms[a][o];for(let o=0;o<e.connections.length;o++)t=e.connections[o],i=this.rooms[t[0]][t[1]],i.cellx>e.cellx?(n=2,r=4):i.cellx<e.cellx?(n=4,r=2):i.celly>e.celly?(n=3,r=1):(n=1,r=3),this._drawCorridor(this._getWallPosition(e,n),this._getWallPosition(i,r))}}}},ac=()=>Math.ceil(canvas.scene.width*canvas.scene.padding/canvas.scene.grid.size)*canvas.scene.grid.size,lc=()=>Math.ceil(canvas.scene.height*canvas.scene.padding/canvas.scene.grid.size)*canvas.scene.grid.size,cc=async(e,t)=>{const i=1*t.height,n=1*t.width,r=new sc.Cellular(n,i);r.randomize(.5);for(let e=0;e<4;e++)r.create();t.connectCaves&&r.connect(null,1);const o=canvas.scene.grid.size/1,s=ac(),a=lc();let l;for(let e=0;e<i;e++)for(let t=0;t<n;t++)if(r._map[e][t]){const i=Mr({x:s+t*o,y:a+e*o,height:o,width:o});l=l?vr(l,i):i}if(l=Gr(l),t.smoothing)for(let e=0;e<t.smoothing;e++)l=Wr(l);const c=e.state().clone();c.geometry=l,await e.pushState(c)},hc=async(e,t)=>{const i=t.height,n=t.width,r=new Go({max_iterations:50,size:[n,i],rooms:{any:{min_size:[t.minRoomSize,t.minRoomSize],max_size:[t.maxRoomSize,t.maxRoomSize],max_exits:4}},min_corridor_length:2,max_corridor_length:8,corridor_density:.5,symmetric_rooms:t.centerExits,interconnects:t.circularPaths?1:0,max_interconnect_length:10,room_count:t.roomCount});r.generate();const o=canvas.scene.grid.size,s=ac(),a=lc();let l;for(let e=0;e<n;e++)for(let t=0;t<i;t++){if(!1===r.walls.get([e,t])){const i=Mr({x:s+e*o,y:a+t*o,height:o,width:o});l=l?vr(l,i):i}}l=Gr(l);const c=[];for(const e of r.children)if(1!==e.room_size[0]&&1!==e.room_size[1])for(const t of e.exits){const[[i,n],r]=t,l=e.position[0]+i,h=e.position[1]+n;90===r?c.push([s+(l+1)*o,a+h*o,s+(l+1)*o,a+(h+1)*o]):270===r?c.push([s+l*o,a+h*o,s+l*o,a+(h+1)*o]):0===r?c.push([s+l*o,a+h*o,s+(l+1)*o,a+h*o]):180===r&&c.push([s+l*o,a+(h+1)*o,s+(l+1)*o,a+(h+1)*o])}const h=e.state().clone();h.geometry=l,h.doors=t.generate2DDungeonDoors?c:[],await e.pushState(h)},uc=async(e,t)=>{const i=jl({width:t.width,height:t.height}),n=canvas.scene.grid.size,r=ac(),o=lc();let s;const a=[];for(const e of i.tiles)for(const t of e){if("floor"===t.type||"door"===t.type){const e={x:r+t.x*n,y:o+t.y*n,height:n,width:n},i=Mr(e);s=s?vr(s,i):i}"door"===t.type&&("floor"===t.neighbours.w?.type?a.push([r+(t.x+.5)*n,o+t.y*n,r+(t.x+.5)*n,o+(t.y+1)*n]):a.push([r+t.x*n,o+(t.y+.5)*n,r+(t.x+1)*n,o+(t.y+.5)*n]))}s=Gr(s);const l=e.state().clone();l.geometry=s,l.doors=t.generateDungeoneerDoors?a:[],await e.pushState(l)},dc=()=>KeyboardManager.MODIFIER_KEYS?.SHIFT?game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.SHIFT):game.keyboard.isDown("SHIFT"),gc=async()=>{let e=game.folders.filter((e=>"JournalEntry"===e.type&&"Dungeon Draw"===e.name)).pop();e||(e=await Folder.create({name:"Dungeon Draw",type:"JournalEntry"}));return await JournalEntry.create({name:canvas.scene.name,folder:e.id,flags:{"dungeon-draw":{dungeonVersion:"1.0"}}})},mc=async e=>{await canvas.scene.createEmbeddedDocuments("Note",[{entryId:e.id,fontSize:20,icon:"icons/svg/cave.svg",iconSize:32,textAnchor:1,textColor:"#FFFFFF",x:50,y:50,iconTint:"",text:"Dungeon Draw",flags:{}}])},pc=e=>{const t=[];for(let i=0;i<=e.shape.points.length-2;i+=2)t.push([e.shape.points[i]+e.x,e.shape.points[i+1]+e.y]);return t};class fc extends PlaceablesLayer{static LAYER_NAME="dungeon";constructor(){super(),this.dungeon=null}static get layerOptions(){return foundry.utils.mergeObject(super.layerOptions,{name:fc.LAYER_NAME,canDragCreate:!0,snapToGrid:t.snapToGrid(),zIndex:-1,quadtree:!0})}static documentName="Drawing";_getNewDrawingData(e){const t={fillColor:game.user.color,strokeColor:game.user.color,strokeWidth:8};if(t.x=e.x,t.y=e.y,t.author=game.user.id,t.shape={},"add"===game.activeDungeonDrawMode)switch(game.activeDungeonDrawTool){case"rectangle":t.shape.type=CONST.DRAWING_TYPES.RECTANGLE,t.shape.width=1,t.shape.height=1;break;case"polygon":case"interiorwall":case"door":case"secretdoor":case"invisiblewall":case"themepainter":t.type=CONST.DRAWING_TYPES.POLYGON,t.points=[0,0],t.bezierFactor=0;break;case"freehand":t.type=CONST.DRAWING_TYPES.POLYGON,t.points=[0,0],t.bezierFactor=t.bezierFactor??.5;break;case"ellipse":t.type=CONST.DRAWING_TYPES.ELLIPSE,t.shape.width=1,t.shape.height=1}else if("remove"===game.activeDungeonDrawMode)switch(game.activeDungeonDrawTool){case"rectangle":case"interiorwall":case"door":case"secretdoor":case"invisiblewall":case"themepainter":t.type=CONST.DRAWING_TYPES.RECTANGLE,t.shape.width=1,t.shape.height=1;break;case"polygon":t.type=CONST.DRAWING_TYPES.POLYGON,t.points=[0,0],t.bezierFactor=0;break;case"freehand":t.type=CONST.DRAWING_TYPES.POLYGON,t.points=[0,0],t.bezierFactor=t.bezierFactor??.5;break;case"ellipse":t.type=CONST.DRAWING_TYPES.ELLIPSE,t.shape.width=1,t.shape.height=1}return t}async undoHistory(){return super.undoHistory()}async deleteAll(){if(!game.user.isGM)throw new Error("You do not have permission to clear all.");return Dialog.confirm({title:game.i18n.localize("DD.ButtonTitleClearAll"),content:`<p>${game.i18n.localize("DD.ClearAllDialogContent")}</p>`,yes:()=>this.dungeon?.deleteAll()})}async generate(e){this.dungeon?await this.dungeon.deleteAll():await this.createNewDungeon(),await(async(e,t={})=>{try{switch(t.algorithm){case"2d-dungeon":await hc(e,t);break;case"rot-js-cellular":await cc(e,t);break;case"dungeoneer":await uc(e,t)}}catch(e){console.error(e),ui.notifications.error("Error generating dungeon... please try again.")}})(this.dungeon,e)}async loadDungeon(){const{journalEntry:t,note:i}=await(()=>{for(const t of canvas.scene.notes){const i=game.journal.get(t.entryId);if(i&&i.getFlag(e,"dungeonVersion"))return{journalEntry:i,note:t}}return{journalEntry:null,note:null}})();t?(this.dungeon=new So(t,i),await this.dungeon.loadFromJournalEntry(),this.addChildAt(this.dungeon,0)):this.dungeon=null}async createNewDungeon(){await(async()=>{const e=await gc();return{journalEntry:e,note:await mc(e)}})(),await this.loadDungeon()}async draw(){return await super.draw(),this}_onClickLeft(e){const{preview:t,drawingsState:i,destination:n}=e.interactionData;if(i>=1&&t.isPolygon){let i=n;return!e.shiftKey&&(i=canvas.grid.getSnappedPosition(i.x,i.y,this.gridPrecision)),t._addPoint(i,!1),t._chain=!0,t.refresh()}super._onClickLeft(e)}_onClickLeft2(e){const{drawingsState:t,preview:i}=e.interactionData;if(t>=1&&i.isPolygon)return e.interactionData.drawingsState=2,this._onDragLeftDrop(e);super._onClickLeft2(e)}async _onDragLeftStart(e){await super._onDragLeftStart(e);const t=e.interactionData,i=this._getNewDrawingData(e.interactionData.origin),n=new DrawingDocument(i,{parent:canvas.scene}),r=new Drawing(n);return t.preview=this.preview.addChild(r),t.drawingsState=1,r.draw()}_onDragLeftMove(e){const{preview:t,drawingsState:i}=e.interactionData;if(t&&!t._destroyed&&(null===t.parent&&this.preview.addChild(t),i>=1)){"freehand"===game.activeDungeonDrawTool?((e,t)=>{const{destination:i}=t.interactionData,n=i,r=Date.now()-e._drawTime<e.constructor.FREEHAND_SAMPLE_RATE;e._addPoint(n,{snap:!1,temporary:r}),e.refresh()})(t,e):t._onMouseDraw(e);const i=game.activeDungeonDrawMode+game.activeDungeonDrawTool;t.document.shape.type===CONST.DRAWING_TYPES.POLYGON&&"adddoor"!==i&&"addinteriorwall"!==i&&"addsecretdoor"!==i&&"addinvisiblewall"!==i||(e.interactionData.drawingsState=2)}}_maybeSnappedRect(e){if(t.snapToGrid()&&!dc()){const t=canvas.grid.getSnappedPosition(e.x+e.shape.width,e.y+e.shape.height,this.gridPrecision);e.shape.height=t.y-e.y,e.shape.width=t.x-e.x}return{x:e.x,y:e.y,height:e.shape.height,width:e.shape.width}}_maybeSnapLastPoint(e){const i=e.shape.points.length;if(0!==i&&t.snapToGrid()&&!dc()){const t=canvas.grid.getSnappedPosition(e.shape.points[i-2],e.shape.points[i-1],this.gridPrecision);e.shape.points[i-2]=t.x,e.shape.points[i-1]=t.y}}_autoClosePolygon(e){const t=e.shape.points.length;t>4&&(e.shape.points[0]!==e.shape.points[t-2]||e.shape.points[1]!==e.shape.points[t-1])&&e.shape.points.push(e.shape.points[0],e.shape.points[1])}async _onDragLeftDrop(e){const{destination:t,origin:i,preview:n}=e.interactionData;let r=e.interactionData.drawingsState;if("polygon"===game.activeDungeonDrawTool||"themepainter"===game.activeDungeonDrawTool){const e=n.document.shape.points.length;n.isPolygon&&e>4&&n.document.shape.points[0]==n.document.shape.points[e-2]&&n.document.shape.points[1]==n.document.shape.points[e-1]&&(r=2)}const o=game.activeDungeonDrawMode+game.activeDungeonDrawTool;if(2===r||"freehand"===game.activeDungeonDrawTool){this.dungeon||await this.createNewDungeon();const r=Math.hypot(t.x-i.x,t.y-i.y)>=canvas.dimensions.size/8,s=n.isPolygon&&n.document.shape.points.length>4;if("adddoor"===o){e.interactionData.drawingsState=0;const t=n.document.toObject(!1);n._chain=!1,this._maybeSnapLastPoint(t),await this.dungeon.addDoor(t.x,t.y,t.x+t.shape.points[2],t.y+t.shape.points[3])}else if("addsecretdoor"===o){e.interactionData.drawingsState=0;const t=n.document.toObject(!1);n._chain=!1,this._maybeSnapLastPoint(t),await this.dungeon.addSecretDoor(t.x,t.y,t.x+t.shape.points[2],t.y+t.shape.points[3])}else if("addinteriorwall"===o){e.interactionData.drawingsState=0;const t=n.document.toObject(!1);n._chain=!1,this._maybeSnapLastPoint(t),await this.dungeon.addInteriorWall(t.x,t.y,t.x+t.shape.points[2],t.y+t.shape.points[3])}else if("addinvisiblewall"===o){e.interactionData.drawingsState=0;const t=n.document.toObject(!1);n._chain=!1,this._maybeSnapLastPoint(t),await this.dungeon.addInvisibleWall(t.x,t.y,t.x+t.shape.points[2],t.y+t.shape.points[3])}else if(r||s){e.interactionData.drawingsState=0;const t=n.document.toObject(!1);n._chain=!1;const i=this.constructor.placeableClass.normalizeShape(t);if("addellipse"===o){const e=i.x+i.shape.width/2,t=i.y+i.shape.height/2;await this.dungeon.addEllipse(e,t,i.shape.width,i.shape.height)}else if("addfreehand"===o){this._autoClosePolygon(i);const e=pc(i);await this.dungeon.addPolygon(e)}else if("addpolygon"===o){this._maybeSnapLastPoint(i),this._autoClosePolygon(i);const e=pc(i);await this.dungeon.addPolygon(e)}else if("addrectangle"===o){const e=this._maybeSnappedRect(i);await this.dungeon.addRectangle(e)}else if("addthemepainter"===o){this._maybeSnapLastPoint(i),this._autoClosePolygon(i);const e=pc(i);await this.dungeon.addThemeArea(e)}else if("removedoor"===o){const e=this._maybeSnappedRect(i);await this.dungeon.removeDoors(e)}else if("removeellipse"===o){const e=i.x+i.shape.width/2,t=i.y+i.shape.height/2;await this.dungeon.removeEllipse(e,t,i.shape.width,i.shape.height)}else if("removefreehand"===o){this._autoClosePolygon(i);const e=pc(i);await this.dungeon.removePolygon(e)}else if("removesecretdoor"===o){const e=this._maybeSnappedRect(i);await this.dungeon.removeSecretDoors(e)}else if("removeinteriorwall"===o){const e=this._maybeSnappedRect(i);await this.dungeon.removeInteriorWalls(e)}else if("removeinvisiblewall"===o){const e=this._maybeSnappedRect(i);await this.dungeon.removeInvisibleWalls(e)}else if("removepolygon"===o){this._maybeSnapLastPoint(i),this._autoClosePolygon(i);const e=pc(i);await this.dungeon.removePolygon(e)}else if("removerectangle"===o){const e=this._maybeSnappedRect(i);await this.dungeon.removeRectangle(e)}else if("removethemepainter"===o){const e=this._maybeSnappedRect(i);await this.dungeon.removeThemeAreas(e)}}return this._onDragLeftCancel(e)}if(1===r&&n.isPolygon){if(e.preventDefault(),n._chain)return;return this._onClickLeft(e)}return this._onDragLeftCancel(e)}}class _c extends FormApplication{constructor(e="settings"){super(),this._tabs[0].active=e}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"dd-generator-sheet",classes:["sheet"],template:"modules/dungeon-draw/templates/generator-sheet.html",width:480,height:800,tabs:[{navSelector:".tabs",contentSelector:"form",initial:"position"}]})}get title(){return game.i18n.localize("DD.GeneratorSheetTitle")}getData(){return{height:30,width:30,centerExits:!1,circularPaths:!1,generate2DDungeonDoors:!0,maxRoomSize:7,minRoomSize:3,roomCount:15,generateDungeoneerDoors:!0,connectCaves:!0,smoothing:0}}activateListeners(e){super.activateListeners(e),e.find('button[name="generate"]').click(this.generate.bind(this)),e.find('select[name="algorithm"]').change(this.changeAlgorithm.bind(this)),this.changeAlgorithm()}async changeAlgorithm(e){e?.preventDefault();const t=`.${this._getSubmitData().algorithm}`;$(".alg-fields").filter(t).show(),$(".alg-fields").not(t).hide()}async generate(e){e.preventDefault();const t=this._getSubmitData();await canvas.dungeon.generate(t)}}class yc{static register(){game.keybindings.register(e,"redo",{name:"DD.ButtonTitleRedo",uneditable:[{key:"KeyY",modifiers:[KeyboardManager.MODIFIER_KEYS.CONTROL]}],onDown:yc.onRedo}),game.keybindings.register(e,"undo",{name:"DD.ButtonTitleUndo",uneditable:[{key:"KeyZ",modifiers:[KeyboardManager.MODIFIER_KEYS.CONTROL]}],onDown:yc.onUndo})}static onRedo(){if(!canvas.ready)return!1;const e=canvas.activeLayer;return e instanceof fc&&(e.dungeon?.redo(),!0)}static onUndo(){if(!canvas.ready)return!1;const e=canvas.activeLayer;return e instanceof fc&&(e.dungeon?.undo(),!0)}}class bc extends Application{static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{id:"dd-toolbar",popOut:!1,template:"modules/dungeon-draw/templates/toolbar.html"})}constructor(){super()}activateListeners(e){super.activateListeners(e),e.find(".addremove-toggle").click(this.addRemoveClick.bind(this)),e.find('select[name="themePainterThemeKey"]').change(this.themeSelectChange.bind(this)),e.find(".control-tool").click(this.controlToolClick.bind(this)),e.find('select[name="themePainterThemeKey"]').change(this.themeSelectChange.bind(this))}getData(){const e=i(),t=Object.keys(e).sort(),n=Object.keys(s).sort(),o=r(),a="add"===game.activeDungeonDrawMode?"toggle-on":"",l="remove"===game.activeDungeonDrawMode?"toggle-on":"";return{customThemes:e,customThemeKeys:t,row1:[{name:"rectangle",title:"DD.ButtonTitleRectangle",icon:"fas fa-square",class:"add",isActive:"rectangle"===game.activeDungeonDrawTool},{name:"polygon",title:"DD.ButtonTitlePolygon",icon:"fas fa-draw-polygon",isActive:"polygon"===game.activeDungeonDrawTool},{name:"ellipse",title:"DD.ButtonTitleEllipse",icon:"fas fa-circle",isActive:"ellipse"===game.activeDungeonDrawTool},{name:"freehand",title:"DD.ButtonTitleFreehand",icon:"fas fa-signature",isActive:"freehand"===game.activeDungeonDrawTool}],row2:[{name:"interiorwall",title:"DD.ButtonTitleInteriorWall",icon:"fas fa-bars",isActive:"interiorwall"===game.activeDungeonDrawTool},{name:"door",title:"DD.ButtonTitleDoor",icon:"fas fa-door-open",isActive:"door"===game.activeDungeonDrawTool},{name:"secretdoor",title:"DD.ButtonTitleSecretDoor",icon:"fas fa-user-secret",isActive:"secretdoor"===game.activeDungeonDrawTool},{name:"invisiblewall",title:"DD.ButtonTitleInvisibleWall",icon:"fas fa-eye-slash",isActive:"invisiblewall"===game.activeDungeonDrawTool}],row3:[{name:"themepainter",title:"DD.ButtonTitleThemePainter",icon:"fas fa-brush",isActive:"themepainter"===game.activeDungeonDrawTool}],themeKeys:n,themePainterThemeKey:o,themes:s,toggleAddClass:a,toggleRemoveClass:l}}render(e=!1,t={}){super.render(e,t)}updateActiveCss(){this._element.find(".control-tool").removeClass("active"),this._element.find(`[data-tool='${game.activeDungeonDrawTool}']`).addClass("active")}addRemoveClick(e){game.activeDungeonDrawMode=$(e.target).data("addremove"),this._element.find(".addremove-toggle").removeClass("toggle-on"),$(e.currentTarget).addClass("toggle-on")}controlToolClick(e){const t=$(e.currentTarget).data("tool");game.activeDungeonDrawTool=t,this.updateActiveCss()}themeSelectChange(e){const t=$(e.currentTarget).val();o(t)}}const Cc=new bc;class xc{static init(){t.register(),yc.register(),game.activeDungeonDrawTool="rectangle",game.activeDungeonDrawMode="add"}static ready(){}static controlsVisible(){if(game.user.isGM)return!0;return game.settings.get(e,"allowTrustedPlayer")&&game.user.isTrusted}static getSceneControlButtons(e){CONFIG.Canvas.layers.dungeon={layerClass:fc,group:"primary"},CONFIG.Dungeon={layerClass:fc},e.push({name:"dungeondraw",title:"DD.SceneControlTitle",layer:fc.LAYER_NAME,icon:"fas fa-dungeon",visible:xc.controlsVisible(),tools:[{name:"drawmap",title:"DD.ButtonTitleDrawMap",icon:"fas fa-dungeon"},{name:"undo",title:"DD.ButtonTitleUndo",icon:"fas fa-undo",onClick:async()=>{await canvas.dungeon.dungeon.undo()},button:!0},{name:"redo",title:"DD.ButtonTitleRedo",icon:"fas fa-redo",onClick:async()=>{await canvas.dungeon.dungeon.redo()},button:!0},{name:"generate",title:"DD.ButtonTitleGenerate",icon:"fas fa-magic",onClick:async()=>(new _c).render(!0),button:!0},{name:"config",title:"DD.ButtonTitleConfig",icon:"fas fa-cog",onClick:()=>(new l).render(!0),button:!0},{name:"savetoscene",title:"DD.ButtonTitleSaveToSceneBackground",icon:"fas fa-sign-out-alt",visible:game.user.isGM,onClick:async()=>{await canvas.dungeon.dungeon.saveToSceneBackground()},button:!0},{name:"clear",title:"DD.ButtonTitleClearAll",icon:"fas fa-trash",visible:game.user.isGM,onClick:()=>canvas.dungeon.deleteAll(),button:!0}],activeTool:"drawmap"})}static async canvasReady(e){await e.dungeon.loadDungeon()}static async updateJournalEntry(e,t,i,n){game.user.id!==n&&await(canvas.dungeon.dungeon?.maybeRefresh(e))}static async renderSceneControls(e){"dungeondraw"===e.activeControl?Cc.render(!0):await Cc.close()}}Hooks.on("init",xc.init),Hooks.on("ready",xc.ready),Hooks.on("getSceneControlButtons",xc.getSceneControlButtons),Hooks.on("canvasReady",xc.canvasReady),Hooks.on("updateJournalEntry",xc.updateJournalEntry),Hooks.on("renderSceneControls",xc.renderSceneControls);export{xc as DungeonDraw};
//# sourceMappingURL=dungeondraw-bundle.min.js.map
