{"version":3,"file":"dungeondraw-bundle.min.js","sources":["../src/constants.js","../src/themes.js","../src/themesheet.js","../src/configsheet.js","../node_modules/jsts/org/locationtech/jts/util/NumberUtil.js","../node_modules/jsts/java/lang/Exception.js","../node_modules/jsts/java/lang/IllegalArgumentException.js","../node_modules/jsts/java/lang/Long.js","../node_modules/jsts/java/lang/Double.js","../node_modules/jsts/java/lang/Comparable.js","../node_modules/jsts/java/lang/Cloneable.js","../node_modules/jsts/java/util/Comparator.js","../node_modules/jsts/java/io/Serializable.js","../node_modules/jsts/java/lang/RuntimeException.js","../node_modules/jsts/org/locationtech/jts/util/AssertionFailedException.js","../node_modules/jsts/org/locationtech/jts/util/Assert.js","../node_modules/jsts/org/locationtech/jts/geom/Coordinate.js","../node_modules/jsts/hasInterface.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateSequence.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFactory.js","../node_modules/jsts/org/locationtech/jts/geom/GeometryComponentFilter.js","../node_modules/jsts/org/locationtech/jts/geom/Envelope.js","../node_modules/jsts/org/locationtech/jts/geom/Geometry.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateFilter.js","../node_modules/jsts/org/locationtech/jts/geom/Lineal.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateSequences.js","../node_modules/jsts/java/lang/UnsupportedOperationException.js","../node_modules/jsts/java/lang/Character.js","../node_modules/jsts/org/locationtech/jts/geom/Dimension.js","../node_modules/jsts/org/locationtech/jts/geom/GeometryFilter.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateSequenceFilter.js","../node_modules/jsts/org/locationtech/jts/geom/LineString.js","../node_modules/jsts/org/locationtech/jts/algorithm/Length.js","../node_modules/jsts/org/locationtech/jts/geom/Puntal.js","../node_modules/jsts/org/locationtech/jts/geom/Point.js","../node_modules/jsts/org/locationtech/jts/algorithm/Area.js","../node_modules/jsts/java/util/Collection.js","../node_modules/jsts/java/lang/IndexOutOfBoundsException.js","../node_modules/jsts/java/util/List.js","../node_modules/jsts/java/util/NoSuchElementException.js","../node_modules/jsts/java/util/ArrayList.js","../node_modules/jsts/java/util/Arrays.js","../node_modules/jsts/java/lang/StringBuffer.js","../node_modules/jsts/java/lang/Integer.js","../node_modules/jsts/org/locationtech/jts/math/DD.js","../node_modules/jsts/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","../node_modules/jsts/org/locationtech/jts/algorithm/Orientation.js","../node_modules/jsts/org/locationtech/jts/geom/Polygonal.js","../node_modules/jsts/org/locationtech/jts/geom/Polygon.js","../node_modules/jsts/java/util/Set.js","../node_modules/jsts/java/util/SortedSet.js","../node_modules/jsts/java/util/TreeSet.js","../node_modules/jsts/org/locationtech/jts/geom/GeometryCollection.js","../node_modules/jsts/org/locationtech/jts/geom/MultiPoint.js","../node_modules/jsts/org/locationtech/jts/geom/LinearRing.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateXY.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateXYM.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateXYZM.js","../node_modules/jsts/org/locationtech/jts/geom/Coordinates.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateList.js","../node_modules/jsts/org/locationtech/jts/math/MathUtil.js","../node_modules/jsts/java/lang/System.js","../node_modules/jsts/org/locationtech/jts/geom/CoordinateArrays.js","../node_modules/jsts/java/lang/StringBuilder.js","../node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","../node_modules/jsts/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","../node_modules/jsts/org/locationtech/jts/geom/MultiPolygon.js","../node_modules/jsts/java/util/Map.js","../node_modules/jsts/java/util/HashSet.js","../node_modules/jsts/java/util/HashMap.js","../node_modules/jsts/org/locationtech/jts/geom/PrecisionModel.js","../node_modules/jsts/org/locationtech/jts/geom/MultiLineString.js","../node_modules/jsts/org/locationtech/jts/geom/GeometryFactory.js","../node_modules/jsts/org/locationtech/jts/io/WKTParser.js","../node_modules/jsts/org/locationtech/jts/io/WKTReader.js","../node_modules/jsts/org/locationtech/jts/io/WKTWriter.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/BufferParameters.js","../node_modules/jsts/org/locationtech/jts/geom/Location.js","../node_modules/jsts/org/locationtech/jts/geomgraph/Position.js","../node_modules/jsts/java/util/EmptyStackException.js","../node_modules/jsts/java/util/Stack.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","../node_modules/jsts/org/locationtech/jts/geom/TopologyException.js","../node_modules/jsts/java/util/LinkedList.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/BufferSubgraph.js","../node_modules/jsts/org/locationtech/jts/algorithm/Intersection.js","../node_modules/jsts/org/locationtech/jts/algorithm/Distance.js","../node_modules/jsts/org/locationtech/jts/algorithm/LineIntersector.js","../node_modules/jsts/org/locationtech/jts/algorithm/RobustLineIntersector.js","../node_modules/jsts/org/locationtech/jts/algorithm/RayCrossingCounter.js","../node_modules/jsts/org/locationtech/jts/algorithm/PointLocation.js","../node_modules/jsts/org/locationtech/jts/geomgraph/TopologyLocation.js","../node_modules/jsts/org/locationtech/jts/geomgraph/Label.js","../node_modules/jsts/org/locationtech/jts/geomgraph/EdgeRing.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","../node_modules/jsts/org/locationtech/jts/geomgraph/GraphComponent.js","../node_modules/jsts/org/locationtech/jts/geomgraph/Node.js","../node_modules/jsts/java/util/SortedMap.js","../node_modules/jsts/java/util/TreeMap.js","../node_modules/jsts/org/locationtech/jts/geomgraph/NodeMap.js","../node_modules/jsts/org/locationtech/jts/geomgraph/Quadrant.js","../node_modules/jsts/org/locationtech/jts/geomgraph/EdgeEnd.js","../node_modules/jsts/org/locationtech/jts/geomgraph/DirectedEdge.js","../node_modules/jsts/org/locationtech/jts/geomgraph/NodeFactory.js","../node_modules/jsts/org/locationtech/jts/geomgraph/PlanarGraph.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/PolygonBuilder.js","../node_modules/jsts/org/locationtech/jts/index/strtree/Boundable.js","../node_modules/jsts/org/locationtech/jts/index/strtree/ItemBoundable.js","../node_modules/jsts/org/locationtech/jts/util/PriorityQueue.js","../node_modules/jsts/org/locationtech/jts/index/SpatialIndex.js","../node_modules/jsts/org/locationtech/jts/index/strtree/AbstractNode.js","../node_modules/jsts/java/util/Collections.js","../node_modules/jsts/org/locationtech/jts/index/strtree/EnvelopeDistance.js","../node_modules/jsts/org/locationtech/jts/index/strtree/BoundablePair.js","../node_modules/jsts/org/locationtech/jts/index/ItemVisitor.js","../node_modules/jsts/org/locationtech/jts/index/strtree/AbstractSTRtree.js","../node_modules/jsts/org/locationtech/jts/index/strtree/ItemDistance.js","../node_modules/jsts/org/locationtech/jts/index/strtree/STRtree.js","../node_modules/jsts/org/locationtech/jts/noding/SegmentPointComparator.js","../node_modules/jsts/org/locationtech/jts/noding/SegmentNode.js","../node_modules/jsts/java/util/Iterator.js","../node_modules/jsts/org/locationtech/jts/noding/SegmentNodeList.js","../node_modules/jsts/org/locationtech/jts/noding/Octant.js","../node_modules/jsts/org/locationtech/jts/noding/SegmentString.js","../node_modules/jsts/org/locationtech/jts/noding/NodableSegmentString.js","../node_modules/jsts/org/locationtech/jts/noding/NodedSegmentString.js","../node_modules/jsts/org/locationtech/jts/geom/LineSegment.js","../node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","../node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChain.js","../node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","../node_modules/jsts/org/locationtech/jts/noding/Noder.js","../node_modules/jsts/org/locationtech/jts/noding/SinglePassNoder.js","../node_modules/jsts/org/locationtech/jts/noding/MCIndexNoder.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","../node_modules/jsts/org/locationtech/jts/algorithm/Angle.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","../node_modules/jsts/org/locationtech/jts/algorithm/NotRepresentableException.js","../node_modules/jsts/org/locationtech/jts/algorithm/HCoordinate.js","../node_modules/jsts/org/locationtech/jts/geom/Triangle.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","../node_modules/jsts/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","../node_modules/jsts/org/locationtech/jts/geom/GeometryCollectionIterator.js","../node_modules/jsts/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","../node_modules/jsts/org/locationtech/jts/geomgraph/EdgeEndStar.js","../node_modules/jsts/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","../node_modules/jsts/org/locationtech/jts/noding/OrientedCoordinateArray.js","../node_modules/jsts/org/locationtech/jts/geomgraph/EdgeList.js","../node_modules/jsts/org/locationtech/jts/noding/SegmentIntersector.js","../node_modules/jsts/org/locationtech/jts/noding/IntersectionAdder.js","../node_modules/jsts/org/locationtech/jts/geomgraph/EdgeIntersection.js","../node_modules/jsts/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","../node_modules/jsts/org/locationtech/jts/geom/IntersectionMatrix.js","../node_modules/jsts/org/locationtech/jts/util/IntArrayList.js","../node_modules/jsts/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","../node_modules/jsts/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","../node_modules/jsts/org/locationtech/jts/geomgraph/Depth.js","../node_modules/jsts/org/locationtech/jts/geomgraph/Edge.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/BufferBuilder.js","../node_modules/jsts/org/locationtech/jts/noding/ScaledNoder.js","../node_modules/jsts/org/locationtech/jts/noding/NodingValidator.js","../node_modules/jsts/org/locationtech/jts/noding/snapround/HotPixel.js","../node_modules/jsts/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","../node_modules/jsts/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","../node_modules/jsts/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","../node_modules/jsts/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","../node_modules/jsts/org/locationtech/jts/operation/buffer/BufferOp.js","../node_modules/jsts/org/locationtech/jts/algorithm/BoundaryNodeRule.js","../node_modules/jsts/org/locationtech/jts/algorithm/PointLocator.js","../node_modules/jsts/org/locationtech/jts/noding/BasicSegmentString.js","../node_modules/jsts/org/locationtech/jts/noding/NodingIntersectionFinder.js","../node_modules/jsts/org/locationtech/jts/noding/FastNodingValidator.js","../node_modules/jsts/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","../node_modules/jsts/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/LineBuilder.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/PointBuilder.js","../node_modules/jsts/org/locationtech/jts/geom/util/GeometryTransformer.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","../node_modules/jsts/org/locationtech/jts/precision/CommonBits.js","../node_modules/jsts/org/locationtech/jts/precision/CommonBitsRemover.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","../node_modules/jsts/org/locationtech/jts/geomgraph/index/MonotoneChain.js","../node_modules/jsts/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","../node_modules/jsts/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","../node_modules/jsts/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","../node_modules/jsts/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","../node_modules/jsts/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","../node_modules/jsts/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","../node_modules/jsts/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","../node_modules/jsts/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","../node_modules/jsts/org/locationtech/jts/geom/util/LinearComponentExtracter.js","../node_modules/jsts/org/locationtech/jts/index/ArrayListVisitor.js","../node_modules/jsts/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","../node_modules/jsts/org/locationtech/jts/geomgraph/GeometryGraph.js","../node_modules/jsts/org/locationtech/jts/operation/GeometryGraphOperation.js","../node_modules/jsts/org/locationtech/jts/operation/overlay/OverlayOp.js","../node_modules/jsts/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","../node_modules/jsts/org/locationtech/jts/operation/relate/EdgeEndBundle.js","../node_modules/jsts/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","../node_modules/jsts/org/locationtech/jts/operation/relate/RelateNode.js","../node_modules/jsts/org/locationtech/jts/operation/relate/RelateNodeFactory.js","../node_modules/jsts/org/locationtech/jts/operation/relate/RelateComputer.js","../node_modules/jsts/org/locationtech/jts/operation/predicate/RectangleContains.js","../node_modules/jsts/org/locationtech/jts/algorithm/RectangleLineIntersector.js","../node_modules/jsts/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","../node_modules/jsts/org/locationtech/jts/operation/predicate/RectangleIntersects.js","../node_modules/jsts/org/locationtech/jts/operation/relate/RelateOp.js","../node_modules/jsts/org/locationtech/jts/operation/union/UnionOp.js","../src/geo-utils.js","../src/wallmaker.js","../src/dungeonstate.js","../src/lib/pixi-filters.min.js","../src/renderer.js","../src/dungeon.js","../src/dungeonlayer.js","../src/dungeondraw.js"],"sourcesContent":["// module name from module.json\nexport const MODULE_NAME = \"dungeon-draw\";\nexport const SETTING_THEME_PAINTER_THEME = \"themePainterTheme\";\n","import * as constants from \"./constants.js\";\n\n\nexport const defaultConfig = () => {\n  return {\n    backgroundImage: \"\",\n    doorThickness: 25,\n    doorColor: \"#000000\",\n    doorFillColor: \"#ffffff\",\n    doorFillOpacity: 1.0,\n    exteriorShadowColor: \"#000000\",\n    exteriorShadowThickness: 20,\n    exteriorShadowOpacity: 0.5,\n    floorColor: \"#F2EDDF\",\n    floorTexture: \"\",\n    floorTextureTint: \"\",\n    interiorShadowColor: \"#000000\",\n    interiorShadowThickness: 8,\n    interiorShadowOpacity: 0.5,\n    sceneBackgroundColor: \"#999999\",\n    sceneGridColor: \"#000000\",\n    sceneGridOpacity: 0.2,\n    secretDoorSColor: \"#ffffff\",\n    secretDoorStyleGM: \"secret\",\n    secretDoorStylePlayer: \"wall\",\n    wallColor: \"#000000\",\n    wallThickness: 8,\n  };\n};\n\nexport const getTheme = (themeKey) => {  \n  const splits = themeKey.split(\".\");\n  const type = splits[0];\n  const key = splits[1];\n  if (type === \"custom\") {\n    const customThemes = getCustomThemes();\n    return customThemes[key];\n  }\n  return themes[key];\n};\n\nexport const getCustomThemes = () => {\n  try {\n    const customThemesString = game.settings.get(constants.MODULE_NAME, \"customThemes\");\n    return JSON.parse(customThemesString);\n  } catch(e) {\n    console.log(e);\n    return {};\n  }\n};\n\nexport const setCustomThemes = (customThemes) => {\n  const themesString = JSON.stringify(customThemes);\n  game.settings.set(constants.MODULE_NAME, \"customThemes\", themesString);\n};\n\nexport const getThemePainterThemeKey = () => {\n  return game.settings.get(constants.MODULE_NAME, constants.SETTING_THEME_PAINTER_THEME);\n}\n\nexport const setThemePainterThemeKey = (themeKey) => {\n  return game.settings.set(constants.MODULE_NAME, constants.SETTING_THEME_PAINTER_THEME, themeKey);\n}\n\nexport const themes = {\n  default: {\n    name: \"Default\",\n    config: defaultConfig(),\n  },\n  arcPavement: {\n    name: \"Arc Pavement\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#111111\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Arc_Pavement_001_basecolor.jpg\",\n      wallColor: \"#111111\",\n      wallThickness: 12,\n    })\n  },    \n  basicBlack: {\n    name: \"Basic Black\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#0D0D0D\",\n      doorFillOpacity: 0.0,\n      exteriorShadowOpacity: 0,\n      interiorShadowOpacity: 0,\n      floorColor: \"#FFFFFF\",\n      sceneBackgroundColor: \"#0D0D0D\",\n      sceneGridOpacity: 1.0,\n      secretDoorSColor: \"#0D0D0D\",\n      wallColor: \"#0D0D0D\",\n    })\n  },\n  cavern: {\n    name: \"Cavern\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#2B2D2F\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Stylized_Stone_Floor_002_bw.jpg\",\n      wallColor: \"#2B2D2F\",\n      wallThickness: 12,\n    })\n  },    \n  checkerboard: {\n    name: \"Checkerboard\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorFillColor: \"#C2BFB0\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/sci_fi_texture_150_by_llexandro_d939vk9.png\",\n      secretDoorSColor: \"#C2BFB0\",\n      wallThickness: 10,\n    })\n  },\n  cobblestone: {\n    name: \"Cobblestone\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#222222\",\n      doorFillColor: \"#FFFFFF\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Cobblestone_001_COLOR.jpg\",\n      secretDoorSColor: \"#FFFFFF\",\n      wallColor: \"#222222\",\n      wallThickness: 12,        \n    })\n  },\n  dirt: {\n    name: \"Dirt\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#1a1714\",\n      doorFillColor: \"#8d7862\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Ground_Dirt_007_basecolor.jpg\",\n      secretDoorSColor: \"#8d7862\",\n      wallColor: \"#1a1714\",\n      wallThickness: 10,\n    })\n  },  \n  dungeonSquares: {\n    name: \"Dungeon Squares\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#111111\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/outdoor+stone+tiles+pavement.jpg\",\n      wallColor: \"#111111\",\n      wallThickness: 12,        \n    })\n  },\n  grass: {\n    name: \"Grass\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#72471d\",\n      doorFillColor: \"#eee8c1\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Grass_001_COLOR.jpg\",\n      secretDoorSColor: \"#eee8c1\",      \n      wallColor: \"#72471d\",\n      wallThickness: 10,      \n    })\n  },\n  groovyCarpet: {\n    name: \"Groovy Carpet\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#2B2D2F\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Fabric_Rug_006_basecolor.jpg\",\n      wallColor: \"#2B2D2F\",\n      wallThickness: 12,        \n    })\n  },\n  hexagon: {\n    name: \"Hexagons\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#282828\",\n      doorFillColor: \"#D1BD8A\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Rocks_Hexagons_002_basecolor.jpg\",\n      secretDoorSColor: \"#D1BD8A\",\n      wallColor: \"#282828\",\n      wallThickness: 12,      \n    })\n  },  \n  marble: {\n    name: \"Marble\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#686882\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Marble_Tiles_001_basecolor.jpg\",\n      wallColor: \"#686882\",\n    })\n  },\n  metalGrid: {\n    name: \"Metal Grid\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#27251A\",\n      doorFillColor: \"#AAAAAA\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Sci-fi_Floor_002_basecolor.jpg\",\n      secretDoorSColor: \"#AAAAAA\",\n      wallColor: \"#27251A\",\n    })\n  },  \n  metalSquares: {\n    name: \"Metal Squares\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorFillColor: \"#C0C0C0\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/sci_fi_texture_212_by_llexandro_dcuxgum.png\",\n      secretDoorSColor: \"#C0C0C0\",\n    })\n  },\n  moldvayBlue: {\n    name: \"Moldvay Blue\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#3A9FF2\",\n      doorFillOpacity: 0.0,      \n      doorThickness: 35,\n      exteriorShadowOpacity: 0,\n      floorColor: \"#FFFFFF\",\n      interiorShadowOpacity: 0,\n      sceneBackgroundColor: \"#3A9FF2\",\n      sceneGridColor: \"#3A9FF2\",\n      sceneGridOpacity: 1.0,\n      secretDoorSColor: \"#3A9FF2\",      \n      wallColor: \"#3A9FF2\",\n    })\n  },\n  neonBlueprint: {\n    name: \"Neon Blueprint\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#3A9FF2\",\n      doorFillOpacity: 0.0,      \n      doorThickness: 35,\n      exteriorShadowColor: \"#18495E\",\n      floorColor: \"#142A3B\",\n      interiorShadowColor: \"#1B7FAB\",\n      sceneBackgroundColor: \"#171008\",\n      sceneGridColor: \"#4C89A1\",\n      sceneGridOpacity: 1.0,\n      secretDoorSColor: \"#3A9FF2\",\n      wallColor: \"#63C9E6\",\n      wallThickness: 4,\n    })\n  },\n  ruddyPaper: {\n    name: \"Ruddy Paper\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#913B55\",\n      doorFillColor: \"#FADEE6\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Paper_Recycled_001_COLOR.jpg\",\n      floorTextureTint: \"#F9FAE6\",\n      exteriorShadowOpacity: 0,\n      interiorShadowOpacity: 0,      \n      sceneBackgroundColor: \"#EBD3BC\",\n      sceneGridColor: \"#594026\",\n      sceneGridOpacity: 1.0,\n      secretDoorSColor: \"#913B55\",\n      wallColor: \"#9A6D54\",\n    })\n  }, \n  water: {\n    name: \"Water\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#203246\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Water_001_COLOR.jpg\",\n      wallColor: \"#203246\",\n      wallThickness: 5,\n    })\n  },  \n  woodPlanks: {\n    name: \"Wood Planks\",\n    config: foundry.utils.mergeObject(defaultConfig(), {\n      doorColor: \"#332211\",\n      floorTexture: \"modules/dungeon-draw/assets/textures/Old_Wooden_Plank_Seamless_Texture_765.jpg\",\n      wallColor: \"#332211\",\n      wallThickness: 10,\n    })\n  },\n};\n","// TODO: fix this circular dependency\n// import { ConfigSheet } from \"./configsheet.js\";\nimport { getCustomThemes, setCustomThemes, themes } from \"./themes.js\";\n\n\n/**\n * Sheet for Theme editing.\n * \n * @extends {FormApplication}\n */\nexport class ThemeSheet extends FormApplication {\n\n  constructor(themeKey) {\n    super()\n    this.themeKey = themeKey;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: \"dd-theme-sheet\",\n      classes: [\"sheet\"],\n      template: \"modules/dungeon-draw/templates/theme-sheet.html\",\n      width: 480,\n      height: 880,\n      tabs: [{navSelector: \".tabs\", contentSelector: \"form\", initial: \"position\"}]\n    });\n  }\n\n  /** @override */\n  get title() {\n    return game.i18n.localize(\"DD.ThemeSheetTitle\");\n  }\n\n  /** @override */\n  getData() {\n    const customThemes = getCustomThemes();\n    const theme = customThemes[this.themeKey];\n    return {      \n      config: theme.config,\n      themeName: theme.name,\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  async _updateObject(event, formData) {\n    const customThemes = getCustomThemes();\n    const themeName = formData.themeName;\n    delete formData.themeName;\n    // overwrite the theme at our key\n    customThemes[this.themeKey] = {\n      name: themeName,\n      config: formData\n    };\n    setCustomThemes(customThemes);\n    // force already-open config sheet to re-render\n    // TODO: fix this circular dependency\n    // new ConfigSheet(\"themes\").render(true);\n  }\n}\n","import { defaultConfig, getCustomThemes, getThemePainterThemeKey, setCustomThemes, setThemePainterThemeKey, themes } from \"./themes.js\";\nimport { ThemeSheet } from \"./themesheet.js\";\n\n/**\n * Sheet for dungeon config/settings.\n * \n * @extends {FormApplication}\n */\nexport class ConfigSheet extends FormApplication {\n\n  constructor(activeTab = \"settings\") {\n    super()\n    this._tabs[0].active = activeTab;\n  }\n\n  static get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      id: \"dd-config-sheet\",\n      classes: [\"sheet\"],\n      template: \"modules/dungeon-draw/templates/config-sheet.html\",\n      width: 480,\n      height: 920,\n      tabs: [{navSelector: \".tabs\", contentSelector: \"form\", initial: \"position\"}]\n    });\n  }\n\n  /** @override */\n  get title() {\n    return game.i18n.localize(\"DD.ConfigSheetTitle\");\n  }\n\n  /** @override */\n  getData() {\n    let config = canvas.dungeon.dungeon?.state().config;\n    if (!config) {\n      config = defaultConfig();\n    }\n    const customThemes = getCustomThemes();\n    const customThemeKeys = Object.keys(customThemes).sort();\n    const themeKeys = Object.keys(themes).sort();\n    const themePainterThemeKey = getThemePainterThemeKey();\n    return {\n      config,\n      customThemes,\n      customThemeKeys,\n      themes,\n      themeKeys,\n      themePainterThemeKey\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  async _updateObject(event, formData) {\n    // TODO: handle customThemeName vs. config better\n    delete formData.customThemeName;\n    delete formData.themePainterTheme;\n    console.log(\"*** formData\");\n    console.log(formData);\n    canvas.dungeon.dungeon?.setConfig(formData);\n    if (game.user.isGM) {\n      // need GM privs to update scene\n      await canvas.scene.update({\n        backgroundColor: formData.sceneBackgroundColor,\n        gridAlpha: formData.sceneGridAlpha,\n        gridColor: formData.sceneGridColor,\n      })\n    }    \n  }\n\n  /* -------------------------------------------- */\n\n  /** @override */\n  async close(options) {\n    await super.close(options);\n    if (this.preview) {\n      this.preview.removeChildren();\n      this.preview = null;\n    }\n  }\n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /** @override */\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.find('button[name=\"resetDefault\"]').click(this._onResetDefaults.bind(this));\n    html.find('.dd-theme-name').click(this._onThemeNameClick.bind(this));\n    html.find('.dd-save-as-theme-button').click(this._onSaveAsThemeClick.bind(this));\n    html.find('.dd-theme-edit').click(this._onEditThemeClick.bind(this));\n    html.find('.dd-theme-copy').click(this._onCopyThemeClick.bind(this));\n    html.find('.dd-theme-delete').click(this._onDeleteThemeClick.bind(this));\n    html.find('select[name=\"themePainterThemeKey\"]').change(this._onThemePainterThemeSelect.bind(this));\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Reset the user Drawing configuration settings to their default values\n   * @param {PointerEvent} event      The originating mouse-click event\n   * @protected\n   */\n  _onResetDefaults(event) {\n    event.preventDefault();\n    canvas.dungeon.dungeon?.setConfig(defaultConfig());\n    canvas.dungeon.dungeon.refresh();\n    this.render();\n  }\n\n  async _onThemeNameClick(event) {\n    event.preventDefault();\n    const themeRow = $(event.currentTarget).parent(\".dd-theme-row\");\n    const themeKey = themeRow.data(\"theme\");\n    const isCustom = themeRow.data(\"themetype\") === \"custom\";\n    let theme;\n    if (isCustom) {\n      const customThemes = getCustomThemes();\n      theme = customThemes[themeKey];\n    } else {\n      theme = themes[themeKey];\n    }\n    const newConfig = {...theme.config};\n    await canvas.dungeon.dungeon?.setConfig(newConfig);\n    if (game.user.isGM) {\n      // need GM privs to update scene\n      await canvas.scene.update({\n        backgroundColor: newConfig.sceneBackgroundColor,\n        gridAlpha: newConfig.sceneGridAlpha,\n        gridColor: newConfig.sceneGridColor,\n      })\n    }\n    this.render();\n  }\n\n  async _onSaveAsThemeClick(event) {\n    event.preventDefault();\n    const input = $(event.currentTarget).closest(\".form-fields\").children(\".saveAsThemeName\");\n    const saveAsThemeName = input.val();\n    const formData = this._getSubmitData();\n    // TODO: handle saveAsThemeName better\n    delete formData.saveAsThemeName;\n    delete formData.themePainterThemeKey;\n    const customThemes = getCustomThemes();\n    customThemes[saveAsThemeName] = {\n      name: saveAsThemeName,\n      config: formData\n    };\n    setCustomThemes(customThemes);\n    this._tabs[0].active = \"themes\";    \n    this.render();    \n  }\n\n  async _onEditThemeClick(event) {\n    event.preventDefault();\n    const themeRow = $(event.currentTarget).closest(\".dd-theme-row\");\n    const themeKey = themeRow.data(\"theme\");\n    new ThemeSheet(themeKey).render(true)\n  }\n\n  _onCopyThemeClick(event) {\n    event.preventDefault();\n    const themeRow = $(event.currentTarget).closest(\".dd-theme-row\");\n    const themeKey = themeRow.data(\"theme\");\n    const customThemes = getCustomThemes();\n    const oldTheme = customThemes[themeKey];\n    const newTheme = JSON.parse(JSON.stringify(oldTheme));\n    // deal with possible name collisions\n    let num = 1;\n    let newName;\n    while (true) {\n      newName = `${oldTheme.name} (${num})`;\n      if (newName in customThemes) {\n        num++;\n      } else {\n        break;        \n      }\n    }\n    newTheme.name = newName;\n    customThemes[newName] = newTheme;\n    setCustomThemes(customThemes);\n    this.render();\n  }\n\n  _onDeleteThemeClick(event) {\n    event.preventDefault();\n    const themeRow = $(event.currentTarget).closest(\".dd-theme-row\");\n    const themeKey = themeRow.data(\"theme\");\n    const customThemes = getCustomThemes();\n    delete customThemes[themeKey];\n    setCustomThemes(customThemes);\n    this.render();\n  } \n\n  _onThemePainterThemeSelect(event) {\n    const themeKey = $(event.currentTarget).val();\n    setThemePainterThemeKey(themeKey);\n  } \n}\n","export default class NumberUtil {\n  static equalsWithTolerance(x1, x2, tolerance) {\n    return Math.abs(x1 - x2) <= tolerance\n  }\n}\n","export default class Exception extends Error {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ Exception })[0]\n  }\n  toString() {\n    return this.message\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class IllegalArgumentException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IllegalArgumentException })[0]\n  }\n}\n","export default class Long {\n  constructor(high, low) {\n    this.low = low || 0\n    this.high = high || 0\n  }\n\n  static toBinaryString(i) {\n    let mask\n    let result = ''\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.high & mask) === mask ? '1' : '0'\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.low & mask) === mask ? '1' : '0'\n    return result\n  }\n}\n","import Long from './Long.js'\n\nexport default function Double() { }\n\nDouble.NaN = NaN\nDouble.isNaN = n => Number.isNaN(n)\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\nDouble.POSITIVE_INFINITY = Number.POSITIVE_INFINITY\nDouble.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY\n\nif (typeof Float64Array === 'function' &&\n  typeof Int32Array === 'function')\n// Simple and fast conversion between double and long bits\n// using TypedArrays and ArrayViewBuffers.\n\n  (function() {\n    const EXP_BIT_MASK = 0x7ff00000\n    const SIGNIF_BIT_MASK = 0xFFFFF\n    const f64buf = new Float64Array(1)\n    const i32buf = new Int32Array(f64buf.buffer)\n    Double.doubleToLongBits = function(value) {\n      f64buf[0] = value\n      let low = i32buf[0] | 0\n      let high = i32buf[1] | 0\n      // Check for NaN based on values of bit fields, maximum\n      // exponent and nonzero significand.\n      if (((high & EXP_BIT_MASK) === EXP_BIT_MASK) &&\n        ((high & SIGNIF_BIT_MASK) !== 0) &&\n        (low !== 0)) {\n        low = 0 | 0\n        high = 0x7ff80000 | 0\n      }\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      i32buf[0] = bits.low\n      i32buf[1] = bits.high\n      return f64buf[0]\n    }\n  })()\nelse\n// More complex and slower fallback implementation using\n// math and the divide-by-two and multiply-by-two algorithms.\n\n  (function() {\n    const BIAS = 1023\n    const log2 = Math.log2\n    const floor = Math.floor\n    const pow = Math.pow\n    const MAX_REL_BITS_INTEGER = (function() {\n      for (let i = 53; i > 0; i--) {\n        const bits = pow(2, i) - 1\n        if (floor(log2(bits)) + 1 === i) return bits\n      }\n      return 0\n    })()\n    Double.doubleToLongBits = function(value) {\n      let x, y, f, bits, skip\n      let sign, exp, high, low\n\n      // Get the sign bit and absolute value.\n      if (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n        sign = (1 << 31)\n        value = (-value)\n      } else {\n        sign = 0\n      }\n\n      // Handle some special values.\n      if (value === 0) {\n        // Handle zeros (+/-0).\n        low = 0 | 0\n        high = sign // exponent: 00..00, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value === Infinity) {\n        // Handle infinity (only positive values for value possible).\n        low = 0 | 0\n        high = sign | 0x7ff00000 // exponent: 11..11, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value !== value) { // eslint-disable-line\n        // Handle NaNs (boiled down to only one distinct NaN).\n        low = 0 | 0\n        high = 0x7ff80000 // exponent: 11..11, significand: 10..00\n        return new Long(high, low)\n      }\n\n      // Preinitialize variables, that are not neccessarily set by\n      // the algorithm.\n      bits = 0\n      low = 0 | 0\n\n      // Get the (always positive) integer part of value.\n      x = floor(value)\n\n      // Process the integer part if it's greater than 1. Zero requires\n      // no bits at all, 1 represents the implicit (hidden) leading bit,\n      // which must not be written as well.\n      if (x > 1)\n      // If we can reliably determine the number of bits required for\n      // the integer part,\n\n        if (x <= MAX_REL_BITS_INTEGER) {\n          // get the number of bits required to represent it minus 1\n          bits = floor(log2(x)) /* + 1 - 1 */\n          // and simply copy/shift the integer bits into low and high.\n          // That's much faster than the divide-by-two algorithm (saves\n          // up to ~60%).\n          // We always need to mask out the most significant bit, which\n          // is the implicit (aka hidden) bit.\n          if (bits <= 20) {\n            // The simple case in which the integer fits into the\n            // lower 20 bits of the high word is worth to be handled\n            // separately (saves ~25%).\n            low = 0 | 0\n            high = (x << (20 - bits)) & 0xfffff\n          } else {\n            // Here, the integer part is split into low and high.\n            // Since its value may require more than 32 bits, we\n            // cannot use bitwise operators (which implicitly cast\n            // to Int32), but use arithmetic operators % and / to\n            // get low and high parts. The uppper 20 bits go to high,\n            // the remaining bits (in f) to low.\n            f = bits - 20\n            // Like (1 << f) but safe with even more than 32 bits.\n            y = pow(2, f)\n            low = (x % y) << (32 - f)\n            high = (x / y) & 0xfffff\n          }\n        } else {\n          // For greater values, we must use the much slower divide-by-two\n          // algorithm. Bits are generated from right to left, that is from\n          // least to most significant bit. For each bit, we left-shift both\n          // low and high by one and carry bit #0 from high to #31 in low.\n          // The next bit is then copied into bit #19 in high, the leftmost\n          // bit of the double's significand.\n\n          // Preserve x for later user, so work with f.\n          f = x\n          low = 0 | 0\n          for (;;) {\n            y = f / 2\n            f = floor(y)\n            if (f === 0)\n            // We just found the most signigicant (1-)bit, which\n            // is the implicit bit and so, not stored in the double\n            // value. So, it's time to leave the loop.\n              break\n\n            // Count this bit, shift low and carry bit #0 from high.\n            bits++\n            low >>>= 1\n            low |= (high & 0x1) << 31\n            // Shift high.\n            high >>>= 1\n            if (y !== f)\n            // Copy the new bit into bit #19 in high (only required if 1).\n              high |= 0x80000\n          }\n        }\n\n      // Bias the exponent.\n      exp = bits + BIAS\n\n      // If the integer part is zero, we've not yet seen the implicit\n      // leading bit. Variable skip is later used while processing the\n      // fractional part (if any).\n      skip = (x === 0)\n\n      // Get fraction only into x.\n      x = value - x\n\n      // If some significand bits are still left to be filled and\n      // the fractional part is not zero, convert the fraction using\n      // the multiply-by-2 algorithm.\n      if (bits < 52 && x !== 0) {\n        // Initialize 'buffer' f, into which newly created bits get\n        // shifted from right to left.\n        f = 0\n\n        for (;;) {\n          y = x * 2\n          if (y >= 1) {\n            // This is a new 1-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y - 1\n            if (!skip) {\n              f <<= 1\n              f |= 1\n              bits++\n            } else {\n              // Otherwise, decrement the exponent and unset\n              // skip, so that all following bits get written.\n              exp--\n              skip = false\n            }\n          } else {\n            // This is a new 0-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y\n            if (!skip) {\n              f <<= 1\n              bits++\n            } else if (--exp === 0) {\n              // Otherwise we've just decremented the exponent. If the\n              // biased exponent is zero now (-1023), we process a\n              // subnormal number, which has no impled leading 1-bit.\n              // So, count this 0-bit and unset skip to write out\n              // all the following bits.\n              bits++\n              skip = false\n            }\n          }\n          if (bits === 20) {\n            // When 20 bits have been created in total, we're done with\n            // the high word. Copy the bits from 'buffer' f into high\n            // and reset 'buffer' f. Following bits will end up in the\n            // low word.\n            high |= f\n            f = 0\n          } else if (bits === 52) {\n            // When 52 bits have been created in total, we're done with\n            // low word as well. Copy the bits from 'buffer' f into low\n            // and exit the loop.\n            low |= f\n            break\n          }\n          if (y === 1) {\n            // When y is exactly 1, there is no remainder and the process\n            // is complete (the number is finite). Copy the bits from\n            // 'buffer' f into either low or high and exit the loop.\n            if (bits < 20)\n              high |= (f << (20 - bits))\n            else if (bits < 52) low |= (f << (52 - bits))\n\n            break\n          }\n        }\n      }\n\n      // Copy/shift the exponent and sign bits into the high word.\n      high |= (exp << 20)\n      high |= sign\n\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      let i\n      let x, exp, fract\n      const high = bits.high\n      const low = bits.low\n\n      // Extract the sign.\n      const sign = (high & (1 << 31)) ? -1 : 1\n\n      // Extract the unbiased exponent.\n      exp = ((high & 0x7ff00000) >> 20) - BIAS\n\n      // Calculate the fraction from left to right. Start\n      // off with the 20 lower bits from the high word.\n      fract = 0\n      x = (1 << 19)\n      for (i = 1; i <= 20; i++) {\n        if (high & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n      // Continue with all 32 bits from the low word.\n      x = (1 << 31)\n      for (i = 21; i <= 52; i++) {\n        if (low & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n\n      // Handle special values.\n      // Check for zero and subnormal values.\n      if (exp === -BIAS) {\n        if (fract === 0)\n        // +/-1.0 * 0.0 => +/-0.0\n          return sign * 0\n\n        exp = -1022\n      } else if (exp === BIAS + 1) { // Check for +/-Infinity or NaN.\n        if (fract === 0)\n        // +/-1.0 / 0.0 => +/-Infinity\n          return sign / 0\n\n        return NaN\n      } else { // Nothing special? Seems to be a normal number.\n        // Add the implicit leading bit (1*2^0).\n        fract += 1\n      }\n\n      return sign * fract * pow(2, exp)\n    }\n  })()\n","export default function Comparable() {}\n","export default function Clonable() {}\n","export default function Comparator() {}\n","export default function Serializable() {}\n","import Exception from './Exception.js'\n\nexport default class RuntimeException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ RuntimeException })[0]\n  }\n}\n","import RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class AssertionFailedException extends RuntimeException {\n  constructor() {\n    super()\n    AssertionFailedException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      RuntimeException.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      RuntimeException.constructor_.call(this, message)\n    }\n  }\n}\n","import AssertionFailedException from './AssertionFailedException.js'\nexport default class Assert {\n  static shouldNeverReachHere() {\n    if (arguments.length === 0) {\n      Assert.shouldNeverReachHere(null)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n    }\n  }\n  static isTrue() {\n    if (arguments.length === 1) {\n      const assertion = arguments[0]\n      Assert.isTrue(assertion, null)\n    } else if (arguments.length === 2) {\n      const assertion = arguments[0], message = arguments[1]\n      if (!assertion) \n        if (message === null) \n          throw new AssertionFailedException()\n        else \n          throw new AssertionFailedException(message)\n        \n      \n    }\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const expectedValue = arguments[0], actualValue = arguments[1]\n      Assert.equals(expectedValue, actualValue, null)\n    } else if (arguments.length === 3) {\n      const expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2]\n      if (!actualValue.equals(expectedValue)) \n        throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n      \n    }\n  }\n}\n","import NumberUtil from '../util/NumberUtil.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\n\nconst kBuf = new ArrayBuffer(8)\nconst kBufAsF64 = new Float64Array(kBuf)\nconst kBufAsI32 = new Int32Array(kBuf)\n\nexport default class Coordinate {\n  constructor() {\n    Coordinate.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.x = null\n    this.y = null\n    this.z = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this, 0.0, 0.0)\n    } else if (arguments.length === 1) {\n      const c = arguments[0]\n      Coordinate.constructor_.call(this, c.x, c.y, c.getZ())\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], z = arguments[2]\n      this.x = x\n      this.y = y\n      this.z = z\n    }\n  }\n  static hashCode(n) {\n    kBufAsF64[0] = n\n    return kBufAsI32[0] ^ kBufAsI32[1]\n  }\n  getM() {\n    return Double.NaN\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.setZ(value)\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  equals2D() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      if (this.x !== other.x) \n        return false\n      \n      if (this.y !== other.y) \n        return false\n      \n      return true\n    } else if (arguments.length === 2) {\n      const c = arguments[0], tolerance = arguments[1]\n      if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) \n        return false\n      \n      if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) \n        return false\n      \n      return true\n    }\n  }\n  setM(m) {\n    throw new IllegalArgumentException('Invalid ordinate index: ' + Coordinate.M)\n  }\n  getZ() {\n    return this.z\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  equals3D(other) {\n    return this.x === other.x && this.y === other.y && (this.getZ() === other.getZ() || Double.isNaN(this.getZ()) && Double.isNaN(other.getZ()))\n  }\n  equals(other) {\n    if (!(other instanceof Coordinate)) \n      return false\n    \n    return this.equals2D(other)\n  }\n  equalInZ(c, tolerance) {\n    return NumberUtil.equalsWithTolerance(this.getZ(), c.getZ(), tolerance)\n  }\n  setX(x) {\n    this.x = x\n  }\n  compareTo(o) {\n    const other = o\n    if (this.x < other.x) return -1\n    if (this.x > other.x) return 1\n    if (this.y < other.y) return -1\n    if (this.y > other.y) return 1\n    return 0\n  }\n  getX() {\n    return this.x\n  }\n  setZ(z) {\n    this.z = z\n  }\n  clone() {\n    try {\n      const coord = null\n      return coord\n    } catch (e) {\n      if (e instanceof CloneNotSupportedException) {\n        Assert.shouldNeverReachHere('this shouldn\\'t happen because this class is Cloneable')\n        return null\n      } else {\n        throw e\n      }\n    } finally {}\n  }\n  copy() {\n    return new Coordinate(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ')'\n  }\n  distance3D(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    const dz = this.getZ() - c.getZ()\n    return Math.sqrt(dx * dx + dy * dy + dz * dz)\n  }\n  getY() {\n    return this.y\n  }\n  setY(y) {\n    this.y = y\n  }\n  distance(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this.x)\n    result = 37 * result + Coordinate.hashCode(this.y)\n    return result\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n  get interfaces_() {\n    return [Comparable, Cloneable, Serializable]\n  }\n}\nclass DimensionalComparator {\n  constructor() {\n    DimensionalComparator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimensionsToTest = 2\n    if (arguments.length === 0) {\n      DimensionalComparator.constructor_.call(this, 2)\n    } else if (arguments.length === 1) {\n      const dimensionsToTest = arguments[0]\n      if (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException('only 2 or 3 dimensions may be specified')\n      this._dimensionsToTest = dimensionsToTest\n    }\n  }\n  static compare(a, b) {\n    if (a < b) return -1\n    if (a > b) return 1\n    if (Double.isNaN(a)) {\n      if (Double.isNaN(b)) return 0\n      return -1\n    }\n    if (Double.isNaN(b)) return 1\n    return 0\n  }\n  compare(c1, c2) {\n    const compX = DimensionalComparator.compare(c1.x, c2.x)\n    if (compX !== 0) return compX\n    const compY = DimensionalComparator.compare(c1.y, c2.y)\n    if (compY !== 0) return compY\n    if (this._dimensionsToTest <= 2) return 0\n    const compZ = DimensionalComparator.compare(c1.getZ(), c2.getZ())\n    return compZ\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinate.DimensionalComparator = DimensionalComparator\nCoordinate.NULL_ORDINATE = Double.NaN\nCoordinate.X = 0\nCoordinate.Y = 1\nCoordinate.Z = 2\nCoordinate.M = 3\n","export default function(o, i) {\n  return o.interfaces_ && o.interfaces_.indexOf(i) > -1\n}\n","import Double from '../../../../java/lang/Double.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nexport default class CoordinateSequence {\n  getM(index) {\n    if (this.hasM()) {\n      const mIndex = this.getDimension() - this.getMeasures()\n      return this.getOrdinate(index, mIndex)\n    } else {\n      return Double.NaN\n    }\n  }\n  setOrdinate(index, ordinateIndex, value) {}\n  getZ(index) {\n    if (this.hasZ()) \n      return this.getOrdinate(index, 2)\n    else \n      return Double.NaN\n    \n  }\n  size() {}\n  getOrdinate(index, ordinateIndex) {}\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n    }\n  }\n  getCoordinateCopy(i) {}\n  createCoordinate() {}\n  getDimension() {}\n  hasM() {\n    return this.getMeasures() > 0\n  }\n  getX(index) {}\n  hasZ() {\n    return this.getDimension() - this.getMeasures() > 2\n  }\n  getMeasures() {\n    return 0\n  }\n  expandEnvelope(env) {}\n  copy() {}\n  getY(index) {}\n  toCoordinateArray() {}\n  get interfaces_() {\n    return [Cloneable]\n  }\n}\nCoordinateSequence.X = 0\nCoordinateSequence.Y = 1\nCoordinateSequence.Z = 2\nCoordinateSequence.M = 3\n","import hasInterface from '../../../../hasInterface.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequenceFactory {\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n      }\n    } else if (arguments.length === 2) {\n      const size = arguments[0], dimension = arguments[1]\n    } else if (arguments.length === 3) {\n      const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      return this.create(size, dimension)\n    }\n  }\n}\n","export default class GeometryComponentFilter {\n  filter(geom) {}\n}\n","import Coordinate from './Coordinate.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class Envelope {\n  constructor() {\n    Envelope.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minx = null\n    this._maxx = null\n    this._miny = null\n    this._maxy = null\n    if (arguments.length === 0) {\n      this.init()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this.init(env)\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      this.init(x1, x2, y1, y2)\n    }\n  }\n  static intersects() {\n    if (arguments.length === 3) {\n      const p1 = arguments[0], p2 = arguments[1], q = arguments[2]\n      if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) \n        return true\n      \n      return false\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3]\n      let minq = Math.min(q1.x, q2.x)\n      let maxq = Math.max(q1.x, q2.x)\n      let minp = Math.min(p1.x, p2.x)\n      let maxp = Math.max(p1.x, p2.x)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      minq = Math.min(q1.y, q2.y)\n      maxq = Math.max(q1.y, q2.y)\n      minp = Math.min(p1.y, p2.y)\n      maxp = Math.max(p1.y, p2.y)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      return true\n    }\n  }\n  getArea() {\n    return this.getWidth() * this.getHeight()\n  }\n  equals(other) {\n    if (!(other instanceof Envelope)) \n      return false\n    \n    const otherEnvelope = other\n    if (this.isNull()) \n      return otherEnvelope.isNull()\n    \n    return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n  }\n  intersection(env) {\n    if (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope()\n    const intMinX = this._minx > env._minx ? this._minx : env._minx\n    const intMinY = this._miny > env._miny ? this._miny : env._miny\n    const intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx\n    const intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy\n    return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n  }\n  isNull() {\n    return this._maxx < this._minx\n  }\n  getMaxX() {\n    return this._maxx\n  }\n  covers() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) return false\n      return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n    }\n  }\n  intersects() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.intersects(p.x, p.y)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const a = arguments[0], b = arguments[1]\n        if (this.isNull()) \n          return false\n        \n        const envminx = a.x < b.x ? a.x : b.x\n        if (envminx > this._maxx) return false\n        const envmaxx = a.x > b.x ? a.x : b.x\n        if (envmaxx < this._minx) return false\n        const envminy = a.y < b.y ? a.y : b.y\n        if (envminy > this._maxy) return false\n        const envmaxy = a.y > b.y ? a.y : b.y\n        if (envmaxy < this._miny) return false\n        return true\n      } else if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const x = arguments[0], y = arguments[1]\n        if (this.isNull()) return false\n        return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n      }\n    }\n  }\n  getMinY() {\n    return this._miny\n  }\n  getDiameter() {\n    if (this.isNull()) \n      return 0\n    \n    const w = this.getWidth()\n    const h = this.getHeight()\n    return Math.sqrt(w * w + h * h)\n  }\n  getMinX() {\n    return this._minx\n  }\n  expandToInclude() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.expandToInclude(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (other.isNull()) \n          return null\n        \n        if (this.isNull()) {\n          this._minx = other.getMinX()\n          this._maxx = other.getMaxX()\n          this._miny = other.getMinY()\n          this._maxy = other.getMaxY()\n        } else {\n          if (other._minx < this._minx) \n            this._minx = other._minx\n          \n          if (other._maxx > this._maxx) \n            this._maxx = other._maxx\n          \n          if (other._miny < this._miny) \n            this._miny = other._miny\n          \n          if (other._maxy > this._maxy) \n            this._maxy = other._maxy\n          \n        }\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) {\n        this._minx = x\n        this._maxx = x\n        this._miny = y\n        this._maxy = y\n      } else {\n        if (x < this._minx) \n          this._minx = x\n        \n        if (x > this._maxx) \n          this._maxx = x\n        \n        if (y < this._miny) \n          this._miny = y\n        \n        if (y > this._maxy) \n          this._maxy = y\n        \n      }\n    }\n  }\n  minExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w < h) return w\n    return h\n  }\n  getWidth() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxx - this._minx\n  }\n  compareTo(o) {\n    const env = o\n    if (this.isNull()) {\n      if (env.isNull()) return 0\n      return -1\n    } else {\n      if (env.isNull()) return 1\n    }\n    if (this._minx < env._minx) return -1\n    if (this._minx > env._minx) return 1\n    if (this._miny < env._miny) return -1\n    if (this._miny > env._miny) return 1\n    if (this._maxx < env._maxx) return -1\n    if (this._maxx > env._maxx) return 1\n    if (this._maxy < env._maxy) return -1\n    if (this._maxy > env._maxy) return 1\n    return 0\n  }\n  translate(transX, transY) {\n    if (this.isNull()) \n      return null\n    \n    this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY)\n  }\n  copy() {\n    return new Envelope(this)\n  }\n  toString() {\n    return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n  }\n  setToNull() {\n    this._minx = 0\n    this._maxx = -1\n    this._miny = 0\n    this._maxy = -1\n  }\n  disjoint(other) {\n    if (this.isNull() || other.isNull()) \n      return true\n    \n    return other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny\n  }\n  getHeight() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxy - this._miny\n  }\n  maxExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w > h) return w\n    return h\n  }\n  expandBy() {\n    if (arguments.length === 1) {\n      const distance = arguments[0]\n      this.expandBy(distance, distance)\n    } else if (arguments.length === 2) {\n      const deltaX = arguments[0], deltaY = arguments[1]\n      if (this.isNull()) return null\n      this._minx -= deltaX\n      this._maxx += deltaX\n      this._miny -= deltaY\n      this._maxy += deltaY\n      if (this._minx > this._maxx || this._miny > this._maxy) this.setToNull()\n    }\n  }\n  contains() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        return this.covers(other)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      return this.covers(x, y)\n    }\n  }\n  centre() {\n    if (this.isNull()) return null\n    return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n  }\n  init() {\n    if (arguments.length === 0) {\n      this.setToNull()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this._minx = env._minx\n        this._maxx = env._maxx\n        this._miny = env._miny\n        this._maxy = env._maxy\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      if (x1 < x2) {\n        this._minx = x1\n        this._maxx = x2\n      } else {\n        this._minx = x2\n        this._maxx = x1\n      }\n      if (y1 < y2) {\n        this._miny = y1\n        this._maxy = y2\n      } else {\n        this._miny = y2\n        this._maxy = y1\n      }\n    }\n  }\n  getMaxY() {\n    return this._maxy\n  }\n  distance(env) {\n    if (this.intersects(env)) return 0\n    let dx = 0.0\n    if (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx\n    let dy = 0.0\n    if (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy\n    if (dx === 0.0) return dy\n    if (dy === 0.0) return dx\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this._minx)\n    result = 37 * result + Coordinate.hashCode(this._maxx)\n    result = 37 * result + Coordinate.hashCode(this._miny)\n    result = 37 * result + Coordinate.hashCode(this._maxy)\n    return result\n  }\n  get interfaces_() {\n    return [Comparable, Serializable]\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Envelope from './Envelope.js'\nexport default class Geometry {\n  constructor() {\n    Geometry.constructor_.apply(this, arguments)\n  }\n\n  isGeometryCollection() {\n    return this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n\n  getFactory() {\n    return this._factory\n  }\n\n  getGeometryN(n) {\n    return this\n  }\n\n  getArea() {\n    return 0.0\n  }\n\n  isRectangle() {\n    return false\n  }\n\n  equalsExact(other) {\n    return this === other || this.equalsExact(other, 0)\n  }\n\n  geometryChanged() {\n    this.apply(Geometry.geometryChangedFilter)\n  }\n\n  geometryChangedAction() {\n    this._envelope = null\n  }\n\n  equalsNorm(g) {\n    if (g === null) return false\n    return this.norm().equalsExact(g.norm())\n  }\n\n  getLength() {\n    return 0.0\n  }\n\n  getNumGeometries() {\n    return 1\n  }\n\n  compareTo() {\n    let other\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o)\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o, comp)\n    }\n  }\n\n  getUserData() {\n    return this._userData\n  }\n\n  getSRID() {\n    return this._SRID\n  }\n\n  getEnvelope() {\n    return this.getFactory().toGeometry(this.getEnvelopeInternal())\n  }\n\n  checkNotGeometryCollection(g) {\n    if (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n\n  equal(a, b, tolerance) {\n    if (tolerance === 0) return a.equals(b)\n\n    return a.distance(b) <= tolerance\n  }\n\n  norm() {\n    const copy = this.copy()\n    copy.normalize()\n    return copy\n  }\n\n  reverse() {\n    const res = this.reverseInternal()\n    if (this.envelope != null) res.envelope = this.envelope.copy()\n\n    res.setSRID(this.getSRID())\n    return res\n  }\n\n  copy() {\n    const copy = this.copyInternal()\n    copy.envelope = this._envelope == null ? null : this._envelope.copy()\n    copy._SRID = this._SRID\n    copy._userData = this._userData\n    return copy\n  }\n\n  getPrecisionModel() {\n    return this._factory.getPrecisionModel()\n  }\n\n  getEnvelopeInternal() {\n    if (this._envelope === null) this._envelope = this.computeEnvelopeInternal()\n\n    return new Envelope(this._envelope)\n  }\n\n  setSRID(SRID) {\n    this._SRID = SRID\n  }\n\n  setUserData(userData) {\n    this._userData = userData\n  }\n\n  compare(a, b) {\n    const i = a.iterator()\n    const j = b.iterator()\n    while (i.hasNext() && j.hasNext()) {\n      const aElement = i.next()\n      const bElement = j.next()\n      const comparison = aElement.compareTo(bElement)\n      if (comparison !== 0) return comparison\n    }\n    if (i.hasNext()) return 1\n\n    if (j.hasNext()) return -1\n\n    return 0\n  }\n\n  hashCode() {\n    return this.getEnvelopeInternal().hashCode()\n  }\n\n  isEquivalentClass(other) {\n    return this.getClass() === other.getClass()\n  }\n\n  isGeometryCollectionOrDerived() {\n    if (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) return true\n\n    return false\n  }\n\n  get interfaces_() {\n    return [Cloneable, Comparable, Serializable]\n  }\n\n  getClass() {\n    return Geometry\n  }\n\n  static hasNonEmptyElements(geometries) {\n    for (let i = 0; i < geometries.length; i++)\n      if (!geometries[i].isEmpty()) return true\n\n    return false\n  }\n\n  static hasNullElements(array) {\n    for (let i = 0; i < array.length; i++)\n      if (array[i] === null) return true\n\n    return false\n  }\n}\nGeometry.constructor_ = function(factory) {\n  if (!factory) return\n  this._envelope = null\n  this._userData = null\n  this._factory = factory\n  this._SRID = factory.getSRID()\n}\nGeometry.TYPECODE_POINT = 0\nGeometry.TYPECODE_MULTIPOINT = 1\nGeometry.TYPECODE_LINESTRING = 2\nGeometry.TYPECODE_LINEARRING = 3\nGeometry.TYPECODE_MULTILINESTRING = 4\nGeometry.TYPECODE_POLYGON = 5\nGeometry.TYPECODE_MULTIPOLYGON = 6\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7\nGeometry.TYPENAME_POINT = 'Point'\nGeometry.TYPENAME_MULTIPOINT = 'MultiPoint'\nGeometry.TYPENAME_LINESTRING = 'LineString'\nGeometry.TYPENAME_LINEARRING = 'LinearRing'\nGeometry.TYPENAME_MULTILINESTRING = 'MultiLineString'\nGeometry.TYPENAME_POLYGON = 'Polygon'\nGeometry.TYPENAME_MULTIPOLYGON = 'MultiPolygon'\nGeometry.TYPENAME_GEOMETRYCOLLECTION = 'GeometryCollection'\nGeometry.geometryChangedFilter = {\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  },\n  filter(geom) {\n    geom.geometryChangedAction()\n  }\n}\n","export default class CoordinateFilter {\n  filter(coord) {}\n}\n","export default class Lineal {}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequences {\n  static copyCoord(src, srcPos, dest, destPos) {\n    const minDim = Math.min(src.getDimension(), dest.getDimension())\n    for (let dim = 0; dim < minDim; dim++) \n      dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim))\n    \n  }\n  static isRing(seq) {\n    const n = seq.size()\n    if (n === 0) return true\n    if (n <= 3) return false\n    return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n  }\n  static scroll() {\n    if (arguments.length === 2) {\n      if (hasInterface(arguments[0], CoordinateSequence) && Number.isInteger(arguments[1])) {\n        const seq = arguments[0], indexOfFirstCoordinate = arguments[1]\n        CoordinateSequences.scroll(seq, indexOfFirstCoordinate, CoordinateSequences.isRing(seq))\n      } else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof Coordinate) {\n        const seq = arguments[0], firstCoordinate = arguments[1]\n        const i = CoordinateSequences.indexOf(firstCoordinate, seq)\n        if (i <= 0) return null\n        CoordinateSequences.scroll(seq, i)\n      }\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], indexOfFirstCoordinate = arguments[1], ensureRing = arguments[2]\n      const i = indexOfFirstCoordinate\n      if (i <= 0) return null\n      const copy = seq.copy()\n      const last = ensureRing ? seq.size() - 1 : seq.size()\n      for (let j = 0; j < last; j++) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(j, k, copy.getOrdinate((indexOfFirstCoordinate + j) % last, k))\n      \n      if (ensureRing) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(last, k, seq.getOrdinate(0, k))\n      \n    }\n  }\n  static isEqual(cs1, cs2) {\n    const cs1Size = cs1.size()\n    const cs2Size = cs2.size()\n    if (cs1Size !== cs2Size) return false\n    const dim = Math.min(cs1.getDimension(), cs2.getDimension())\n    for (let i = 0; i < cs1Size; i++) \n      for (let d = 0; d < dim; d++) {\n        const v1 = cs1.getOrdinate(i, d)\n        const v2 = cs2.getOrdinate(i, d)\n        if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue\n        if (Double.isNaN(v1) && Double.isNaN(v2)) continue\n        return false\n      }\n    \n    return true\n  }\n  static minCoordinateIndex() {\n    if (arguments.length === 1) {\n      const seq = arguments[0]\n      return CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 1)\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], from = arguments[1], to = arguments[2]\n      let minCoordIndex = -1\n      let minCoord = null\n      for (let i = from; i <= to; i++) {\n        const testCoord = seq.getCoordinate(i)\n        if (minCoord === null || minCoord.compareTo(testCoord) > 0) {\n          minCoord = testCoord\n          minCoordIndex = i\n        }\n      }\n      return minCoordIndex\n    }\n  }\n  static extend(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    if (n > 0) \n      for (let i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1)\n    \n    return newseq\n  }\n  static reverse(seq) {\n    const last = seq.size() - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) \n      CoordinateSequences.swap(seq, i, last - i)\n    \n  }\n  static swap(seq, i, j) {\n    if (i === j) return null\n    for (let dim = 0; dim < seq.getDimension(); dim++) {\n      const tmp = seq.getOrdinate(i, dim)\n      seq.setOrdinate(i, dim, seq.getOrdinate(j, dim))\n      seq.setOrdinate(j, dim, tmp)\n    }\n  }\n  static copy(src, srcPos, dest, destPos, length) {\n    for (let i = 0; i < length; i++) \n      CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i)\n    \n  }\n  static ensureValidRing(fact, seq) {\n    const n = seq.size()\n    if (n === 0) return seq\n    if (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4)\n    const isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n    if (isClosed) return seq\n    return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n  }\n  static indexOf(coordinate, seq) {\n    for (let i = 0; i < seq.size(); i++) \n      if (coordinate.x === seq.getOrdinate(i, CoordinateSequence.X) && coordinate.y === seq.getOrdinate(i, CoordinateSequence.Y)) \n        return i\n      \n    \n    return -1\n  }\n  static createClosedRing(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    for (let i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1)\n    return newseq\n  }\n  static minCoordinate(seq) {\n    let minCoord = null\n    for (let i = 0; i < seq.size(); i++) {\n      const testCoord = seq.getCoordinate(i)\n      if (minCoord === null || minCoord.compareTo(testCoord) > 0) \n        minCoord = testCoord\n      \n    }\n    return minCoord\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class UnsupportedOperationException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ UnsupportedOperationException })[0]\n  }\n}\n","export default class Character {\n  static isWhitespace(c) {\n    return ((c <= 32 && c >= 0) || c === 127)\n  }\n\n  static toUpperCase(c) {\n    return c.toUpperCase()\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Character from '../../../../java/lang/Character.js'\nexport default class Dimension {\n  static toDimensionSymbol(dimensionValue) {\n    switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    }\n    throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n  }\n  static toDimensionValue(dimensionSymbol) {\n    switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    }\n    throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n  }\n}\nDimension.P = 0\nDimension.L = 1\nDimension.A = 2\nDimension.FALSE = -1\nDimension.TRUE = -2\nDimension.DONTCARE = -3\nDimension.SYM_FALSE = 'F'\nDimension.SYM_TRUE = 'T'\nDimension.SYM_DONTCARE = '*'\nDimension.SYM_P = '0'\nDimension.SYM_L = '1'\nDimension.SYM_A = '2'\n","export default class GeometryFilter {\n  filter(geom) {}\n}\n","export default class CoordinateSequenceFilter {\n  filter(seq, i) {}\n  isDone() {}\n  isGeometryChanged() {}\n}\n","import Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Length from '../algorithm/Length.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Lineal from './Lineal.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport Dimension from './Dimension.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nexport default class LineString extends Geometry {\n  constructor() {\n    super()\n    LineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._points = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const points = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      this.init(points)\n    }\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    return this._points.expandEnvelope(new Envelope())\n  }\n  isRing() {\n    return this.isClosed() && this.isSimple()\n  }\n  getCoordinates() {\n    return this._points.toCoordinateArray()\n  }\n  copyInternal() {\n    return new LineString(this._points.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherLineString = other\n      if (this._points.size() !== otherLineString._points.size()) \n        return false\n      \n      for (let i = 0; i < this._points.size(); i++) \n        if (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {\n    for (let i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      const j = this._points.size() - 1 - i\n      if (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n        if (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n          const copy = this._points.copy()\n          CoordinateSequences.reverse(copy)\n          this._points = copy\n        }\n        return null\n      }\n    }\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._points.getCoordinate(0)\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLineString(seq)\n  }\n  getEndPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(this.getNumPoints() - 1)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getLength() {\n    return Length.ofLine(this._points)\n  }\n  getNumPoints() {\n    return this._points.size()\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const line = o\n      let i = 0\n      let j = 0\n      while (i < this._points.size() && j < line._points.size()) {\n        const comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j))\n        if (comparison !== 0) \n          return comparison\n        \n        i++\n        j++\n      }\n      if (i < this._points.size()) \n        return 1\n      \n      if (j < line._points.size()) \n        return -1\n      \n      return 0\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const line = o\n      return comp.compare(this._points, line._points)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._points.size(); i++) \n        filter.filter(this._points.getCoordinate(i))\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._points.size() === 0) return null\n      for (let i = 0; i < this._points.size(); i++) {\n        filter.filter(this._points, i)\n        if (filter.isDone()) break\n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  isEquivalentClass(other) {\n    return other instanceof LineString\n  }\n  getCoordinateN(n) {\n    return this._points.getCoordinate(n)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINESTRING\n  }\n  getCoordinateSequence() {\n    return this._points\n  }\n  isEmpty() {\n    return this._points.size() === 0\n  }\n  init(points) {\n    if (points === null) \n      points = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    if (points.size() === 1) \n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    \n    this._points = points\n  }\n  isCoordinate(pt) {\n    for (let i = 0; i < this._points.size(); i++) \n      if (this._points.getCoordinate(i).equals(pt)) \n        return true\n      \n    \n    return false\n  }\n  getStartPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(0)\n  }\n  getPointN(n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nexport default class Length {\n  static ofLine(pts) {\n    const n = pts.size()\n    if (n <= 1) return 0.0\n    let len = 0.0\n    const p = new Coordinate()\n    pts.getCoordinate(0, p)\n    let x0 = p.x\n    let y0 = p.y\n    for (let i = 1; i < n; i++) {\n      pts.getCoordinate(i, p)\n      const x1 = p.x\n      const y1 = p.y\n      const dx = x1 - x0\n      const dy = y1 - y0\n      len += Math.sqrt(dx * dx + dy * dy)\n      x0 = x1\n      y0 = y1\n    }\n    return len\n  }\n}\n","export default class Puntal {}\n","import Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Puntal from './Puntal.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nexport default class Point extends Geometry {\n  constructor() {\n    super()\n    Point.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coordinates = null\n    const coordinates = arguments[0], factory = arguments[1]\n    Geometry.constructor_.call(this, factory)\n    this.init(coordinates)\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    const env = new Envelope()\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0))\n    return env\n  }\n  getCoordinates() {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  }\n  copyInternal() {\n    return new Point(this._coordinates.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      if (this.isEmpty() && other.isEmpty()) \n        return true\n      \n      if (this.isEmpty() !== other.isEmpty()) \n        return false\n      \n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {}\n  getCoordinate() {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  reverseInternal() {\n    return this.getFactory().createPoint(this._coordinates.copy())\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POINT\n  }\n  getDimension() {\n    return 0\n  }\n  getNumPoints() {\n    return this.isEmpty() ? 0 : 1\n  }\n  getX() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getX called on empty Point')\n    \n    return this.getCoordinate().x\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      const point = other\n      return this.getCoordinate().compareTo(point.getCoordinate())\n    } else if (arguments.length === 2) {\n      const other = arguments[0], comp = arguments[1]\n      const point = other\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) \n        return null\n      \n      filter.filter(this.getCoordinate())\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) return null\n      filter.filter(this._coordinates, 0)\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POINT\n  }\n  getCoordinateSequence() {\n    return this._coordinates\n  }\n  getY() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getY called on empty Point')\n    \n    return this.getCoordinate().y\n  }\n  isEmpty() {\n    return this._coordinates.size() === 0\n  }\n  init(coordinates) {\n    if (coordinates === null) \n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    Assert.isTrue(coordinates.size() <= 1)\n    this._coordinates = coordinates\n  }\n  isSimple() {\n    return true\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Area {\n  static ofRing() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    }\n  }\n  static ofRingSigned() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      if (ring.length < 3) return 0.0\n      let sum = 0.0\n      const x0 = ring[0].x\n      for (let i = 1; i < ring.length - 1; i++) {\n        const x = ring[i].x - x0\n        const y1 = ring[i + 1].y\n        const y2 = ring[i - 1].y\n        sum += x * (y2 - y1)\n      }\n      return sum / 2.0\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const n = ring.size()\n      if (n < 3) return 0.0\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      ring.getCoordinate(0, p1)\n      ring.getCoordinate(1, p2)\n      const x0 = p1.x\n      p2.x -= x0\n      let sum = 0.0\n      for (let i = 1; i < n - 1; i++) {\n        p0.y = p1.y\n        p1.x = p2.x\n        p1.y = p2.y\n        ring.getCoordinate(i + 1, p2)\n        p2.x -= x0\n        sum += p1.x * (p0.y - p2.y)\n      }\n      return sum / 2.0\n    }\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n */\nexport default class Collection {\n  /**\n     * Ensures that this collection contains the specified element (optional\n     * operation).\n     * @param {Object} e\n     * @return {boolean}\n     */\n  add() { }\n  /**\n     * Appends all of the elements in the specified collection to the end of this\n     * list, in the order that they are returned by the specified collection's\n     * iterator (optional operation).\n     * @param {javascript.util.Collection} c\n     * @return {boolean}\n     */\n  addAll() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {javascript.util.Iterator}\n     */\n  iterator() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {number}\n     */\n  size() { }\n  /**\n     * Returns an array containing all of the elements in this collection.\n     * @return {Array}\n     */\n  toArray() { }\n  /**\n     * Removes a single instance of the specified element from this collection if it\n     * is present. (optional)\n     * @param {Object} e\n     * @return {boolean}\n     */\n  remove() { }\n}\n","import Exception from './Exception.js'\n\nexport default class IndexOutOfBoundsException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IndexOutOfBoundsException })[0]\n  } \n}","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n */\nexport default class List extends Collection {\n  /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index\n     * @return {Object}\n     */\n  get() { }\n  /**\n     * Replaces the element at the specified position in this list with the\n     * specified element (optional operation).\n     * @param {number} index\n     * @param {Object} e\n     * @return {Object}\n     */\n  set() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n}\n","import Exception from '../lang/Exception.js'\n\nexport default class NoSuchElementException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ NoSuchElementException })[0]\n  }\n}","import Collection from './Collection.js'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException.js'\nimport List from './List.js'\nimport NoSuchElementException from './NoSuchElementException.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n */\nexport default class ArrayList extends List {\n\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection) this.addAll(o)\n  }\n\n  get interfaces_() {\n    return [List, Collection]\n  }\n\n  ensureCapacity() { }\n\n  add(e) {\n    if (arguments.length === 1)\n      this.array.push(e)\n    else\n      this.array.splice(arguments[0], 0, arguments[1])\n    return true\n  }\n\n  clear() {\n    this.array = []\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.array.push(e)\n  }\n\n  set(index, element) {\n    const oldElement = this.array[index]\n    this.array[index] = element\n    return oldElement\n  }\n\n  iterator() {\n    return new Iterator(this)\n  }\n\n  get(index) {\n    if (index < 0 || index >= this.size())\n      throw new IndexOutOfBoundsException()\n    return this.array[index]\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  sort(comparator) {\n    if (comparator)\n      this.array.sort((a, b) => comparator.compare(a, b))\n    else this.array.sort()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  remove(o) {\n    for (let i = 0, len = this.array.length; i < len; i++)\n      if (this.array[i] === o)\n        return !!this.array.splice(i, 1)\n    return false\n  }\n\n  [Symbol.iterator]() {\n    return this.array.values()\n  }\n}\n\nclass Iterator {\n  constructor(arrayList) {\n    this.arrayList = arrayList\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.arrayList.size())\n      throw new NoSuchElementException()\n    return this.arrayList.get(this.position++)\n  }\n\n  hasNext() {\n    return this.position < this.arrayList.size()\n  }\n\n  set(element) {\n    return this.arrayList.set(this.position - 1, element)\n  }\n\n  remove() {\n    this.arrayList.remove(this.arrayList.get(this.position))\n  }\n}\n","import ArrayList from './ArrayList.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n */\nexport default class Arrays {\n  static sort() {\n    const a = arguments[0]\n    if (arguments.length === 1) {\n      a.sort((a, b) => a.compareTo(b))\n    } else if (arguments.length === 2) {\n      a.sort((a, b) => arguments[1].compare(a, b))\n    } else if (arguments.length === 3) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort()\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    } else if (arguments.length === 4) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort((a, b) => arguments[3].compare(a, b))\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    }\n  }\n\n  /**\n   * @param {Array} array\n   * @return {ArrayList}\n   */\n  static asList(array) {\n    const arrayList = new ArrayList()\n    for (const e of array)\n      arrayList.add(e)\n    return arrayList\n  }\n\n  static copyOf(original, newLength) {\n    return original.slice(0, newLength)\n  }\n}\n","export default class StringBuffer {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","export default class Integer {\n  constructor(value) {\n    this.value = value\n  }\n\n  intValue() {\n    return this.value\n  }\n\n  compareTo(o) {\n    if (this.value < o)\n      return -1\n    if (this.value > o)\n      return 1\n    return 0\n  }\n\n  static compare(x, y) {\n    if (x < y)\n      return -1\n    if (x > y)\n      return 1\n    return 0\n  }\n\n  static isNan(n) {\n    return Number.isNaN(n)\n  }\n\n  static valueOf(value) {\n    return new Integer(value)\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Character from '../../../../java/lang/Character.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class DD {\n  constructor() {\n    DD.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hi = 0.0\n    this._lo = 0.0\n    if (arguments.length === 0) {\n      this.init(0.0)\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this.init(x)\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this.init(dd)\n      } else if (typeof arguments[0] === 'string') {\n        const str = arguments[0]\n        DD.constructor_.call(this, DD.parse(str))\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this.init(hi, lo)\n    }\n  }\n  static determinant() {\n    if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      return DD.determinant(DD.valueOf(x1), DD.valueOf(y1), DD.valueOf(x2), DD.valueOf(y2))\n    } else if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det\n    }\n  }\n  static sqr(x) {\n    return DD.valueOf(x).selfMultiply(x)\n  }\n  static valueOf() {\n    if (typeof arguments[0] === 'string') {\n      const str = arguments[0]\n      return DD.parse(str)\n    } else if (typeof arguments[0] === 'number') {\n      const x = arguments[0]\n      return new DD(x)\n    }\n  }\n  static sqrt(x) {\n    return DD.valueOf(x).sqrt()\n  }\n  static parse(str) {\n    let i = 0\n    const strlen = str.length\n    while (Character.isWhitespace(str.charAt(i))) i++\n    let isNegative = false\n    if (i < strlen) {\n      const signCh = str.charAt(i)\n      if (signCh === '-' || signCh === '+') {\n        i++\n        if (signCh === '-') isNegative = true\n      }\n    }\n    const val = new DD()\n    let numDigits = 0\n    let numBeforeDec = 0\n    let exp = 0\n    let hasDecimalChar = false\n    while (true) {\n      if (i >= strlen) break\n      const ch = str.charAt(i)\n      i++\n      if (Character.isDigit(ch)) {\n        const d = ch - '0'\n        val.selfMultiply(DD.TEN)\n        val.selfAdd(d)\n        numDigits++\n        continue\n      }\n      if (ch === '.') {\n        numBeforeDec = numDigits\n        hasDecimalChar = true\n        continue\n      }\n      if (ch === 'e' || ch === 'E') {\n        const expStr = str.substring(i)\n        try {\n          exp = Integer.parseInt(expStr)\n        } catch (ex) {\n          if (ex instanceof NumberFormatException) \n            throw new NumberFormatException('Invalid exponent ' + expStr + ' in string ' + str)\n          else throw ex\n        } finally {}\n        break\n      }\n      throw new NumberFormatException('Unexpected character \\'' + ch + '\\' at position ' + i + ' in string ' + str)\n    }\n    let val2 = val\n    if (!hasDecimalChar) numBeforeDec = numDigits\n    const numDecPlaces = numDigits - numBeforeDec - exp\n    if (numDecPlaces === 0) {\n      val2 = val\n    } else if (numDecPlaces > 0) {\n      const scale = DD.TEN.pow(numDecPlaces)\n      val2 = val.divide(scale)\n    } else if (numDecPlaces < 0) {\n      const scale = DD.TEN.pow(-numDecPlaces)\n      val2 = val.multiply(scale)\n    }\n    if (isNegative) \n      return val2.negate()\n    \n    return val2\n  }\n  static createNaN() {\n    return new DD(Double.NaN, Double.NaN)\n  }\n  static copy(dd) {\n    return new DD(dd)\n  }\n  static magnitude(x) {\n    const xAbs = Math.abs(x)\n    const xLog10 = Math.log(xAbs) / Math.log(10)\n    let xMag = Math.trunc(Math.floor(xLog10))\n    const xApprox = Math.pow(10, xMag)\n    if (xApprox * 10 <= xAbs) xMag += 1\n    return xMag\n  }\n  static stringOfChar(ch, len) {\n    const buf = new StringBuffer()\n    for (let i = 0; i < len; i++) \n      buf.append(ch)\n    \n    return buf.toString()\n  }\n  le(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo\n  }\n  extractSignificantDigits(insertDecimalPoint, magnitude) {\n    let y = this.abs()\n    let mag = DD.magnitude(y._hi)\n    const scale = DD.TEN.pow(mag)\n    y = y.divide(scale)\n    if (y.gt(DD.TEN)) {\n      y = y.divide(DD.TEN)\n      mag += 1\n    } else if (y.lt(DD.ONE)) {\n      y = y.multiply(DD.TEN)\n      mag -= 1\n    }\n    const decimalPointPos = mag + 1\n    const buf = new StringBuffer()\n    const numDigits = DD.MAX_PRINT_DIGITS - 1\n    for (let i = 0; i <= numDigits; i++) {\n      if (insertDecimalPoint && i === decimalPointPos) \n        buf.append('.')\n      \n      const digit = Math.trunc(y._hi)\n      if (digit < 0 || digit > 9) {}\n      if (digit < 0) \n        break\n      \n      let rebiasBy10 = false\n      let digitChar = 0\n      if (digit > 9) {\n        rebiasBy10 = true\n        digitChar = '9'\n      } else {\n        digitChar = '0' + digit\n      }\n      buf.append(digitChar)\n      y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN)\n      if (rebiasBy10) y.selfAdd(DD.TEN)\n      let continueExtractingDigits = true\n      const remMag = DD.magnitude(y._hi)\n      if (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false\n      if (!continueExtractingDigits) break\n    }\n    magnitude[0] = mag\n    return buf.toString()\n  }\n  sqr() {\n    return this.multiply(this)\n  }\n  doubleValue() {\n    return this._hi + this._lo\n  }\n  subtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this.add(y.negate())\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return this.add(-y)\n    }\n  }\n  equals() {\n    if (arguments.length === 1 && arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this._hi === y._hi && this._lo === y._lo\n    }\n  }\n  isZero() {\n    return this._hi === 0.0 && this._lo === 0.0\n  }\n  selfSubtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y._hi, -y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y, 0.0)\n    }\n  }\n  getSpecialNumberString() {\n    if (this.isZero()) return '0.0'\n    if (this.isNaN()) return 'NaN '\n    return null\n  }\n  min(x) {\n    if (this.le(x)) \n      return this\n    else \n      return x\n    \n  }\n  selfDivide() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfDivide(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfDivide(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / yhi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * yhi\n      hc = c - hc\n      tc = C - hc\n      hy = u - yhi\n      U = C * yhi\n      hy = u - hy\n      ty = yhi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * ylo) / yhi\n      u = C + c\n      this._hi = u\n      this._lo = C - u + c\n      return this\n    }\n  }\n  dump() {\n    return 'DD<' + this._hi + ', ' + this._lo + '>'\n  }\n  divide() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / y._hi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * y._hi\n      hc = c - hc\n      tc = C - hc\n      hy = u - y._hi\n      U = C * y._hi\n      hy = u - hy\n      ty = y._hi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * y._lo) / y._hi\n      u = C + c\n      const zhi = u\n      const zlo = C - u + c\n      return new DD(zhi, zlo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfDivide(y, 0.0)\n    }\n  }\n  ge(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo\n  }\n  pow(exp) {\n    if (exp === 0.0) return DD.valueOf(1.0)\n    let r = new DD(this)\n    let s = DD.valueOf(1.0)\n    let n = Math.abs(exp)\n    if (n > 1) \n      while (n > 0) {\n        if (n % 2 === 1) \n          s.selfMultiply(r)\n        \n        n /= 2\n        if (n > 0) r = r.sqr()\n      }\n    else \n      s = r\n    \n    if (exp < 0) return s.reciprocal()\n    return s\n  }\n  ceil() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.ceil(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.ceil(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  compareTo(o) {\n    const other = o\n    if (this._hi < other._hi) return -1\n    if (this._hi > other._hi) return 1\n    if (this._lo < other._lo) return -1\n    if (this._lo > other._lo) return 1\n    return 0\n  }\n  rint() {\n    if (this.isNaN()) return this\n    const plus5 = this.add(0.5)\n    return plus5.floor()\n  }\n  setValue() {\n    if (arguments[0] instanceof DD) {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    } else if (typeof arguments[0] === 'number') {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    }\n  }\n  max(x) {\n    if (this.ge(x)) \n      return this\n    else \n      return x\n    \n  }\n  sqrt() {\n    if (this.isZero()) return DD.valueOf(0.0)\n    if (this.isNegative()) \n      return DD.NaN\n    \n    const x = 1.0 / Math.sqrt(this._hi)\n    const ax = this._hi * x\n    const axdd = DD.valueOf(ax)\n    const diffSq = this.subtract(axdd.sqr())\n    const d2 = diffSq._hi * (x * 0.5)\n    return axdd.add(d2)\n  }\n  selfAdd() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfAdd(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        let H = null, h = null, S = null, s = null, e = null, f = null\n        S = this._hi + y\n        e = S - this._hi\n        s = S - e\n        s = y - e + (this._hi - s)\n        f = s + this._lo\n        H = S + f\n        h = f + (S - H)\n        this._hi = H + h\n        this._lo = h + (H - this._hi)\n        return this\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null\n      S = this._hi + yhi\n      T = this._lo + ylo\n      e = S - this._hi\n      f = T - this._lo\n      s = S - e\n      t = T - f\n      s = yhi - e + (this._hi - s)\n      t = ylo - f + (this._lo - t)\n      e = s + T\n      H = S + e\n      h = e + (S - H)\n      e = t + h\n      const zhi = H + e\n      const zlo = e + (H - zhi)\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfMultiply() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfMultiply(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfMultiply(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hx = null, tx = null, hy = null, ty = null, C = null, c = null\n      C = DD.SPLIT * this._hi\n      hx = C - this._hi\n      c = DD.SPLIT * yhi\n      hx = C - hx\n      tx = this._hi - hx\n      hy = c - yhi\n      C = this._hi * yhi\n      hy = c - hy\n      ty = yhi - hy\n      c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi)\n      const zhi = C + c\n      hx = C - zhi\n      const zlo = c + hx\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfSqr() {\n    return this.selfMultiply(this)\n  }\n  floor() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.floor(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.floor(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  negate() {\n    if (this.isNaN()) return this\n    return new DD(-this._hi, -this._lo)\n  }\n  clone() {\n    try {\n      return null\n    } catch (ex) {\n      if (ex instanceof CloneNotSupportedException) \n        return null\n      else throw ex\n    } finally {}\n  }\n  multiply() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (y.isNaN()) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y, 0.0)\n    }\n  }\n  isNaN() {\n    return Double.isNaN(this._hi)\n  }\n  intValue() {\n    return Math.trunc(this._hi)\n  }\n  toString() {\n    const mag = DD.magnitude(this._hi)\n    if (mag >= -3 && mag <= 20) return this.toStandardNotation()\n    return this.toSciNotation()\n  }\n  toStandardNotation() {\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const sigDigits = this.extractSignificantDigits(true, magnitude)\n    const decimalPointPos = magnitude[0] + 1\n    let num = sigDigits\n    if (sigDigits.charAt(0) === '.') {\n      num = '0' + sigDigits\n    } else if (decimalPointPos < 0) {\n      num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits\n    } else if (sigDigits.indexOf('.') === -1) {\n      const numZeroes = decimalPointPos - sigDigits.length\n      const zeroes = DD.stringOfChar('0', numZeroes)\n      num = sigDigits + zeroes + '.0'\n    }\n    if (this.isNegative()) return '-' + num\n    return num\n  }\n  reciprocal() {\n    let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n    C = 1.0 / this._hi\n    c = DD.SPLIT * C\n    hc = c - C\n    u = DD.SPLIT * this._hi\n    hc = c - hc\n    tc = C - hc\n    hy = u - this._hi\n    U = C * this._hi\n    hy = u - hy\n    ty = this._hi - hy\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty\n    c = (1.0 - U - u - C * this._lo) / this._hi\n    const zhi = C + c\n    const zlo = C - zhi + c\n    return new DD(zhi, zlo)\n  }\n  toSciNotation() {\n    if (this.isZero()) return DD.SCI_NOT_ZERO\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const digits = this.extractSignificantDigits(false, magnitude)\n    const expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0]\n    if (digits.charAt(0) === '0') \n      throw new IllegalStateException('Found leading zero: ' + digits)\n    \n    let trailingDigits = ''\n    if (digits.length > 1) trailingDigits = digits.substring(1)\n    const digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits\n    if (this.isNegative()) return '-' + digitsWithDecimal + expStr\n    return digitsWithDecimal + expStr\n  }\n  abs() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isNegative()) return this.negate()\n    return new DD(this)\n  }\n  isPositive() {\n    return this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0\n  }\n  lt(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo < y._lo\n  }\n  add() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    }\n  }\n  init() {\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this._hi = x\n        this._lo = 0.0\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this._hi = dd._hi\n        this._lo = dd._lo\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this._hi = hi\n      this._lo = lo\n    }\n  }\n  gt(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo > y._lo\n  }\n  isNegative() {\n    return this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0\n  }\n  trunc() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isPositive()) return this.floor(); else return this.ceil()\n  }\n  signum() {\n    if (this._hi > 0) return 1\n    if (this._hi < 0) return -1\n    if (this._lo > 0) return 1\n    if (this._lo < 0) return -1\n    return 0\n  }\n  get interfaces_() {\n    return [Serializable, Comparable, Cloneable]\n  }\n}\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16)\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16)\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17)\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16)\nDD.NaN = new DD(Double.NaN, Double.NaN)\nDD.EPS = 1.23259516440783e-32\nDD.SPLIT = 134217729.0\nDD.MAX_PRINT_DIGITS = 32\nDD.TEN = DD.valueOf(10.0)\nDD.ONE = DD.valueOf(1.0)\nDD.SCI_NOT_EXPONENT_CHAR = 'E'\nDD.SCI_NOT_ZERO = '0.0E0'\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport DD from '../math/DD.js'\nexport default class CGAlgorithmsDD {\n  static orientationIndex(p1, p2, q) {\n    const index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q)\n    if (index <= 1) return index\n    const dx1 = DD.valueOf(p2.x).selfAdd(-p1.x)\n    const dy1 = DD.valueOf(p2.y).selfAdd(-p1.y)\n    const dx2 = DD.valueOf(q.x).selfAdd(-p2.x)\n    const dy2 = DD.valueOf(q.y).selfAdd(-p2.y)\n    return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n  }\n  static signOfDet2x2() {\n    if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    } else if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3]\n      const x1 = DD.valueOf(dx1)\n      const y1 = DD.valueOf(dy1)\n      const x2 = DD.valueOf(dx2)\n      const y2 = DD.valueOf(dy2)\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    }\n  }\n  static intersection(p1, p2, q1, q2) {\n    const px = new DD(p1.y).selfSubtract(p2.y)\n    const py = new DD(p2.x).selfSubtract(p1.x)\n    const pw = new DD(p1.x).selfMultiply(p2.y).selfSubtract(new DD(p2.x).selfMultiply(p1.y))\n    const qx = new DD(q1.y).selfSubtract(q2.y)\n    const qy = new DD(q2.x).selfSubtract(q1.x)\n    const qw = new DD(q1.x).selfMultiply(q2.y).selfSubtract(new DD(q2.x).selfMultiply(q1.y))\n    const x = py.multiply(qw).selfSubtract(qy.multiply(pw))\n    const y = qx.multiply(pw).selfSubtract(px.multiply(qw))\n    const w = px.multiply(qy).selfSubtract(qx.multiply(py))\n    const xInt = x.selfDivide(w).doubleValue()\n    const yInt = y.selfDivide(w).doubleValue()\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) \n      return null\n    \n    return new Coordinate(xInt, yInt)\n  }\n  static orientationIndexFilter(pa, pb, pc) {\n    let detsum = null\n    const detleft = (pa.x - pc.x) * (pb.y - pc.y)\n    const detright = (pa.y - pc.y) * (pb.x - pc.x)\n    const det = detleft - detright\n    if (detleft > 0.0) \n      if (detright <= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = detleft + detright\n      \n    else if (detleft < 0.0) \n      if (detright >= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = -detleft - detright\n      \n    else \n      return CGAlgorithmsDD.signum(det)\n    \n    const errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum\n    if (det >= errbound || -det >= errbound) \n      return CGAlgorithmsDD.signum(det)\n    \n    return 2\n  }\n  static signum(x) {\n    if (x > 0) return 1\n    if (x < 0) return -1\n    return 0\n  }\n}\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15\n","import hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CGAlgorithmsDD from './CGAlgorithmsDD.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Orientation {\n  static index(p1, p2, q) {\n    return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n  }\n  static isCCW() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      const nPts = ring.length - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring[0]\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring[i]\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n      } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n      let iNext = hiIndex\n      do \n        iNext = (iNext + 1) % nPts\n      while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n      const prev = ring[iPrev]\n      const next = ring[iNext]\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const nPts = ring.size() - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring.getCoordinate(0)\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring.getCoordinate(i)\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let prev = null\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n        prev = ring.getCoordinate(iPrev)\n      } while (prev.equals2D(hiPt) && iPrev !== hiIndex)\n      let next = null\n      let iNext = hiIndex\n      do {\n        iNext = (iNext + 1) % nPts\n        next = ring.getCoordinate(iNext)\n      } while (next.equals2D(hiPt) && iNext !== hiIndex)\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    }\n  }\n}\nOrientation.CLOCKWISE = -1\nOrientation.RIGHT = Orientation.CLOCKWISE\nOrientation.COUNTERCLOCKWISE = 1\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE\nOrientation.COLLINEAR = 0\nOrientation.STRAIGHT = Orientation.COLLINEAR\n","export default class Polygonal {}\n","import Area from '../algorithm/Area.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Polygonal from './Polygonal.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nexport default class Polygon extends Geometry {\n  constructor() {\n    super()\n    Polygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._shell = null\n    this._holes = null\n    let shell = arguments[0], holes = arguments[1], factory = arguments[2]\n    Geometry.constructor_.call(this, factory)\n    if (shell === null) \n      shell = this.getFactory().createLinearRing()\n    \n    if (holes === null) \n      holes = []\n    \n    if (Geometry.hasNullElements(holes)) \n      throw new IllegalArgumentException('holes must not contain null elements')\n    \n    if (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) \n      throw new IllegalArgumentException('shell is empty but holes are not')\n    \n    this._shell = shell\n    this._holes = holes\n  }\n  computeEnvelopeInternal() {\n    return this._shell.getEnvelopeInternal()\n  }\n  getCoordinates() {\n    if (this.isEmpty()) \n      return []\n    \n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    const shellCoordinates = this._shell.getCoordinates()\n    for (let x = 0; x < shellCoordinates.length; x++) {\n      k++\n      coordinates[k] = shellCoordinates[x]\n    }\n    for (let i = 0; i < this._holes.length; i++) {\n      const childCoordinates = this._holes[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    area += Area.ofRing(this._shell.getCoordinateSequence())\n    for (let i = 0; i < this._holes.length; i++) \n      area -= Area.ofRing(this._holes[i].getCoordinateSequence())\n    \n    return area\n  }\n  copyInternal() {\n    const shellCopy = this._shell.copy()\n    const holeCopies = new Array(this._holes.length).fill(null)\n    for (let i = 0; i < this._holes.length; i++) \n      holeCopies[i] = this._holes[i].copy()\n    \n    return new Polygon(shellCopy, holeCopies, this._factory)\n  }\n  isRectangle() {\n    if (this.getNumInteriorRing() !== 0) return false\n    if (this._shell === null) return false\n    if (this._shell.getNumPoints() !== 5) return false\n    const seq = this._shell.getCoordinateSequence()\n    const env = this.getEnvelopeInternal()\n    for (let i = 0; i < 5; i++) {\n      const x = seq.getX(i)\n      if (!(x === env.getMinX() || x === env.getMaxX())) return false\n      const y = seq.getY(i)\n      if (!(y === env.getMinY() || y === env.getMaxY())) return false\n    }\n    let prevX = seq.getX(0)\n    let prevY = seq.getY(0)\n    for (let i = 1; i <= 4; i++) {\n      const x = seq.getX(i)\n      const y = seq.getY(i)\n      const xChanged = x !== prevX\n      const yChanged = y !== prevY\n      if (xChanged === yChanged) return false\n      prevX = x\n      prevY = y\n    }\n    return true\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherPolygon = other\n      const thisShell = this._shell\n      const otherPolygonShell = otherPolygon._shell\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) \n        return false\n      \n      if (this._holes.length !== otherPolygon._holes.length) \n        return false\n      \n      for (let i = 0; i < this._holes.length; i++) \n        if (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {\n    if (arguments.length === 0) {\n      this._shell = this.normalized(this._shell, true)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i] = this.normalized(this._holes[i], false)\n      \n      Arrays.sort(this._holes)\n    } else if (arguments.length === 2) {\n      const ring = arguments[0], clockwise = arguments[1]\n      if (ring.isEmpty()) \n        return null\n      \n      const seq = ring.getCoordinateSequence()\n      const minCoordinateIndex = CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 2)\n      CoordinateSequences.scroll(seq, minCoordinateIndex, true)\n      if (Orientation.isCCW(seq) === clockwise) CoordinateSequences.reverse(seq)\n    }\n  }\n  getCoordinate() {\n    return this._shell.getCoordinate()\n  }\n  getNumInteriorRing() {\n    return this._holes.length\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  reverseInternal() {\n    const shell = this.getExteriorRing().reverse()\n    const holes = new Array(this.getNumInteriorRing()).fill(null)\n    for (let i = 0; i < holes.length; i++) \n      holes[i] = this.getInteriorRingN(i).reverse()\n    \n    return this.getFactory().createPolygon(shell, holes)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getLength() {\n    let len = 0.0\n    len += this._shell.getLength()\n    for (let i = 0; i < this._holes.length; i++) \n      len += this._holes[i].getLength()\n    \n    return len\n  }\n  getNumPoints() {\n    let numPoints = this._shell.getNumPoints()\n    for (let i = 0; i < this._holes.length; i++) \n      numPoints += this._holes[i].getNumPoints()\n    \n    return numPoints\n  }\n  convexHull() {\n    return this.getExteriorRing().convexHull()\n  }\n  normalized(ring, clockwise) {\n    const res = ring.copy()\n    this.normalize(res, clockwise)\n    return res\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const thisShell = this._shell\n      const otherShell = o._shell\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const poly = o\n      const thisShell = this._shell\n      const otherShell = poly._shell\n      const shellComp = thisShell.compareToSameClass(otherShell, comp)\n      if (shellComp !== 0) return shellComp\n      const nHole1 = this.getNumInteriorRing()\n      const nHole2 = poly.getNumInteriorRing()\n      let i = 0\n      while (i < nHole1 && i < nHole2) {\n        const thisHole = this.getInteriorRingN(i)\n        const otherHole = poly.getInteriorRingN(i)\n        const holeComp = thisHole.compareToSameClass(otherHole, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < nHole1) return 1\n      if (i < nHole2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      if (!filter.isDone()) \n        for (let i = 0; i < this._holes.length; i++) {\n          this._holes[i].apply(filter)\n          if (filter.isDone()) break\n        }\n      \n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    }\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const rings = new Array(this._holes.length + 1).fill(null)\n    rings[0] = this._shell\n    for (let i = 0; i < this._holes.length; i++) \n      rings[i + 1] = this._holes[i]\n    \n    if (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence())\n    return this.getFactory().createMultiLineString(rings)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POLYGON\n  }\n  getExteriorRing() {\n    return this._shell\n  }\n  isEmpty() {\n    return this._shell.isEmpty()\n  }\n  getInteriorRingN(n) {\n    return this._holes[n]\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default class Set extends Collection {\n  /**\n   * Returns true if this set contains the specified element. More formally,\n   * returns true if and only if this set contains an element e such that (o==null ?\n   * e==null : o.equals(e)).\n   * @param {Object} e\n   * @return {boolean}\n   */\n  contains() { }\n}\n","import Set from './Set.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n */\nexport default class SortedSet extends Set {}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport SortedSet from './SortedSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n */\nexport default class TreeSet extends SortedSet {\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    for (const e of this.array)\n      if (e.compareTo(o) === 0)\n        return true\n    return false\n  }\n\n  add(o) {\n    if (this.contains(o))\n      return false\n    for (let i = 0, len = this.array.length; i < len; i++) {\n      const e = this.array[i]\n      if (e.compareTo(o) === 1)\n        return !!this.array.splice(i, 0, o)\n    }\n    this.array.push(o)\n    return true\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  iterator() {\n    return new Iterator(this.array)\n  }\n}\n\nclass Iterator {\n  constructor(array) {\n    this.array = array\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.array.length)\n      throw new NoSuchElementException()\n    return this.array[this.position++]\n  }\n\n  hasNext() {\n    return this.position < this.array.length\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","import TreeSet from '../../../../java/util/TreeSet.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nexport default class GeometryCollection extends Geometry {\n  constructor() {\n    super()\n    GeometryCollection.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometries = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      let geometries = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      if (geometries === null) \n        geometries = []\n      \n      if (Geometry.hasNullElements(geometries)) \n        throw new IllegalArgumentException('geometries must not contain null elements')\n      \n      this._geometries = geometries\n    }\n  }\n  computeEnvelopeInternal() {\n    const envelope = new Envelope()\n    for (let i = 0; i < this._geometries.length; i++) \n      envelope.expandToInclude(this._geometries[i].getEnvelopeInternal())\n    \n    return envelope\n  }\n  getGeometryN(n) {\n    return this._geometries[n]\n  }\n  getCoordinates() {\n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    for (let i = 0; i < this._geometries.length; i++) {\n      const childCoordinates = this._geometries[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      area += this._geometries[i].getArea()\n    \n    return area\n  }\n  copyInternal() {\n    const geometries = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < geometries.length; i++) \n      geometries[i] = this._geometries[i].copy()\n    \n    return new GeometryCollection(geometries, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherCollection = other\n      if (this._geometries.length !== otherCollection._geometries.length) \n        return false\n      \n      for (let i = 0; i < this._geometries.length; i++) \n        if (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {\n    for (let i = 0; i < this._geometries.length; i++) \n      this._geometries[i].normalize()\n    \n    Arrays.sort(this._geometries)\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._geometries[0].getCoordinate()\n  }\n  getBoundaryDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getBoundaryDimension())\n    \n    return dimension\n  }\n  reverseInternal() {\n    const numGeometries = this._geometries.length\n    const reversed = new ArrayList(numGeometries)\n    for (let i = 0; i < numGeometries; i++) \n      reversed.add(this._geometries[i].reverse())\n    \n    return this.getFactory().buildGeometry(reversed)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n  getDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getDimension())\n    \n    return dimension\n  }\n  getLength() {\n    let sum = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      sum += this._geometries[i].getLength()\n    \n    return sum\n  }\n  getNumPoints() {\n    let numPoints = 0\n    for (let i = 0; i < this._geometries.length; i++) \n      numPoints += this._geometries[i].getNumPoints()\n    \n    return numPoints\n  }\n  getNumGeometries() {\n    return this._geometries.length\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const theseElements = new TreeSet(Arrays.asList(this._geometries))\n      const otherElements = new TreeSet(Arrays.asList(o._geometries))\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const gc = o\n      const n1 = this.getNumGeometries()\n      const n2 = gc.getNumGeometries()\n      let i = 0\n      while (i < n1 && i < n2) {\n        const thisGeom = this.getGeometryN(i)\n        const otherGeom = gc.getGeometryN(i)\n        const holeComp = thisGeom.compareToSameClass(otherGeom, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < n1) return 1\n      if (i < n2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._geometries.length === 0) return null\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n        if (filter.isDone()) \n          break\n        \n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    }\n  }\n  getBoundary() {\n    Geometry.checkNotGeometryCollection(this)\n    Assert.shouldNeverReachHere()\n    return null\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_GEOMETRYCOLLECTION\n  }\n  isEmpty() {\n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isEmpty()) \n        return false\n      \n    \n    return true\n  }\n}\n","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Dimension from './Dimension.js'\nimport Puntal from './Puntal.js'\nexport default class MultiPoint extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPoint.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, points, factory)\n  }\n  copyInternal() {\n    const points = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < points.length; i++) \n      points[i] = this._geometries[i].copy()\n    \n    return new MultiPoint(points, this._factory)\n  }\n  isValid() {\n    return true\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getCoordinate() {\n    if (arguments.length === 1 && Number.isInteger(arguments[0])) {\n      const n = arguments[0]\n      return this._geometries[n].getCoordinate()\n    } else {\n      return super.getCoordinate.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOINT\n  }\n  getDimension() {\n    return 0\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOINT\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","import LineString from './LineString.js'\nimport Geometry from './Geometry.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport Dimension from './Dimension.js'\nexport default class LinearRing extends LineString {\n  constructor() {\n    super()\n    LinearRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    LineString.constructor_.call(this, points, factory)\n    this.validateConstruction()\n  }\n  copyInternal() {\n    return new LinearRing(this._points.copy(), this._factory)\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return true\n    \n    return super.isClosed.call(this)\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLinearRing(seq)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINEARRING\n  }\n  validateConstruction() {\n    if (!this.isEmpty() && !super.isClosed.call(this)) \n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    \n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) \n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    \n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINEARRING\n  }\n}\nLinearRing.MINIMUM_VALID_SIZE = 4\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXY extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXY.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXY) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    }\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      this.x = value\n      break\n    case CoordinateXY.Y:\n      this.y = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      return this.x\n    case CoordinateXY.Y:\n      return this.y\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXY(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n}\nCoordinateXY.X = 0\nCoordinateXY.Y = 1\nCoordinateXY.Z = -1\nCoordinateXY.M = -1\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], m = arguments[2]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n      this._m = m\n    }\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      this.x = value\n      break\n    case CoordinateXYM.Y:\n      this.y = value\n      break\n    case CoordinateXYM.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      return this.x\n    case CoordinateXYM.Y:\n      return this.y\n    case CoordinateXYM.M:\n      return this._m\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXYM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n}\nCoordinateXYM.X = 0\nCoordinateXYM.Y = 1\nCoordinateXYM.Z = -1\nCoordinateXYM.M = 2\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYZM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYZM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYZM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 4) {\n      const x = arguments[0], y = arguments[1], z = arguments[2], m = arguments[3]\n      Coordinate.constructor_.call(this, x, y, z)\n      this._m = m\n    }\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.z = value\n      break\n    case Coordinate.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    case Coordinate.M:\n      return this.getM()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  copy() {\n    return new CoordinateXYZM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n}\n","import CoordinateXY from './CoordinateXY.js'\nimport Coordinate from './Coordinate.js'\nimport CoordinateXYM from './CoordinateXYM.js'\nimport CoordinateXYZM from './CoordinateXYZM.js'\nexport default class Coordinates {\n  static measures(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 0\n    else if (coordinate instanceof CoordinateXYM) \n      return 1\n    else if (coordinate instanceof CoordinateXYZM) \n      return 1\n    else if (coordinate instanceof Coordinate) \n      return 0\n    \n    return 0\n  }\n  static dimension(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 2\n    else if (coordinate instanceof CoordinateXYM) \n      return 3\n    else if (coordinate instanceof CoordinateXYZM) \n      return 4\n    else if (coordinate instanceof Coordinate) \n      return 3\n    \n    return 3\n  }\n  static create() {\n    if (arguments.length === 1) {\n      const dimension = arguments[0]\n      return Coordinates.create(dimension, 0)\n    } else if (arguments.length === 2) {\n      const dimension = arguments[0], measures = arguments[1]\n      if (dimension === 2) \n        return new CoordinateXY()\n      else if (dimension === 3 && measures === 0) \n        return new Coordinate()\n      else if (dimension === 3 && measures === 1) \n        return new CoordinateXYM()\n      else if (dimension === 4 && measures === 1) \n        return new CoordinateXYZM()\n      \n      return new Coordinate()\n    }\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Coordinate from './Coordinate.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class CoordinateList extends ArrayList {\n  constructor() {\n    super()\n    CoordinateList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const coord = arguments[0]\n      this.ensureCapacity(coord.length)\n      this.add(coord, true)\n    } else if (arguments.length === 2) {\n      const coord = arguments[0], allowRepeated = arguments[1]\n      this.ensureCapacity(coord.length)\n      this.add(coord, allowRepeated)\n    }\n  }\n  getCoordinate(i) {\n    return this.get(i)\n  }\n  addAll() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'boolean' && hasInterface(arguments[0], Collection))) {\n      const coll = arguments[0], allowRepeated = arguments[1]\n      let isChanged = false\n      for (let i = coll.iterator(); i.hasNext(); ) {\n        this.add(i.next(), allowRepeated)\n        isChanged = true\n      }\n      return isChanged\n    } else {\n      return super.addAll.apply(this, arguments)\n    }\n  }\n  clone() {\n    const clone = super.clone.call(this)\n    for (let i = 0; i < this.size(); i++) \n      clone.add(i, this.get(i).clone())\n    \n    return clone\n  }\n  toCoordinateArray() {\n    if (arguments.length === 0) {\n      return this.toArray(CoordinateList.coordArrayType)\n    } else if (arguments.length === 1) {\n      const isForward = arguments[0]\n      if (isForward) \n        return this.toArray(CoordinateList.coordArrayType)\n      \n      const size = this.size()\n      const pts = new Array(size).fill(null)\n      for (let i = 0; i < size; i++) \n        pts[i] = this.get(size - i - 1)\n      \n      return pts\n    }\n  }\n  add() {\n    if (arguments.length === 1) {\n      const coord = arguments[0]\n      return super.add.call(this, coord)\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        this.add(coord, allowRepeated, true)\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        if (!allowRepeated) \n          if (this.size() >= 1) {\n            const last = this.get(this.size() - 1)\n            if (last.equals2D(coord)) return null\n          }\n        \n        super.add.call(this, coord)\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        const obj = arguments[0], allowRepeated = arguments[1]\n        this.add(obj, allowRepeated)\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        const coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2]\n        if (direction) \n          for (let i = 0; i < coord.length; i++) \n            this.add(coord[i], allowRepeated)\n          \n        else \n          for (let i = coord.length - 1; i >= 0; i--) \n            this.add(coord[i], allowRepeated)\n          \n        \n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        const i = arguments[0], coord = arguments[1], allowRepeated = arguments[2]\n        if (!allowRepeated) {\n          const size = this.size()\n          if (size > 0) {\n            if (i > 0) {\n              const prev = this.get(i - 1)\n              if (prev.equals2D(coord)) return null\n            }\n            if (i < size) {\n              const next = this.get(i)\n              if (next.equals2D(coord)) return null\n            }\n          }\n        }\n        super.add.call(this, i, coord)\n      }\n    } else if (arguments.length === 4) {\n      const coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3]\n      let inc = 1\n      if (start > end) inc = -1\n      for (let i = start; i !== end; i += inc) \n        this.add(coord[i], allowRepeated)\n      \n      return true\n    }\n  }\n  closeRing() {\n    if (this.size() > 0) {\n      const duplicate = this.get(0).copy()\n      this.add(duplicate, false)\n    }\n  }\n}\nCoordinateList.coordArrayType = new Array(0).fill(null)\n","import Double from '../../../../java/lang/Double.js'\nexport default class MathUtil {\n  static log10(x) {\n    const ln = Math.log(x)\n    if (Double.isInfinite(ln)) return ln\n    if (Double.isNaN(ln)) return ln\n    return ln / MathUtil.LOG_10\n  }\n  static min(v1, v2, v3, v4) {\n    let min = v1\n    if (v2 < min) min = v2\n    if (v3 < min) min = v3\n    if (v4 < min) min = v4\n    return min\n  }\n  static clamp() {\n    if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    }\n  }\n  static wrap(index, max) {\n    if (index < 0) \n      return max - -index % max\n    \n    return index % max\n  }\n  static max() {\n    if (arguments.length === 3) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      return max\n    } else if (arguments.length === 4) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      if (v4 > max) max = v4\n      return max\n    }\n  }\n  static average(x1, x2) {\n    return (x1 + x2) / 2.0\n  }\n}\nMathUtil.LOG_10 = Math.log(10)\n","export default class System {\n  static arraycopy(src, srcPos, dest, destPos, len) {\n    let c = 0\n    for (let i = srcPos; i < srcPos + len; i++) {\n      dest[destPos + c] = src[i]\n      c++\n    }\n  }\n\n  static getProperty(name) {\n    return {\n      'line.separator': '\\n'\n    }[name]\n  }\n}\n","import CoordinateList from './CoordinateList.js'\nimport Coordinates from './Coordinates.js'\nimport MathUtil from '../math/MathUtil.js'\nimport System from '../../../../java/lang/System.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport Envelope from './Envelope.js'\nexport default class CoordinateArrays {\n  static isRing(pts) {\n    if (pts.length < 4) return false\n    if (!pts[0].equals2D(pts[pts.length - 1])) return false\n    return true\n  }\n  static ptNotInList(testPts, pts) {\n    for (let i = 0; i < testPts.length; i++) {\n      const testPt = testPts[i]\n      if (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt\n    }\n    return null\n  }\n  static scroll(coordinates, firstCoordinate) {\n    const i = CoordinateArrays.indexOf(firstCoordinate, coordinates)\n    if (i < 0) return null\n    const newCoordinates = new Array(coordinates.length).fill(null)\n    System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i)\n    System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i)\n    System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length)\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const coord1 = arguments[0], coord2 = arguments[1]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (!coord1[i].equals(coord2[i])) return false\n      \n      return true\n    } else if (arguments.length === 3) {\n      const coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false\n      \n      return true\n    }\n  }\n  static intersection(coordinates, env) {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < coordinates.length; i++) \n      if (env.intersects(coordinates[i])) coordList.add(coordinates[i], true)\n    \n    return coordList.toCoordinateArray()\n  }\n  static measures(pts) {\n    if (pts === null || pts.length === 0) \n      return 0\n    \n    let measures = 0\n    for (const coordinate of pts) \n      measures = Math.max(measures, Coordinates.measures(coordinate))\n    \n    return measures\n  }\n  static hasRepeatedPoints(coord) {\n    for (let i = 1; i < coord.length; i++) \n      if (coord[i - 1].equals(coord[i])) \n        return true\n      \n    \n    return false\n  }\n  static removeRepeatedPoints(coord) {\n    if (!CoordinateArrays.hasRepeatedPoints(coord)) return coord\n    const coordList = new CoordinateList(coord, false)\n    return coordList.toCoordinateArray()\n  }\n  static reverse(coord) {\n    const last = coord.length - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) {\n      const tmp = coord[i]\n      coord[i] = coord[last - i]\n      coord[last - i] = tmp\n    }\n  }\n  static removeNull(coord) {\n    let nonNull = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) nonNull++\n    \n    const newCoord = new Array(nonNull).fill(null)\n    if (nonNull === 0) return newCoord\n    let j = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) newCoord[j++] = coord[i]\n    \n    return newCoord\n  }\n  static copyDeep() {\n    if (arguments.length === 1) {\n      const coordinates = arguments[0]\n      const copy = new Array(coordinates.length).fill(null)\n      for (let i = 0; i < coordinates.length; i++) \n        copy[i] = coordinates[i].copy()\n      \n      return copy\n    } else if (arguments.length === 5) {\n      const src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4]\n      for (let i = 0; i < length; i++) \n        dest[destStart + i] = src[srcStart + i].copy()\n      \n    }\n  }\n  static isEqualReversed(pts1, pts2) {\n    for (let i = 0; i < pts1.length; i++) {\n      const p1 = pts1[i]\n      const p2 = pts2[pts1.length - i - 1]\n      if (p1.compareTo(p2) !== 0) return false\n    }\n    return true\n  }\n  static envelope(coordinates) {\n    const env = new Envelope()\n    for (let i = 0; i < coordinates.length; i++) \n      env.expandToInclude(coordinates[i])\n    \n    return env\n  }\n  static toCoordinateArray(coordList) {\n    return coordList.toArray(CoordinateArrays.coordArrayType)\n  }\n  static dimension(pts) {\n    if (pts === null || pts.length === 0) \n      return 3\n    \n    let dimension = 0\n    for (const coordinate of pts) \n      dimension = Math.max(dimension, Coordinates.dimension(coordinate))\n    \n    return dimension\n  }\n  static atLeastNCoordinatesOrNothing(n, c) {\n    return c.length >= n ? c : []\n  }\n  static indexOf(coordinate, coordinates) {\n    for (let i = 0; i < coordinates.length; i++) \n      if (coordinate.equals(coordinates[i])) \n        return i\n      \n    \n    return -1\n  }\n  static increasingDirection(pts) {\n    for (let i = 0; i < Math.trunc(pts.length / 2); i++) {\n      const j = pts.length - 1 - i\n      const comp = pts[i].compareTo(pts[j])\n      if (comp !== 0) return comp\n    }\n    return 1\n  }\n  static compare(pts1, pts2) {\n    let i = 0\n    while (i < pts1.length && i < pts2.length) {\n      const compare = pts1[i].compareTo(pts2[i])\n      if (compare !== 0) return compare\n      i++\n    }\n    if (i < pts2.length) return -1\n    if (i < pts1.length) return 1\n    return 0\n  }\n  static minCoordinate(coordinates) {\n    let minCoord = null\n    for (let i = 0; i < coordinates.length; i++) \n      if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) \n        minCoord = coordinates[i]\n      \n    \n    return minCoord\n  }\n  static extract(pts, start, end) {\n    start = MathUtil.clamp(start, 0, pts.length)\n    end = MathUtil.clamp(end, -1, pts.length)\n    let npts = end - start + 1\n    if (end < 0) npts = 0\n    if (start >= pts.length) npts = 0\n    if (end < start) npts = 0\n    const extractPts = new Array(npts).fill(null)\n    if (npts === 0) return extractPts\n    let iPts = 0\n    for (let i = start; i <= end; i++) \n      extractPts[iPts++] = pts[i]\n    \n    return extractPts\n  }\n}\nclass ForwardComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    return CoordinateArrays.compare(pts1, pts2)\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nclass BidirectionalComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const forwardComp = CoordinateArrays.compare(pts1, pts2)\n    const isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2)\n    if (isEqualRev) return 0\n    return forwardComp\n  }\n  OLDcompare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const dir1 = CoordinateArrays.increasingDirection(pts1)\n    const dir2 = CoordinateArrays.increasingDirection(pts2)\n    let i1 = dir1 > 0 ? 0 : pts1.length - 1\n    let i2 = dir2 > 0 ? 0 : pts1.length - 1\n    for (let i = 0; i < pts1.length; i++) {\n      const comparePt = pts1[i1].compareTo(pts2[i2])\n      if (comparePt !== 0) return comparePt\n      i1 += dir1\n      i2 += dir2\n    }\n    return 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinateArrays.ForwardComparator = ForwardComparator\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator\nCoordinateArrays.coordArrayType = new Array(0).fill(null)\n","export default class StringBuilder {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","import hasInterface from '../../../../../hasInterface.js'\nimport Coordinate from '../Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Coordinates from '../Coordinates.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport CoordinateArrays from '../CoordinateArrays.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport StringBuilder from '../../../../../java/lang/StringBuilder.js'\nexport default class CoordinateArraySequence {\n  constructor() {\n    CoordinateArraySequence.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimension = 3\n    this._measures = 0\n    this._coordinates = null\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        CoordinateArraySequence.constructor_.call(this, coordinates, CoordinateArrays.dimension(coordinates), CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0])) {\n        const size = arguments[0]\n        this._coordinates = new Array(size).fill(null)\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = new Coordinate()\n        \n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        if (coordSeq === null) {\n          this._coordinates = new Array(0).fill(null)\n          return null\n        }\n        this._dimension = coordSeq.getDimension()\n        this._measures = coordSeq.getMeasures()\n        this._coordinates = new Array(coordSeq.size()).fill(null)\n        for (let i = 0; i < this._coordinates.length; i++) \n          this._coordinates[i] = coordSeq.getCoordinateCopy(i)\n        \n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n        const coordinates = arguments[0], dimension = arguments[1]\n        CoordinateArraySequence.constructor_.call(this, coordinates, dimension, CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n        const size = arguments[0], dimension = arguments[1]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = Coordinates.create(dimension)\n        \n      }\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n        const coordinates = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._dimension = dimension\n        this._measures = measures\n        if (coordinates === null) \n          this._coordinates = new Array(0).fill(null)\n        else \n          this._coordinates = coordinates\n        \n      } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n        const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        this._measures = measures\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = this.createCoordinate()\n        \n      }\n    }\n  }\n  getM(index) {\n    if (this.hasM()) \n      return this._coordinates[index].getM()\n    else \n      return Double.NaN\n    \n  }\n  setOrdinate(index, ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value\n      break\n    default:\n      this._coordinates[index].setOrdinate(ordinateIndex, value)\n    }\n  }\n  getZ(index) {\n    if (this.hasZ()) \n      return this._coordinates[index].getZ()\n    else \n      return Double.NaN\n    \n  }\n  size() {\n    return this._coordinates.length\n  }\n  getOrdinate(index, ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    default:\n      return this._coordinates[index].getOrdinate(ordinateIndex)\n    }\n  }\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n      return this._coordinates[i]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n      coord.setCoordinate(this._coordinates[index])\n    }\n  }\n  getCoordinateCopy(i) {\n    const copy = this.createCoordinate()\n    copy.setCoordinate(this._coordinates[i])\n    return copy\n  }\n  createCoordinate() {\n    return Coordinates.create(this.getDimension(), this.getMeasures())\n  }\n  getDimension() {\n    return this._dimension\n  }\n  getX(index) {\n    return this._coordinates[index].x\n  }\n  getMeasures() {\n    return this._measures\n  }\n  expandEnvelope(env) {\n    for (let i = 0; i < this._coordinates.length; i++) \n      env.expandToInclude(this._coordinates[i])\n    \n    return env\n  }\n  copy() {\n    const cloneCoordinates = new Array(this.size()).fill(null)\n    for (let i = 0; i < this._coordinates.length; i++) {\n      const duplicate = this.createCoordinate()\n      duplicate.setCoordinate(this._coordinates[i])\n      cloneCoordinates[i] = duplicate\n    }\n    return new CoordinateArraySequence(cloneCoordinates, this._dimension, this._measures)\n  }\n  toString() {\n    if (this._coordinates.length > 0) {\n      const strBuilder = new StringBuilder(17 * this._coordinates.length)\n      strBuilder.append('(')\n      strBuilder.append(this._coordinates[0])\n      for (let i = 1; i < this._coordinates.length; i++) {\n        strBuilder.append(', ')\n        strBuilder.append(this._coordinates[i])\n      }\n      strBuilder.append(')')\n      return strBuilder.toString()\n    } else {\n      return '()'\n    }\n  }\n  getY(index) {\n    return this._coordinates[index].y\n  }\n  toCoordinateArray() {\n    return this._coordinates\n  }\n  get interfaces_() {\n    return [CoordinateSequence, Serializable]\n  }\n}\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport CoordinateArraySequence from './CoordinateArraySequence.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nexport default class CoordinateArraySequenceFactory {\n  static instance() {\n    return CoordinateArraySequenceFactory.instanceObject\n  }\n  readResolve() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return new CoordinateArraySequence(coordinates)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        return new CoordinateArraySequence(coordSeq)\n      }\n    } else if (arguments.length === 2) {\n      let size = arguments[0], dimension = arguments[1]\n      if (dimension > 3) dimension = 3\n      if (dimension < 2) dimension = 2\n      return new CoordinateArraySequence(size, dimension)\n    } else if (arguments.length === 3) {\n      let size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      let spatial = dimension - measures\n      if (measures > 1) \n        measures = 1\n      \n      if (spatial > 3) \n        spatial = 3\n      \n      if (spatial < 2) spatial = 2\n      return new CoordinateArraySequence(size, spatial + measures, measures)\n    }\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFactory, Serializable]\n  }\n}\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory()\n","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Polygonal from './Polygonal.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class MultiPolygon extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPolygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const polygons = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, polygons, factory)\n  }\n  copyInternal() {\n    const polygons = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < polygons.length; i++) \n      polygons[i] = this._geometries[i].copy()\n    \n    return new MultiPolygon(polygons, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const allRings = new ArrayList()\n    for (let i = 0; i < this._geometries.length; i++) {\n      const polygon = this._geometries[i]\n      const rings = polygon.getBoundary()\n      for (let j = 0; j < rings.getNumGeometries(); j++) \n        allRings.add(rings.getGeometryN(j))\n      \n    }\n    const allRingsArray = new Array(allRings.size()).fill(null)\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOLYGON\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n */\nexport default class Map {\n  /**\n     * Returns the value to which the specified key is mapped, or null if this map\n     * contains no mapping for the key.\n     * @param {Object} key\n     * @return {Object}\n     */\n  get() { }\n\n  /**\n     * Associates the specified value with the specified key in this map (optional\n     * operation).\n     * @param {Object} key\n     * @param {Object} value\n     * @return {Object}\n     */\n  put() { }\n\n  /**\n     * Returns the number of key-value mappings in this map.\n     * @return {number}\n     */\n  size() { }\n\n  /**\n     * Returns a Collection view of the values contained in this map.\n     * @return {javascript.util.Collection}\n     */\n  values() { }\n\n  /**\n     * Returns a {@link Set} view of the mappings contained in this map.\n     * The set is backed by the map, so changes to the map are\n     * reflected in the set, and vice-versa.  If the map is modified\n     * while an iteration over the set is in progress (except through\n     * the iterator's own <tt>remove</tt> operation, or through the\n     * <tt>setValue</tt> operation on a map entry returned by the\n     * iterator) the results of the iteration are undefined.  The set\n     * supports element removal, which removes the corresponding\n     * mapping from the map, via the <tt>Iterator.remove</tt>,\n     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n     * <tt>clear</tt> operations.  It does not support the\n     * <tt>add</tt> or <tt>addAll</tt> operations.\n     *\n     * @return {Set} a set view of the mappings contained in this map\n     */\n  entrySet() { }\n}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport Set from './Set.js'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n */\nexport default class HashSet extends Set {\n  constructor(o) {\n    super()\n    this.map = new Map()\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return true\n    return false\n  }\n\n  add(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return false\n    return !!this.map.set(hashCode, o)\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.map.size\n  }\n\n  isEmpty() {\n    return this.map.size === 0\n  }\n\n  toArray() {\n    return Array.from(this.map.values())\n  }\n\n  iterator() {\n    return new Iterator(this.map)\n  }\n\n  [Symbol.iterator]() {\n    return this.map\n  }\n}\n\nclass Iterator {\n  constructor(map) {\n    this.iterator = map.values()\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n  }\n\n  next() {\n    if (this.done)\n      throw new NoSuchElementException()\n    const current = this.value\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n    return current\n  }\n\n  hasNext() {\n    return !this.done\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","import ArrayList from './ArrayList.js'\nimport MapInterface from './Map.js'\nimport HashSet from './HashSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n */\nexport default class HashMap extends MapInterface {\n  constructor() {\n    super()\n    this.map = new Map()\n  }\n\n  get(key) {\n    return this.map.get(key) || null\n  }\n\n  put(key, value) {\n    this.map.set(key, value)\n    return value\n  }\n\n  values() {\n    const arrayList = new ArrayList()\n    const it = this.map.values()\n    let o = it.next()\n    while (!o.done) {\n      arrayList.add(o.value)\n      o = it.next()\n    }\n    return arrayList\n  }\n\n  entrySet() {\n    const hashSet = new HashSet()\n    this.map.entries().forEach(entry => hashSet.add(entry))\n    return hashSet\n  }\n\n  size() {\n    return this.map.size()\n  }\n}\n","import HashMap from '../../../../java/util/HashMap.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class PrecisionModel {\n  constructor() {\n    PrecisionModel.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._modelType = null\n    this._scale = null\n    if (arguments.length === 0) \n      this._modelType = PrecisionModel.FLOATING\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Type) {\n        const modelType = arguments[0]\n        this._modelType = modelType\n        if (modelType === PrecisionModel.FIXED) \n          this.setScale(1.0)\n        \n      } else if (typeof arguments[0] === 'number') {\n        const scale = arguments[0]\n        this._modelType = PrecisionModel.FIXED\n        this.setScale(scale)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const pm = arguments[0]\n        this._modelType = pm._modelType\n        this._scale = pm._scale\n      }\n    \n  }\n  static mostPrecise(pm1, pm2) {\n    if (pm1.compareTo(pm2) >= 0) return pm1\n    return pm2\n  }\n  equals(other) {\n    if (!(other instanceof PrecisionModel)) \n      return false\n    \n    const otherPrecisionModel = other\n    return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n  }\n  compareTo(o) {\n    const other = o\n    const sigDigits = this.getMaximumSignificantDigits()\n    const otherSigDigits = other.getMaximumSignificantDigits()\n    return Integer.compare(sigDigits, otherSigDigits)\n  }\n  getScale() {\n    return this._scale\n  }\n  isFloating() {\n    return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n  }\n  getType() {\n    return this._modelType\n  }\n  toString() {\n    let description = 'UNKNOWN'\n    if (this._modelType === PrecisionModel.FLOATING) \n      description = 'Floating'\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      description = 'Floating-Single'\n    else if (this._modelType === PrecisionModel.FIXED) \n      description = 'Fixed (Scale=' + this.getScale() + ')'\n    \n    return description\n  }\n  makePrecise() {\n    if (typeof arguments[0] === 'number') {\n      const val = arguments[0]\n      if (Double.isNaN(val)) return val\n      if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n        const floatSingleVal = val\n        return floatSingleVal\n      }\n      if (this._modelType === PrecisionModel.FIXED) \n        return Math.round(val * this._scale) / this._scale\n      \n      return val\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      if (this._modelType === PrecisionModel.FLOATING) return null\n      coord.x = this.makePrecise(coord.x)\n      coord.y = this.makePrecise(coord.y)\n    }\n  }\n  getMaximumSignificantDigits() {\n    let maxSigDigits = 16\n    if (this._modelType === PrecisionModel.FLOATING) \n      maxSigDigits = 16\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      maxSigDigits = 6\n    else if (this._modelType === PrecisionModel.FIXED) \n      maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)))\n    \n    return maxSigDigits\n  }\n  setScale(scale) {\n    this._scale = Math.abs(scale)\n  }\n  get interfaces_() {\n    return [Serializable, Comparable]\n  }\n}\nclass Type {\n  constructor() {\n    Type.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._name = null\n    const name = arguments[0]\n    this._name = name\n    Type.nameToTypeMap.put(name, this)\n  }\n  readResolve() {\n    return Type.nameToTypeMap.get(this._name)\n  }\n  toString() {\n    return this._name\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\nType.nameToTypeMap = new HashMap()\nPrecisionModel.Type = Type\nPrecisionModel.FIXED = new Type('FIXED')\nPrecisionModel.FLOATING = new Type('FLOATING')\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE')\nPrecisionModel.maximumPreciseValue = 9007199254740992.0\n","import Geometry from './Geometry.js'\nimport Lineal from './Lineal.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport Dimension from './Dimension.js'\nexport default class MultiLineString extends GeometryCollection {\n  constructor() {\n    super()\n    MultiLineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const lineStrings = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, lineStrings, factory)\n  }\n  copyInternal() {\n    const lineStrings = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < lineStrings.length; i++) \n      lineStrings[i] = this._geometries[i].copy()\n    \n    return new MultiLineString(lineStrings, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isClosed()) \n        return false\n      \n    \n    return true\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTILINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTILINESTRING\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory.js'\nimport LineString from './LineString.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Point from './Point.js'\nimport Polygon from './Polygon.js'\nimport MultiPoint from './MultiPoint.js'\nimport LinearRing from './LinearRing.js'\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory.js'\nimport MultiPolygon from './MultiPolygon.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport PrecisionModel from './PrecisionModel.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\nimport MultiLineString from './MultiLineString.js'\nexport default class GeometryFactory {\n  constructor() {\n    GeometryFactory.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._precisionModel = null\n    this._coordinateSequenceFactory = null\n    this._SRID = null\n    if (arguments.length === 0) {\n      GeometryFactory.constructor_.call(this, new PrecisionModel(), 0)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n        const coordinateSequenceFactory = arguments[0]\n        GeometryFactory.constructor_.call(this, new PrecisionModel(), 0, coordinateSequenceFactory)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const precisionModel = arguments[0]\n        GeometryFactory.constructor_.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory())\n      }\n    } else if (arguments.length === 2) {\n      const precisionModel = arguments[0], SRID = arguments[1]\n      GeometryFactory.constructor_.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory())\n    } else if (arguments.length === 3) {\n      const precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2]\n      this._precisionModel = precisionModel\n      this._coordinateSequenceFactory = coordinateSequenceFactory\n      this._SRID = SRID\n    }\n  }\n  static toMultiPolygonArray(multiPolygons) {\n    const multiPolygonArray = new Array(multiPolygons.size()).fill(null)\n    return multiPolygons.toArray(multiPolygonArray)\n  }\n  static toGeometryArray(geometries) {\n    if (geometries === null) return null\n    const geometryArray = new Array(geometries.size()).fill(null)\n    return geometries.toArray(geometryArray)\n  }\n  static getDefaultCoordinateSequenceFactory() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  static toMultiLineStringArray(multiLineStrings) {\n    const multiLineStringArray = new Array(multiLineStrings.size()).fill(null)\n    return multiLineStrings.toArray(multiLineStringArray)\n  }\n  static toLineStringArray(lineStrings) {\n    const lineStringArray = new Array(lineStrings.size()).fill(null)\n    return lineStrings.toArray(lineStringArray)\n  }\n  static toMultiPointArray(multiPoints) {\n    const multiPointArray = new Array(multiPoints.size()).fill(null)\n    return multiPoints.toArray(multiPointArray)\n  }\n  static toLinearRingArray(linearRings) {\n    const linearRingArray = new Array(linearRings.size()).fill(null)\n    return linearRings.toArray(linearRingArray)\n  }\n  static toPointArray(points) {\n    const pointArray = new Array(points.size()).fill(null)\n    return points.toArray(pointArray)\n  }\n  static toPolygonArray(polygons) {\n    const polygonArray = new Array(polygons.size()).fill(null)\n    return polygons.toArray(polygonArray)\n  }\n  static createPointFromInternalCoord(coord, exemplar) {\n    exemplar.getPrecisionModel().makePrecise(coord)\n    return exemplar.getFactory().createPoint(coord)\n  }\n  createEmpty(dimension) {\n    switch (dimension) {\n    case -1:\n      return this.createGeometryCollection()\n    case 0:\n      return this.createPoint()\n    case 1:\n      return this.createLineString()\n    case 2:\n      return this.createPolygon()\n    default:\n      throw new IllegalArgumentException('Invalid dimension: ' + dimension)\n    }\n  }\n  toGeometry(envelope) {\n    if (envelope.isNull()) \n      return this.createPoint()\n    \n    if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) \n      return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n    \n    if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) \n      return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n    \n    return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n  }\n  createLineString() {\n    if (arguments.length === 0) \n      return this.createLineString(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LineString(coordinates, this)\n      }\n    \n  }\n  createMultiLineString() {\n    if (arguments.length === 0) {\n      return new MultiLineString(null, this)\n    } else if (arguments.length === 1) {\n      const lineStrings = arguments[0]\n      return new MultiLineString(lineStrings, this)\n    }\n  }\n  buildGeometry(geomList) {\n    let geomType = null\n    let isHeterogeneous = false\n    let hasGeometryCollection = false\n    for (let i = geomList.iterator(); i.hasNext(); ) {\n      const geom = i.next()\n      const partType = geom.getTypeCode()\n      if (geomType === null) \n        geomType = partType\n      \n      if (partType !== geomType) \n        isHeterogeneous = true\n      \n      if (geom instanceof GeometryCollection) hasGeometryCollection = true\n    }\n    if (geomType === null) \n      return this.createGeometryCollection()\n    \n    if (isHeterogeneous || hasGeometryCollection) \n      return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n    \n    const geom0 = geomList.iterator().next()\n    const isCollection = geomList.size() > 1\n    if (isCollection) {\n      if (geom0 instanceof Polygon) \n        return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n      else if (geom0 instanceof LineString) \n        return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n      else if (geom0 instanceof Point) \n        return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n      \n      Assert.shouldNeverReachHere('Unhandled geometry type: ' + geom0.getGeometryType())\n    }\n    return geom0\n  }\n  createMultiPointFromCoords(coordinates) {\n    return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n  }\n  createPoint() {\n    if (arguments.length === 0) \n      return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Coordinate) {\n        const coordinate = arguments[0]\n        return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new Point(coordinates, this)\n      }\n    \n  }\n  getCoordinateSequenceFactory() {\n    return this._coordinateSequenceFactory\n  }\n  createPolygon() {\n    if (arguments.length === 0) {\n      return this.createPolygon(null, null)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequence)) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof Array) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof LinearRing) {\n        const shell = arguments[0]\n        return this.createPolygon(shell, null)\n      }\n    } else if (arguments.length === 2) {\n      const shell = arguments[0], holes = arguments[1]\n      return new Polygon(shell, holes, this)\n    }\n  }\n  getSRID() {\n    return this._SRID\n  }\n  createGeometryCollection() {\n    if (arguments.length === 0) {\n      return new GeometryCollection(null, this)\n    } else if (arguments.length === 1) {\n      const geometries = arguments[0]\n      return new GeometryCollection(geometries, this)\n    }\n  }\n  getPrecisionModel() {\n    return this._precisionModel\n  }\n  createLinearRing() {\n    if (arguments.length === 0) \n      return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LinearRing(coordinates, this)\n      }\n    \n  }\n  createMultiPolygon() {\n    if (arguments.length === 0) {\n      return new MultiPolygon(null, this)\n    } else if (arguments.length === 1) {\n      const polygons = arguments[0]\n      return new MultiPolygon(polygons, this)\n    }\n  }\n  createMultiPoint() {\n    if (arguments.length === 0) \n      return new MultiPoint(null, this)\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const point = arguments[0]\n        return new MultiPoint(point, this)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        if (coordinates === null) \n          return this.createMultiPoint(new Array(0).fill(null))\n        \n        const points = new Array(coordinates.size()).fill(null)\n        for (let i = 0; i < coordinates.size(); i++) {\n          const ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension(), coordinates.getMeasures())\n          CoordinateSequences.copy(coordinates, i, ptSeq, 0, 1)\n          points[i] = this.createPoint(ptSeq)\n        }\n        return this.createMultiPoint(points)\n      }\n    \n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nconst GeometryLayout = {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n}\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nconst GeometryType = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY'\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z'\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M'\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM'\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst WKTGeometryType = {}\nfor (const type in GeometryType)\n  WKTGeometryType[type] = GeometryType[type].toUpperCase()\n\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal)\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n'\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_)\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_()\n    const position = this.index_\n    /** @type {number|string} */\n    let value = c\n    let type\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN\n    } else if (c == ',') {\n      type = TokenType.COMMA\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER\n      value = this.readNumber_()\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT\n      value = this.readText_()\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken()\n    } else if (c === '') {\n      type = TokenType.EOF\n    } else {\n      throw new Error('Unexpected character: ' + c)\n    }\n\n    return { position: position, value: value, type: type }\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c\n    const index = this.index_\n    let decimal = false\n    let scientificNotation = false\n    do {\n      if (c == '.')\n        decimal = true\n      else if (c == 'e' || c == 'E')\n        scientificNotation = true\n      c = this.nextChar_()\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    )\n    return parseFloat(this.wkt.substring(index, this.index_--))\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c\n    const index = this.index_\n    do\n      c = this.nextChar_()\n    while (this.isAlpha_(c))\n    return this.wkt.substring(index, this.index_--).toUpperCase()\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer, factory) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_\n\n    /**\n     * @type {import(\"../geom/GeometryLayout.js\").default}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY\n\n    this.factory = factory\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken()\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type\n    return isMatch\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type)\n    if (isMatch) \n      this.consume_()\n    return isMatch\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_()\n    const geometry = this.parseGeometry_()\n    return geometry\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/GeometryLayout.js\").default} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY\n    const dimToken = this.token_\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value\n      if (dimInfo === Z)\n        layout = GeometryLayout.XYZ\n      else if (dimInfo === M)\n        layout = GeometryLayout.XYM\n      else if (dimInfo === ZM)\n        layout = GeometryLayout.XYZM\n      if (layout !== GeometryLayout.XY)\n        this.consume_()\n    }\n    return layout\n  }\n\n  /**\n   * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = []\n      do\n        geometries.push(this.parseGeometry_())\n      while (this.match(TokenType.COMMA))\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return geometries\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return null\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates\n      if (this.token_.type == TokenType.LEFT_PAREN) \n        coordinates = this.parsePointTextList_()\n      else\n        coordinates = this.parsePointList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = []\n    const dimensions = this.layout_.length\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_\n      if (this.match(TokenType.NUMBER)) \n        coordinates.push(/** @type {number} */(token.value))\n      else\n        break\n    }\n    if (coordinates.length == dimensions) \n      return coordinates\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePoint_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePointText_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parseLineStringText_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePolygonText_())\n    return coordinates\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY\n    if (isEmpty)\n      this.consume_()\n    return isEmpty\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    )\n  }\n\n  /**\n   * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const factory = this.factory\n\n    const o2c = ordinates => new Coordinate(...ordinates)\n    const ca2p = coordinates => {\n      const rings = coordinates.map(a => factory.createLinearRing(a.map(o2c)))\n      if (rings.length > 1)\n        return factory.createPolygon(rings[0], rings.slice(1))\n      else\n        return factory.createPolygon(rings[0])\n    }\n\n    const token = this.token_\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value\n      this.layout_ = this.parseGeometryLayout_()\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_()\n        return factory.createGeometryCollection(geometries)\n      } else {\n        switch (geomType) {\n        case 'POINT': {\n          const ordinates = this.parsePointText_()\n          if (!ordinates)\n            return factory.createPoint()\n          return factory.createPoint(new Coordinate(...ordinates))\n        }\n        case 'LINESTRING': {\n          const coordinates = this.parseLineStringText_()\n          const components = coordinates.map(o2c)\n          return factory.createLineString(components)\n        }\n        case 'LINEARRING': {\n          const coordinates = this.parseLineStringText_()\n          const components = coordinates.map(o2c)\n          return factory.createLinearRing(components)\n        }\n        case 'POLYGON': {\n          const coordinates = this.parsePolygonText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createPolygon()\n          return ca2p(coordinates)\n        }\n        case 'MULTIPOINT': {\n          const coordinates = this.parseMultiPointText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createMultiPoint()\n          const components = coordinates.map(o2c).map(c => factory.createPoint(c))\n          return factory.createMultiPoint(components)\n        }\n        case 'MULTILINESTRING': {\n          const coordinates = this.parseMultiLineStringText_()\n          const components = coordinates.map(a => factory.createLineString(a.map(o2c)))\n          return factory.createMultiLineString(components)\n        }\n        case 'MULTIPOLYGON': {\n          const coordinates = this.parseMultiPolygonText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createMultiPolygon()\n          const polygons = coordinates.map(ca2p)\n          return factory.createMultiPolygon(polygons)\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType)\n        }\n        }\n      }\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  if (geom.isEmpty())\n    return ''\n  const c = geom.getCoordinate()\n  const cs = [c.x, c.y]\n  if (c.z !== undefined && !Number.isNaN(c.z))\n    cs.push(c.z)\n  if (c.m !== undefined && !Number.isNaN(c.m))\n    cs.push(c.m)\n  return cs.join(' ')\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodePointGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push(encode(geom.getGeometryN(i)))\n  return array.join(', ')\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates()\n    .map(c => {\n      const a = [c.x, c.y]\n      if (c.z !== undefined && !Number.isNaN(c.z))\n        a.push(c.z)\n      if (c.m !== undefined && !Number.isNaN(c.m))\n        a.push(c.m)\n      return a\n    })\n  const array = []\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) \n    array.push(coordinates[i].join(' '))\n  return array.join(', ')\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodeLineStringGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = []\n  array.push('(' + encodeLineStringGeometry(geom.getExteriorRing()) + ')')\n  for (let i = 0, ii = geom.getNumInteriorRing(); i < ii; ++i) \n    array.push('(' + encodeLineStringGeometry(geom.getInteriorRingN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodePolygonGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {Geometry} geom Geometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  let dimInfo = ''\n  if (geom.isEmpty())\n    return dimInfo\n  const c = geom.getCoordinate()\n  if (c.z !== undefined && !Number.isNaN(c.z))\n    dimInfo += Z\n  if (c.m !== undefined && !Number.isNaN(c.m))\n    dimInfo += M\n  return dimInfo\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'LinearRing': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n}\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getGeometryType()\n  const geometryEncoder = GeometryEncoder[type]\n  type = type.toUpperCase()\n  const dimInfo = encodeGeometryLayout(geom)\n  if (dimInfo.length > 0) \n    type += ' ' + dimInfo\n  if (geom.isEmpty()) \n    return type + ' ' + EMPTY\n  const enc = geometryEncoder(geom)\n  return type + ' (' + enc + ')'\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers.\n */\n\nexport default class WKTParser {\n  /** Create a new parser for WKT\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @return An instance of WKTParser.\n   * @private\n   */\n  constructor(geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.precisionModel = this.geometryFactory.getPrecisionModel()\n  }\n\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read(wkt) {\n    const lexer = new Lexer(wkt)\n    const parser = new Parser(lexer, this.geometryFactory)\n    const geometry = parser.parse()\n    return geometry\n  }\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write(geometry) {\n    return encode(geometry)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory.js'\nimport WKTParser from './WKTParser.js'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\nexport default class WKTReader {\n  /**\n   * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n   * to allow it to create <code>Geometry</code> objects of the appropriate\n   * implementation. In particular, the <code>GeometryFactory</code> determines\n   * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new WKTParser(geometryFactory || new GeometryFactory())\n  }\n\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof module:org/locationtech/jts/io/WKTReader#\n   */\n  read(wkt) {\n    return this.parser.read(wkt)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser.js'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\nexport default class WKTWriter {\n  /**\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new WKTParser(geometryFactory)\n  }\n\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write(geometry) {\n    return this.parser.write(geometry)\n  }\n\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  static toLineString(p0, p1) {\n    if (arguments.length !== 2) throw new Error('Not implemented')\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n}\n","export default class BufferParameters {\n  constructor() {\n    BufferParameters.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n    this._endCapStyle = BufferParameters.CAP_ROUND\n    this._joinStyle = BufferParameters.JOIN_ROUND\n    this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT\n    this._isSingleSided = false\n    this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const quadrantSegments = arguments[0]\n      this.setQuadrantSegments(quadrantSegments)\n    } else if (arguments.length === 2) {\n      const quadrantSegments = arguments[0], endCapStyle = arguments[1]\n      this.setQuadrantSegments(quadrantSegments)\n      this.setEndCapStyle(endCapStyle)\n    } else if (arguments.length === 4) {\n      const quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3]\n      this.setQuadrantSegments(quadrantSegments)\n      this.setEndCapStyle(endCapStyle)\n      this.setJoinStyle(joinStyle)\n      this.setMitreLimit(mitreLimit)\n    }\n  }\n  static bufferDistanceError(quadSegs) {\n    const alpha = Math.PI / 2.0 / quadSegs\n    return 1 - Math.cos(alpha / 2.0)\n  }\n  getEndCapStyle() {\n    return this._endCapStyle\n  }\n  isSingleSided() {\n    return this._isSingleSided\n  }\n  setQuadrantSegments(quadSegs) {\n    this._quadrantSegments = quadSegs\n    if (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL\n    if (this._quadrantSegments < 0) {\n      this._joinStyle = BufferParameters.JOIN_MITRE\n      this._mitreLimit = Math.abs(this._quadrantSegments)\n    }\n    if (quadSegs <= 0) \n      this._quadrantSegments = 1\n    \n    if (this._joinStyle !== BufferParameters.JOIN_ROUND) \n      this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n    \n  }\n  getJoinStyle() {\n    return this._joinStyle\n  }\n  setJoinStyle(joinStyle) {\n    this._joinStyle = joinStyle\n  }\n  setSimplifyFactor(simplifyFactor) {\n    this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor\n  }\n  getSimplifyFactor() {\n    return this._simplifyFactor\n  }\n  getQuadrantSegments() {\n    return this._quadrantSegments\n  }\n  setEndCapStyle(endCapStyle) {\n    this._endCapStyle = endCapStyle\n  }\n  getMitreLimit() {\n    return this._mitreLimit\n  }\n  setMitreLimit(mitreLimit) {\n    this._mitreLimit = mitreLimit\n  }\n  setSingleSided(isSingleSided) {\n    this._isSingleSided = isSingleSided\n  }\n}\nBufferParameters.CAP_ROUND = 1\nBufferParameters.CAP_FLAT = 2\nBufferParameters.CAP_SQUARE = 3\nBufferParameters.JOIN_ROUND = 1\nBufferParameters.JOIN_MITRE = 2\nBufferParameters.JOIN_BEVEL = 3\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Location {\n  static toLocationSymbol(locationValue) {\n    switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    }\n    throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n  }\n}\nLocation.INTERIOR = 0\nLocation.BOUNDARY = 1\nLocation.EXTERIOR = 2\nLocation.NONE = -1\n","export default class Position {\n  static opposite(position) {\n    if (position === Position.LEFT) return Position.RIGHT\n    if (position === Position.RIGHT) return Position.LEFT\n    return position\n  }\n}\nPosition.ON = 0\nPosition.LEFT = 1\nPosition.RIGHT = 2\n","import Exception from '../lang/Exception.js'\n\nexport default class EmptyStackException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ EmptyStackException })[0]\n  }\n}\n","import EmptyStackException from './EmptyStackException.js'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException.js'\nimport List from './List.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n */\nexport default class Stack extends List {\n  constructor() {\n    super()\n    this.array = []\n  }\n\n  add(e) {\n    this.array.push(e)\n    return true\n  }\n\n  get(index) {\n    if (index < 0 || index >= this.size())\n      throw new IndexOutOfBoundsException()\n    return this.array[index]\n  }\n\n  /**\n   * Pushes an item onto the top of this stack.\n   * @param {Object} e\n   * @return {Object}\n   */\n  push(e) {\n    this.array.push(e)\n    return e\n  }\n\n  /**\n   * Removes the object at the top of this stack and returns that object as the value of this function.\n   * @return {Object}\n   */\n  pop() {\n    if (this.array.length === 0)\n      throw new EmptyStackException()\n    return this.array.pop()\n  }\n\n  /**\n   * Looks at the object at the top of this stack without removing it from the\n   * stack.\n   * @return {Object}\n   */\n  peek() {\n    if (this.array.length === 0)\n      throw new EmptyStackException()\n    return this.array[this.array.length - 1]\n  }\n\n  /**\n   * Tests if this stack is empty.\n   * @return {boolean} true if and only if this stack contains no items; false\n   *         otherwise.\n   */\n  empty() {\n    return this.array.length === 0\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.empty()\n  }\n\n  /**\n   * Returns the 1-based position where an object is on this stack. If the object\n   * o occurs as an item in this stack, this method returns the distance from the\n   * top of the stack of the occurrence nearest the top of the stack; the topmost\n   * item on the stack is considered to be at distance 1. The equals method is\n   * used to compare o to the items in this stack.\n   *\n   * NOTE: does not currently actually use equals. (=== is used)\n   *\n   * @param {Object} o\n   * @return {number} the 1-based position from the top of the stack where the\n   *         object is located; the return value -1 indicates that the object is\n   *         not on the stack.\n   */\n  search(o) {\n    return this.array.indexOf(o)\n  }\n\n  /**\n   * @return {number}\n   */\n  size() {\n    return this.array.length\n  }\n\n  /**\n   * @return {Array}\n   */\n  toArray() {\n    return this.array.slice()\n  }\n}\n","import Position from '../../geomgraph/Position.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Assert from '../../util/Assert.js'\nexport default class RightmostEdgeFinder {\n  constructor() {\n    RightmostEdgeFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minIndex = -1\n    this._minCoord = null\n    this._minDe = null\n    this._orientedDe = null\n  }\n  getCoordinate() {\n    return this._minCoord\n  }\n  getRightmostSide(de, index) {\n    let side = this.getRightmostSideOfSegment(de, index)\n    if (side < 0) side = this.getRightmostSideOfSegment(de, index - 1)\n    if (side < 0) {\n      this._minCoord = null\n      this.checkForRightmostCoordinate(de)\n    }\n    return side\n  }\n  findRightmostEdgeAtVertex() {\n    const pts = this._minDe.getEdge().getCoordinates()\n    Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge')\n    const pPrev = pts[this._minIndex - 1]\n    const pNext = pts[this._minIndex + 1]\n    const orientation = Orientation.index(this._minCoord, pNext, pPrev)\n    let usePrev = false\n    if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) \n      usePrev = true\n    else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) \n      usePrev = true\n    \n    if (usePrev) \n      this._minIndex = this._minIndex - 1\n    \n  }\n  getRightmostSideOfSegment(de, i) {\n    const e = de.getEdge()\n    const coord = e.getCoordinates()\n    if (i < 0 || i + 1 >= coord.length) return -1\n    if (coord[i].y === coord[i + 1].y) return -1\n    let pos = Position.LEFT\n    if (coord[i].y < coord[i + 1].y) pos = Position.RIGHT\n    return pos\n  }\n  getEdge() {\n    return this._orientedDe\n  }\n  checkForRightmostCoordinate(de) {\n    const coord = de.getEdge().getCoordinates()\n    for (let i = 0; i < coord.length - 1; i++) \n      if (this._minCoord === null || coord[i].x > this._minCoord.x) {\n        this._minDe = de\n        this._minIndex = i\n        this._minCoord = coord[i]\n      }\n    \n  }\n  findRightmostEdgeAtNode() {\n    const node = this._minDe.getNode()\n    const star = node.getEdges()\n    this._minDe = star.getRightmostEdge()\n    if (!this._minDe.isForward()) {\n      this._minDe = this._minDe.getSym()\n      this._minIndex = this._minDe.getEdge().getCoordinates().length - 1\n    }\n  }\n  findEdge(dirEdgeList) {\n    for (let i = dirEdgeList.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (!de.isForward()) continue\n      this.checkForRightmostCoordinate(de)\n    }\n    Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing')\n    if (this._minIndex === 0) \n      this.findRightmostEdgeAtNode()\n    else \n      this.findRightmostEdgeAtVertex()\n    \n    this._orientedDe = this._minDe\n    const rightmostSide = this.getRightmostSide(this._minDe, this._minIndex)\n    if (rightmostSide === Position.LEFT) \n      this._orientedDe = this._minDe.getSym()\n    \n  }\n}\n","import Coordinate from './Coordinate.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\n\nexport default class TopologyException extends RuntimeException {\n  constructor(msg, pt) {\n    super(pt ? msg + ' [ ' + pt + ' ]' : msg)\n    this.pt = pt ? new Coordinate(pt) : undefined\n    this.name = Object.keys({ TopologyException })[0]\n  }\n  getCoordinate() {\n    return this.pt\n  }\n}\n","export default class LinkedList {\n  constructor() {\n    this.array = []\n  }\n\n  addLast(e) {\n    this.array.push(e)\n  }\n\n  removeFirst() {\n    return this.array.shift()\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n}\n","import HashSet from '../../../../../java/util/HashSet.js'\nimport Position from '../../geomgraph/Position.js'\nimport Stack from '../../../../../java/util/Stack.js'\nimport RightmostEdgeFinder from './RightmostEdgeFinder.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport LinkedList from '../../../../../java/util/LinkedList.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class BufferSubgraph {\n  constructor() {\n    BufferSubgraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._finder = null\n    this._dirEdgeList = new ArrayList()\n    this._nodes = new ArrayList()\n    this._rightMostCoord = null\n    this._env = null\n    this._finder = new RightmostEdgeFinder()\n  }\n  clearVisitedEdges() {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      de.setVisited(false)\n    }\n  }\n  getRightmostCoordinate() {\n    return this._rightMostCoord\n  }\n  computeNodeDepth(n) {\n    let startEdge = null\n    for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (de.isVisited() || de.getSym().isVisited()) {\n        startEdge = de\n        break\n      }\n    }\n    if (startEdge === null) throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate())\n    n.getEdges().computeDepths(startEdge)\n    for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      de.setVisited(true)\n      this.copySymDepths(de)\n    }\n  }\n  computeDepth(outsideDepth) {\n    this.clearVisitedEdges()\n    const de = this._finder.getEdge()\n    const n = de.getNode()\n    const label = de.getLabel()\n    de.setEdgeDepths(Position.RIGHT, outsideDepth)\n    this.copySymDepths(de)\n    this.computeDepths(de)\n  }\n  create(node) {\n    this.addReachable(node)\n    this._finder.findEdge(this._dirEdgeList)\n    this._rightMostCoord = this._finder.getCoordinate()\n  }\n  findResultEdges() {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) \n        de.setInResult(true)\n      \n    }\n  }\n  computeDepths(startEdge) {\n    const nodesVisited = new HashSet()\n    const nodeQueue = new LinkedList()\n    const startNode = startEdge.getNode()\n    nodeQueue.addLast(startNode)\n    nodesVisited.add(startNode)\n    startEdge.setVisited(true)\n    while (!nodeQueue.isEmpty()) {\n      const n = nodeQueue.removeFirst()\n      nodesVisited.add(n)\n      this.computeNodeDepth(n)\n      for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n        const de = i.next()\n        const sym = de.getSym()\n        if (sym.isVisited()) continue\n        const adjNode = sym.getNode()\n        if (!nodesVisited.contains(adjNode)) {\n          nodeQueue.addLast(adjNode)\n          nodesVisited.add(adjNode)\n        }\n      }\n    }\n  }\n  compareTo(o) {\n    const graph = o\n    if (this._rightMostCoord.x < graph._rightMostCoord.x) \n      return -1\n    \n    if (this._rightMostCoord.x > graph._rightMostCoord.x) \n      return 1\n    \n    return 0\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      const edgeEnv = new Envelope()\n      for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n        const dirEdge = it.next()\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) \n          edgeEnv.expandToInclude(pts[i])\n        \n      }\n      this._env = edgeEnv\n    }\n    return this._env\n  }\n  addReachable(startNode) {\n    const nodeStack = new Stack()\n    nodeStack.add(startNode)\n    while (!nodeStack.empty()) {\n      const node = nodeStack.pop()\n      this.add(node, nodeStack)\n    }\n  }\n  copySymDepths(de) {\n    const sym = de.getSym()\n    sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT))\n    sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT))\n  }\n  add(node, nodeStack) {\n    node.setVisited(true)\n    this._nodes.add(node)\n    for (let i = node.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      this._dirEdgeList.add(de)\n      const sym = de.getSym()\n      const symNode = sym.getNode()\n      if (!symNode.isVisited()) nodeStack.push(symNode)\n    }\n  }\n  getNodes() {\n    return this._nodes\n  }\n  getDirectedEdges() {\n    return this._dirEdgeList\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nexport default class Intersection {\n  static intersection(p1, p2, q1, q2) {\n    const minX0 = p1.x < p2.x ? p1.x : p2.x\n    const minY0 = p1.y < p2.y ? p1.y : p2.y\n    const maxX0 = p1.x > p2.x ? p1.x : p2.x\n    const maxY0 = p1.y > p2.y ? p1.y : p2.y\n    const minX1 = q1.x < q2.x ? q1.x : q2.x\n    const minY1 = q1.y < q2.y ? q1.y : q2.y\n    const maxX1 = q1.x > q2.x ? q1.x : q2.x\n    const maxY1 = q1.y > q2.y ? q1.y : q2.y\n    const intMinX = minX0 > minX1 ? minX0 : minX1\n    const intMaxX = maxX0 < maxX1 ? maxX0 : maxX1\n    const intMinY = minY0 > minY1 ? minY0 : minY1\n    const intMaxY = maxY0 < maxY1 ? maxY0 : maxY1\n    const midx = (intMinX + intMaxX) / 2.0\n    const midy = (intMinY + intMaxY) / 2.0\n    const p1x = p1.x - midx\n    const p1y = p1.y - midy\n    const p2x = p2.x - midx\n    const p2y = p2.y - midy\n    const q1x = q1.x - midx\n    const q1y = q1.y - midy\n    const q2x = q2.x - midx\n    const q2y = q2.y - midy\n    const px = p1y - p2y\n    const py = p2x - p1x\n    const pw = p1x * p2y - p2x * p1y\n    const qx = q1y - q2y\n    const qy = q2x - q1x\n    const qw = q1x * q2y - q2x * q1y\n    const x = py * qw - qy * pw\n    const y = qx * pw - px * qw\n    const w = px * qy - qx * py\n    const xInt = x / w\n    const yInt = y / w\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) \n      return null\n    \n    return new Coordinate(xInt + midx, yInt + midy)\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport MathUtil from '../math/MathUtil.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class Distance {\n  static segmentToSegment(A, B, C, D) {\n    if (A.equals(B)) return Distance.pointToSegment(A, C, D)\n    if (C.equals(D)) return Distance.pointToSegment(D, A, B)\n    let noIntersection = false\n    if (!Envelope.intersects(A, B, C, D)) {\n      noIntersection = true\n    } else {\n      const denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x)\n      if (denom === 0) {\n        noIntersection = true\n      } else {\n        const r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y)\n        const s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y)\n        const s = s_num / denom\n        const r = r_num / denom\n        if (r < 0 || r > 1 || s < 0 || s > 1) \n          noIntersection = true\n        \n      }\n    }\n    if (noIntersection) \n      return MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B))\n    \n    return 0.0\n  }\n  static pointToSegment(p, A, B) {\n    if (A.x === B.x && A.y === B.y) return p.distance(A)\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2\n    if (r <= 0.0) return p.distance(A)\n    if (r >= 1.0) return p.distance(B)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n  static pointToLinePerpendicular(p, A, B) {\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n  static pointToSegmentString(p, line) {\n    if (line.length === 0) throw new IllegalArgumentException('Line array must contain at least one vertex')\n    let minDistance = p.distance(line[0])\n    for (let i = 0; i < line.length - 1; i++) {\n      const dist = Distance.pointToSegment(p, line[i], line[i + 1])\n      if (dist < minDistance) \n        minDistance = dist\n      \n    }\n    return minDistance\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Assert from '../util/Assert.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nexport default class LineIntersector {\n  constructor() {\n    LineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._result = null\n    this._inputLines = Array(2).fill().map(() => Array(2))\n    this._intPt = new Array(2).fill(null)\n    this._intLineIndex = null\n    this._isProper = null\n    this._pa = null\n    this._pb = null\n    this._precisionModel = null\n    this._intPt[0] = new Coordinate()\n    this._intPt[1] = new Coordinate()\n    this._pa = this._intPt[0]\n    this._pb = this._intPt[1]\n    this._result = 0\n  }\n  static computeEdgeDistance(p, p0, p1) {\n    const dx = Math.abs(p1.x - p0.x)\n    const dy = Math.abs(p1.y - p0.y)\n    let dist = -1.0\n    if (p.equals(p0)) {\n      dist = 0.0\n    } else if (p.equals(p1)) {\n      if (dx > dy) dist = dx; else dist = dy\n    } else {\n      const pdx = Math.abs(p.x - p0.x)\n      const pdy = Math.abs(p.y - p0.y)\n      if (dx > dy) dist = pdx; else dist = pdy\n      if (dist === 0.0 && !p.equals(p0)) \n        dist = Math.max(pdx, pdy)\n      \n    }\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation')\n    return dist\n  }\n  static nonRobustComputeEdgeDistance(p, p1, p2) {\n    const dx = p.x - p1.x\n    const dy = p.y - p1.y\n    const dist = Math.sqrt(dx * dx + dy * dy)\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation')\n    return dist\n  }\n  getIndexAlongSegment(segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intLineIndex[segmentIndex][intIndex]\n  }\n  getTopologySummary() {\n    const catBuilder = new StringBuilder()\n    if (this.isEndPoint()) catBuilder.append(' endpoint')\n    if (this._isProper) catBuilder.append(' proper')\n    if (this.isCollinear()) catBuilder.append(' collinear')\n    return catBuilder.toString()\n  }\n  computeIntersection(p1, p2, p3, p4) {\n    this._inputLines[0][0] = p1\n    this._inputLines[0][1] = p2\n    this._inputLines[1][0] = p3\n    this._inputLines[1][1] = p4\n    this._result = this.computeIntersect(p1, p2, p3, p4)\n  }\n  getIntersectionNum() {\n    return this._result\n  }\n  computeIntLineIndex() {\n    if (arguments.length === 0) {\n      if (this._intLineIndex === null) {\n        this._intLineIndex = Array(2).fill().map(() => Array(2))\n        this.computeIntLineIndex(0)\n        this.computeIntLineIndex(1)\n      }\n    } else if (arguments.length === 1) {\n      const segmentIndex = arguments[0]\n      const dist0 = this.getEdgeDistance(segmentIndex, 0)\n      const dist1 = this.getEdgeDistance(segmentIndex, 1)\n      if (dist0 > dist1) {\n        this._intLineIndex[segmentIndex][0] = 0\n        this._intLineIndex[segmentIndex][1] = 1\n      } else {\n        this._intLineIndex[segmentIndex][0] = 1\n        this._intLineIndex[segmentIndex][1] = 0\n      }\n    }\n  }\n  isProper() {\n    return this.hasIntersection() && this._isProper\n  }\n  setPrecisionModel(precisionModel) {\n    this._precisionModel = precisionModel\n  }\n  isInteriorIntersection() {\n    if (arguments.length === 0) {\n      if (this.isInteriorIntersection(0)) return true\n      if (this.isInteriorIntersection(1)) return true\n      return false\n    } else if (arguments.length === 1) {\n      const inputLineIndex = arguments[0]\n      for (let i = 0; i < this._result; i++) \n        if (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) \n          return true\n        \n      \n      return false\n    }\n  }\n  getIntersection(intIndex) {\n    return this._intPt[intIndex]\n  }\n  isEndPoint() {\n    return this.hasIntersection() && !this._isProper\n  }\n  hasIntersection() {\n    return this._result !== LineIntersector.NO_INTERSECTION\n  }\n  getEdgeDistance(segmentIndex, intIndex) {\n    const dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1])\n    return dist\n  }\n  isCollinear() {\n    return this._result === LineIntersector.COLLINEAR_INTERSECTION\n  }\n  toString() {\n    return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n  }\n  getEndpoint(segmentIndex, ptIndex) {\n    return this._inputLines[segmentIndex][ptIndex]\n  }\n  isIntersection(pt) {\n    for (let i = 0; i < this._result; i++) \n      if (this._intPt[i].equals2D(pt)) \n        return true\n      \n    \n    return false\n  }\n  getIntersectionAlongSegment(segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n  }\n}\nLineIntersector.DONT_INTERSECT = 0\nLineIntersector.DO_INTERSECT = 1\nLineIntersector.COLLINEAR = 2\nLineIntersector.NO_INTERSECTION = 0\nLineIntersector.POINT_INTERSECTION = 1\nLineIntersector.COLLINEAR_INTERSECTION = 2\n","import Coordinate from '../geom/Coordinate.js'\nimport Orientation from './Orientation.js'\nimport Intersection from './Intersection.js'\nimport CGAlgorithmsDD from './CGAlgorithmsDD.js'\nimport System from '../../../../java/lang/System.js'\nimport Envelope from '../geom/Envelope.js'\nimport Distance from './Distance.js'\nimport LineIntersector from './LineIntersector.js'\nexport default class RobustLineIntersector extends LineIntersector {\n  constructor() {\n    super()\n  }\n  static nearestEndpoint(p1, p2, q1, q2) {\n    let nearestPt = p1\n    let minDist = Distance.pointToSegment(p1, q1, q2)\n    let dist = Distance.pointToSegment(p2, q1, q2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = p2\n    }\n    dist = Distance.pointToSegment(q1, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q1\n    }\n    dist = Distance.pointToSegment(q2, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q2\n    }\n    return nearestPt\n  }\n  isInSegmentEnvelopes(intPt) {\n    const env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1])\n    const env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1])\n    return env0.contains(intPt) && env1.contains(intPt)\n  }\n  computeIntersection() {\n    if (arguments.length === 3) {\n      const p = arguments[0], p1 = arguments[1], p2 = arguments[2]\n      this._isProper = false\n      if (Envelope.intersects(p1, p2, p)) \n        if (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n          this._isProper = true\n          if (p.equals(p1) || p.equals(p2)) \n            this._isProper = false\n          \n          this._result = LineIntersector.POINT_INTERSECTION\n          return null\n        }\n      \n      this._result = LineIntersector.NO_INTERSECTION\n    } else {\n      return super.computeIntersection.apply(this, arguments)\n    }\n  }\n  intersection(p1, p2, q1, q2) {\n    let intPt = this.intersectionSafe(p1, p2, q1, q2)\n    if (!this.isInSegmentEnvelopes(intPt)) \n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2))\n    \n    if (this._precisionModel !== null) \n      this._precisionModel.makePrecise(intPt)\n    \n    return intPt\n  }\n  checkDD(p1, p2, q1, q2, intPt) {\n    const intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2)\n    const isIn = this.isInSegmentEnvelopes(intPtDD)\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD)\n    if (intPt.distance(intPtDD) > 0.0001) \n      System.out.println('Distance = ' + intPt.distance(intPtDD))\n    \n  }\n  intersectionSafe(p1, p2, q1, q2) {\n    let intPt = Intersection.intersection(p1, p2, q1, q2)\n    if (intPt === null) intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2)\n    return intPt\n  }\n  computeCollinearIntersection(p1, p2, q1, q2) {\n    const p1q1p2 = Envelope.intersects(p1, p2, q1)\n    const p1q2p2 = Envelope.intersects(p1, p2, q2)\n    const q1p1q2 = Envelope.intersects(q1, q2, p1)\n    const q1p2q2 = Envelope.intersects(q1, q2, p2)\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1\n      this._intPt[1] = q2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1\n      this._intPt[1] = p2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p1\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p2\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p1\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p2\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector.NO_INTERSECTION\n  }\n  computeIntersect(p1, p2, q1, q2) {\n    this._isProper = false\n    if (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION\n    const Pq1 = Orientation.index(p1, p2, q1)\n    const Pq2 = Orientation.index(p1, p2, q2)\n    if (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) \n      return LineIntersector.NO_INTERSECTION\n    \n    const Qp1 = Orientation.index(q1, q2, p1)\n    const Qp2 = Orientation.index(q1, q2, p2)\n    if (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) \n      return LineIntersector.NO_INTERSECTION\n    \n    const collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0\n    if (collinear) \n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    \n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false\n      if (p1.equals2D(q1) || p1.equals2D(q2)) \n        this._intPt[0] = p1\n      else if (p2.equals2D(q1) || p2.equals2D(q2)) \n        this._intPt[0] = p2\n      else if (Pq1 === 0) \n        this._intPt[0] = new Coordinate(q1)\n      else if (Pq2 === 0) \n        this._intPt[0] = new Coordinate(q2)\n      else if (Qp1 === 0) \n        this._intPt[0] = new Coordinate(p1)\n      else if (Qp2 === 0) \n        this._intPt[0] = new Coordinate(p2)\n      \n    } else {\n      this._isProper = true\n      this._intPt[0] = this.intersection(p1, p2, q1, q2)\n    }\n    return LineIntersector.POINT_INTERSECTION\n  }\n}\n","import Location from '../geom/Location.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Orientation from './Orientation.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class RayCrossingCounter {\n  constructor() {\n    RayCrossingCounter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._p = null\n    this._crossingCount = 0\n    this._isPointOnSegment = false\n    const p = arguments[0]\n    this._p = p\n  }\n  static locatePointInRing() {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0], ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      for (let i = 1; i < ring.size(); i++) {\n        ring.getCoordinate(i, p1)\n        ring.getCoordinate(i - 1, p2)\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0], ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      for (let i = 1; i < ring.length; i++) {\n        const p1 = ring[i]\n        const p2 = ring[i - 1]\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    }\n  }\n  countSegment(p1, p2) {\n    if (p1.x < this._p.x && p2.x < this._p.x) return null\n    if (this._p.x === p2.x && this._p.y === p2.y) {\n      this._isPointOnSegment = true\n      return null\n    }\n    if (p1.y === this._p.y && p2.y === this._p.y) {\n      let minx = p1.x\n      let maxx = p2.x\n      if (minx > maxx) {\n        minx = p2.x\n        maxx = p1.x\n      }\n      if (this._p.x >= minx && this._p.x <= maxx) \n        this._isPointOnSegment = true\n      \n      return null\n    }\n    if (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n      let orient = Orientation.index(p1, p2, this._p)\n      if (orient === Orientation.COLLINEAR) {\n        this._isPointOnSegment = true\n        return null\n      }\n      if (p2.y < p1.y) \n        orient = -orient\n      \n      if (orient === Orientation.LEFT) \n        this._crossingCount++\n      \n    }\n  }\n  isPointInPolygon() {\n    return this.getLocation() !== Location.EXTERIOR\n  }\n  getLocation() {\n    if (this._isPointOnSegment) return Location.BOUNDARY\n    if (this._crossingCount % 2 === 1) \n      return Location.INTERIOR\n    \n    return Location.EXTERIOR\n  }\n  isOnSegment() {\n    return this._isPointOnSegment\n  }\n}\n","import Location from '../geom/Location.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nimport RobustLineIntersector from './RobustLineIntersector.js'\nimport RayCrossingCounter from './RayCrossingCounter.js'\nexport default class PointLocation {\n  static isOnLine() {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0], line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const n = line.size()\n      for (let i = 1; i < n; i++) {\n        line.getCoordinate(i - 1, p0)\n        line.getCoordinate(i, p1)\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) \n          return true\n        \n      }\n      return false\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0], line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      for (let i = 1; i < line.length; i++) {\n        const p0 = line[i - 1]\n        const p1 = line[i]\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) \n          return true\n        \n      }\n      return false\n    }\n  }\n  static locateInRing(p, ring) {\n    return RayCrossingCounter.locatePointInRing(p, ring)\n  }\n  static isInRing(p, ring) {\n    return PointLocation.locateInRing(p, ring) !== Location.EXTERIOR\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nexport default class TopologyLocation {\n  constructor() {\n    TopologyLocation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.location = null\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const location = arguments[0]\n        this.init(location.length)\n      } else if (Number.isInteger(arguments[0])) {\n        const on = arguments[0]\n        this.init(1)\n        this.location[Position.ON] = on\n      } else if (arguments[0] instanceof TopologyLocation) {\n        const gl = arguments[0]\n        this.init(gl.location.length)\n        if (gl !== null) \n          for (let i = 0; i < this.location.length; i++) \n            this.location[i] = gl.location[i]\n          \n        \n      }\n    } else if (arguments.length === 3) {\n      const on = arguments[0], left = arguments[1], right = arguments[2]\n      this.init(3)\n      this.location[Position.ON] = on\n      this.location[Position.LEFT] = left\n      this.location[Position.RIGHT] = right\n    }\n  }\n  setAllLocations(locValue) {\n    for (let i = 0; i < this.location.length; i++) \n      this.location[i] = locValue\n    \n  }\n  isNull() {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] !== Location.NONE) return false\n    \n    return true\n  }\n  setAllLocationsIfNull(locValue) {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE) this.location[i] = locValue\n    \n  }\n  isLine() {\n    return this.location.length === 1\n  }\n  merge(gl) {\n    if (gl.location.length > this.location.length) {\n      const newLoc = new Array(3).fill(null)\n      newLoc[Position.ON] = this.location[Position.ON]\n      newLoc[Position.LEFT] = Location.NONE\n      newLoc[Position.RIGHT] = Location.NONE\n      this.location = newLoc\n    }\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i]\n    \n  }\n  getLocations() {\n    return this.location\n  }\n  flip() {\n    if (this.location.length <= 1) return null\n    const temp = this.location[Position.LEFT]\n    this.location[Position.LEFT] = this.location[Position.RIGHT]\n    this.location[Position.RIGHT] = temp\n  }\n  toString() {\n    const buf = new StringBuffer()\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]))\n    buf.append(Location.toLocationSymbol(this.location[Position.ON]))\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]))\n    return buf.toString()\n  }\n  setLocations(on, left, right) {\n    this.location[Position.ON] = on\n    this.location[Position.LEFT] = left\n    this.location[Position.RIGHT] = right\n  }\n  get(posIndex) {\n    if (posIndex < this.location.length) return this.location[posIndex]\n    return Location.NONE\n  }\n  isArea() {\n    return this.location.length > 1\n  }\n  isAnyNull() {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE) return true\n    \n    return false\n  }\n  setLocation() {\n    if (arguments.length === 1) {\n      const locValue = arguments[0]\n      this.setLocation(Position.ON, locValue)\n    } else if (arguments.length === 2) {\n      const locIndex = arguments[0], locValue = arguments[1]\n      this.location[locIndex] = locValue\n    }\n  }\n  init(size) {\n    this.location = new Array(size).fill(null)\n    this.setAllLocations(Location.NONE)\n  }\n  isEqualOnSide(le, locIndex) {\n    return this.location[locIndex] === le.location[locIndex]\n  }\n  allPositionsEqual(loc) {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] !== loc) return false\n    \n    return true\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyLocation from './TopologyLocation.js'\nexport default class Label {\n  constructor() {\n    Label.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.elt = new Array(2).fill(null)\n    if (arguments.length === 1) {\n      if (Number.isInteger(arguments[0])) {\n        const onLoc = arguments[0]\n        this.elt[0] = new TopologyLocation(onLoc)\n        this.elt[1] = new TopologyLocation(onLoc)\n      } else if (arguments[0] instanceof Label) {\n        const lbl = arguments[0]\n        this.elt[0] = new TopologyLocation(lbl.elt[0])\n        this.elt[1] = new TopologyLocation(lbl.elt[1])\n      }\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], onLoc = arguments[1]\n      this.elt[0] = new TopologyLocation(Location.NONE)\n      this.elt[1] = new TopologyLocation(Location.NONE)\n      this.elt[geomIndex].setLocation(onLoc)\n    } else if (arguments.length === 3) {\n      const onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2]\n      this.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n      this.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n    } else if (arguments.length === 4) {\n      const geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3]\n      this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n      this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n      this.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc)\n    }\n  }\n  static toLineLabel(label) {\n    const lineLabel = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) \n      lineLabel.setLocation(i, label.getLocation(i))\n    \n    return lineLabel\n  }\n  getGeometryCount() {\n    let count = 0\n    if (!this.elt[0].isNull()) count++\n    if (!this.elt[1].isNull()) count++\n    return count\n  }\n  setAllLocations(geomIndex, location) {\n    this.elt[geomIndex].setAllLocations(location)\n  }\n  isNull(geomIndex) {\n    return this.elt[geomIndex].isNull()\n  }\n  setAllLocationsIfNull() {\n    if (arguments.length === 1) {\n      const location = arguments[0]\n      this.setAllLocationsIfNull(0, location)\n      this.setAllLocationsIfNull(1, location)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], location = arguments[1]\n      this.elt[geomIndex].setAllLocationsIfNull(location)\n    }\n  }\n  isLine(geomIndex) {\n    return this.elt[geomIndex].isLine()\n  }\n  merge(lbl) {\n    for (let i = 0; i < 2; i++) \n      if (this.elt[i] === null && lbl.elt[i] !== null) \n        this.elt[i] = new TopologyLocation(lbl.elt[i])\n      else \n        this.elt[i].merge(lbl.elt[i])\n      \n    \n  }\n  flip() {\n    this.elt[0].flip()\n    this.elt[1].flip()\n  }\n  getLocation() {\n    if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].get(Position.ON)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], posIndex = arguments[1]\n      return this.elt[geomIndex].get(posIndex)\n    }\n  }\n  toString() {\n    const buf = new StringBuffer()\n    if (this.elt[0] !== null) {\n      buf.append('A:')\n      buf.append(this.elt[0].toString())\n    }\n    if (this.elt[1] !== null) {\n      buf.append(' B:')\n      buf.append(this.elt[1].toString())\n    }\n    return buf.toString()\n  }\n  isArea() {\n    if (arguments.length === 0) {\n      return this.elt[0].isArea() || this.elt[1].isArea()\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].isArea()\n    }\n  }\n  isAnyNull(geomIndex) {\n    return this.elt[geomIndex].isAnyNull()\n  }\n  setLocation() {\n    if (arguments.length === 2) {\n      const geomIndex = arguments[0], location = arguments[1]\n      this.elt[geomIndex].setLocation(Position.ON, location)\n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2]\n      this.elt[geomIndex].setLocation(posIndex, location)\n    }\n  }\n  isEqualOnSide(lbl, side) {\n    return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n  }\n  allPositionsEqual(geomIndex, loc) {\n    return this.elt[geomIndex].allPositionsEqual(loc)\n  }\n  toLine(geomIndex) {\n    if (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0])\n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport PointLocation from '../algorithm/PointLocation.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Label from './Label.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Assert from '../util/Assert.js'\nexport default class EdgeRing {\n  constructor() {\n    EdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._startDe = null\n    this._maxNodeDegree = -1\n    this._edges = new ArrayList()\n    this._pts = new ArrayList()\n    this._label = new Label(Location.NONE)\n    this._ring = null\n    this._isHole = null\n    this._shell = null\n    this._holes = new ArrayList()\n    this._geometryFactory = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const start = arguments[0], geometryFactory = arguments[1]\n      this._geometryFactory = geometryFactory\n      this.computePoints(start)\n      this.computeRing()\n    }\n  }\n  computeRing() {\n    if (this._ring !== null) return null\n    const coord = new Array(this._pts.size()).fill(null)\n    for (let i = 0; i < this._pts.size(); i++) \n      coord[i] = this._pts.get(i)\n    \n    this._ring = this._geometryFactory.createLinearRing(coord)\n    this._isHole = Orientation.isCCW(this._ring.getCoordinates())\n  }\n  isIsolated() {\n    return this._label.getGeometryCount() === 1\n  }\n  computePoints(start) {\n    this._startDe = start\n    let de = start\n    let isFirstEdge = true\n    do {\n      if (de === null) throw new TopologyException('Found null DirectedEdge')\n      if (de.getEdgeRing() === this) throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate())\n      this._edges.add(de)\n      const label = de.getLabel()\n      Assert.isTrue(label.isArea())\n      this.mergeLabel(label)\n      this.addPoints(de.getEdge(), de.isForward(), isFirstEdge)\n      isFirstEdge = false\n      this.setEdgeRing(de, this)\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n  }\n  getLinearRing() {\n    return this._ring\n  }\n  getCoordinate(i) {\n    return this._pts.get(i)\n  }\n  computeMaxNodeDegree() {\n    this._maxNodeDegree = 0\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      const degree = node.getEdges().getOutgoingDegree(this)\n      if (degree > this._maxNodeDegree) this._maxNodeDegree = degree\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n    this._maxNodeDegree *= 2\n  }\n  addPoints(edge, isForward, isFirstEdge) {\n    const edgePts = edge.getCoordinates()\n    if (isForward) {\n      let startIndex = 1\n      if (isFirstEdge) startIndex = 0\n      for (let i = startIndex; i < edgePts.length; i++) \n        this._pts.add(edgePts[i])\n      \n    } else {\n      let startIndex = edgePts.length - 2\n      if (isFirstEdge) startIndex = edgePts.length - 1\n      for (let i = startIndex; i >= 0; i--) \n        this._pts.add(edgePts[i])\n      \n    }\n  }\n  isHole() {\n    return this._isHole\n  }\n  setInResult() {\n    let de = this._startDe\n    do {\n      de.getEdge().setInResult(true)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n  containsPoint(p) {\n    const shell = this.getLinearRing()\n    const env = shell.getEnvelopeInternal()\n    if (!env.contains(p)) return false\n    if (!PointLocation.isInRing(p, shell.getCoordinates())) return false\n    for (let i = this._holes.iterator(); i.hasNext(); ) {\n      const hole = i.next()\n      if (hole.containsPoint(p)) return false\n    }\n    return true\n  }\n  addHole(ring) {\n    this._holes.add(ring)\n  }\n  isShell() {\n    return this._shell === null\n  }\n  getLabel() {\n    return this._label\n  }\n  getEdges() {\n    return this._edges\n  }\n  getMaxNodeDegree() {\n    if (this._maxNodeDegree < 0) this.computeMaxNodeDegree()\n    return this._maxNodeDegree\n  }\n  getShell() {\n    return this._shell\n  }\n  mergeLabel() {\n    if (arguments.length === 1) {\n      const deLabel = arguments[0]\n      this.mergeLabel(deLabel, 0)\n      this.mergeLabel(deLabel, 1)\n    } else if (arguments.length === 2) {\n      const deLabel = arguments[0], geomIndex = arguments[1]\n      const loc = deLabel.getLocation(geomIndex, Position.RIGHT)\n      if (loc === Location.NONE) return null\n      if (this._label.getLocation(geomIndex) === Location.NONE) {\n        this._label.setLocation(geomIndex, loc)\n        return null\n      }\n    }\n  }\n  setShell(shell) {\n    this._shell = shell\n    if (shell !== null) shell.addHole(this)\n  }\n  toPolygon(geometryFactory) {\n    const holeLR = new Array(this._holes.size()).fill(null)\n    for (let i = 0; i < this._holes.size(); i++) \n      holeLR[i] = this._holes.get(i).getLinearRing()\n    \n    const poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR)\n    return poly\n  }\n}\n","import EdgeRing from '../../geomgraph/EdgeRing.js'\nexport default class MinimalEdgeRing extends EdgeRing {\n  constructor() {\n    super()\n    MinimalEdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const start = arguments[0], geometryFactory = arguments[1]\n    EdgeRing.constructor_.call(this, start, geometryFactory)\n  }\n  setEdgeRing(de, er) {\n    de.setMinEdgeRing(er)\n  }\n  getNext(de) {\n    return de.getNextMin()\n  }\n}\n","import MinimalEdgeRing from './MinimalEdgeRing.js'\nimport EdgeRing from '../../geomgraph/EdgeRing.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class MaximalEdgeRing extends EdgeRing {\n  constructor() {\n    super()\n    MaximalEdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const start = arguments[0], geometryFactory = arguments[1]\n    EdgeRing.constructor_.call(this, start, geometryFactory)\n  }\n  buildMinimalRings() {\n    const minEdgeRings = new ArrayList()\n    let de = this._startDe\n    do {\n      if (de.getMinEdgeRing() === null) {\n        const minEr = new MinimalEdgeRing(de, this._geometryFactory)\n        minEdgeRings.add(minEr)\n      }\n      de = de.getNext()\n    } while (de !== this._startDe)\n    return minEdgeRings\n  }\n  setEdgeRing(de, er) {\n    de.setEdgeRing(er)\n  }\n  linkDirectedEdgesForMinimalEdgeRings() {\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      node.getEdges().linkMinimalDirectedEdges(this)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n  getNext(de) {\n    return de.getNext()\n  }\n}\n","import Assert from '../util/Assert.js'\nexport default class GraphComponent {\n  constructor() {\n    GraphComponent.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._label = null\n    this._isInResult = false\n    this._isCovered = false\n    this._isCoveredSet = false\n    this._isVisited = false\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const label = arguments[0]\n      this._label = label\n    }\n  }\n  setVisited(isVisited) {\n    this._isVisited = isVisited\n  }\n  setInResult(isInResult) {\n    this._isInResult = isInResult\n  }\n  isCovered() {\n    return this._isCovered\n  }\n  isCoveredSet() {\n    return this._isCoveredSet\n  }\n  setLabel(label) {\n    this._label = label\n  }\n  getLabel() {\n    return this._label\n  }\n  setCovered(isCovered) {\n    this._isCovered = isCovered\n    this._isCoveredSet = true\n  }\n  updateIM(im) {\n    Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label')\n    this.computeIM(im)\n  }\n  isInResult() {\n    return this._isInResult\n  }\n  isVisited() {\n    return this._isVisited\n  }\n}\n","import Location from '../geom/Location.js'\nimport Label from './Label.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class Node extends GraphComponent {\n  constructor() {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coord = null\n    this._edges = null\n    const coord = arguments[0], edges = arguments[1]\n    this._coord = coord\n    this._edges = edges\n    this._label = new Label(0, Location.NONE)\n  }\n  isIncidentEdgeInResult() {\n    for (let it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.getEdge().isInResult()) return true\n    }\n    return false\n  }\n  isIsolated() {\n    return this._label.getGeometryCount() === 1\n  }\n  getCoordinate() {\n    return this._coord\n  }\n  print(out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label)\n  }\n  computeIM(im) {}\n  computeMergedLocation(label2, eltIndex) {\n    let loc = Location.NONE\n    loc = this._label.getLocation(eltIndex)\n    if (!label2.isNull(eltIndex)) {\n      const nLoc = label2.getLocation(eltIndex)\n      if (loc !== Location.BOUNDARY) loc = nLoc\n    }\n    return loc\n  }\n  setLabel() {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && Number.isInteger(arguments[0]))) {\n      const argIndex = arguments[0], onLocation = arguments[1]\n      if (this._label === null) \n        this._label = new Label(argIndex, onLocation)\n      else this._label.setLocation(argIndex, onLocation)\n    } else {\n      return super.setLabel.apply(this, arguments)\n    }\n  }\n  getEdges() {\n    return this._edges\n  }\n  mergeLabel() {\n    if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      this.mergeLabel(n._label)\n    } else if (arguments[0] instanceof Label) {\n      const label2 = arguments[0]\n      for (let i = 0; i < 2; i++) {\n        const loc = this.computeMergedLocation(label2, i)\n        const thisLoc = this._label.getLocation(i)\n        if (thisLoc === Location.NONE) this._label.setLocation(i, loc)\n      }\n    }\n  }\n  add(e) {\n    this._edges.insert(e)\n    e.setNode(this)\n  }\n  setLabelBoundary(argIndex) {\n    if (this._label === null) return null\n    let loc = Location.NONE\n    if (this._label !== null) loc = this._label.getLocation(argIndex)\n    let newLoc = null\n    switch (loc) {\n    case Location.BOUNDARY:\n      newLoc = Location.INTERIOR\n      break\n    case Location.INTERIOR:\n      newLoc = Location.BOUNDARY\n      break\n    default:\n      newLoc = Location.BOUNDARY\n      break\n    }\n    this._label.setLocation(argIndex, newLoc)\n  }\n}\n","import Map from './Map.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n */\nexport default class SortedMap extends Map {}\n","import ArrayList from './ArrayList.js'\nimport SortedMap from './SortedMap.js'\nimport HashSet from './HashSet.js'\n\nconst BLACK = 0\nconst RED = 1\n\nfunction colorOf(p) {\n  return (p == null ? BLACK : p.color)\n}\nfunction parentOf(p) {\n  return (p == null ? null : p.parent)\n}\nfunction setColor(p, c) {\n  if (p !== null) p.color = c\n}\nfunction leftOf(p) {\n  return (p == null ? null : p.left)\n}\nfunction rightOf(p) {\n  return (p == null ? null : p.right)\n}\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n */\nexport default class TreeMap extends SortedMap {\n  constructor() {\n    super()\n    this.root_ = null\n    this.size_ = 0\n  }\n\n  get(key) {\n    let p = this.root_\n    while (p !== null) {\n      const cmp = key.compareTo(p.key)\n      if (cmp < 0)\n        p = p.left\n      else if (cmp > 0)\n        p = p.right\n      else return p.value\n    }\n    return null\n  }\n\n  put(key, value) {\n    if (this.root_ === null) {\n      this.root_ = {\n        key: key,\n        value: value,\n        left: null,\n        right: null,\n        parent: null,\n        color: BLACK,\n        getValue() {\n          return this.value\n        },\n        getKey() {\n          return this.key\n        }\n      }\n      this.size_ = 1\n      return null\n    }\n    let t = this.root_; let parent; let cmp\n    do {\n      parent = t\n      cmp = key.compareTo(t.key)\n      if (cmp < 0) {\n        t = t.left\n      } else if (cmp > 0) {\n        t = t.right\n      } else {\n        const oldValue = t.value\n        t.value = value\n        return oldValue\n      }\n    } while (t !== null)\n    const e = {\n      key: key,\n      left: null,\n      right: null,\n      value: value,\n      parent: parent,\n      color: BLACK,\n      getValue() {\n        return this.value\n      },\n      getKey() {\n        return this.key\n      }\n    }\n    if (cmp < 0)\n      parent.left = e\n    else parent.right = e\n\n    this.fixAfterInsertion(e)\n    this.size_++\n    return null\n  }\n\n  /**\n   * @param {Object} x\n   */\n  fixAfterInsertion(x) {\n    let y\n    x.color = RED\n    while (x != null && x !== this.root_ && x.parent.color === RED)\n      if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n        y = rightOf(parentOf(parentOf(x)))\n        if (colorOf(y) === RED) {\n          setColor(parentOf(x), BLACK)\n          setColor(y, BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          x = parentOf(parentOf(x))\n        } else {\n          if (x === rightOf(parentOf(x))) {\n            x = parentOf(x)\n            this.rotateLeft(x)\n          }\n          setColor(parentOf(x), BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          this.rotateRight(parentOf(parentOf(x)))\n        }\n      } else {\n        y = leftOf(parentOf(parentOf(x)))\n        if (colorOf(y) === RED) {\n          setColor(parentOf(x), BLACK)\n          setColor(y, BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          x = parentOf(parentOf(x))\n        } else {\n          if (x === leftOf(parentOf(x))) {\n            x = parentOf(x)\n            this.rotateRight(x)\n          }\n          setColor(parentOf(x), BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          this.rotateLeft(parentOf(parentOf(x)))\n        }\n      }\n\n    this.root_.color = BLACK\n  }\n\n  values() {\n    const arrayList = new ArrayList()\n    let p = this.getFirstEntry()\n    if (p !== null) {\n      arrayList.add(p.value)\n      while ((p = TreeMap.successor(p)) !== null)\n        arrayList.add(p.value)\n    }\n    return arrayList\n  }\n\n  entrySet() {\n    const hashSet = new HashSet()\n    let p = this.getFirstEntry()\n    if (p !== null) {\n      hashSet.add(p)\n      while ((p = TreeMap.successor(p)) !== null)\n        hashSet.add(p)\n    }\n    return hashSet\n  }\n\n  /**\n   * @param {Object} p\n   */\n  rotateLeft(p) {\n    if (p != null) {\n      const r = p.right\n      p.right = r.left\n      if (r.left != null)\n        r.left.parent = p\n      r.parent = p.parent\n      if (p.parent == null)\n        this.root_ = r\n      else if (p.parent.left === p)\n        p.parent.left = r\n      else\n        p.parent.right = r\n      r.left = p\n      p.parent = r\n    }\n  }\n\n  /**\n   * @param {Object} p\n   */\n  rotateRight(p) {\n    if (p != null) {\n      const l = p.left\n      p.left = l.right\n      if (l.right != null)\n        l.right.parent = p\n      l.parent = p.parent\n      if (p.parent == null)\n        this.root_ = l\n      else if (p.parent.right === p)\n        p.parent.right = l\n      else\n        p.parent.left = l\n      l.right = p\n      p.parent = l\n    }\n  }\n\n  /**\n   * @return {Object}\n   */\n  getFirstEntry() {\n    let p = this.root_\n    if (p != null)\n      while (p.left != null) p = p.left\n    return p\n  }\n\n  /**\n   * @param {Object} t\n   * @return {Object}\n   * @private\n   */\n  static successor(t) {\n    let p\n    if (t === null) {\n      return null\n    } else if (t.right !== null) {\n      p = t.right\n      while (p.left !== null)\n        p = p.left\n      return p\n    } else {\n      p = t.parent\n      let ch = t\n      while (p !== null && ch === p.right) {\n        ch = p\n        p = p.parent\n      }\n      return p\n    }\n  }\n\n  size() {\n    return this.size_\n  }\n\n  containsKey(key) {\n    let p = this.root_\n    while (p !== null) {\n      const cmp = key.compareTo(p.key)\n      if (cmp < 0)\n        p = p.left\n      else if (cmp > 0)\n        p = p.right\n      else return true\n    }\n    return false\n  }\n}\n","import Location from '../geom/Location.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Node from './Node.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class NodeMap {\n  constructor() {\n    NodeMap.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.nodeMap = new TreeMap()\n    this.nodeFact = null\n    const nodeFact = arguments[0]\n    this.nodeFact = nodeFact\n  }\n  find(coord) {\n    return this.nodeMap.get(coord)\n  }\n  addNode() {\n    if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      let node = this.nodeMap.get(coord)\n      if (node === null) {\n        node = this.nodeFact.createNode(coord)\n        this.nodeMap.put(coord, node)\n      }\n      return node\n    } else if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      const node = this.nodeMap.get(n.getCoordinate())\n      if (node === null) {\n        this.nodeMap.put(n.getCoordinate(), n)\n        return n\n      }\n      node.mergeLabel(n)\n      return node\n    }\n  }\n  print(out) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const n = it.next()\n      n.print(out)\n    }\n  }\n  iterator() {\n    return this.nodeMap.values().iterator()\n  }\n  values() {\n    return this.nodeMap.values()\n  }\n  getBoundaryNodes(geomIndex) {\n    const bdyNodes = new ArrayList()\n    for (let i = this.iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node)\n    }\n    return bdyNodes\n  }\n  add(e) {\n    const p = e.getCoordinate()\n    const n = this.addNode(p)\n    n.add(e)\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Quadrant {\n  static isNorthern(quad) {\n    return quad === Quadrant.NE || quad === Quadrant.NW\n  }\n  static isOpposite(quad1, quad2) {\n    if (quad1 === quad2) return false\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return true\n    return false\n  }\n  static commonHalfPlane(quad1, quad2) {\n    if (quad1 === quad2) return quad1\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return -1\n    const min = quad1 < quad2 ? quad1 : quad2\n    const max = quad1 > quad2 ? quad1 : quad2\n    if (min === 0 && max === 3) return 3\n    return min\n  }\n  static isInHalfPlane(quad, halfPlane) {\n    if (halfPlane === Quadrant.SE) \n      return quad === Quadrant.SE || quad === Quadrant.SW\n    \n    return quad === halfPlane || quad === halfPlane + 1\n  }\n  static quadrant() {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0], dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )')\n      if (dx >= 0.0) \n        if (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE\n      else \n      if (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW\n      \n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0], p1 = arguments[1]\n      if (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0)\n      if (p1.x >= p0.x) \n        if (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE\n      else \n      if (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW\n      \n    }\n  }\n}\nQuadrant.NE = 0\nQuadrant.NW = 1\nQuadrant.SW = 2\nQuadrant.SE = 3\n","import Orientation from '../algorithm/Orientation.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Quadrant from './Quadrant.js'\nimport Assert from '../util/Assert.js'\nexport default class EdgeEnd {\n  constructor() {\n    EdgeEnd.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edge = null\n    this._label = null\n    this._node = null\n    this._p0 = null\n    this._p1 = null\n    this._dx = null\n    this._dy = null\n    this._quadrant = null\n    if (arguments.length === 1) {\n      const edge = arguments[0]\n      this._edge = edge\n    } else if (arguments.length === 3) {\n      const edge = arguments[0], p0 = arguments[1], p1 = arguments[2]\n      EdgeEnd.constructor_.call(this, edge, p0, p1, null)\n    } else if (arguments.length === 4) {\n      const edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3]\n      EdgeEnd.constructor_.call(this, edge)\n      this.init(p0, p1)\n      this._label = label\n    }\n  }\n  compareDirection(e) {\n    if (this._dx === e._dx && this._dy === e._dy) return 0\n    if (this._quadrant > e._quadrant) return 1\n    if (this._quadrant < e._quadrant) return -1\n    return Orientation.index(e._p0, e._p1, this._p1)\n  }\n  getDy() {\n    return this._dy\n  }\n  getCoordinate() {\n    return this._p0\n  }\n  setNode(node) {\n    this._node = node\n  }\n  print(out) {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label)\n  }\n  compareTo(obj) {\n    const e = obj\n    return this.compareDirection(e)\n  }\n  getDirectedCoordinate() {\n    return this._p1\n  }\n  getDx() {\n    return this._dx\n  }\n  getLabel() {\n    return this._label\n  }\n  getEdge() {\n    return this._edge\n  }\n  getQuadrant() {\n    return this._quadrant\n  }\n  getNode() {\n    return this._node\n  }\n  toString() {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n  }\n  computeLabel(boundaryNodeRule) {}\n  init(p0, p1) {\n    this._p0 = p0\n    this._p1 = p1\n    this._dx = p1.x - p0.x\n    this._dy = p1.y - p0.y\n    this._quadrant = Quadrant.quadrant(this._dx, this._dy)\n    Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found')\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Location from '../geom/Location.js'\nimport EdgeEnd from './EdgeEnd.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport Label from './Label.js'\nexport default class DirectedEdge extends EdgeEnd {\n  constructor() {\n    super()\n    DirectedEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isForward = null\n    this._isInResult = false\n    this._isVisited = false\n    this._sym = null\n    this._next = null\n    this._nextMin = null\n    this._edgeRing = null\n    this._minEdgeRing = null\n    this._depth = [0, -999, -999]\n    const edge = arguments[0], isForward = arguments[1]\n    EdgeEnd.constructor_.call(this, edge)\n    this._isForward = isForward\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1))\n    } else {\n      const n = edge.getNumPoints() - 1\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1))\n    }\n    this.computeDirectedLabel()\n  }\n  static depthFactor(currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1\n    return 0\n  }\n  getNextMin() {\n    return this._nextMin\n  }\n  getDepth(position) {\n    return this._depth[position]\n  }\n  setVisited(isVisited) {\n    this._isVisited = isVisited\n  }\n  computeDirectedLabel() {\n    this._label = new Label(this._edge.getLabel())\n    if (!this._isForward) this._label.flip()\n  }\n  getNext() {\n    return this._next\n  }\n  setDepth(position, depthVal) {\n    if (this._depth[position] !== -999) \n      if (this._depth[position] !== depthVal) throw new TopologyException('assigned depths do not match', this.getCoordinate())\n    \n    this._depth[position] = depthVal\n  }\n  isInteriorAreaEdge() {\n    let isInteriorAreaEdge = true\n    for (let i = 0; i < 2; i++) \n      if (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) \n        isInteriorAreaEdge = false\n      \n    \n    return isInteriorAreaEdge\n  }\n  setNextMin(nextMin) {\n    this._nextMin = nextMin\n  }\n  print(out) {\n    super.print.call(this, out)\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT])\n    out.print(' (' + this.getDepthDelta() + ')')\n    if (this._isInResult) out.print(' inResult')\n  }\n  setMinEdgeRing(minEdgeRing) {\n    this._minEdgeRing = minEdgeRing\n  }\n  isLineEdge() {\n    const isLine = this._label.isLine(0) || this._label.isLine(1)\n    const isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR)\n    const isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR)\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  }\n  setEdgeRing(edgeRing) {\n    this._edgeRing = edgeRing\n  }\n  getMinEdgeRing() {\n    return this._minEdgeRing\n  }\n  getDepthDelta() {\n    let depthDelta = this._edge.getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    return depthDelta\n  }\n  setInResult(isInResult) {\n    this._isInResult = isInResult\n  }\n  getSym() {\n    return this._sym\n  }\n  isForward() {\n    return this._isForward\n  }\n  getEdge() {\n    return this._edge\n  }\n  printEdge(out) {\n    this.print(out)\n    out.print(' ')\n    if (this._isForward) this._edge.print(out); else this._edge.printReverse(out)\n  }\n  setSym(de) {\n    this._sym = de\n  }\n  setVisitedEdge(isVisited) {\n    this.setVisited(isVisited)\n    this._sym.setVisited(isVisited)\n  }\n  setEdgeDepths(position, depth) {\n    let depthDelta = this.getEdge().getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    let directionFactor = 1\n    if (position === Position.LEFT) directionFactor = -1\n    const oppositePos = Position.opposite(position)\n    const delta = depthDelta * directionFactor\n    const oppositeDepth = depth + delta\n    this.setDepth(position, depth)\n    this.setDepth(oppositePos, oppositeDepth)\n  }\n  getEdgeRing() {\n    return this._edgeRing\n  }\n  isInResult() {\n    return this._isInResult\n  }\n  setNext(next) {\n    this._next = next\n  }\n  isVisited() {\n    return this._isVisited\n  }\n}\n","import Node from './Node.js'\nexport default class NodeFactory {\n  createNode(coord) {\n    return new Node(coord, null)\n  }\n}\n","import Location from '../geom/Location.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Node from './Node.js'\nimport NodeMap from './NodeMap.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport DirectedEdge from './DirectedEdge.js'\nimport System from '../../../../java/lang/System.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Quadrant from './Quadrant.js'\nimport NodeFactory from './NodeFactory.js'\nexport default class PlanarGraph {\n  constructor() {\n    PlanarGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edges = new ArrayList()\n    this._nodes = null\n    this._edgeEndList = new ArrayList()\n    if (arguments.length === 0) {\n      this._nodes = new NodeMap(new NodeFactory())\n    } else if (arguments.length === 1) {\n      const nodeFact = arguments[0]\n      this._nodes = new NodeMap(nodeFact)\n    }\n  }\n  static linkResultDirectedEdges(nodes) {\n    for (let nodeit = nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n  printEdges(out) {\n    out.println('Edges:')\n    for (let i = 0; i < this._edges.size(); i++) {\n      out.println('edge ' + i + ':')\n      const e = this._edges.get(i)\n      e.print(out)\n      e.eiList.print(out)\n    }\n  }\n  find(coord) {\n    return this._nodes.find(coord)\n  }\n  addNode() {\n    if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      return this._nodes.addNode(node)\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      return this._nodes.addNode(coord)\n    }\n  }\n  getNodeIterator() {\n    return this._nodes.iterator()\n  }\n  linkResultDirectedEdges() {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n  debugPrintln(o) {\n    System.out.println(o)\n  }\n  isBoundaryNode(geomIndex, coord) {\n    const node = this._nodes.find(coord)\n    if (node === null) return false\n    const label = node.getLabel()\n    if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true\n    return false\n  }\n  linkAllDirectedEdges() {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkAllDirectedEdges()\n    }\n  }\n  matchInSameDirection(p0, p1, ep0, ep1) {\n    if (!p0.equals(ep0)) return false\n    if (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true\n    return false\n  }\n  getEdgeEnds() {\n    return this._edgeEndList\n  }\n  debugPrint(o) {\n    System.out.print(o)\n  }\n  getEdgeIterator() {\n    return this._edges.iterator()\n  }\n  findEdgeInSameDirection(p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e\n      if (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e\n    }\n    return null\n  }\n  insertEdge(e) {\n    this._edges.add(e)\n  }\n  findEdgeEnd(e) {\n    for (let i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\n      const ee = i.next()\n      if (ee.getEdge() === e) return ee\n    }\n    return null\n  }\n  addEdges(edgesToAdd) {\n    for (let it = edgesToAdd.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      this._edges.add(e)\n      const de1 = new DirectedEdge(e, true)\n      const de2 = new DirectedEdge(e, false)\n      de1.setSym(de2)\n      de2.setSym(de1)\n      this.add(de1)\n      this.add(de2)\n    }\n  }\n  add(e) {\n    this._nodes.add(e)\n    this._edgeEndList.add(e)\n  }\n  getNodes() {\n    return this._nodes.values()\n  }\n  findEdge(p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e\n    }\n    return null\n  }\n}\n","import PointLocation from '../../algorithm/PointLocation.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport MaximalEdgeRing from './MaximalEdgeRing.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class PolygonBuilder {\n  constructor() {\n    PolygonBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometryFactory = null\n    this._shellList = new ArrayList()\n    const geometryFactory = arguments[0]\n    this._geometryFactory = geometryFactory\n  }\n  static findEdgeRingContaining(testEr, shellList) {\n    const testRing = testEr.getLinearRing()\n    const testEnv = testRing.getEnvelopeInternal()\n    let testPt = testRing.getCoordinateN(0)\n    let minShell = null\n    let minShellEnv = null\n    for (let it = shellList.iterator(); it.hasNext(); ) {\n      const tryShell = it.next()\n      const tryShellRing = tryShell.getLinearRing()\n      const tryShellEnv = tryShellRing.getEnvelopeInternal()\n      if (tryShellEnv.equals(testEnv)) continue\n      if (!tryShellEnv.contains(testEnv)) continue\n      testPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates())\n      let isContained = false\n      if (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true\n      if (isContained) \n        if (minShell === null || minShellEnv.contains(tryShellEnv)) {\n          minShell = tryShell\n          minShellEnv = minShell.getLinearRing().getEnvelopeInternal()\n        }\n      \n    }\n    return minShell\n  }\n  sortShellsAndHoles(edgeRings, shellList, freeHoleList) {\n    for (let it = edgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.isHole()) \n        freeHoleList.add(er)\n      else \n        shellList.add(er)\n      \n    }\n  }\n  computePolygons(shellList) {\n    const resultPolyList = new ArrayList()\n    for (let it = shellList.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      const poly = er.toPolygon(this._geometryFactory)\n      resultPolyList.add(poly)\n    }\n    return resultPolyList\n  }\n  placeFreeHoles(shellList, freeHoleList) {\n    for (let it = freeHoleList.iterator(); it.hasNext(); ) {\n      const hole = it.next()\n      if (hole.getShell() === null) {\n        const shell = PolygonBuilder.findEdgeRingContaining(hole, shellList)\n        if (shell === null) throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0))\n        hole.setShell(shell)\n      }\n    }\n  }\n  buildMinimalEdgeRings(maxEdgeRings, shellList, freeHoleList) {\n    const edgeRings = new ArrayList()\n    for (let it = maxEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.getMaxNodeDegree() > 2) {\n        er.linkDirectedEdgesForMinimalEdgeRings()\n        const minEdgeRings = er.buildMinimalRings()\n        const shell = this.findShell(minEdgeRings)\n        if (shell !== null) {\n          this.placePolygonHoles(shell, minEdgeRings)\n          shellList.add(shell)\n        } else {\n          freeHoleList.addAll(minEdgeRings)\n        }\n      } else {\n        edgeRings.add(er)\n      }\n    }\n    return edgeRings\n  }\n  buildMaximalEdgeRings(dirEdges) {\n    const maxEdgeRings = new ArrayList()\n    for (let it = dirEdges.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.isInResult() && de.getLabel().isArea()) \n        if (de.getEdgeRing() === null) {\n          const er = new MaximalEdgeRing(de, this._geometryFactory)\n          maxEdgeRings.add(er)\n          er.setInResult()\n        }\n      \n    }\n    return maxEdgeRings\n  }\n  placePolygonHoles(shell, minEdgeRings) {\n    for (let it = minEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.isHole()) \n        er.setShell(shell)\n      \n    }\n  }\n  getPolygons() {\n    const resultPolyList = this.computePolygons(this._shellList)\n    return resultPolyList\n  }\n  findShell(minEdgeRings) {\n    let shellCount = 0\n    let shell = null\n    for (let it = minEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (!er.isHole()) {\n        shell = er\n        shellCount++\n      }\n    }\n    Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list')\n    return shell\n  }\n  add() {\n    if (arguments.length === 1) {\n      const graph = arguments[0]\n      this.add(graph.getEdgeEnds(), graph.getNodes())\n    } else if (arguments.length === 2) {\n      const dirEdges = arguments[0], nodes = arguments[1]\n      PlanarGraph.linkResultDirectedEdges(nodes)\n      const maxEdgeRings = this.buildMaximalEdgeRings(dirEdges)\n      const freeHoleList = new ArrayList()\n      const edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList)\n      this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList)\n      this.placeFreeHoles(this._shellList, freeHoleList)\n    }\n  }\n}\n","export default class Boundable {\n  getBounds() {}\n}\n","import Boundable from './Boundable.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nexport default class ItemBoundable {\n  constructor() {\n    ItemBoundable.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._bounds = null\n    this._item = null\n    const bounds = arguments[0], item = arguments[1]\n    this._bounds = bounds\n    this._item = item\n  }\n  getItem() {\n    return this._item\n  }\n  getBounds() {\n    return this._bounds\n  }\n  get interfaces_() {\n    return [Boundable, Serializable]\n  }\n}\n","import ArrayList from '../../../../java/util/ArrayList.js'\nexport default class PriorityQueue {\n  constructor() {\n    PriorityQueue.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._size = null\n    this._items = null\n    this._size = 0\n    this._items = new ArrayList()\n    this._items.add(null)\n  }\n  poll() {\n    if (this.isEmpty()) return null\n    const minItem = this._items.get(1)\n    this._items.set(1, this._items.get(this._size))\n    this._size -= 1\n    this.reorder(1)\n    return minItem\n  }\n  size() {\n    return this._size\n  }\n  reorder(hole) {\n    let child = null\n    const tmp = this._items.get(hole)\n    for (; hole * 2 <= this._size; hole = child) {\n      child = hole * 2\n      if (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++\n      if (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child)); else break\n    }\n    this._items.set(hole, tmp)\n  }\n  clear() {\n    this._size = 0\n    this._items.clear()\n  }\n  peek() {\n    if (this.isEmpty()) return null\n    const minItem = this._items.get(1)\n    return minItem\n  }\n  isEmpty() {\n    return this._size === 0\n  }\n  add(x) {\n    this._items.add(null)\n    this._size += 1\n    let hole = this._size\n    this._items.set(0, x)\n    for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) \n      this._items.set(hole, this._items.get(Math.trunc(hole / 2)))\n    \n    this._items.set(hole, x)\n  }\n}\n","export default class SpatialIndex {\n  insert(itemEnv, item) {}\n  remove(itemEnv, item) {}\n  query() {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0], visitor = arguments[1]\n    }\n  }\n}\n","import Boundable from './Boundable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Assert from '../../util/Assert.js'\nexport default class AbstractNode {\n  constructor() {\n    AbstractNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._childBoundables = new ArrayList()\n    this._bounds = null\n    this._level = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const level = arguments[0]\n      this._level = level\n    }\n  }\n  getLevel() {\n    return this._level\n  }\n  size() {\n    return this._childBoundables.size()\n  }\n  getChildBoundables() {\n    return this._childBoundables\n  }\n  addChildBoundable(childBoundable) {\n    Assert.isTrue(this._bounds === null)\n    this._childBoundables.add(childBoundable)\n  }\n  isEmpty() {\n    return this._childBoundables.isEmpty()\n  }\n  getBounds() {\n    if (this._bounds === null) \n      this._bounds = this.computeBounds()\n    \n    return this._bounds\n  }\n  get interfaces_() {\n    return [Boundable, Serializable]\n  }\n}\n","import Arrays from './Arrays.js'\nimport ArrayList from './ArrayList.js'\n\nconst Collections = {\n  reverseOrder: function() {\n    return {\n      compare(a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function(l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function(l, c) {\n    const a = l.toArray()\n    if (c)\n      Arrays.sort(a, c)\n    else\n      Arrays.sort(a)\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function(o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","export default class EnvelopeDistance {\n  static maxDistance(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {\n    let dist = EnvelopeDistance.distance(ax1, ay1, bx1, by1)\n    dist = Math.max(dist, EnvelopeDistance.distance(ax1, ay1, bx2, by2))\n    dist = Math.max(dist, EnvelopeDistance.distance(ax2, ay2, bx1, by1))\n    dist = Math.max(dist, EnvelopeDistance.distance(ax2, ay2, bx2, by2))\n    return dist\n  }\n  static distance(x1, y1, x2, y2) {\n    const dx = x2 - x1\n    const dy = y2 - y1\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  static maximumDistance(env1, env2) {\n    const minx = Math.min(env1.getMinX(), env2.getMinX())\n    const miny = Math.min(env1.getMinY(), env2.getMinY())\n    const maxx = Math.max(env1.getMaxX(), env2.getMaxX())\n    const maxy = Math.max(env1.getMaxY(), env2.getMaxY())\n    return EnvelopeDistance.distance(minx, miny, maxx, maxy)\n  }\n  static minMaxDistance(a, b) {\n    const aminx = a.getMinX()\n    const aminy = a.getMinY()\n    const amaxx = a.getMaxX()\n    const amaxy = a.getMaxY()\n    const bminx = b.getMinX()\n    const bminy = b.getMinY()\n    const bmaxx = b.getMaxX()\n    const bmaxy = b.getMaxY()\n    let dist = EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bminx, bminy, bminx, bmaxy)\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bmaxx, bmaxy, bmaxx, bminy))\n    return dist\n  }\n}\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport AbstractNode from './AbstractNode.js'\nimport EnvelopeDistance from './EnvelopeDistance.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nexport default class BoundablePair {\n  constructor() {\n    BoundablePair.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._boundable1 = null\n    this._boundable2 = null\n    this._distance = null\n    this._itemDistance = null\n    const boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2]\n    this._boundable1 = boundable1\n    this._boundable2 = boundable2\n    this._itemDistance = itemDistance\n    this._distance = this.distance()\n  }\n  static area(b) {\n    return b.getBounds().getArea()\n  }\n  static isComposite(item) {\n    return item instanceof AbstractNode\n  }\n  maximumDistance() {\n    return EnvelopeDistance.maximumDistance(this._boundable1.getBounds(), this._boundable2.getBounds())\n  }\n  expandToQueue(priQ, minDistance) {\n    const isComp1 = BoundablePair.isComposite(this._boundable1)\n    const isComp2 = BoundablePair.isComposite(this._boundable2)\n    if (isComp1 && isComp2) {\n      if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n        this.expand(this._boundable1, this._boundable2, false, priQ, minDistance)\n        return null\n      } else {\n        this.expand(this._boundable2, this._boundable1, true, priQ, minDistance)\n        return null\n      }\n    } else if (isComp1) {\n      this.expand(this._boundable1, this._boundable2, false, priQ, minDistance)\n      return null\n    } else if (isComp2) {\n      this.expand(this._boundable2, this._boundable1, true, priQ, minDistance)\n      return null\n    }\n    throw new IllegalArgumentException('neither boundable is composite')\n  }\n  isLeaves() {\n    return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n  }\n  compareTo(o) {\n    const nd = o\n    if (this._distance < nd._distance) return -1\n    if (this._distance > nd._distance) return 1\n    return 0\n  }\n  expand(bndComposite, bndOther, isFlipped, priQ, minDistance) {\n    const children = bndComposite.getChildBoundables()\n    for (let i = children.iterator(); i.hasNext(); ) {\n      const child = i.next()\n      let bp = null\n      if (isFlipped) \n        bp = new BoundablePair(bndOther, child, this._itemDistance)\n      else \n        bp = new BoundablePair(child, bndOther, this._itemDistance)\n      \n      if (bp.getDistance() < minDistance) \n        priQ.add(bp)\n      \n    }\n  }\n  getBoundable(i) {\n    if (i === 0) return this._boundable1\n    return this._boundable2\n  }\n  getDistance() {\n    return this._distance\n  }\n  distance() {\n    if (this.isLeaves()) \n      return this._itemDistance.distance(this._boundable1, this._boundable2)\n    \n    return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","export default class ItemVisitor {\n  visitItem(item) {}\n}\n","import ItemBoundable from './ItemBoundable.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport ItemVisitor from '../ItemVisitor.js'\nimport AbstractNode from './AbstractNode.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Assert from '../../util/Assert.js'\nimport List from '../../../../../java/util/List.js'\nexport default class AbstractSTRtree {\n  constructor() {\n    AbstractSTRtree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._root = null\n    this._built = false\n    this._itemBoundables = new ArrayList()\n    this._nodeCapacity = null\n    if (arguments.length === 0) {\n      AbstractSTRtree.constructor_.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY)\n    } else if (arguments.length === 1) {\n      const nodeCapacity = arguments[0]\n      Assert.isTrue(nodeCapacity > 1, 'Node capacity must be greater than 1')\n      this._nodeCapacity = nodeCapacity\n    }\n  }\n  static compareDoubles(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0\n  }\n  queryInternal() {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0], node = arguments[1], visitor = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) \n          this.queryInternal(searchBounds, childBoundable, visitor)\n        else if (childBoundable instanceof ItemBoundable) \n          visitor.visitItem(childBoundable.getItem())\n        else \n          Assert.shouldNeverReachHere()\n        \n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0], node = arguments[1], matches = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) \n          this.queryInternal(searchBounds, childBoundable, matches)\n        else if (childBoundable instanceof ItemBoundable) \n          matches.add(childBoundable.getItem())\n        else \n          Assert.shouldNeverReachHere()\n        \n      }\n    }\n  }\n  getNodeCapacity() {\n    return this._nodeCapacity\n  }\n  lastNode(nodes) {\n    return nodes.get(nodes.size() - 1)\n  }\n  size() {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) \n        return 0\n      \n      this.build()\n      return this.size(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let size = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) \n          size += this.size(childBoundable)\n        else if (childBoundable instanceof ItemBoundable) \n          size += 1\n        \n      }\n      return size\n    }\n  }\n  removeItem(node, item) {\n    let childToRemove = null\n    for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (childBoundable instanceof ItemBoundable) \n        if (childBoundable.getItem() === item) childToRemove = childBoundable\n      \n    }\n    if (childToRemove !== null) {\n      node.getChildBoundables().remove(childToRemove)\n      return true\n    }\n    return false\n  }\n  itemsTree() {\n    if (arguments.length === 0) {\n      this.build()\n      const valuesTree = this.itemsTree(this._root)\n      if (valuesTree === null) return new ArrayList()\n      return valuesTree\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      const valuesTreeForNode = new ArrayList()\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const valuesTreeForChild = this.itemsTree(childBoundable)\n          if (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild)\n        } else if (childBoundable instanceof ItemBoundable) {\n          valuesTreeForNode.add(childBoundable.getItem())\n        } else {\n          Assert.shouldNeverReachHere()\n        }\n      }\n      if (valuesTreeForNode.size() <= 0) return null\n      return valuesTreeForNode\n    }\n  }\n  insert(bounds, item) {\n    Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.')\n    this._itemBoundables.add(new ItemBoundable(bounds, item))\n  }\n  boundablesAtLevel() {\n    if (arguments.length === 1) {\n      const level = arguments[0]\n      const boundables = new ArrayList()\n      this.boundablesAtLevel(level, this._root, boundables)\n      return boundables\n    } else if (arguments.length === 3) {\n      const level = arguments[0], top = arguments[1], boundables = arguments[2]\n      Assert.isTrue(level > -2)\n      if (top.getLevel() === level) {\n        boundables.add(top)\n        return null\n      }\n      for (let i = top.getChildBoundables().iterator(); i.hasNext(); ) {\n        const boundable = i.next()\n        if (boundable instanceof AbstractNode) {\n          this.boundablesAtLevel(level, boundable, boundables)\n        } else {\n          Assert.isTrue(boundable instanceof ItemBoundable)\n          if (level === -1) \n            boundables.add(boundable)\n          \n        }\n      }\n      return null\n    }\n  }\n  query() {\n    if (arguments.length === 1) {\n      const searchBounds = arguments[0]\n      this.build()\n      const matches = new ArrayList()\n      if (this.isEmpty()) \n        return matches\n      \n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        this.queryInternal(searchBounds, this._root, matches)\n      \n      return matches\n    } else if (arguments.length === 2) {\n      const searchBounds = arguments[0], visitor = arguments[1]\n      this.build()\n      if (this.isEmpty()) \n        return null\n      \n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        this.queryInternal(searchBounds, this._root, visitor)\n      \n    }\n  }\n  build() {\n    if (this._built) return null\n    this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1)\n    this._itemBoundables = null\n    this._built = true\n  }\n  getRoot() {\n    this.build()\n    return this._root\n  }\n  remove() {\n    if (arguments.length === 2) {\n      const searchBounds = arguments[0], item = arguments[1]\n      this.build()\n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        return this.remove(searchBounds, this._root, item)\n      \n      return false\n    } else if (arguments.length === 3) {\n      const searchBounds = arguments[0], node = arguments[1], item = arguments[2]\n      let found = this.removeItem(node, item)\n      if (found) return true\n      let childToPrune = null\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) {\n          found = this.remove(searchBounds, childBoundable, item)\n          if (found) {\n            childToPrune = childBoundable\n            break\n          }\n        }\n      }\n      if (childToPrune !== null) \n        if (childToPrune.getChildBoundables().isEmpty()) \n          node.getChildBoundables().remove(childToPrune)\n        \n      \n      return found\n    }\n  }\n  createHigherLevels(boundablesOfALevel, level) {\n    Assert.isTrue(!boundablesOfALevel.isEmpty())\n    const parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1)\n    if (parentBoundables.size() === 1) \n      return parentBoundables.get(0)\n    \n    return this.createHigherLevels(parentBoundables, level + 1)\n  }\n  depth() {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) \n        return 0\n      \n      this.build()\n      return this.depth(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let maxChildDepth = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const childDepth = this.depth(childBoundable)\n          if (childDepth > maxChildDepth) maxChildDepth = childDepth\n        }\n      }\n      return maxChildDepth + 1\n    }\n  }\n  createParentBoundables(childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const parentBoundables = new ArrayList()\n    parentBoundables.add(this.createNode(newLevel))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, this.getComparator())\n    for (let i = sortedChildBoundables.iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) \n        parentBoundables.add(this.createNode(newLevel))\n      \n      this.lastNode(parentBoundables).addChildBoundable(childBoundable)\n    }\n    return parentBoundables\n  }\n  isEmpty() {\n    if (!this._built) return this._itemBoundables.isEmpty()\n    return this._root.isEmpty()\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\nfunction IntersectsOp() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10\n","export default class ItemDistance {\n  distance(item1, item2) {}\n}\n","import ItemBoundable from './ItemBoundable.js'\nimport PriorityQueue from '../../util/PriorityQueue.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport SpatialIndex from '../SpatialIndex.js'\nimport AbstractNode from './AbstractNode.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport BoundablePair from './BoundablePair.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Comparator from '../../../../../java/util/Comparator.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Assert from '../../util/Assert.js'\nimport AbstractSTRtree from './AbstractSTRtree.js'\nimport ItemDistance from './ItemDistance.js'\nexport default class STRtree extends AbstractSTRtree {\n  constructor() {\n    super()\n    STRtree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      STRtree.constructor_.call(this, STRtree.DEFAULT_NODE_CAPACITY)\n    } else if (arguments.length === 1) {\n      const nodeCapacity = arguments[0]\n      AbstractSTRtree.constructor_.call(this, nodeCapacity)\n    }\n  }\n  static centreX(e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  }\n  static avg(a, b) {\n    return (a + b) / 2\n  }\n  static getItems(kNearestNeighbors) {\n    const items = new Array(kNearestNeighbors.size()).fill(null)\n    let count = 0\n    while (!kNearestNeighbors.isEmpty()) {\n      const bp = kNearestNeighbors.poll()\n      items[count] = bp.getBoundable(0).getItem()\n      count++\n    }\n    return items\n  }\n  static centreY(e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  }\n  createParentBoundablesFromVerticalSlices(verticalSlices, newLevel) {\n    Assert.isTrue(verticalSlices.length > 0)\n    const parentBoundables = new ArrayList()\n    for (let i = 0; i < verticalSlices.length; i++) \n      parentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel))\n    \n    return parentBoundables\n  }\n  nearestNeighbourK() {\n    if (arguments.length === 2) {\n      const initBndPair = arguments[0], k = arguments[1]\n      return this.nearestNeighbourK(initBndPair, Double.POSITIVE_INFINITY, k)\n    } else if (arguments.length === 3) {\n      const initBndPair = arguments[0], maxDistance = arguments[1], k = arguments[2]\n      let distanceLowerBound = maxDistance\n      const priQ = new PriorityQueue()\n      priQ.add(initBndPair)\n      const kNearestNeighbors = new PriorityQueue()\n      while (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n        const bndPair = priQ.poll()\n        const pairDistance = bndPair.getDistance()\n        if (pairDistance >= distanceLowerBound) \n          break\n        \n        if (bndPair.isLeaves()) \n          if (kNearestNeighbors.size() < k) {\n            kNearestNeighbors.add(bndPair)\n          } else {\n            const bp1 = kNearestNeighbors.peek()\n            if (bp1.getDistance() > pairDistance) {\n              kNearestNeighbors.poll()\n              kNearestNeighbors.add(bndPair)\n            }\n            const bp2 = kNearestNeighbors.peek()\n            distanceLowerBound = bp2.getDistance()\n          }\n        else \n          bndPair.expandToQueue(priQ, distanceLowerBound)\n        \n      }\n      return STRtree.getItems(kNearestNeighbors)\n    }\n  }\n  createNode(level) {\n    return new STRtreeNode(level)\n  }\n  size() {\n    if (arguments.length === 0) \n      return super.size.call(this)\n    else return super.size.apply(this, arguments)\n  }\n  insert() {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0], item = arguments[1]\n      if (itemEnv.isNull()) \n        return null\n      \n      super.insert.call(this, itemEnv, item)\n    } else {\n      return super.insert.apply(this, arguments)\n    }\n  }\n  getIntersectsOp() {\n    return STRtree.intersectsOp\n  }\n  verticalSlices(childBoundables, sliceCount) {\n    const sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount))\n    const slices = new Array(sliceCount).fill(null)\n    const i = childBoundables.iterator()\n    for (let j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList()\n      let boundablesAddedToSlice = 0\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        const childBoundable = i.next()\n        slices[j].add(childBoundable)\n        boundablesAddedToSlice++\n      }\n    }\n    return slices\n  }\n  query() {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n      return super.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0], visitor = arguments[1]\n      super.query.call(this, searchEnv, visitor)\n    }\n  }\n  getComparator() {\n    return STRtree.yComparator\n  }\n  createParentBoundablesFromVerticalSlice(childBoundables, newLevel) {\n    return super.createParentBoundables.call(this, childBoundables, newLevel)\n  }\n  remove() {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0], item = arguments[1]\n      return super.remove.call(this, itemEnv, item)\n    } else {\n      return super.remove.apply(this, arguments)\n    }\n  }\n  depth() {\n    if (arguments.length === 0) \n      return super.depth.call(this)\n    else return super.depth.apply(this, arguments)\n  }\n  createParentBoundables(childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, STRtree.xComparator)\n    const verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))))\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  }\n  nearestNeighbour() {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        const itemDist = arguments[0]\n        if (this.isEmpty()) return null\n        const bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist)\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        const initBndPair = arguments[0]\n        let distanceLowerBound = Double.POSITIVE_INFINITY\n        let minPair = null\n        const priQ = new PriorityQueue()\n        priQ.add(initBndPair)\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          const bndPair = priQ.poll()\n          const pairDistance = bndPair.getDistance()\n          if (pairDistance >= distanceLowerBound) break\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = pairDistance\n            minPair = bndPair\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound)\n          }\n        }\n        if (minPair === null) return null\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 2) {\n      const tree = arguments[0], itemDist = arguments[1]\n      if (this.isEmpty() || tree.isEmpty()) return null\n      const bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist)\n      return this.nearestNeighbour(bp)\n    } else if (arguments.length === 3) {\n      const env = arguments[0], item = arguments[1], itemDist = arguments[2]\n      const bnd = new ItemBoundable(env, item)\n      const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n      return this.nearestNeighbour(bp)[0]\n    } else if (arguments.length === 4) {\n      const env = arguments[0], item = arguments[1], itemDist = arguments[2], k = arguments[3]\n      const bnd = new ItemBoundable(env, item)\n      const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n      return this.nearestNeighbourK(bp, k)\n    }\n  }\n  isWithinDistance() {\n    if (arguments.length === 2) {\n      const initBndPair = arguments[0], maxDistance = arguments[1]\n      let distanceUpperBound = Double.POSITIVE_INFINITY\n      const priQ = new PriorityQueue()\n      priQ.add(initBndPair)\n      while (!priQ.isEmpty()) {\n        const bndPair = priQ.poll()\n        const pairDistance = bndPair.getDistance()\n        if (pairDistance > maxDistance) return false\n        if (bndPair.maximumDistance() <= maxDistance) return true\n        if (bndPair.isLeaves()) {\n          distanceUpperBound = pairDistance\n          if (distanceUpperBound <= maxDistance) return true\n        } else {\n          bndPair.expandToQueue(priQ, distanceUpperBound)\n        }\n      }\n      return false\n    } else if (arguments.length === 3) {\n      const tree = arguments[0], itemDist = arguments[1], maxDistance = arguments[2]\n      const bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist)\n      return this.isWithinDistance(bp, maxDistance)\n    }\n  }\n  get interfaces_() {\n    return [SpatialIndex, Serializable]\n  }\n}\nclass STRtreeNode extends AbstractNode {\n  constructor() {\n    super()\n    STRtreeNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const level = arguments[0]\n    AbstractNode.constructor_.call(this, level)\n  }\n  computeBounds() {\n    let bounds = null\n    for (let i = this.getChildBoundables().iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (bounds === null) \n        bounds = new Envelope(childBoundable.getBounds())\n      else \n        bounds.expandToInclude(childBoundable.getBounds())\n      \n    }\n    return bounds\n  }\n}\nSTRtree.STRtreeNode = STRtreeNode\nSTRtree.xComparator = new (class {\n  get interfaces_() {\n    return [Comparator]\n  }\n  compare(o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n  }\n})()\nSTRtree.yComparator = new (class {\n  get interfaces_() {\n    return [Comparator]\n  }\n  compare(o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n  }\n})()\nSTRtree.intersectsOp = new (class {\n  get interfaces_() {\n    return [IntersectsOp]\n  }\n  intersects(aBounds, bBounds) {\n    return aBounds.intersects(bBounds)\n  }\n})()\nSTRtree.DEFAULT_NODE_CAPACITY = 10\n","import Assert from '../util/Assert.js'\nexport default class SegmentPointComparator {\n  static relativeSign(x0, x1) {\n    if (x0 < x1) return -1\n    if (x0 > x1) return 1\n    return 0\n  }\n  static compare(octant, p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    const xSign = SegmentPointComparator.relativeSign(p0.x, p1.x)\n    const ySign = SegmentPointComparator.relativeSign(p0.y, p1.y)\n    switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    }\n    Assert.shouldNeverReachHere('invalid octant value')\n    return 0\n  }\n  static compareValue(compareSign0, compareSign1) {\n    if (compareSign0 < 0) return -1\n    if (compareSign0 > 0) return 1\n    if (compareSign1 < 0) return -1\n    if (compareSign1 > 0) return 1\n    return 0\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport SegmentPointComparator from './SegmentPointComparator.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nexport default class SegmentNode {\n  constructor() {\n    SegmentNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._segString = null\n    this.coord = null\n    this.segmentIndex = null\n    this._segmentOctant = null\n    this._isInterior = null\n    const segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3]\n    this._segString = segString\n    this.coord = new Coordinate(coord)\n    this.segmentIndex = segmentIndex\n    this._segmentOctant = segmentOctant\n    this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex))\n  }\n  getCoordinate() {\n    return this.coord\n  }\n  print(out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n  }\n  compareTo(obj) {\n    const other = obj\n    if (this.segmentIndex < other.segmentIndex) return -1\n    if (this.segmentIndex > other.segmentIndex) return 1\n    if (this.coord.equals2D(other.coord)) return 0\n    if (!this._isInterior) return -1\n    if (!other._isInterior) return 1\n    return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n  }\n  isEndPoint(maxSegmentIndex) {\n    if (this.segmentIndex === 0 && !this._isInterior) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n  toString() {\n    return this.segmentIndex + ':' + this.coord.toString()\n  }\n  isInterior() {\n    return this._isInterior\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default class Iterator {\n  /**\n     * Returns true if the iteration has more elements.\n     * @return {boolean}\n     */\n  hasNext() {}\n\n  /**\n     * Returns the next element in the iteration.\n     * @return {Object}\n     */\n  next() {}\n\n  /**\n     * Removes from the underlying collection the last element returned by the\n     * iterator (optional operation).\n     */\n  remove() {}\n}\n","import CoordinateList from '../geom/CoordinateList.js'\nimport SegmentNode from './SegmentNode.js'\nimport Iterator from '../../../../java/util/Iterator.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nimport Assert from '../util/Assert.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class SegmentNodeList {\n  constructor() {\n    SegmentNodeList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeMap = new TreeMap()\n    this._edge = null\n    const edge = arguments[0]\n    this._edge = edge\n  }\n  getSplitCoordinates() {\n    const coordList = new CoordinateList()\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      this.addEdgeCoordinates(eiPrev, ei, coordList)\n      eiPrev = ei\n    }\n    return coordList.toCoordinateArray()\n  }\n  addCollapsedNodes() {\n    const collapsedVertexIndexes = new ArrayList()\n    this.findCollapsesFromInsertedNodes(collapsedVertexIndexes)\n    this.findCollapsesFromExistingVertices(collapsedVertexIndexes)\n    for (let it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\n      const vertexIndex = it.next().intValue()\n      this.add(this._edge.getCoordinate(vertexIndex), vertexIndex)\n    }\n  }\n  createSplitEdgePts(ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    if (npts === 2) return [new Coordinate(ei0.coord), new Coordinate(ei1.coord)]\n    const lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex)\n    const useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) \n      npts--\n    \n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) \n      pts[ipt++] = this._edge.getCoordinate(i)\n    \n    if (useIntPt1) pts[ipt] = new Coordinate(ei1.coord)\n    return pts\n  }\n  print(out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n  findCollapsesFromExistingVertices(collapsedVertexIndexes) {\n    for (let i = 0; i < this._edge.size() - 2; i++) {\n      const p0 = this._edge.getCoordinate(i)\n      const p1 = this._edge.getCoordinate(i + 1)\n      const p2 = this._edge.getCoordinate(i + 2)\n      if (p0.equals2D(p2)) \n        collapsedVertexIndexes.add(Integer.valueOf(i + 1))\n      \n    }\n  }\n  addEdgeCoordinates(ei0, ei1, coordList) {\n    const pts = this.createSplitEdgePts(ei0, ei1)\n    coordList.add(pts, false)\n  }\n  iterator() {\n    return this._nodeMap.values().iterator()\n  }\n  addSplitEdges(edgeList) {\n    this.addEndpoints()\n    this.addCollapsedNodes()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n  findCollapseIndex(ei0, ei1, collapsedVertexIndex) {\n    if (!ei0.coord.equals2D(ei1.coord)) return false\n    let numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex\n    if (!ei1.isInterior()) \n      numVerticesBetween--\n    \n    if (numVerticesBetween === 1) {\n      collapsedVertexIndex[0] = ei0.segmentIndex + 1\n      return true\n    }\n    return false\n  }\n  findCollapsesFromInsertedNodes(collapsedVertexIndexes) {\n    const collapsedVertexIndex = new Array(1).fill(null)\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex)\n      if (isCollapsed) collapsedVertexIndexes.add(Integer.valueOf(collapsedVertexIndex[0]))\n      eiPrev = ei\n    }\n  }\n  getEdge() {\n    return this._edge\n  }\n  addEndpoints() {\n    const maxSegIndex = this._edge.size() - 1\n    this.add(this._edge.getCoordinate(0), 0)\n    this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex)\n  }\n  createSplitEdge(ei0, ei1) {\n    const pts = this.createSplitEdgePts(ei0, ei1)\n    return new NodedSegmentString(pts, this._edge.getData())\n  }\n  add(intPt, segmentIndex) {\n    const eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex))\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) {\n      Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates')\n      return ei\n    }\n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n  checkSplitEdgesCorrectness(splitEdges) {\n    const edgePts = this._edge.getCoordinates()\n    const split0 = splitEdges.get(0)\n    const pt0 = split0.getCoordinate(0)\n    if (!pt0.equals2D(edgePts[0])) throw new RuntimeException('bad split edge start point at ' + pt0)\n    const splitn = splitEdges.get(splitEdges.size() - 1)\n    const splitnPts = splitn.getCoordinates()\n    const ptn = splitnPts[splitnPts.length - 1]\n    if (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException('bad split edge end point at ' + ptn)\n  }\n}\nclass NodeVertexIterator {\n  constructor() {\n    NodeVertexIterator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeList = null\n    this._edge = null\n    this._nodeIt = null\n    this._currNode = null\n    this._nextNode = null\n    this._currSegIndex = 0\n    const nodeList = arguments[0]\n    this._nodeList = nodeList\n    this._edge = nodeList.getEdge()\n    this._nodeIt = nodeList.iterator()\n    this.readNextNode()\n  }\n  next() {\n    if (this._currNode === null) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode === null) return null\n    if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n    return null\n  }\n  remove() {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n  hasNext() {\n    if (this._nextNode === null) return false\n    return true\n  }\n  readNextNode() {\n    if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n  }\n  get interfaces_() {\n    return [Iterator]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Octant {\n  static octant() {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0], dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )')\n      const adx = Math.abs(dx)\n      const ady = Math.abs(dy)\n      if (dx >= 0) \n        if (dy >= 0) \n          if (adx >= ady) return 0; else return 1\n        else \n        if (adx >= ady) return 7; else return 6\n        \n      else \n      if (dy >= 0) \n        if (adx >= ady) return 3; else return 2\n      else \n      if (adx >= ady) return 4; else return 5\n        \n      \n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0], p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0)\n      return Octant.octant(dx, dy)\n    }\n  }\n}\n","export default class SegmentString {\n  getCoordinates() {}\n  size() {}\n  getCoordinate(i) {}\n  isClosed() {}\n  setData(data) {}\n  getData() {}\n}\n","import SegmentString from './SegmentString.js'\nexport default class NodableSegmentString {\n  addIntersection(intPt, segmentIndex) {}\n  get interfaces_() {\n    return [SegmentString]\n  }\n}\n","import SegmentNodeList from './SegmentNodeList.js'\nimport WKTWriter from '../io/WKTWriter.js'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Octant from './Octant.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport NodableSegmentString from './NodableSegmentString.js'\nexport default class NodedSegmentString {\n  constructor() {\n    NodedSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeList = new SegmentNodeList(this)\n    this._pts = null\n    this._data = null\n    const pts = arguments[0], data = arguments[1]\n    this._pts = pts\n    this._data = data\n  }\n  static getNodedSubstrings() {\n    if (arguments.length === 1) {\n      const segStrings = arguments[0]\n      const resultEdgelist = new ArrayList()\n      NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist)\n      return resultEdgelist\n    } else if (arguments.length === 2) {\n      const segStrings = arguments[0], resultEdgelist = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        ss.getNodeList().addSplitEdges(resultEdgelist)\n      }\n    }\n  }\n  getCoordinates() {\n    return this._pts\n  }\n  size() {\n    return this._pts.length\n  }\n  getCoordinate(i) {\n    return this._pts[i]\n  }\n  isClosed() {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n  getSegmentOctant(index) {\n    if (index === this._pts.length - 1) return -1\n    return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n  setData(data) {\n    this._data = data\n  }\n  safeOctant(p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    return Octant.octant(p0, p1)\n  }\n  getData() {\n    return this._data\n  }\n  addIntersection() {\n    if (arguments.length === 2) {\n      const intPt = arguments[0], segmentIndex = arguments[1]\n      this.addIntersectionNode(intPt, segmentIndex)\n    } else if (arguments.length === 4) {\n      const li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3]\n      const intPt = new Coordinate(li.getIntersection(intIndex))\n      this.addIntersection(intPt, segmentIndex)\n    }\n  }\n  toString() {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n  getNodeList() {\n    return this._nodeList\n  }\n  addIntersectionNode(intPt, segmentIndex) {\n    let normalizedSegmentIndex = segmentIndex\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this._pts.length) {\n      const nextPt = this._pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) \n        normalizedSegmentIndex = nextSegIndex\n      \n    }\n    const ei = this._nodeList.add(intPt, normalizedSegmentIndex)\n    return ei\n  }\n  addIntersections(li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) \n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    \n  }\n  get interfaces_() {\n    return [NodableSegmentString]\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Intersection from '../algorithm/Intersection.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Distance from '../algorithm/Distance.js'\nexport default class LineSegment {\n  constructor() {\n    LineSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.p0 = null\n    this.p1 = null\n    if (arguments.length === 0) {\n      LineSegment.constructor_.call(this, new Coordinate(), new Coordinate())\n    } else if (arguments.length === 1) {\n      const ls = arguments[0]\n      LineSegment.constructor_.call(this, ls.p0, ls.p1)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this.p0 = p0\n      this.p1 = p1\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3]\n      LineSegment.constructor_.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1))\n    }\n  }\n  static midPoint(p0, p1) {\n    return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n  }\n  minX() {\n    return Math.min(this.p0.x, this.p1.x)\n  }\n  orientationIndex() {\n    if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const orient0 = Orientation.index(this.p0, this.p1, seg.p0)\n      const orient1 = Orientation.index(this.p0, this.p1, seg.p1)\n      if (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1)\n      if (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1)\n      return 0\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Orientation.index(this.p0, this.p1, p)\n    }\n  }\n  toGeometry(geomFactory) {\n    return geomFactory.createLineString([this.p0, this.p1])\n  }\n  isVertical() {\n    return this.p0.x === this.p1.x\n  }\n  equals(o) {\n    if (!(o instanceof LineSegment)) \n      return false\n    \n    const other = o\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n  }\n  intersection(line) {\n    const li = new RobustLineIntersector()\n    li.computeIntersection(this.p0, this.p1, line.p0, line.p1)\n    if (li.hasIntersection()) return li.getIntersection(0)\n    return null\n  }\n  project() {\n    if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      if (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p)\n      const r = this.projectionFactor(p)\n      const coord = new Coordinate()\n      coord.x = this.p0.x + r * (this.p1.x - this.p0.x)\n      coord.y = this.p0.y + r * (this.p1.y - this.p0.y)\n      return coord\n    } else if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const pf0 = this.projectionFactor(seg.p0)\n      const pf1 = this.projectionFactor(seg.p1)\n      if (pf0 >= 1.0 && pf1 >= 1.0) return null\n      if (pf0 <= 0.0 && pf1 <= 0.0) return null\n      let newp0 = this.project(seg.p0)\n      if (pf0 < 0.0) newp0 = this.p0\n      if (pf0 > 1.0) newp0 = this.p1\n      let newp1 = this.project(seg.p1)\n      if (pf1 < 0.0) newp1 = this.p0\n      if (pf1 > 1.0) newp1 = this.p1\n      return new LineSegment(newp0, newp1)\n    }\n  }\n  normalize() {\n    if (this.p1.compareTo(this.p0) < 0) this.reverse()\n  }\n  angle() {\n    return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n  }\n  getCoordinate(i) {\n    if (i === 0) return this.p0\n    return this.p1\n  }\n  distancePerpendicular(p) {\n    return Distance.pointToLinePerpendicular(p, this.p0, this.p1)\n  }\n  minY() {\n    return Math.min(this.p0.y, this.p1.y)\n  }\n  midPoint() {\n    return LineSegment.midPoint(this.p0, this.p1)\n  }\n  projectionFactor(p) {\n    if (p.equals(this.p0)) return 0.0\n    if (p.equals(this.p1)) return 1.0\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = dx * dx + dy * dy\n    if (len <= 0.0) return Double.NaN\n    const r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len\n    return r\n  }\n  closestPoints(line) {\n    const intPt = this.intersection(line)\n    if (intPt !== null) \n      return [intPt, intPt]\n    \n    const closestPt = new Array(2).fill(null)\n    let minDistance = Double.MAX_VALUE\n    let dist = null\n    const close00 = this.closestPoint(line.p0)\n    minDistance = close00.distance(line.p0)\n    closestPt[0] = close00\n    closestPt[1] = line.p0\n    const close01 = this.closestPoint(line.p1)\n    dist = close01.distance(line.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = close01\n      closestPt[1] = line.p1\n    }\n    const close10 = line.closestPoint(this.p0)\n    dist = close10.distance(this.p0)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p0\n      closestPt[1] = close10\n    }\n    const close11 = line.closestPoint(this.p1)\n    dist = close11.distance(this.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p1\n      closestPt[1] = close11\n    }\n    return closestPt\n  }\n  closestPoint(p) {\n    const factor = this.projectionFactor(p)\n    if (factor > 0 && factor < 1) \n      return this.project(p)\n    \n    const dist0 = this.p0.distance(p)\n    const dist1 = this.p1.distance(p)\n    if (dist0 < dist1) return this.p0\n    return this.p1\n  }\n  maxX() {\n    return Math.max(this.p0.x, this.p1.x)\n  }\n  getLength() {\n    return this.p0.distance(this.p1)\n  }\n  compareTo(o) {\n    const other = o\n    const comp0 = this.p0.compareTo(other.p0)\n    if (comp0 !== 0) return comp0\n    return this.p1.compareTo(other.p1)\n  }\n  reverse() {\n    const temp = this.p0\n    this.p0 = this.p1\n    this.p1 = temp\n  }\n  equalsTopo(other) {\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0)\n  }\n  lineIntersection(line) {\n    const intPt = Intersection.intersection(this.p0, this.p1, line.p0, line.p1)\n    return intPt\n  }\n  maxY() {\n    return Math.max(this.p0.y, this.p1.y)\n  }\n  pointAlongOffset(segmentLengthFraction, offsetDistance) {\n    const segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    const segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    let ux = 0.0\n    let uy = 0.0\n    if (offsetDistance !== 0.0) {\n      if (len <= 0.0) throw new IllegalStateException('Cannot compute offset from zero-length line segment')\n      ux = offsetDistance * dx / len\n      uy = offsetDistance * dy / len\n    }\n    const offsetx = segx - uy\n    const offsety = segy + ux\n    const coord = new Coordinate(offsetx, offsety)\n    return coord\n  }\n  setCoordinates() {\n    if (arguments.length === 1) {\n      const ls = arguments[0]\n      this.setCoordinates(ls.p0, ls.p1)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this.p0.x = p0.x\n      this.p0.y = p0.y\n      this.p1.x = p1.x\n      this.p1.y = p1.y\n    }\n  }\n  segmentFraction(inputPt) {\n    let segFrac = this.projectionFactor(inputPt)\n    if (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0\n    return segFrac\n  }\n  toString() {\n    return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n  }\n  isHorizontal() {\n    return this.p0.y === this.p1.y\n  }\n  reflect(p) {\n    const A = this.p1.getY() - this.p0.getY()\n    const B = this.p0.getX() - this.p1.getX()\n    const C = this.p0.getY() * (this.p1.getX() - this.p0.getX()) - this.p0.getX() * (this.p1.getY() - this.p0.getY())\n    const A2plusB2 = A * A + B * B\n    const A2subB2 = A * A - B * B\n    const x = p.getX()\n    const y = p.getY()\n    const rx = (-A2subB2 * x - 2 * A * B * y - 2 * A * C) / A2plusB2\n    const ry = (A2subB2 * y - 2 * A * B * x - 2 * B * C) / A2plusB2\n    return new Coordinate(rx, ry)\n  }\n  distance() {\n    if (arguments[0] instanceof LineSegment) {\n      const ls = arguments[0]\n      return Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1)\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Distance.pointToSegment(p, this.p0, this.p1)\n    }\n  }\n  pointAlong(segmentLengthFraction) {\n    const coord = new Coordinate()\n    coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    return coord\n  }\n  hashCode() {\n    let bits0 = Double.doubleToLongBits(this.p0.x)\n    bits0 ^= Double.doubleToLongBits(this.p0.y) * 31\n    const hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32)\n    let bits1 = Double.doubleToLongBits(this.p1.x)\n    bits1 ^= Double.doubleToLongBits(this.p1.y) * 31\n    const hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32)\n    return hash0 ^ hash1\n  }\n  get interfaces_() {\n    return [Comparable, Serializable]\n  }\n}\n","import LineSegment from '../../geom/LineSegment.js'\nexport default class MonotoneChainOverlapAction {\n  constructor() {\n    MonotoneChainOverlapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._overlapSeg1 = new LineSegment()\n    this._overlapSeg2 = new LineSegment()\n  }\n  overlap() {\n    if (arguments.length === 2) {\n      const seg1 = arguments[0], seg2 = arguments[1]\n    } else if (arguments.length === 4) {\n      const mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3]\n      mc1.getLineSegment(start1, this._overlapSeg1)\n      mc2.getLineSegment(start2, this._overlapSeg2)\n      this.overlap(this._overlapSeg1, this._overlapSeg2)\n    }\n  }\n}\n","import Envelope from '../../geom/Envelope.js'\nexport default class MonotoneChain {\n  constructor() {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._start = null\n    this._end = null\n    this._env = null\n    this._context = null\n    this._id = null\n    const pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3]\n    this._pts = pts\n    this._start = start\n    this._end = end\n    this._context = context\n  }\n  getLineSegment(index, ls) {\n    ls.p0 = this._pts[index]\n    ls.p1 = this._pts[index + 1]\n  }\n  computeSelect(searchEnv, start0, end0, mcs) {\n    const p0 = this._pts[start0]\n    const p1 = this._pts[end0]\n    if (end0 - start0 === 1) {\n      mcs.select(this, start0)\n      return null\n    }\n    if (!searchEnv.intersects(p0, p1)) return null\n    const mid = Math.trunc((start0 + end0) / 2)\n    if (start0 < mid) \n      this.computeSelect(searchEnv, start0, mid, mcs)\n    \n    if (mid < end0) \n      this.computeSelect(searchEnv, mid, end0, mcs)\n    \n  }\n  getCoordinates() {\n    const coord = new Array(this._end - this._start + 1).fill(null)\n    let index = 0\n    for (let i = this._start; i <= this._end; i++) \n      coord[index++] = this._pts[i]\n    \n    return coord\n  }\n  computeOverlaps() {\n    if (arguments.length === 2) {\n      const mc = arguments[0], mco = arguments[1]\n      this.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0], end0 = arguments[1], mc = arguments[2], start1 = arguments[3], end1 = arguments[4], mco = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        mco.overlap(this, start0, mc, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mc, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco)\n      }\n    }\n  }\n  setId(id) {\n    this._id = id\n  }\n  select(searchEnv, mcs) {\n    this.computeSelect(searchEnv, this._start, this._end, mcs)\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      const p0 = this._pts[this._start]\n      const p1 = this._pts[this._end]\n      this._env = new Envelope(p0, p1)\n    }\n    return this._env\n  }\n  overlaps(start0, end0, mc, start1, end1) {\n    return Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1])\n  }\n  getEndIndex() {\n    return this._end\n  }\n  getStartIndex() {\n    return this._start\n  }\n  getContext() {\n    return this._context\n  }\n  getId() {\n    return this._id\n  }\n}\n","import MonotoneChain from './MonotoneChain.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Quadrant from '../../geomgraph/Quadrant.js'\nexport default class MonotoneChainBuilder {\n  static findChainEnd(pts, start) {\n    let safeStart = start\n    while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) \n      safeStart++\n    \n    if (safeStart >= pts.length - 1) \n      return pts.length - 1\n    \n    const chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      if (!pts[last - 1].equals2D(pts[last])) {\n        const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n        if (quad !== chainQuad) break\n      }\n      last++\n    }\n    return last - 1\n  }\n  static getChains() {\n    if (arguments.length === 1) {\n      const pts = arguments[0]\n      return MonotoneChainBuilder.getChains(pts, null)\n    } else if (arguments.length === 2) {\n      const pts = arguments[0], context = arguments[1]\n      const mcList = new ArrayList()\n      let chainStart = 0\n      do {\n        const chainEnd = MonotoneChainBuilder.findChainEnd(pts, chainStart)\n        const mc = new MonotoneChain(pts, chainStart, chainEnd, context)\n        mcList.add(mc)\n        chainStart = chainEnd\n      } while (chainStart < pts.length - 1)\n      return mcList\n    }\n  }\n}\n","export default class Noder {\n  computeNodes(segStrings) {}\n  getNodedSubstrings() {}\n}\n","import Noder from './Noder.js'\nexport default class SinglePassNoder {\n  constructor() {\n    SinglePassNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._segInt = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const segInt = arguments[0]\n      this.setSegmentIntersector(segInt)\n    }\n  }\n  setSegmentIntersector(segInt) {\n    this._segInt = segInt\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import STRtree from '../index/strtree/STRtree.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction.js'\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport SinglePassNoder from './SinglePassNoder.js'\nexport default class MCIndexNoder extends SinglePassNoder {\n  constructor() {\n    super()\n    MCIndexNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._monoChains = new ArrayList()\n    this._index = new STRtree()\n    this._idCounter = 0\n    this._nodedSegStrings = null\n    this._nOverlaps = 0\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const si = arguments[0]\n      SinglePassNoder.constructor_.call(this, si)\n    }\n  }\n  getMonotoneChains() {\n    return this._monoChains\n  }\n  getNodedSubstrings() {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n  getIndex() {\n    return this._index\n  }\n  add(segStr) {\n    const segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr)\n    for (let i = segChains.iterator(); i.hasNext(); ) {\n      const mc = i.next()\n      mc.setId(this._idCounter++)\n      this._index.insert(mc.getEnvelope(), mc)\n      this._monoChains.add(mc)\n    }\n  }\n  computeNodes(inputSegStrings) {\n    this._nodedSegStrings = inputSegStrings\n    for (let i = inputSegStrings.iterator(); i.hasNext(); ) \n      this.add(i.next())\n    \n    this.intersectChains()\n  }\n  intersectChains() {\n    const overlapAction = new SegmentOverlapAction(this._segInt)\n    for (let i = this._monoChains.iterator(); i.hasNext(); ) {\n      const queryChain = i.next()\n      const overlapChains = this._index.query(queryChain.getEnvelope())\n      for (let j = overlapChains.iterator(); j.hasNext(); ) {\n        const testChain = j.next()\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction)\n          this._nOverlaps++\n        }\n        if (this._segInt.isDone()) return null\n      }\n    }\n  }\n}\nclass SegmentOverlapAction extends MonotoneChainOverlapAction {\n  constructor() {\n    super()\n    SegmentOverlapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._si = null\n    const si = arguments[0]\n    this._si = si\n  }\n  overlap() {\n    if (arguments.length === 4) {\n      const mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3]\n      const ss1 = mc1.getContext()\n      const ss2 = mc2.getContext()\n      this._si.processIntersections(ss1, start1, ss2, start2)\n    } else {\n      return super.overlap.apply(this, arguments)\n    }\n  }\n}\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction\n","import CoordinateList from '../../geom/CoordinateList.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Distance from '../../algorithm/Distance.js'\nexport default class BufferInputLineSimplifier {\n  constructor() {\n    BufferInputLineSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputLine = null\n    this._distanceTol = null\n    this._isDeleted = null\n    this._angleOrientation = Orientation.COUNTERCLOCKWISE\n    const inputLine = arguments[0]\n    this._inputLine = inputLine\n  }\n  static simplify(inputLine, distanceTol) {\n    const simp = new BufferInputLineSimplifier(inputLine)\n    return simp.simplify(distanceTol)\n  }\n  isDeletable(i0, i1, i2, distanceTol) {\n    const p0 = this._inputLine[i0]\n    const p1 = this._inputLine[i1]\n    const p2 = this._inputLine[i2]\n    if (!this.isConcave(p0, p1, p2)) return false\n    if (!this.isShallow(p0, p1, p2, distanceTol)) return false\n    return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n  }\n  deleteShallowConcavities() {\n    let index = 1\n    let midIndex = this.findNextNonDeletedIndex(index)\n    let lastIndex = this.findNextNonDeletedIndex(midIndex)\n    let isChanged = false\n    while (lastIndex < this._inputLine.length) {\n      let isMiddleVertexDeleted = false\n      if (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n        this._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE\n        isMiddleVertexDeleted = true\n        isChanged = true\n      }\n      if (isMiddleVertexDeleted) index = lastIndex; else index = midIndex\n      midIndex = this.findNextNonDeletedIndex(index)\n      lastIndex = this.findNextNonDeletedIndex(midIndex)\n    }\n    return isChanged\n  }\n  isShallowConcavity(p0, p1, p2, distanceTol) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isAngleToSimplify = orientation === this._angleOrientation\n    if (!isAngleToSimplify) return false\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n  isShallowSampled(p0, p2, i0, i2, distanceTol) {\n    let inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK)\n    if (inc <= 0) inc = 1\n    for (let i = i0; i < i2; i += inc) \n      if (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false\n    \n    return true\n  }\n  isConcave(p0, p1, p2) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isConcave = orientation === this._angleOrientation\n    return isConcave\n  }\n  simplify(distanceTol) {\n    this._distanceTol = Math.abs(distanceTol)\n    if (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE\n    this._isDeleted = new Array(this._inputLine.length).fill(null)\n    let isChanged = false\n    do \n      isChanged = this.deleteShallowConcavities()\n    while (isChanged)\n    return this.collapseLine()\n  }\n  findNextNonDeletedIndex(index) {\n    let next = index + 1\n    while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++\n    return next\n  }\n  isShallow(p0, p1, p2, distanceTol) {\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n  collapseLine() {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < this._inputLine.length; i++) \n      if (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i])\n    \n    return coordList.toCoordinateArray()\n  }\n}\nBufferInputLineSimplifier.INIT = 0\nBufferInputLineSimplifier.DELETE = 1\nBufferInputLineSimplifier.KEEP = 1\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10\n","import GeometryFactory from '../../geom/GeometryFactory.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class OffsetSegmentString {\n  constructor() {\n    OffsetSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._ptList = null\n    this._precisionModel = null\n    this._minimimVertexDistance = 0.0\n    this._ptList = new ArrayList()\n  }\n  getCoordinates() {\n    const coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE)\n    return coord\n  }\n  setPrecisionModel(precisionModel) {\n    this._precisionModel = precisionModel\n  }\n  addPt(pt) {\n    const bufPt = new Coordinate(pt)\n    this._precisionModel.makePrecise(bufPt)\n    if (this.isRedundant(bufPt)) return null\n    this._ptList.add(bufPt)\n  }\n  reverse() {}\n  addPts(pt, isForward) {\n    if (isForward) \n      for (let i = 0; i < pt.length; i++) \n        this.addPt(pt[i])\n      \n    else \n      for (let i = pt.length - 1; i >= 0; i--) \n        this.addPt(pt[i])\n      \n    \n  }\n  isRedundant(pt) {\n    if (this._ptList.size() < 1) return false\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    const ptDist = pt.distance(lastPt)\n    if (ptDist < this._minimimVertexDistance) return true\n    return false\n  }\n  toString() {\n    const fact = new GeometryFactory()\n    const line = fact.createLineString(this.getCoordinates())\n    return line.toString()\n  }\n  closeRing() {\n    if (this._ptList.size() < 1) return null\n    const startPt = new Coordinate(this._ptList.get(0))\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    if (startPt.equals(lastPt)) return null\n    this._ptList.add(startPt)\n  }\n  setMinimumVertexDistance(minimimVertexDistance) {\n    this._minimimVertexDistance = minimimVertexDistance\n  }\n}\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null)\n","import Orientation from './Orientation.js'\nexport default class Angle {\n  static toDegrees(radians) {\n    return radians * 180 / Math.PI\n  }\n  static normalize(angle) {\n    while (angle > Math.PI) angle -= Angle.PI_TIMES_2\n    while (angle <= -Math.PI) angle += Angle.PI_TIMES_2\n    return angle\n  }\n  static angle() {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      return Math.atan2(p.y, p.x)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      return Math.atan2(dy, dx)\n    }\n  }\n  static isAcute(p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod > 0\n  }\n  static isObtuse(p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod < 0\n  }\n  static interiorAngle(p0, p1, p2) {\n    const anglePrev = Angle.angle(p1, p0)\n    const angleNext = Angle.angle(p1, p2)\n    return Math.abs(angleNext - anglePrev)\n  }\n  static normalizePositive(angle) {\n    if (angle < 0.0) {\n      while (angle < 0.0) angle += Angle.PI_TIMES_2\n      if (angle >= Angle.PI_TIMES_2) angle = 0.0\n    } else {\n      while (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2\n      if (angle < 0.0) angle = 0.0\n    }\n    return angle\n  }\n  static angleBetween(tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    return Angle.diff(a1, a2)\n  }\n  static diff(ang1, ang2) {\n    let delAngle = null\n    if (ang1 < ang2) \n      delAngle = ang2 - ang1\n    else \n      delAngle = ang1 - ang2\n    \n    if (delAngle > Math.PI) \n      delAngle = 2 * Math.PI - delAngle\n    \n    return delAngle\n  }\n  static toRadians(angleDegrees) {\n    return angleDegrees * Math.PI / 180.0\n  }\n  static getTurn(ang1, ang2) {\n    const crossproduct = Math.sin(ang2 - ang1)\n    if (crossproduct > 0) \n      return Angle.COUNTERCLOCKWISE\n    \n    if (crossproduct < 0) \n      return Angle.CLOCKWISE\n    \n    return Angle.NONE\n  }\n  static angleBetweenOriented(tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    const angDel = a2 - a1\n    if (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2\n    if (angDel > Math.PI) return angDel - Angle.PI_TIMES_2\n    return angDel\n  }\n}\nAngle.PI_TIMES_2 = 2.0 * Math.PI\nAngle.PI_OVER_2 = Math.PI / 2.0\nAngle.PI_OVER_4 = Math.PI / 4.0\nAngle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE\nAngle.CLOCKWISE = Orientation.CLOCKWISE\nAngle.NONE = Orientation.COLLINEAR\n","import BufferParameters from './BufferParameters.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Intersection from '../../algorithm/Intersection.js'\nimport OffsetSegmentString from './OffsetSegmentString.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Angle from '../../algorithm/Angle.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nexport default class OffsetSegmentGenerator {\n  constructor() {\n    OffsetSegmentGenerator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._maxCurveSegmentError = 0.0\n    this._filletAngleQuantum = null\n    this._closingSegLengthFactor = 1\n    this._segList = null\n    this._distance = 0.0\n    this._precisionModel = null\n    this._bufParams = null\n    this._li = null\n    this._s0 = null\n    this._s1 = null\n    this._s2 = null\n    this._seg0 = new LineSegment()\n    this._seg1 = new LineSegment()\n    this._offset0 = new LineSegment()\n    this._offset1 = new LineSegment()\n    this._side = 0\n    this._hasNarrowConcaveAngle = false\n    const precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2]\n    this._precisionModel = precisionModel\n    this._bufParams = bufParams\n    this._li = new RobustLineIntersector()\n    this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments()\n    if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR\n    this.init(distance)\n  }\n  addNextSegment(p, addStartPoint) {\n    this._s0 = this._s1\n    this._s1 = this._s2\n    this._s2 = p\n    this._seg0.setCoordinates(this._s0, this._s1)\n    this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0)\n    this._seg1.setCoordinates(this._s1, this._s2)\n    this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1)\n    if (this._s1.equals(this._s2)) return null\n    const orientation = Orientation.index(this._s0, this._s1, this._s2)\n    const outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT\n    if (orientation === 0) \n      this.addCollinear(addStartPoint)\n    else if (outsideTurn) \n      this.addOutsideTurn(orientation, addStartPoint)\n    else \n      this.addInsideTurn(orientation, addStartPoint)\n    \n  }\n  addLineEndCap(p0, p1) {\n    const seg = new LineSegment(p0, p1)\n    const offsetL = new LineSegment()\n    this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL)\n    const offsetR = new LineSegment()\n    this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR)\n    const dx = p1.x - p0.x\n    const dy = p1.y - p0.y\n    const angle = Math.atan2(dy, dx)\n    switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1)\n      this.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance)\n      this._segList.addPt(offsetR.p1)\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1)\n      this._segList.addPt(offsetR.p1)\n      break\n    case BufferParameters.CAP_SQUARE:\n      const squareCapSideOffset = new Coordinate()\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle)\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle)\n      const squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y)\n      const squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y)\n      this._segList.addPt(squareCapLOffset)\n      this._segList.addPt(squareCapROffset)\n      break\n    }\n  }\n  getCoordinates() {\n    const pts = this._segList.getCoordinates()\n    return pts\n  }\n  addMitreJoin(p, offset0, offset1, distance) {\n    const intPt = Intersection.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1)\n    if (intPt !== null) {\n      const mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance)\n      if (mitreRatio <= this._bufParams.getMitreLimit()) {\n        this._segList.addPt(intPt)\n        return null\n      }\n    }\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit())\n  }\n  addOutsideTurn(orientation, addStartPoint) {\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n      this._segList.addPt(this._offset0.p1)\n      return null\n    }\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance)\n    } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n      this.addBevelJoin(this._offset0, this._offset1)\n    } else {\n      if (addStartPoint) this._segList.addPt(this._offset0.p1)\n      this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance)\n      this._segList.addPt(this._offset1.p0)\n    }\n  }\n  createSquare(p) {\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance))\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance))\n    this._segList.closeRing()\n  }\n  addSegments(pt, isForward) {\n    this._segList.addPts(pt, isForward)\n  }\n  addFirstSegment() {\n    this._segList.addPt(this._offset1.p0)\n  }\n  addCornerFillet(p, p0, p1, direction, radius) {\n    const dx0 = p0.x - p.x\n    const dy0 = p0.y - p.y\n    let startAngle = Math.atan2(dy0, dx0)\n    const dx1 = p1.x - p.x\n    const dy1 = p1.y - p.y\n    const endAngle = Math.atan2(dy1, dx1)\n    if (direction === Orientation.CLOCKWISE) {\n      if (startAngle <= endAngle) startAngle += 2.0 * Math.PI\n    } else {\n      if (startAngle >= endAngle) startAngle -= 2.0 * Math.PI\n    }\n    this._segList.addPt(p0)\n    this.addDirectedFillet(p, startAngle, endAngle, direction, radius)\n    this._segList.addPt(p1)\n  }\n  addLastSegment() {\n    this._segList.addPt(this._offset1.p1)\n  }\n  initSideSegments(s1, s2, side) {\n    this._s1 = s1\n    this._s2 = s2\n    this._side = side\n    this._seg1.setCoordinates(s1, s2)\n    this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1)\n  }\n  addLimitedMitreJoin(offset0, offset1, distance, mitreLimit) {\n    const basePt = this._seg0.p1\n    const ang0 = Angle.angle(basePt, this._seg0.p0)\n    const angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1)\n    const angDiffHalf = angDiff / 2\n    const midAng = Angle.normalize(ang0 + angDiffHalf)\n    const mitreMidAng = Angle.normalize(midAng + Math.PI)\n    const mitreDist = mitreLimit * distance\n    const bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf))\n    const bevelHalfLen = distance - bevelDelta\n    const bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng)\n    const bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng)\n    const bevelMidPt = new Coordinate(bevelMidX, bevelMidY)\n    const mitreMidLine = new LineSegment(basePt, bevelMidPt)\n    const bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen)\n    const bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen)\n    if (this._side === Position.LEFT) {\n      this._segList.addPt(bevelEndLeft)\n      this._segList.addPt(bevelEndRight)\n    } else {\n      this._segList.addPt(bevelEndRight)\n      this._segList.addPt(bevelEndLeft)\n    }\n  }\n  addDirectedFillet(p, startAngle, endAngle, direction, radius) {\n    const directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1\n    const totalAngle = Math.abs(startAngle - endAngle)\n    const nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5)\n    if (nSegs < 1) return null\n    const angleInc = totalAngle / nSegs\n    const pt = new Coordinate()\n    for (let i = 0; i < nSegs; i++) {\n      const angle = startAngle + directionFactor * i * angleInc\n      pt.x = p.x + radius * Math.cos(angle)\n      pt.y = p.y + radius * Math.sin(angle)\n      this._segList.addPt(pt)\n    }\n  }\n  computeOffsetSegment(seg, side, distance, offset) {\n    const sideSign = side === Position.LEFT ? 1 : -1\n    const dx = seg.p1.x - seg.p0.x\n    const dy = seg.p1.y - seg.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    const ux = sideSign * distance * dx / len\n    const uy = sideSign * distance * dy / len\n    offset.p0.x = seg.p0.x - uy\n    offset.p0.y = seg.p0.y + ux\n    offset.p1.x = seg.p1.x - uy\n    offset.p1.y = seg.p1.y + ux\n  }\n  addInsideTurn(orientation, addStartPoint) {\n    this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1)\n    if (this._li.hasIntersection()) {\n      this._segList.addPt(this._li.getIntersection(0))\n    } else {\n      this._hasNarrowConcaveAngle = true\n      if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n        this._segList.addPt(this._offset0.p1)\n      } else {\n        this._segList.addPt(this._offset0.p1)\n        if (this._closingSegLengthFactor > 0) {\n          const mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid0)\n          const mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid1)\n        } else {\n          this._segList.addPt(this._s1)\n        }\n        this._segList.addPt(this._offset1.p0)\n      }\n    }\n  }\n  createCircle(p) {\n    const pt = new Coordinate(p.x + this._distance, p.y)\n    this._segList.addPt(pt)\n    this.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance)\n    this._segList.closeRing()\n  }\n  addBevelJoin(offset0, offset1) {\n    this._segList.addPt(offset0.p1)\n    this._segList.addPt(offset1.p0)\n  }\n  init(distance) {\n    this._distance = distance\n    this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0))\n    this._segList = new OffsetSegmentString()\n    this._segList.setPrecisionModel(this._precisionModel)\n    this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)\n  }\n  addCollinear(addStartPoint) {\n    this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2)\n    const numInt = this._li.getIntersectionNum()\n    if (numInt >= 2) \n      if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n        if (addStartPoint) this._segList.addPt(this._offset0.p1)\n        this._segList.addPt(this._offset1.p0)\n      } else {\n        this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance)\n      }\n    \n  }\n  closeRing() {\n    this._segList.closeRing()\n  }\n  hasNarrowConcaveAngle() {\n    return this._hasNarrowConcaveAngle\n  }\n}\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80\n","import BufferParameters from './BufferParameters.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator.js'\nexport default class OffsetCurveBuilder {\n  constructor() {\n    OffsetCurveBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._distance = 0.0\n    this._precisionModel = null\n    this._bufParams = null\n    const precisionModel = arguments[0], bufParams = arguments[1]\n    this._precisionModel = precisionModel\n    this._bufParams = bufParams\n  }\n  static copyCoordinates(pts) {\n    const copy = new Array(pts.length).fill(null)\n    for (let i = 0; i < copy.length; i++) \n      copy[i] = new Coordinate(pts[i])\n    \n    return copy\n  }\n  getOffsetCurve(inputPts, distance) {\n    this._distance = distance\n    if (distance === 0.0) return null\n    const isRightSide = distance < 0.0\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) \n      this.computePointCurve(inputPts[0], segGen)\n    else \n      this.computeOffsetCurve(inputPts, isRightSide, segGen)\n    \n    const curvePts = segGen.getCoordinates()\n    if (isRightSide) CoordinateArrays.reverse(curvePts)\n    return curvePts\n  }\n  computeSingleSidedBufferCurve(inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      segGen.addSegments(inputPts, true)\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) \n        segGen.addNextSegment(simp2[i], true)\n      \n    } else {\n      segGen.addSegments(inputPts, false)\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) \n        segGen.addNextSegment(simp1[i], true)\n      \n    }\n    segGen.addLastSegment()\n    segGen.closeRing()\n  }\n  computeRingBufferCurve(inputPts, side, segGen) {\n    let distTol = this.simplifyTolerance(this._distance)\n    if (side === Position.RIGHT) distTol = -distTol\n    const simp = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n = simp.length - 1\n    segGen.initSideSegments(simp[n - 1], simp[0], side)\n    for (let i = 1; i <= n; i++) {\n      const addStartPoint = i !== 1\n      segGen.addNextSegment(simp[i], addStartPoint)\n    }\n    segGen.closeRing()\n  }\n  computeLineBufferCurve(inputPts, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n1 = simp1.length - 1\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n    for (let i = 2; i <= n1; i++) \n      segGen.addNextSegment(simp1[i], true)\n    \n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp1[n1 - 1], simp1[n1])\n    const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n    const n2 = simp2.length - 1\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n    for (let i = n2 - 2; i >= 0; i--) \n      segGen.addNextSegment(simp2[i], true)\n    \n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp2[1], simp2[0])\n    segGen.closeRing()\n  }\n  computePointCurve(pt, segGen) {\n    switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt)\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt)\n      break\n    }\n  }\n  getLineCurve(inputPts, distance) {\n    this._distance = distance\n    if (this.isLineOffsetEmpty(distance)) return null\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) {\n      this.computePointCurve(inputPts[0], segGen)\n    } else \n    if (this._bufParams.isSingleSided()) {\n      const isRightSide = distance < 0.0\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen)\n    } else {\n      this.computeLineBufferCurve(inputPts, segGen)\n    }\n    \n    const lineCoord = segGen.getCoordinates()\n    return lineCoord\n  }\n  getBufferParameters() {\n    return this._bufParams\n  }\n  simplifyTolerance(bufDistance) {\n    return bufDistance * this._bufParams.getSimplifyFactor()\n  }\n  getRingCurve(inputPts, side, distance) {\n    this._distance = distance\n    if (inputPts.length <= 2) return this.getLineCurve(inputPts, distance)\n    if (distance === 0.0) \n      return OffsetCurveBuilder.copyCoordinates(inputPts)\n    \n    const segGen = this.getSegGen(distance)\n    this.computeRingBufferCurve(inputPts, side, segGen)\n    return segGen.getCoordinates()\n  }\n  computeOffsetCurve(inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) \n        segGen.addNextSegment(simp2[i], true)\n      \n    } else {\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) \n        segGen.addNextSegment(simp1[i], true)\n      \n    }\n    segGen.addLastSegment()\n  }\n  isLineOffsetEmpty(distance) {\n    if (distance === 0.0) return true\n    if (distance < 0.0 && !this._bufParams.isSingleSided()) return true\n    return false\n  }\n  getSegGen(distance) {\n    return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport DirectedEdge from '../../geomgraph/DirectedEdge.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport List from '../../../../../java/util/List.js'\nexport default class SubgraphDepthLocater {\n  constructor() {\n    SubgraphDepthLocater.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._subgraphs = null\n    this._seg = new LineSegment()\n    const subgraphs = arguments[0]\n    this._subgraphs = subgraphs\n  }\n  findStabbedSegments() {\n    if (arguments.length === 1) {\n      const stabbingRayLeftPt = arguments[0]\n      const stabbedSegments = new ArrayList()\n      for (let i = this._subgraphs.iterator(); i.hasNext(); ) {\n        const bsg = i.next()\n        const env = bsg.getEnvelope()\n        if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue\n        this.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments)\n      }\n      return stabbedSegments\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n        const stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2]\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) {\n          this._seg.p0 = pts[i]\n          this._seg.p1 = pts[i + 1]\n          if (this._seg.p0.y > this._seg.p1.y) this._seg.reverse()\n          const maxx = Math.max(this._seg.p0.x, this._seg.p1.x)\n          if (maxx < stabbingRayLeftPt.x) continue\n          if (this._seg.isHorizontal()) continue\n          if (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue\n          if (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue\n          let depth = dirEdge.getDepth(Position.LEFT)\n          if (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT)\n          const ds = new DepthSegment(this._seg, depth)\n          stabbedSegments.add(ds)\n        }\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n        const stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2]\n        for (let i = dirEdges.iterator(); i.hasNext(); ) {\n          const de = i.next()\n          if (!de.isForward()) continue\n          this.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments)\n        }\n      }\n    }\n  }\n  getDepth(p) {\n    const stabbedSegments = this.findStabbedSegments(p)\n    if (stabbedSegments.size() === 0) return 0\n    const ds = Collections.min(stabbedSegments)\n    return ds._leftDepth\n  }\n}\nclass DepthSegment {\n  constructor() {\n    DepthSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._upwardSeg = null\n    this._leftDepth = null\n    const seg = arguments[0], depth = arguments[1]\n    this._upwardSeg = new LineSegment(seg)\n    this._leftDepth = depth\n  }\n  compareTo(obj) {\n    const other = obj\n    if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1\n    if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1\n    let orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    return this._upwardSeg.compareTo(other._upwardSeg)\n  }\n  compareX(seg0, seg1) {\n    const compare0 = seg0.p0.compareTo(seg1.p0)\n    if (compare0 !== 0) return compare0\n    return seg0.p1.compareTo(seg1.p1)\n  }\n  toString() {\n    return this._upwardSeg.toString()\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\nSubgraphDepthLocater.DepthSegment = DepthSegment\n","import Exception from '../../../../java/lang/Exception.js'\nexport default class NotRepresentableException extends Exception {\n  constructor() {\n    super()\n    NotRepresentableException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    Exception.constructor_.call(this, 'Projective point not representable on the Cartesian plane.')\n  }\n}\n","import NotRepresentableException from './NotRepresentableException.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nexport default class HCoordinate {\n  constructor() {\n    HCoordinate.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.x = null\n    this.y = null\n    this.w = null\n    if (arguments.length === 0) {\n      this.x = 0.0\n      this.y = 0.0\n      this.w = 1.0\n    } else if (arguments.length === 1) {\n      const p = arguments[0]\n      this.x = p.x\n      this.y = p.y\n      this.w = 1.0\n    } else if (arguments.length === 2) {\n      if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const _x = arguments[0], _y = arguments[1]\n        this.x = _x\n        this.y = _y\n        this.w = 1.0\n      } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n        const p1 = arguments[0], p2 = arguments[1]\n        this.x = p1.y * p2.w - p2.y * p1.w\n        this.y = p2.x * p1.w - p1.x * p2.w\n        this.w = p1.x * p2.y - p2.x * p1.y\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const p1 = arguments[0], p2 = arguments[1]\n        this.x = p1.y - p2.y\n        this.y = p2.x - p1.x\n        this.w = p1.x * p2.y - p2.x * p1.y\n      }\n    } else if (arguments.length === 3) {\n      const _x = arguments[0], _y = arguments[1], _w = arguments[2]\n      this.x = _x\n      this.y = _y\n      this.w = _w\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3]\n      const px = p1.y - p2.y\n      const py = p2.x - p1.x\n      const pw = p1.x * p2.y - p2.x * p1.y\n      const qx = q1.y - q2.y\n      const qy = q2.x - q1.x\n      const qw = q1.x * q2.y - q2.x * q1.y\n      this.x = py * qw - qy * pw\n      this.y = qx * pw - px * qw\n      this.w = px * qy - qx * py\n    }\n  }\n  getY() {\n    const a = this.y / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) \n      throw new NotRepresentableException()\n    \n    return a\n  }\n  getX() {\n    const a = this.x / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) \n      throw new NotRepresentableException()\n    \n    return a\n  }\n  getCoordinate() {\n    const p = new Coordinate()\n    p.x = this.getX()\n    p.y = this.getY()\n    return p\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport DD from '../math/DD.js'\nimport Angle from '../algorithm/Angle.js'\nimport HCoordinate from '../algorithm/HCoordinate.js'\nexport default class Triangle {\n  constructor() {\n    Triangle.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.p0 = null\n    this.p1 = null\n    this.p2 = null\n    const p0 = arguments[0], p1 = arguments[1], p2 = arguments[2]\n    this.p0 = p0\n    this.p1 = p1\n    this.p2 = p2\n  }\n  static area(a, b, c) {\n    return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n  }\n  static signedArea(a, b, c) {\n    return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n  }\n  static det(m00, m01, m10, m11) {\n    return m00 * m11 - m01 * m10\n  }\n  static interpolateZ(p, v0, v1, v2) {\n    const x0 = v0.x\n    const y0 = v0.y\n    const a = v1.x - x0\n    const b = v2.x - x0\n    const c = v1.y - y0\n    const d = v2.y - y0\n    const det = a * d - b * c\n    const dx = p.x - x0\n    const dy = p.y - y0\n    const t = (d * dx - b * dy) / det\n    const u = (-c * dx + a * dy) / det\n    const z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ())\n    return z\n  }\n  static longestSideLength(a, b, c) {\n    const lenAB = a.distance(b)\n    const lenBC = b.distance(c)\n    const lenCA = c.distance(a)\n    let maxLen = lenAB\n    if (lenBC > maxLen) maxLen = lenBC\n    if (lenCA > maxLen) maxLen = lenCA\n    return maxLen\n  }\n  static circumcentreDD(a, b, c) {\n    const ax = DD.valueOf(a.x).subtract(c.x)\n    const ay = DD.valueOf(a.y).subtract(c.y)\n    const bx = DD.valueOf(b.x).subtract(c.x)\n    const by = DD.valueOf(b.y).subtract(c.y)\n    const denom = DD.determinant(ax, ay, bx, by).multiply(2)\n    const asqr = ax.sqr().add(ay.sqr())\n    const bsqr = bx.sqr().add(by.sqr())\n    const numx = DD.determinant(ay, asqr, by, bsqr)\n    const numy = DD.determinant(ax, asqr, bx, bsqr)\n    const ccx = DD.valueOf(c.x).subtract(numx.divide(denom)).doubleValue()\n    const ccy = DD.valueOf(c.y).add(numy.divide(denom)).doubleValue()\n    return new Coordinate(ccx, ccy)\n  }\n  static isAcute(a, b, c) {\n    if (!Angle.isAcute(a, b, c)) return false\n    if (!Angle.isAcute(b, c, a)) return false\n    if (!Angle.isAcute(c, a, b)) return false\n    return true\n  }\n  static circumcentre(a, b, c) {\n    const cx = c.x\n    const cy = c.y\n    const ax = a.x - cx\n    const ay = a.y - cy\n    const bx = b.x - cx\n    const by = b.y - cy\n    const denom = 2 * Triangle.det(ax, ay, bx, by)\n    const numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by)\n    const numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by)\n    const ccx = cx - numx / denom\n    const ccy = cy + numy / denom\n    return new Coordinate(ccx, ccy)\n  }\n  static perpendicularBisector(a, b) {\n    const dx = b.x - a.x\n    const dy = b.y - a.y\n    const l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0)\n    const l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0)\n    return new HCoordinate(l1, l2)\n  }\n  static angleBisector(a, b, c) {\n    const len0 = b.distance(a)\n    const len2 = b.distance(c)\n    const frac = len0 / (len0 + len2)\n    const dx = c.x - a.x\n    const dy = c.y - a.y\n    const splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy)\n    return splitPt\n  }\n  static area3D(a, b, c) {\n    const ux = b.x - a.x\n    const uy = b.y - a.y\n    const uz = b.getZ() - a.getZ()\n    const vx = c.x - a.x\n    const vy = c.y - a.y\n    const vz = c.getZ() - a.getZ()\n    const crossx = uy * vz - uz * vy\n    const crossy = uz * vx - ux * vz\n    const crossz = ux * vy - uy * vx\n    const absSq = crossx * crossx + crossy * crossy + crossz * crossz\n    const area3D = Math.sqrt(absSq) / 2\n    return area3D\n  }\n  static centroid(a, b, c) {\n    const x = (a.x + b.x + c.x) / 3\n    const y = (a.y + b.y + c.y) / 3\n    return new Coordinate(x, y)\n  }\n  static inCentre(a, b, c) {\n    const len0 = b.distance(c)\n    const len1 = a.distance(c)\n    const len2 = a.distance(b)\n    const circum = len0 + len1 + len2\n    const inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum\n    const inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum\n    return new Coordinate(inCentreX, inCentreY)\n  }\n  area() {\n    return Triangle.area(this.p0, this.p1, this.p2)\n  }\n  signedArea() {\n    return Triangle.signedArea(this.p0, this.p1, this.p2)\n  }\n  interpolateZ(p) {\n    if (p === null) throw new IllegalArgumentException('Supplied point is null.')\n    return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n  }\n  longestSideLength() {\n    return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n  }\n  isAcute() {\n    return Triangle.isAcute(this.p0, this.p1, this.p2)\n  }\n  circumcentre() {\n    return Triangle.circumcentre(this.p0, this.p1, this.p2)\n  }\n  area3D() {\n    return Triangle.area3D(this.p0, this.p1, this.p2)\n  }\n  centroid() {\n    return Triangle.centroid(this.p0, this.p1, this.p2)\n  }\n  inCentre() {\n    return Triangle.inCentre(this.p0, this.p1, this.p2)\n  }\n}\n","import Location from '../../geom/Location.js'\nimport LineString from '../../geom/LineString.js'\nimport Position from '../../geomgraph/Position.js'\nimport Point from '../../geom/Point.js'\nimport NodedSegmentString from '../../noding/NodedSegmentString.js'\nimport Polygon from '../../geom/Polygon.js'\nimport MultiPoint from '../../geom/MultiPoint.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport MultiPolygon from '../../geom/MultiPolygon.js'\nimport Label from '../../geomgraph/Label.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../../java/lang/UnsupportedOperationException.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Distance from '../../algorithm/Distance.js'\nimport MultiLineString from '../../geom/MultiLineString.js'\nimport Triangle from '../../geom/Triangle.js'\nexport default class OffsetCurveSetBuilder {\n  constructor() {\n    OffsetCurveSetBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._distance = null\n    this._curveBuilder = null\n    this._curveList = new ArrayList()\n    const inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2]\n    this._inputGeom = inputGeom\n    this._distance = distance\n    this._curveBuilder = curveBuilder\n  }\n  addRingSide(coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n    if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null\n    let leftLoc = cwLeftLoc\n    let rightLoc = cwRightLoc\n    if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n      leftLoc = cwRightLoc\n      rightLoc = cwLeftLoc\n      side = Position.opposite(side)\n    }\n    const curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance)\n    this.addCurve(curve, leftLoc, rightLoc)\n  }\n  addRingBothSides(coord, distance) {\n    this.addRingSide(coord, distance, Position.LEFT, Location.EXTERIOR, Location.INTERIOR)\n    this.addRingSide(coord, distance, Position.RIGHT, Location.INTERIOR, Location.EXTERIOR)\n  }\n  addPoint(p) {\n    if (this._distance <= 0.0) return null\n    const coord = p.getCoordinates()\n    const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n    this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n  }\n  addPolygon(p) {\n    let offsetDistance = this._distance\n    let offsetSide = Position.LEFT\n    if (this._distance < 0.0) {\n      offsetDistance = -this._distance\n      offsetSide = Position.RIGHT\n    }\n    const shell = p.getExteriorRing()\n    const shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates())\n    if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null\n    if (this._distance <= 0.0 && shellCoord.length < 3) return null\n    this.addRingSide(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      const holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates())\n      if (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue\n      this.addRingSide(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n  isTriangleErodedCompletely(triangleCoord, bufferDistance) {\n    const tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2])\n    const inCentre = tri.inCentre()\n    const distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1)\n    return distToCentre < Math.abs(bufferDistance)\n  }\n  addLineString(line) {\n    if (this._curveBuilder.isLineOffsetEmpty(this._distance)) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (CoordinateArrays.isRing(coord) && !this._curveBuilder.getBufferParameters().isSingleSided()) {\n      this.addRingBothSides(coord, this._distance)\n    } else {\n      const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n      this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n    }\n  }\n  addCurve(coord, leftLoc, rightLoc) {\n    if (coord === null || coord.length < 2) return null\n    const e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc))\n    this._curveList.add(e)\n  }\n  getCurves() {\n    this.add(this._inputGeom)\n    return this._curveList\n  }\n  add(g) {\n    if (g.isEmpty()) return null\n    if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getGeometryType())\n  }\n  isErodedCompletely(ring, bufferDistance) {\n    const ringCoord = ring.getCoordinates()\n    if (ringCoord.length < 4) return bufferDistance < 0\n    if (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance)\n    const env = ring.getEnvelopeInternal()\n    const envMinDimension = Math.min(env.getHeight(), env.getWidth())\n    if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true\n    return false\n  }\n  addCollection(gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n}\n","export default class PointOnGeometryLocator {\n  locate(p) {}\n}\n","import Iterator from '../../../../java/util/Iterator.js'\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nexport default class GeometryCollectionIterator {\n  constructor() {\n    GeometryCollectionIterator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parent = null\n    this._atStart = null\n    this._max = null\n    this._index = null\n    this._subcollectionIterator = null\n    const parent = arguments[0]\n    this._parent = parent\n    this._atStart = true\n    this._index = 0\n    this._max = parent.getNumGeometries()\n  }\n  static isAtomic(geom) {\n    return !(geom instanceof GeometryCollection)\n  }\n  next() {\n    if (this._atStart) {\n      this._atStart = false\n      if (GeometryCollectionIterator.isAtomic(this._parent)) this._index++\n      return this._parent\n    }\n    if (this._subcollectionIterator !== null) \n      if (this._subcollectionIterator.hasNext()) \n        return this._subcollectionIterator.next()\n      else \n        this._subcollectionIterator = null\n      \n    \n    if (this._index >= this._max) \n      throw new NoSuchElementException()\n    \n    const obj = this._parent.getGeometryN(this._index++)\n    if (obj instanceof GeometryCollection) {\n      this._subcollectionIterator = new GeometryCollectionIterator(obj)\n      return this._subcollectionIterator.next()\n    }\n    return obj\n  }\n  remove() {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n  hasNext() {\n    if (this._atStart) \n      return true\n    \n    if (this._subcollectionIterator !== null) {\n      if (this._subcollectionIterator.hasNext()) \n        return true\n      \n      this._subcollectionIterator = null\n    }\n    if (this._index >= this._max) \n      return false\n    \n    return true\n  }\n  get interfaces_() {\n    return [Iterator]\n  }\n}\n","import Location from '../../geom/Location.js'\nimport Polygon from '../../geom/Polygon.js'\nimport PointLocation from '../PointLocation.js'\nimport PointOnGeometryLocator from './PointOnGeometryLocator.js'\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nexport default class SimplePointInAreaLocator {\n  constructor() {\n    SimplePointInAreaLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    const geom = arguments[0]\n    this._geom = geom\n  }\n  static locatePointInPolygon(p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell)\n    if (shellLoc !== Location.INTERIOR) return shellLoc\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole)\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n    }\n    return Location.INTERIOR\n  }\n  static locatePointInRing(p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n  static containsPointInPolygon(p, poly) {\n    return Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly)\n  }\n  static locateInGeometry(p, geom) {\n    if (geom instanceof Polygon) \n      return SimplePointInAreaLocator.locatePointInPolygon(p, geom)\n    \n    if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) {\n          const loc = SimplePointInAreaLocator.locateInGeometry(p, g2)\n          if (loc !== Location.EXTERIOR) return loc\n        }\n      }\n    }\n    return Location.EXTERIOR\n  }\n  static isContained(p, geom) {\n    return Location.EXTERIOR !== SimplePointInAreaLocator.locate(p, geom)\n  }\n  static locate(p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    if (!geom.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return SimplePointInAreaLocator.locateInGeometry(p, geom)\n  }\n  locate(p) {\n    return SimplePointInAreaLocator.locate(p, this._geom)\n  }\n  get interfaces_() {\n    return [PointOnGeometryLocator]\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport System from '../../../../java/lang/System.js'\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Assert from '../util/Assert.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeEndStar {\n  constructor() {\n    EdgeEndStar.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edgeMap = new TreeMap()\n    this._edgeList = null\n    this._ptInAreaLocation = [Location.NONE, Location.NONE]\n  }\n  getNextCW(ee) {\n    this.getEdges()\n    const i = this._edgeList.indexOf(ee)\n    let iNextCW = i - 1\n    if (i === 0) iNextCW = this._edgeList.size() - 1\n    return this._edgeList.get(iNextCW)\n  }\n  propagateSideLabels(geomIndex) {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT)\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc)\n      if (label.isArea(geomIndex)) {\n        const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n        const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n        if (rightLoc !== Location.NONE) {\n          if (rightLoc !== currLoc) throw new TopologyException('side location conflict', e.getCoordinate())\n          if (leftLoc === Location.NONE) \n            Assert.shouldNeverReachHere('found single null side (at ' + e.getCoordinate() + ')')\n          \n          currLoc = leftLoc\n        } else {\n          Assert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side')\n          label.setLocation(geomIndex, Position.RIGHT, currLoc)\n          label.setLocation(geomIndex, Position.LEFT, currLoc)\n        }\n      }\n    }\n  }\n  getCoordinate() {\n    const it = this.iterator()\n    if (!it.hasNext()) return null\n    const e = it.next()\n    return e.getCoordinate()\n  }\n  print(out) {\n    System.out.println('EdgeEndStar:   ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      e.print(out)\n    }\n  }\n  isAreaLabelsConsistent(geomGraph) {\n    this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule())\n    return this.checkAreaLabelsConsistent(0)\n  }\n  checkAreaLabelsConsistent(geomIndex) {\n    const edges = this.getEdges()\n    if (edges.size() <= 0) return true\n    const lastEdgeIndex = edges.size() - 1\n    const startLabel = edges.get(lastEdgeIndex).getLabel()\n    const startLoc = startLabel.getLocation(geomIndex, Position.LEFT)\n    Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge')\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge')\n      const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n      const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n      if (leftLoc === rightLoc) \n        return false\n      \n      if (rightLoc !== currLoc) \n        return false\n      \n      currLoc = leftLoc\n    }\n    return true\n  }\n  findIndex(eSearch) {\n    this.iterator()\n    for (let i = 0; i < this._edgeList.size(); i++) {\n      const e = this._edgeList.get(i)\n      if (e === eSearch) return i\n    }\n    return -1\n  }\n  iterator() {\n    return this.getEdges().iterator()\n  }\n  getEdges() {\n    if (this._edgeList === null) \n      this._edgeList = new ArrayList(this._edgeMap.values())\n    \n    return this._edgeList\n  }\n  getLocation(geomIndex, p, geom) {\n    if (this._ptInAreaLocation[geomIndex] === Location.NONE) \n      this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry())\n    \n    return this._ptInAreaLocation[geomIndex]\n  }\n  toString() {\n    const buf = new StringBuffer()\n    buf.append('EdgeEndStar:   ' + this.getCoordinate())\n    buf.append('\\n')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      buf.append(e)\n      buf.append('\\n')\n    }\n    return buf.toString()\n  }\n  computeEdgeEndLabels(boundaryNodeRule) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      ee.computeLabel(boundaryNodeRule)\n    }\n  }\n  computeLabelling(geomGraph) {\n    this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule())\n    this.propagateSideLabels(0)\n    this.propagateSideLabels(1)\n    const hasDimensionalCollapseEdge = [false, false]\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) \n        if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true\n      \n    }\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) \n        if (label.isAnyNull(geomi)) {\n          let loc = Location.NONE\n          if (hasDimensionalCollapseEdge[geomi]) {\n            loc = Location.EXTERIOR\n          } else {\n            const p = e.getCoordinate()\n            loc = this.getLocation(geomi, p, geomGraph)\n          }\n          label.setAllLocationsIfNull(geomi, loc)\n        }\n      \n    }\n  }\n  getDegree() {\n    return this._edgeMap.size()\n  }\n  insertEdgeEnd(e, obj) {\n    this._edgeMap.put(e, obj)\n    this._edgeList = null\n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport EdgeEndStar from './EdgeEndStar.js'\nimport System from '../../../../java/lang/System.js'\nimport Label from './Label.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Quadrant from './Quadrant.js'\nimport Assert from '../util/Assert.js'\nexport default class DirectedEdgeStar extends EdgeEndStar {\n  constructor() {\n    super()\n    DirectedEdgeStar.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._resultAreaEdgeList = null\n    this._label = null\n    this._SCANNING_FOR_INCOMING = 1\n    this._LINKING_TO_OUTGOING = 2\n  }\n  linkResultDirectedEdges() {\n    this.getResultAreaEdges()\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (!nextOut.getLabel().isArea()) continue\n      if (firstOut === null && nextOut.isInResult()) firstOut = nextOut\n      switch (state) {\n      case this._SCANNING_FOR_INCOMING:\n        if (!nextIn.isInResult()) continue\n        incoming = nextIn\n        state = this._LINKING_TO_OUTGOING\n        break\n      case this._LINKING_TO_OUTGOING:\n        if (!nextOut.isInResult()) continue\n        incoming.setNext(nextOut)\n        state = this._SCANNING_FOR_INCOMING\n        break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) throw new TopologyException('no outgoing dirEdge found', this.getCoordinate())\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge')\n      incoming.setNext(firstOut)\n    }\n  }\n  insert(ee) {\n    const de = ee\n    this.insertEdgeEnd(de, de)\n  }\n  getRightmostEdge() {\n    const edges = this.getEdges()\n    const size = edges.size()\n    if (size < 1) return null\n    const de0 = edges.get(0)\n    if (size === 1) return de0\n    const deLast = edges.get(size - 1)\n    const quad0 = de0.getQuadrant()\n    const quad1 = deLast.getQuadrant()\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) {\n      return de0\n    } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) {\n      return deLast\n    } else {\n      const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node')\n    return null\n  }\n  print(out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      out.print('out ')\n      de.print(out)\n      out.println()\n      out.print('in ')\n      de.getSym().print(out)\n      out.println()\n    }\n  }\n  getResultAreaEdges() {\n    if (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList\n    this._resultAreaEdgeList = new ArrayList()\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de)\n    }\n    return this._resultAreaEdgeList\n  }\n  updateLabelling(nodeLabel) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0))\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1))\n    }\n  }\n  linkAllDirectedEdges() {\n    this.getEdges()\n    let prevOut = null\n    let firstIn = null\n    for (let i = this._edgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._edgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstIn === null) firstIn = nextIn\n      if (prevOut !== null) nextIn.setNext(prevOut)\n      prevOut = nextOut\n    }\n    firstIn.setNext(prevOut)\n  }\n  computeDepths() {\n    if (arguments.length === 1) {\n      const de = arguments[0]\n      const edgeIndex = this.findIndex(de)\n      const startDepth = de.getDepth(Position.LEFT)\n      const targetLastDepth = de.getDepth(Position.RIGHT)\n      const nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth)\n      const lastDepth = this.computeDepths(0, edgeIndex, nextDepth)\n      if (lastDepth !== targetLastDepth) throw new TopologyException('depth mismatch at ' + de.getCoordinate())\n    } else if (arguments.length === 3) {\n      const startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2]\n      let currDepth = startDepth\n      for (let i = startIndex; i < endIndex; i++) {\n        const nextDe = this._edgeList.get(i)\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth)\n        currDepth = nextDe.getDepth(Position.LEFT)\n      }\n      return currDepth\n    }\n  }\n  mergeSymLabels() {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.merge(de.getSym().getLabel())\n    }\n  }\n  linkMinimalDirectedEdges(er) {\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut\n      switch (state) {\n      case this._SCANNING_FOR_INCOMING:\n        if (nextIn.getEdgeRing() !== er) continue\n        incoming = nextIn\n        state = this._LINKING_TO_OUTGOING\n        break\n      case this._LINKING_TO_OUTGOING:\n        if (nextOut.getEdgeRing() !== er) continue\n        incoming.setNextMin(nextOut)\n        state = this._SCANNING_FOR_INCOMING\n        break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge')\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge')\n      incoming.setNextMin(firstOut)\n    }\n  }\n  getOutgoingDegree() {\n    if (arguments.length === 0) {\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext(); ) {\n        const de = it.next()\n        if (de.isInResult()) degree++\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      const er = arguments[0]\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext(); ) {\n        const de = it.next()\n        if (de.getEdgeRing() === er) degree++\n      }\n      return degree\n    }\n  }\n  getLabel() {\n    return this._label\n  }\n  findCoveredLineEdges() {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (nextOut.isLineEdge()) {\n        nextOut.getEdge().setCovered(currLoc === Location.INTERIOR)\n      } else {\n        if (nextOut.isInResult()) currLoc = Location.EXTERIOR\n        if (nextIn.isInResult()) currLoc = Location.INTERIOR\n      }\n    }\n  }\n  computeLabelling(geom) {\n    super.computeLabelling.call(this, geom)\n    this._label = new Label(Location.NONE)\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      const e = ee.getEdge()\n      const eLabel = e.getLabel()\n      for (let i = 0; i < 2; i++) {\n        const eLoc = eLabel.getLocation(i)\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR)\n      }\n    }\n  }\n}\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar.js'\nimport Node from '../../geomgraph/Node.js'\nimport NodeFactory from '../../geomgraph/NodeFactory.js'\nexport default class OverlayNodeFactory extends NodeFactory {\n  constructor() {\n    super()\n  }\n  createNode(coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  }\n}\n","import Comparable from '../../../../java/lang/Comparable.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nexport default class OrientedCoordinateArray {\n  constructor() {\n    OrientedCoordinateArray.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._orientation = null\n    const pts = arguments[0]\n    this._pts = pts\n    this._orientation = OrientedCoordinateArray.orientation(pts)\n  }\n  static orientation(pts) {\n    return CoordinateArrays.increasingDirection(pts) === 1\n  }\n  static compareOriented(pts1, orientation1, pts2, orientation2) {\n    const dir1 = orientation1 ? 1 : -1\n    const dir2 = orientation2 ? 1 : -1\n    const limit1 = orientation1 ? pts1.length : -1\n    const limit2 = orientation2 ? pts2.length : -1\n    let i1 = orientation1 ? 0 : pts1.length - 1\n    let i2 = orientation2 ? 0 : pts2.length - 1\n    while (true) {\n      const compPt = pts1[i1].compareTo(pts2[i2])\n      if (compPt !== 0) return compPt\n      i1 += dir1\n      i2 += dir2\n      const done1 = i1 === limit1\n      const done2 = i2 === limit2\n      if (done1 && !done2) return -1\n      if (!done1 && done2) return 1\n      if (done1 && done2) return 0\n    }\n  }\n  compareTo(o1) {\n    const oca = o1\n    const comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation)\n    return comp\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeList {\n  constructor() {\n    EdgeList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edges = new ArrayList()\n    this._ocaMap = new TreeMap()\n  }\n  print(out) {\n    out.print('MULTILINESTRING ( ')\n    for (let j = 0; j < this._edges.size(); j++) {\n      const e = this._edges.get(j)\n      if (j > 0) out.print(',')\n      out.print('(')\n      const pts = e.getCoordinates()\n      for (let i = 0; i < pts.length; i++) {\n        if (i > 0) out.print(',')\n        out.print(pts[i].x + ' ' + pts[i].y)\n      }\n      out.println(')')\n    }\n    out.print(')  ')\n  }\n  addAll(edgeColl) {\n    for (let i = edgeColl.iterator(); i.hasNext(); ) \n      this.add(i.next())\n    \n  }\n  findEdgeIndex(e) {\n    for (let i = 0; i < this._edges.size(); i++) \n      if (this._edges.get(i).equals(e)) return i\n    \n    return -1\n  }\n  iterator() {\n    return this._edges.iterator()\n  }\n  getEdges() {\n    return this._edges\n  }\n  get(i) {\n    return this._edges.get(i)\n  }\n  findEqualEdge(e) {\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    const matchEdge = this._ocaMap.get(oca)\n    return matchEdge\n  }\n  add(e) {\n    this._edges.add(e)\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    this._ocaMap.put(oca, e)\n  }\n}\n","export default class SegmentIntersector {\n  processIntersections(e0, segIndex0, e1, segIndex1) {}\n  isDone() {}\n}\n","import SegmentIntersector from './SegmentIntersector.js'\nexport default class IntersectionAdder {\n  constructor() {\n    IntersectionAdder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hasIntersection = false\n    this._hasProper = false\n    this._hasProperInterior = false\n    this._hasInterior = false\n    this._properIntersectionPoint = null\n    this._li = null\n    this._isSelfIntersection = null\n    this.numIntersections = 0\n    this.numInteriorIntersections = 0\n    this.numProperIntersections = 0\n    this.numTests = 0\n    const li = arguments[0]\n    this._li = li\n  }\n  static isAdjacentSegments(i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n  isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) \n      if (this._li.getIntersectionNum() === 1) {\n        if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.size() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) \n            return true\n          \n        }\n      }\n    \n    return false\n  }\n  getProperIntersectionPoint() {\n    return this._properIntersectionPoint\n  }\n  hasProperInteriorIntersection() {\n    return this._hasProperInterior\n  }\n  getLineIntersector() {\n    return this._li\n  }\n  hasProperIntersection() {\n    return this._hasProper\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      this.numIntersections++\n      if (this._li.isInteriorIntersection()) {\n        this.numInteriorIntersections++\n        this._hasInterior = true\n      }\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n        if (this._li.isProper()) {\n          this.numProperIntersections++\n          this._hasProper = true\n          this._hasProperInterior = true\n        }\n      }\n    }\n  }\n  hasIntersection() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return false\n  }\n  hasInteriorIntersection() {\n    return this._hasInterior\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nexport default class EdgeIntersection {\n  constructor() {\n    EdgeIntersection.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.coord = null\n    this.segmentIndex = null\n    this.dist = null\n    const coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2]\n    this.coord = new Coordinate(coord)\n    this.segmentIndex = segmentIndex\n    this.dist = dist\n  }\n  getSegmentIndex() {\n    return this.segmentIndex\n  }\n  getCoordinate() {\n    return this.coord\n  }\n  print(out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n    out.println(' dist = ' + this.dist)\n  }\n  compareTo(obj) {\n    const other = obj\n    return this.compare(other.segmentIndex, other.dist)\n  }\n  isEndPoint(maxSegmentIndex) {\n    if (this.segmentIndex === 0 && this.dist === 0.0) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n  toString() {\n    return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n  }\n  getDistance() {\n    return this.dist\n  }\n  compare(segmentIndex, dist) {\n    if (this.segmentIndex < segmentIndex) return -1\n    if (this.segmentIndex > segmentIndex) return 1\n    if (this.dist < dist) return -1\n    if (this.dist > dist) return 1\n    return 0\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import EdgeIntersection from './EdgeIntersection.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Label from './Label.js'\nimport Edge from './Edge.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeIntersectionList {\n  constructor() {\n    EdgeIntersectionList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeMap = new TreeMap()\n    this.edge = null\n    const edge = arguments[0]\n    this.edge = edge\n  }\n  print(out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n  iterator() {\n    return this._nodeMap.values().iterator()\n  }\n  addSplitEdges(edgeList) {\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n  addEndpoints() {\n    const maxSegIndex = this.edge.pts.length - 1\n    this.add(this.edge.pts[0], 0, 0.0)\n    this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0)\n  }\n  createSplitEdge(ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    const lastSegStartPt = this.edge.pts[ei1.segmentIndex]\n    const useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) \n      npts--\n    \n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) \n      pts[ipt++] = this.edge.pts[i]\n    \n    if (useIntPt1) pts[ipt] = ei1.coord\n    return new Edge(pts, new Label(this.edge._label))\n  }\n  add(intPt, segmentIndex, dist) {\n    const eiNew = new EdgeIntersection(intPt, segmentIndex, dist)\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) \n      return ei\n    \n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n  isIntersection(pt) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      if (ei.coord.equals(pt)) return true\n    }\n    return false\n  }\n}\n","import Location from './Location.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Dimension from './Dimension.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nexport default class IntersectionMatrix {\n  constructor() {\n    IntersectionMatrix.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._matrix = null\n    if (arguments.length === 0) {\n      this._matrix = Array(3).fill().map(() => Array(3))\n      this.setAll(Dimension.FALSE)\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'string') {\n        const elements = arguments[0]\n        IntersectionMatrix.constructor_.call(this)\n        this.set(elements)\n      } else if (arguments[0] instanceof IntersectionMatrix) {\n        const other = arguments[0]\n        IntersectionMatrix.constructor_.call(this)\n        this._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR]\n        this._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY]\n        this._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR]\n        this._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR]\n        this._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY]\n        this._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR]\n        this._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR]\n        this._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY]\n        this._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR]\n      }\n    }\n  }\n  static matches() {\n    if (Number.isInteger(arguments[0]) && typeof arguments[1] === 'string') {\n      const actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1]\n      if (requiredDimensionSymbol === Dimension.SYM_DONTCARE) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) \n        return true\n      \n      return false\n    } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'string') {\n      const actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1]\n      const m = new IntersectionMatrix(actualDimensionSymbols)\n      return m.matches(requiredDimensionSymbols)\n    }\n  }\n  static isTrue(actualDimensionValue) {\n    if (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) \n      return true\n    \n    return false\n  }\n  isIntersects() {\n    return !this.isDisjoint()\n  }\n  isCovers() {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  isCoveredBy() {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n  set() {\n    if (arguments.length === 1) {\n      const dimensionSymbols = arguments[0]\n      for (let i = 0; i < dimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0], column = arguments[1], dimensionValue = arguments[2]\n      this._matrix[row][column] = dimensionValue\n    }\n  }\n  isContains() {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  setAtLeast() {\n    if (arguments.length === 1) {\n      const minimumDimensionSymbols = arguments[0]\n      for (let i = 0; i < minimumDimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2]\n      if (this._matrix[row][column] < minimumDimensionValue) \n        this._matrix[row][column] = minimumDimensionValue\n      \n    }\n  }\n  setAtLeastIfValid(row, column, minimumDimensionValue) {\n    if (row >= 0 && column >= 0) \n      this.setAtLeast(row, column, minimumDimensionValue)\n    \n  }\n  isWithin() {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n  isTouches(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA > dimensionOfGeometryB) \n      return this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA)\n    \n    if (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]))\n    \n    return false\n  }\n  isOverlaps(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    return false\n  }\n  isEquals(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA !== dimensionOfGeometryB) \n      return false\n    \n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  toString() {\n    const builder = new StringBuilder('123456789')\n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        builder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]))\n      \n    \n    return builder.toString()\n  }\n  setAll(dimensionValue) {\n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        this._matrix[ai][bi] = dimensionValue\n      \n    \n  }\n  get(row, column) {\n    return this._matrix[row][column]\n  }\n  transpose() {\n    let temp = this._matrix[1][0]\n    this._matrix[1][0] = this._matrix[0][1]\n    this._matrix[0][1] = temp\n    temp = this._matrix[2][0]\n    this._matrix[2][0] = this._matrix[0][2]\n    this._matrix[0][2] = temp\n    temp = this._matrix[2][1]\n    this._matrix[2][1] = this._matrix[1][2]\n    this._matrix[1][2] = temp\n    return this\n  }\n  matches(requiredDimensionSymbols) {\n    if (requiredDimensionSymbols.length !== 9) \n      throw new IllegalArgumentException('Should be length 9: ' + requiredDimensionSymbols)\n    \n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        if (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) \n          return false\n        \n      \n    \n    return true\n  }\n  add(im) {\n    for (let i = 0; i < 3; i++) \n      for (let j = 0; j < 3; j++) \n        this.setAtLeast(i, j, im.get(i, j))\n      \n    \n  }\n  isDisjoint() {\n    return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE\n  }\n  isCrosses(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 0\n    \n    return false\n  }\n  get interfaces_() {\n    return [Cloneable]\n  }\n}\n","import Arrays from '../../../../java/util/Arrays.js'\nimport System from '../../../../java/lang/System.js'\nexport default class IntArrayList {\n  constructor() {\n    IntArrayList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._data = null\n    this._size = 0\n    if (arguments.length === 0) {\n      IntArrayList.constructor_.call(this, 10)\n    } else if (arguments.length === 1) {\n      const initialCapacity = arguments[0]\n      this._data = new Array(initialCapacity).fill(null)\n    }\n  }\n  size() {\n    return this._size\n  }\n  addAll(values) {\n    if (values === null) return null\n    if (values.length === 0) return null\n    this.ensureCapacity(this._size + values.length)\n    System.arraycopy(values, 0, this._data, this._size, values.length)\n    this._size += values.length\n  }\n  ensureCapacity(capacity) {\n    if (capacity <= this._data.length) return null\n    const newLength = Math.max(capacity, this._data.length * 2)\n    this._data = Arrays.copyOf(this._data, newLength)\n  }\n  toArray() {\n    const array = new Array(this._size).fill(null)\n    System.arraycopy(this._data, 0, array, 0, this._size)\n    return array\n  }\n  add(value) {\n    this.ensureCapacity(this._size + 1)\n    this._data[this._size] = value\n    ++ this._size\n  }\n}\n","import IntArrayList from '../../util/IntArrayList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Quadrant from '../Quadrant.js'\nexport default class MonotoneChainIndexer {\n  static toIntArray(list) {\n    const array = new Array(list.size()).fill(null)\n    for (let i = 0; i < array.length; i++) \n      array[i] = list.get(i).intValue()\n    \n    return array\n  }\n  getChainStartIndices(pts) {\n    let start = 0\n    const startIndexList = new IntArrayList(Math.trunc(pts.length / 2))\n    startIndexList.add(start)\n    do {\n      const last = this.findChainEnd(pts, start)\n      startIndexList.add(last)\n      start = last\n    } while (start < pts.length - 1)\n    return startIndexList.toArray()\n  }\n  findChainEnd(pts, start) {\n    const chainQuad = Quadrant.quadrant(pts[start], pts[start + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n      if (quad !== chainQuad) break\n      last++\n    }\n    return last - 1\n  }\n  OLDgetChainStartIndices(pts) {\n    let start = 0\n    const startIndexList = new ArrayList()\n    startIndexList.add(start)\n    do {\n      const last = this.findChainEnd(pts, start)\n      startIndexList.add(last)\n      start = last\n    } while (start < pts.length - 1)\n    const startIndex = MonotoneChainIndexer.toIntArray(startIndexList)\n    return startIndex\n  }\n}\n","import MonotoneChainIndexer from './MonotoneChainIndexer.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class MonotoneChainEdge {\n  constructor() {\n    MonotoneChainEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.e = null\n    this.pts = null\n    this.startIndex = null\n    const e = arguments[0]\n    this.e = e\n    this.pts = e.getCoordinates()\n    const mcb = new MonotoneChainIndexer()\n    this.startIndex = mcb.getChainStartIndices(this.pts)\n  }\n  getCoordinates() {\n    return this.pts\n  }\n  getMaxX(chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 > x2 ? x1 : x2\n  }\n  getMinX(chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 < x2 ? x1 : x2\n  }\n  computeIntersectsForChain() {\n    if (arguments.length === 4) {\n      const chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3]\n      this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        ei.addIntersections(this.e, start0, mce.e, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mce, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei)\n      }\n    }\n  }\n  overlaps(start0, end0, mce, start1, end1) {\n    return Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1])\n  }\n  getStartIndexes() {\n    return this.startIndex\n  }\n  computeIntersects(mce, si) {\n    for (let i = 0; i < this.startIndex.length - 1; i++) \n      for (let j = 0; j < mce.startIndex.length - 1; j++) \n        this.computeIntersectsForChain(i, mce, j, si)\n      \n    \n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nexport default class Depth {\n  constructor() {\n    Depth.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._depth = Array(2).fill().map(() => Array(3))\n    for (let i = 0; i < 2; i++) \n      for (let j = 0; j < 3; j++) \n        this._depth[i][j] = Depth.NULL_VALUE\n      \n    \n  }\n  static depthAtLocation(location) {\n    if (location === Location.EXTERIOR) return 0\n    if (location === Location.INTERIOR) return 1\n    return Depth.NULL_VALUE\n  }\n  getDepth(geomIndex, posIndex) {\n    return this._depth[geomIndex][posIndex]\n  }\n  setDepth(geomIndex, posIndex, depthValue) {\n    this._depth[geomIndex][posIndex] = depthValue\n  }\n  isNull() {\n    if (arguments.length === 0) {\n      for (let i = 0; i < 2; i++) \n        for (let j = 0; j < 3; j++) \n          if (this._depth[i][j] !== Depth.NULL_VALUE) return false\n        \n      \n      return true\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this._depth[geomIndex][1] === Depth.NULL_VALUE\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], posIndex = arguments[1]\n      return this._depth[geomIndex][posIndex] === Depth.NULL_VALUE\n    }\n  }\n  normalize() {\n    for (let i = 0; i < 2; i++) \n      if (!this.isNull(i)) {\n        let minDepth = this._depth[i][1]\n        if (this._depth[i][2] < minDepth) minDepth = this._depth[i][2]\n        if (minDepth < 0) minDepth = 0\n        for (let j = 1; j < 3; j++) {\n          let newValue = 0\n          if (this._depth[i][j] > minDepth) newValue = 1\n          this._depth[i][j] = newValue\n        }\n      }\n    \n  }\n  getDelta(geomIndex) {\n    return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n  }\n  getLocation(geomIndex, posIndex) {\n    if (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR\n    return Location.INTERIOR\n  }\n  toString() {\n    return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n  }\n  add() {\n    if (arguments.length === 1) {\n      const lbl = arguments[0]\n      for (let i = 0; i < 2; i++) \n        for (let j = 1; j < 3; j++) {\n          const loc = lbl.getLocation(i, j)\n          if (loc === Location.EXTERIOR || loc === Location.INTERIOR) \n            if (this.isNull(i, j)) \n              this._depth[i][j] = Depth.depthAtLocation(loc)\n            else this._depth[i][j] += Depth.depthAtLocation(loc)\n          \n        }\n      \n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2]\n      if (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++\n    }\n  }\n}\nDepth.NULL_VALUE = -1\n","import EdgeIntersectionList from './EdgeIntersectionList.js'\nimport IntersectionMatrix from '../geom/IntersectionMatrix.js'\nimport MonotoneChainEdge from './index/MonotoneChainEdge.js'\nimport Position from './Position.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Label from './Label.js'\nimport Envelope from '../geom/Envelope.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nimport Depth from './Depth.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class Edge extends GraphComponent {\n  constructor() {\n    super()\n    Edge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.pts = null\n    this._env = null\n    this.eiList = new EdgeIntersectionList(this)\n    this._name = null\n    this._mce = null\n    this._isIsolated = true\n    this._depth = new Depth()\n    this._depthDelta = 0\n    if (arguments.length === 1) {\n      const pts = arguments[0]\n      Edge.constructor_.call(this, pts, null)\n    } else if (arguments.length === 2) {\n      const pts = arguments[0], label = arguments[1]\n      this.pts = pts\n      this._label = label\n    }\n  }\n  static updateIM() {\n    if (arguments.length === 2 && (arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label)) {\n      const label = arguments[0], im = arguments[1]\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1)\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2)\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2)\n      }\n    } else {\n      return super.updateIM.apply(this, arguments)\n    }\n  }\n  getDepth() {\n    return this._depth\n  }\n  getCollapsedEdge() {\n    const newPts = new Array(2).fill(null)\n    newPts[0] = this.pts[0]\n    newPts[1] = this.pts[1]\n    const newe = new Edge(newPts, Label.toLineLabel(this._label))\n    return newe\n  }\n  isIsolated() {\n    return this._isIsolated\n  }\n  getCoordinates() {\n    return this.pts\n  }\n  setIsolated(isIsolated) {\n    this._isIsolated = isIsolated\n  }\n  setName(name) {\n    this._name = name\n  }\n  equals(o) {\n    if (!(o instanceof Edge)) return false\n    const e = o\n    if (this.pts.length !== e.pts.length) return false\n    let isEqualForward = true\n    let isEqualReverse = true\n    let iRev = this.pts.length\n    for (let i = 0; i < this.pts.length; i++) {\n      if (!this.pts[i].equals2D(e.pts[i])) \n        isEqualForward = false\n      \n      if (!this.pts[i].equals2D(e.pts[-- iRev])) \n        isEqualReverse = false\n      \n      if (!isEqualForward && !isEqualReverse) return false\n    }\n    return true\n  }\n  getCoordinate() {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) return this.pts[0]\n      return null\n    } else if (arguments.length === 1) {\n      const i = arguments[0]\n      return this.pts[i]\n    }\n  }\n  print(out) {\n    out.print('edge ' + this._name + ': ')\n    out.print('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) out.print(',')\n      out.print(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta)\n  }\n  computeIM(im) {\n    Edge.updateIM(this._label, im)\n  }\n  isCollapsed() {\n    if (!this._label.isArea()) return false\n    if (this.pts.length !== 3) return false\n    if (this.pts[0].equals(this.pts[2])) return true\n    return false\n  }\n  isClosed() {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  }\n  getMaximumSegmentIndex() {\n    return this.pts.length - 1\n  }\n  getDepthDelta() {\n    return this._depthDelta\n  }\n  getNumPoints() {\n    return this.pts.length\n  }\n  printReverse(out) {\n    out.print('edge ' + this._name + ': ')\n    for (let i = this.pts.length - 1; i >= 0; i--) \n      out.print(this.pts[i] + ' ')\n    \n    out.println('')\n  }\n  getMonotoneChainEdge() {\n    if (this._mce === null) this._mce = new MonotoneChainEdge(this)\n    return this._mce\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      this._env = new Envelope()\n      for (let i = 0; i < this.pts.length; i++) \n        this._env.expandToInclude(this.pts[i])\n      \n    }\n    return this._env\n  }\n  addIntersection(li, segmentIndex, geomIndex, intIndex) {\n    const intPt = new Coordinate(li.getIntersection(intIndex))\n    let normalizedSegmentIndex = segmentIndex\n    let dist = li.getEdgeDistance(geomIndex, intIndex)\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this.pts.length) {\n      const nextPt = this.pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex\n        dist = 0.0\n      }\n    }\n    const ei = this.eiList.add(intPt, normalizedSegmentIndex, dist)\n  }\n  toString() {\n    const builder = new StringBuilder()\n    builder.append('edge ' + this._name + ': ')\n    builder.append('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) builder.append(',')\n      builder.append(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    builder.append(')  ' + this._label + ' ' + this._depthDelta)\n    return builder.toString()\n  }\n  isPointwiseEqual(e) {\n    if (this.pts.length !== e.pts.length) return false\n    for (let i = 0; i < this.pts.length; i++) \n      if (!this.pts[i].equals2D(e.pts[i])) \n        return false\n      \n    \n    return true\n  }\n  setDepthDelta(depthDelta) {\n    this._depthDelta = depthDelta\n  }\n  getEdgeIntersectionList() {\n    return this.eiList\n  }\n  addIntersections(li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) \n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    \n  }\n}\n","import Location from '../../geom/Location.js'\nimport BufferSubgraph from './BufferSubgraph.js'\nimport PolygonBuilder from '../overlay/PolygonBuilder.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Position from '../../geomgraph/Position.js'\nimport MCIndexNoder from '../../noding/MCIndexNoder.js'\nimport OffsetCurveBuilder from './OffsetCurveBuilder.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport SubgraphDepthLocater from './SubgraphDepthLocater.js'\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder.js'\nimport Label from '../../geomgraph/Label.js'\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory.js'\nimport EdgeList from '../../geomgraph/EdgeList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport IntersectionAdder from '../../noding/IntersectionAdder.js'\nimport Edge from '../../geomgraph/Edge.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class BufferBuilder {\n  constructor() {\n    BufferBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._bufParams = null\n    this._workingPrecisionModel = null\n    this._workingNoder = null\n    this._geomFact = null\n    this._graph = null\n    this._edgeList = new EdgeList()\n    const bufParams = arguments[0]\n    this._bufParams = bufParams\n  }\n  static depthDelta(label) {\n    const lLoc = label.getLocation(0, Position.LEFT)\n    const rLoc = label.getLocation(0, Position.RIGHT)\n    if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1\n    return 0\n  }\n  static convertSegStrings(it) {\n    const fact = new GeometryFactory()\n    const lines = new ArrayList()\n    while (it.hasNext()) {\n      const ss = it.next()\n      const line = fact.createLineString(ss.getCoordinates())\n      lines.add(line)\n    }\n    return fact.buildGeometry(lines)\n  }\n  setWorkingPrecisionModel(pm) {\n    this._workingPrecisionModel = pm\n  }\n  insertUniqueEdge(e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      existingLabel.merge(labelToMerge)\n      const mergeDelta = BufferBuilder.depthDelta(labelToMerge)\n      const existingDelta = existingEdge.getDepthDelta()\n      const newDelta = existingDelta + mergeDelta\n      existingEdge.setDepthDelta(newDelta)\n    } else {\n      this._edgeList.add(e)\n      e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()))\n    }\n  }\n  buildSubgraphs(subgraphList, polyBuilder) {\n    const processedGraphs = new ArrayList()\n    for (let i = subgraphList.iterator(); i.hasNext(); ) {\n      const subgraph = i.next()\n      const p = subgraph.getRightmostCoordinate()\n      const locater = new SubgraphDepthLocater(processedGraphs)\n      const outsideDepth = locater.getDepth(p)\n      subgraph.computeDepth(outsideDepth)\n      subgraph.findResultEdges()\n      processedGraphs.add(subgraph)\n      polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes())\n    }\n  }\n  createSubgraphs(graph) {\n    const subgraphList = new ArrayList()\n    for (let i = graph.getNodes().iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (!node.isVisited()) {\n        const subgraph = new BufferSubgraph()\n        subgraph.create(node)\n        subgraphList.add(subgraph)\n      }\n    }\n    Collections.sort(subgraphList, Collections.reverseOrder())\n    return subgraphList\n  }\n  createEmptyResultGeometry() {\n    const emptyGeom = this._geomFact.createPolygon()\n    return emptyGeom\n  }\n  getNoder(precisionModel) {\n    if (this._workingNoder !== null) return this._workingNoder\n    const noder = new MCIndexNoder()\n    const li = new RobustLineIntersector()\n    li.setPrecisionModel(precisionModel)\n    noder.setSegmentIntersector(new IntersectionAdder(li))\n    return noder\n  }\n  buffer(g, distance) {\n    let precisionModel = this._workingPrecisionModel\n    if (precisionModel === null) precisionModel = g.getPrecisionModel()\n    this._geomFact = g.getFactory()\n    const curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams)\n    const curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder)\n    const bufferSegStrList = curveSetBuilder.getCurves()\n    if (bufferSegStrList.size() <= 0) \n      return this.createEmptyResultGeometry()\n    \n    this.computeNodedEdges(bufferSegStrList, precisionModel)\n    this._graph = new PlanarGraph(new OverlayNodeFactory())\n    this._graph.addEdges(this._edgeList.getEdges())\n    const subgraphList = this.createSubgraphs(this._graph)\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    this.buildSubgraphs(subgraphList, polyBuilder)\n    const resultPolyList = polyBuilder.getPolygons()\n    if (resultPolyList.size() <= 0) \n      return this.createEmptyResultGeometry()\n    \n    const resultGeom = this._geomFact.buildGeometry(resultPolyList)\n    return resultGeom\n  }\n  computeNodedEdges(bufferSegStrList, precisionModel) {\n    const noder = this.getNoder(precisionModel)\n    noder.computeNodes(bufferSegStrList)\n    const nodedSegStrings = noder.getNodedSubstrings()\n    for (let i = nodedSegStrings.iterator(); i.hasNext(); ) {\n      const segStr = i.next()\n      const pts = segStr.getCoordinates()\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) continue\n      const oldLabel = segStr.getData()\n      const edge = new Edge(segStr.getCoordinates(), new Label(oldLabel))\n      this.insertUniqueEdge(edge)\n    }\n  }\n  setNoder(noder) {\n    this._workingNoder = noder\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Noder from './Noder.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport System from '../../../../java/lang/System.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class ScaledNoder {\n  constructor() {\n    ScaledNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._noder = null\n    this._scaleFactor = null\n    this._offsetX = null\n    this._offsetY = null\n    this._isScaled = false\n    if (arguments.length === 2) {\n      const noder = arguments[0], scaleFactor = arguments[1]\n      ScaledNoder.constructor_.call(this, noder, scaleFactor, 0, 0)\n    } else if (arguments.length === 4) {\n      const noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3]\n      this._noder = noder\n      this._scaleFactor = scaleFactor\n      this._isScaled = !this.isIntegerPrecision()\n    }\n  }\n  rescale() {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        this.rescale(ss.getCoordinates())\n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      for (let i = 0; i < pts.length; i++) {\n        pts[i].x = pts[i].x / this._scaleFactor + this._offsetX\n        pts[i].y = pts[i].y / this._scaleFactor + this._offsetY\n      }\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) \n        System.out.println(pts)\n      \n    }\n  }\n  scale() {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      const nodedSegmentStrings = new ArrayList(segStrings.size())\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        nodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()))\n      }\n      return nodedSegmentStrings\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      const roundPts = new Array(pts.length).fill(null)\n      for (let i = 0; i < pts.length; i++) \n        roundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].getZ())\n      \n      const roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts)\n      return roundPtsNoDup\n    }\n  }\n  isIntegerPrecision() {\n    return this._scaleFactor === 1.0\n  }\n  getNodedSubstrings() {\n    const splitSS = this._noder.getNodedSubstrings()\n    if (this._isScaled) this.rescale(splitSS)\n    return splitSS\n  }\n  computeNodes(inputSegStrings) {\n    let intSegStrings = inputSegStrings\n    if (this._isScaled) intSegStrings = this.scale(inputSegStrings)\n    this._noder.computeNodes(intSegStrings)\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import GeometryFactory from '../geom/GeometryFactory.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class NodingValidator {\n  constructor() {\n    NodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._segStrings = null\n    const segStrings = arguments[0]\n    this._segStrings = segStrings\n  }\n  checkEndPtVertexIntersections() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        this.checkEndPtVertexIntersections(pts[0], this._segStrings)\n        this.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings)\n      }\n    } else if (arguments.length === 2) {\n      const testPt = arguments[0], segStrings = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        for (let j = 1; j < pts.length - 1; j++) \n          if (pts[j].equals(testPt)) throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt)\n        \n      }\n    }\n  }\n  checkInteriorIntersections() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss0 = i.next()\n        for (let j = this._segStrings.iterator(); j.hasNext(); ) {\n          const ss1 = j.next()\n          this.checkInteriorIntersections(ss0, ss1)\n        }\n      }\n    } else if (arguments.length === 2) {\n      const ss0 = arguments[0], ss1 = arguments[1]\n      const pts0 = ss0.getCoordinates()\n      const pts1 = ss1.getCoordinates()\n      for (let i0 = 0; i0 < pts0.length - 1; i0++) \n        for (let i1 = 0; i1 < pts1.length - 1; i1++) \n          this.checkInteriorIntersections(ss0, i0, ss1, i1)\n        \n      \n    } else if (arguments.length === 4) {\n      const e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3]\n      if (e0 === e1 && segIndex0 === segIndex1) return null\n      const p00 = e0.getCoordinates()[segIndex0]\n      const p01 = e0.getCoordinates()[segIndex0 + 1]\n      const p10 = e1.getCoordinates()[segIndex1]\n      const p11 = e1.getCoordinates()[segIndex1 + 1]\n      this._li.computeIntersection(p00, p01, p10, p11)\n      if (this._li.hasIntersection()) \n        if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) \n          throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n        \n      \n    }\n  }\n  checkValid() {\n    this.checkEndPtVertexIntersections()\n    this.checkInteriorIntersections()\n    this.checkCollapses()\n  }\n  checkCollapses() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        this.checkCollapses(ss)\n      }\n    } else if (arguments.length === 1) {\n      const ss = arguments[0]\n      const pts = ss.getCoordinates()\n      for (let i = 0; i < pts.length - 2; i++) \n        this.checkCollapse(pts[i], pts[i + 1], pts[i + 2])\n      \n    }\n  }\n  hasInteriorIntersection(li, p0, p1) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) {\n      const intPt = li.getIntersection(i)\n      if (!(intPt.equals(p0) || intPt.equals(p1))) return true\n    }\n    return false\n  }\n  checkCollapse(p0, p1, p2) {\n    if (p0.equals(p2)) throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2]))\n  }\n}\nNodingValidator.fact = new GeometryFactory()\n","import Coordinate from '../../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Assert from '../../util/Assert.js'\nexport default class HotPixel {\n  constructor() {\n    HotPixel.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = null\n    this._pt = null\n    this._originalPt = null\n    this._ptScaled = null\n    this._p0Scaled = null\n    this._p1Scaled = null\n    this._scaleFactor = null\n    this._minx = null\n    this._maxx = null\n    this._miny = null\n    this._maxy = null\n    this._corner = new Array(4).fill(null)\n    this._safeEnv = null\n    const pt = arguments[0], scaleFactor = arguments[1], li = arguments[2]\n    this._originalPt = pt\n    this._pt = pt\n    this._scaleFactor = scaleFactor\n    this._li = li\n    if (scaleFactor <= 0) throw new IllegalArgumentException('Scale factor must be non-zero')\n    if (scaleFactor !== 1.0) {\n      this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y))\n      this._p0Scaled = new Coordinate()\n      this._p1Scaled = new Coordinate()\n    }\n    this.initCorners(this._pt)\n  }\n  intersectsScaled(p0, p1) {\n    const segMinx = Math.min(p0.x, p1.x)\n    const segMaxx = Math.max(p0.x, p1.x)\n    const segMiny = Math.min(p0.y, p1.y)\n    const segMaxy = Math.max(p0.y, p1.y)\n    const isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy\n    if (isOutsidePixelEnv) return false\n    const intersects = this.intersectsToleranceSquare(p0, p1)\n    Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test')\n    return intersects\n  }\n  initCorners(pt) {\n    const tolerance = 0.5\n    this._minx = pt.x - tolerance\n    this._maxx = pt.x + tolerance\n    this._miny = pt.y - tolerance\n    this._maxy = pt.y + tolerance\n    this._corner[0] = new Coordinate(this._maxx, this._maxy)\n    this._corner[1] = new Coordinate(this._minx, this._maxy)\n    this._corner[2] = new Coordinate(this._minx, this._miny)\n    this._corner[3] = new Coordinate(this._maxx, this._miny)\n  }\n  intersects(p0, p1) {\n    if (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1)\n    this.copyScaled(p0, this._p0Scaled)\n    this.copyScaled(p1, this._p1Scaled)\n    return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n  }\n  scale(val) {\n    return Math.round(val * this._scaleFactor)\n  }\n  getCoordinate() {\n    return this._originalPt\n  }\n  copyScaled(p, pScaled) {\n    pScaled.x = this.scale(p.x)\n    pScaled.y = this.scale(p.y)\n  }\n  getSafeEnvelope() {\n    if (this._safeEnv === null) {\n      const safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor\n      this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance)\n    }\n    return this._safeEnv\n  }\n  intersectsPixelClosure(p0, p1) {\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.hasIntersection()) return true\n    return false\n  }\n  intersectsToleranceSquare(p0, p1) {\n    let intersectsLeft = false\n    let intersectsBottom = false\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.isProper()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsLeft = true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsBottom = true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.isProper()) return true\n    if (intersectsLeft && intersectsBottom) return true\n    if (p0.equals(this._pt)) return true\n    if (p1.equals(this._pt)) return true\n    return false\n  }\n  addSnappedNode(segStr, segIndex) {\n    const p0 = segStr.getCoordinate(segIndex)\n    const p1 = segStr.getCoordinate(segIndex + 1)\n    if (this.intersects(p0, p1)) {\n      segStr.addIntersection(this.getCoordinate(), segIndex)\n      return true\n    }\n    return false\n  }\n}\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75\n","import LineSegment from '../../geom/LineSegment.js'\nexport default class MonotoneChainSelectAction {\n  constructor() {\n    MonotoneChainSelectAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.selectedSegment = new LineSegment()\n  }\n  select() {\n    if (arguments.length === 1) {\n      const seg = arguments[0]\n    } else if (arguments.length === 2) {\n      const mc = arguments[0], startIndex = arguments[1]\n      mc.getLineSegment(startIndex, this.selectedSegment)\n      this.select(this.selectedSegment)\n    }\n  }\n}\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction.js'\nimport MonotoneChain from '../../index/chain/MonotoneChain.js'\nimport ItemVisitor from '../../index/ItemVisitor.js'\nexport default class MCIndexPointSnapper {\n  constructor() {\n    MCIndexPointSnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._index = null\n    const index = arguments[0]\n    this._index = index\n  }\n  snap() {\n    if (arguments.length === 1) {\n      const hotPixel = arguments[0]\n      return this.snap(hotPixel, null, -1)\n    } else if (arguments.length === 3) {\n      const hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2]\n      const pixelEnv = hotPixel.getSafeEnvelope()\n      const hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex)\n      this._index.query(pixelEnv, new (class {\n        get interfaces_() {\n          return [ItemVisitor]\n        }\n        visitItem(item) {\n          const testChain = item\n          testChain.select(pixelEnv, hotPixelSnapAction)\n        }\n      })())\n      return hotPixelSnapAction.isNodeAdded()\n    }\n  }\n}\nclass HotPixelSnapAction extends MonotoneChainSelectAction {\n  constructor() {\n    super()\n    HotPixelSnapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hotPixel = null\n    this._parentEdge = null\n    this._hotPixelVertexIndex = null\n    this._isNodeAdded = false\n    const hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2]\n    this._hotPixel = hotPixel\n    this._parentEdge = parentEdge\n    this._hotPixelVertexIndex = hotPixelVertexIndex\n  }\n  isNodeAdded() {\n    return this._isNodeAdded\n  }\n  select() {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain)) {\n      const mc = arguments[0], startIndex = arguments[1]\n      const ss = mc.getContext()\n      if (this._parentEdge === ss) \n        if (startIndex === this._hotPixelVertexIndex || startIndex + 1 === this._hotPixelVertexIndex) return null\n      \n      this._isNodeAdded |= this._hotPixel.addSnappedNode(ss, startIndex)\n    } else {\n      return super.select.apply(this, arguments)\n    }\n  }\n}\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction\n","import SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class InteriorIntersectionFinderAdder {\n  constructor() {\n    InteriorIntersectionFinderAdder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = null\n    this._interiorIntersections = null\n    const li = arguments[0]\n    this._li = li\n    this._interiorIntersections = new ArrayList()\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) \n      if (this._li.isInteriorIntersection()) {\n        for (let intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) \n          this._interiorIntersections.add(this._li.getIntersection(intIndex))\n        \n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n      }\n    \n  }\n  isDone() {\n    return false\n  }\n  getInteriorIntersections() {\n    return this._interiorIntersections\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import NodingValidator from '../NodingValidator.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport Noder from '../Noder.js'\nimport MCIndexNoder from '../MCIndexNoder.js'\nimport NodedSegmentString from '../NodedSegmentString.js'\nimport HotPixel from './HotPixel.js'\nimport Exception from '../../../../../java/lang/Exception.js'\nimport MCIndexPointSnapper from './MCIndexPointSnapper.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder.js'\nexport default class MCIndexSnapRounder {\n  constructor() {\n    MCIndexSnapRounder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pm = null\n    this._li = null\n    this._scaleFactor = null\n    this._noder = null\n    this._pointSnapper = null\n    this._nodedSegStrings = null\n    const pm = arguments[0]\n    this._pm = pm\n    this._li = new RobustLineIntersector()\n    this._li.setPrecisionModel(pm)\n    this._scaleFactor = pm.getScale()\n  }\n  checkCorrectness(inputSegmentStrings) {\n    const resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings)\n    const nv = new NodingValidator(resultSegStrings)\n    try {\n      nv.checkValid()\n    } catch (ex) {\n      if (ex instanceof Exception) \n        ex.printStackTrace()\n      else throw ex\n    } finally {}\n  }\n  getNodedSubstrings() {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n  snapRound(segStrings, li) {\n    const intersections = this.findInteriorIntersections(segStrings, li)\n    this.computeIntersectionSnaps(intersections)\n    this.computeVertexSnaps(segStrings)\n  }\n  findInteriorIntersections(segStrings, li) {\n    const intFinderAdder = new InteriorIntersectionFinderAdder(li)\n    this._noder.setSegmentIntersector(intFinderAdder)\n    this._noder.computeNodes(segStrings)\n    return intFinderAdder.getInteriorIntersections()\n  }\n  computeVertexSnaps() {\n    if (hasInterface(arguments[0], Collection)) {\n      const edges = arguments[0]\n      for (let i0 = edges.iterator(); i0.hasNext(); ) {\n        const edge0 = i0.next()\n        this.computeVertexSnaps(edge0)\n      }\n    } else if (arguments[0] instanceof NodedSegmentString) {\n      const e = arguments[0]\n      const pts0 = e.getCoordinates()\n      for (let i = 0; i < pts0.length; i++) {\n        const hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li)\n        const isNodeAdded = this._pointSnapper.snap(hotPixel, e, i)\n        if (isNodeAdded) \n          e.addIntersection(pts0[i], i)\n        \n      }\n    }\n  }\n  computeNodes(inputSegmentStrings) {\n    this._nodedSegStrings = inputSegmentStrings\n    this._noder = new MCIndexNoder()\n    this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex())\n    this.snapRound(inputSegmentStrings, this._li)\n  }\n  computeIntersectionSnaps(snapPts) {\n    for (let it = snapPts.iterator(); it.hasNext(); ) {\n      const snapPt = it.next()\n      const hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li)\n      this._pointSnapper.snap(hotPixel)\n    }\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import BufferParameters from './BufferParameters.js'\nimport Geometry from '../../geom/Geometry.js'\nimport BufferBuilder from './BufferBuilder.js'\nimport ScaledNoder from '../../noding/ScaledNoder.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport MathUtil from '../../math/MathUtil.js'\nimport PrecisionModel from '../../geom/PrecisionModel.js'\nimport RuntimeException from '../../../../../java/lang/RuntimeException.js'\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder.js'\nexport default class BufferOp {\n  constructor() {\n    BufferOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._argGeom = null\n    this._distance = null\n    this._bufParams = new BufferParameters()\n    this._resultGeometry = null\n    this._saveException = null\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      this._argGeom = g\n    } else if (arguments.length === 2) {\n      const g = arguments[0], bufParams = arguments[1]\n      this._argGeom = g\n      this._bufParams = bufParams\n    }\n  }\n  static bufferOp() {\n    if (arguments.length === 2) {\n      const g = arguments[0], distance = arguments[1]\n      const gBuf = new BufferOp(g)\n      const geomBuf = gBuf.getResultGeometry(distance)\n      return geomBuf\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2]\n        const bufOp = new BufferOp(g)\n        bufOp.setQuadrantSegments(quadrantSegments)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0], distance = arguments[1], params = arguments[2]\n        const bufOp = new BufferOp(g, params)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      }\n    } else if (arguments.length === 4) {\n      const g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3]\n      const bufOp = new BufferOp(g)\n      bufOp.setQuadrantSegments(quadrantSegments)\n      bufOp.setEndCapStyle(endCapStyle)\n      const geomBuf = bufOp.getResultGeometry(distance)\n      return geomBuf\n    }\n  }\n  static precisionScaleFactor(g, distance, maxPrecisionDigits) {\n    const env = g.getEnvelopeInternal()\n    const envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()))\n    const expandByDistance = distance > 0.0 ? distance : 0.0\n    const bufEnvMax = envMax + 2 * expandByDistance\n    const bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0)\n    const minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits\n    const scaleFactor = Math.pow(10.0, minUnitLog10)\n    return scaleFactor\n  }\n  bufferFixedPrecision(fixedPM) {\n    const noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale())\n    const bufBuilder = new BufferBuilder(this._bufParams)\n    bufBuilder.setWorkingPrecisionModel(fixedPM)\n    bufBuilder.setNoder(noder)\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n  }\n  bufferReducedPrecision() {\n    if (arguments.length === 0) {\n      for (let precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n        try {\n          this.bufferReducedPrecision(precDigits)\n        } catch (ex) {\n          if (ex instanceof TopologyException) \n            this._saveException = ex\n          else throw ex\n        } finally {}\n        if (this._resultGeometry !== null) return null\n      }\n      throw this._saveException\n    } else if (arguments.length === 1) {\n      const precisionDigits = arguments[0]\n      const sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits)\n      const fixedPM = new PrecisionModel(sizeBasedScaleFactor)\n      this.bufferFixedPrecision(fixedPM)\n    }\n  }\n  computeGeometry() {\n    this.bufferOriginalPrecision()\n    if (this._resultGeometry !== null) return null\n    const argPM = this._argGeom.getFactory().getPrecisionModel()\n    if (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision()\n  }\n  setQuadrantSegments(quadrantSegments) {\n    this._bufParams.setQuadrantSegments(quadrantSegments)\n  }\n  bufferOriginalPrecision() {\n    try {\n      const bufBuilder = new BufferBuilder(this._bufParams)\n      this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        this._saveException = ex\n      else throw ex\n    } finally {}\n  }\n  getResultGeometry(distance) {\n    this._distance = distance\n    this.computeGeometry()\n    return this._resultGeometry\n  }\n  setEndCapStyle(endCapStyle) {\n    this._bufParams.setEndCapStyle(endCapStyle)\n  }\n}\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE\nBufferOp.MAX_PRECISION_DIGITS = 12\n","export default class BoundaryNodeRule {\n  isInBoundary(boundaryCount) {}\n}\nclass Mod2BoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount % 2 === 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass EndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount > 0\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass MultiValentEndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount > 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass MonoValentEndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount === 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule()\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule()\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE\n","import Location from '../geom/Location.js'\nimport LineString from '../geom/LineString.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Point from '../geom/Point.js'\nimport Polygon from '../geom/Polygon.js'\nimport PointLocation from './PointLocation.js'\nimport BoundaryNodeRule from './BoundaryNodeRule.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nexport default class PointLocator {\n  constructor() {\n    PointLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE\n    this._isIn = null\n    this._numBoundaries = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const boundaryRule = arguments[0]\n      if (boundaryRule === null) throw new IllegalArgumentException('Rule must be non-null')\n      this._boundaryRule = boundaryRule\n    }\n  }\n  locateInPolygonRing(p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n  intersects(p, geom) {\n    return this.locate(p, geom) !== Location.EXTERIOR\n  }\n  updateLocationInfo(loc) {\n    if (loc === Location.INTERIOR) this._isIn = true\n    if (loc === Location.BOUNDARY) this._numBoundaries++\n  }\n  computeLocation(p, geom) {\n    if (geom instanceof Point) \n      this.updateLocationInfo(this.locateOnPoint(p, geom))\n    \n    if (geom instanceof LineString) {\n      this.updateLocationInfo(this.locateOnLineString(p, geom))\n    } else if (geom instanceof Polygon) {\n      this.updateLocationInfo(this.locateInPolygon(p, geom))\n    } else if (geom instanceof MultiLineString) {\n      const ml = geom\n      for (let i = 0; i < ml.getNumGeometries(); i++) {\n        const l = ml.getGeometryN(i)\n        this.updateLocationInfo(this.locateOnLineString(p, l))\n      }\n    } else if (geom instanceof MultiPolygon) {\n      const mpoly = geom\n      for (let i = 0; i < mpoly.getNumGeometries(); i++) {\n        const poly = mpoly.getGeometryN(i)\n        this.updateLocationInfo(this.locateInPolygon(p, poly))\n      }\n    } else if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) this.computeLocation(p, g2)\n      }\n    }\n  }\n  locateOnPoint(p, pt) {\n    const ptCoord = pt.getCoordinate()\n    if (ptCoord.equals2D(p)) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n  locateOnLineString(p, l) {\n    if (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    const seq = l.getCoordinateSequence()\n    if (!l.isClosed()) \n      if (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) \n        return Location.BOUNDARY\n      \n    \n    if (PointLocation.isOnLine(p, seq)) \n      return Location.INTERIOR\n    \n    return Location.EXTERIOR\n  }\n  locateInPolygon(p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = this.locateInPolygonRing(p, shell)\n    if (shellLoc === Location.EXTERIOR) return Location.EXTERIOR\n    if (shellLoc === Location.BOUNDARY) return Location.BOUNDARY\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = this.locateInPolygonRing(p, hole)\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n    }\n    return Location.INTERIOR\n  }\n  locate(p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    if (geom instanceof LineString) \n      return this.locateOnLineString(p, geom)\n    else if (geom instanceof Polygon) \n      return this.locateInPolygon(p, geom)\n    \n    this._isIn = false\n    this._numBoundaries = 0\n    this.computeLocation(p, geom)\n    if (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY\n    if (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence.js'\nimport Octant from './Octant.js'\nimport SegmentString from './SegmentString.js'\nexport default class BasicSegmentString {\n  constructor() {\n    BasicSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._data = null\n    const pts = arguments[0], data = arguments[1]\n    this._pts = pts\n    this._data = data\n  }\n  getCoordinates() {\n    return this._pts\n  }\n  size() {\n    return this._pts.length\n  }\n  getCoordinate(i) {\n    return this._pts[i]\n  }\n  isClosed() {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n  getSegmentOctant(index) {\n    if (index === this._pts.length - 1) return -1\n    return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n  setData(data) {\n    this._data = data\n  }\n  getData() {\n    return this._data\n  }\n  toString() {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n  get interfaces_() {\n    return [SegmentString]\n  }\n}\n","import SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class NodingIntersectionFinder {\n  constructor() {\n    NodingIntersectionFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._findAllIntersections = false\n    this._isCheckEndSegmentsOnly = false\n    this._keepIntersections = true\n    this._isInteriorIntersectionsOnly = false\n    this._li = null\n    this._interiorIntersection = null\n    this._intSegments = null\n    this._intersections = new ArrayList()\n    this._intersectionCount = 0\n    const li = arguments[0]\n    this._li = li\n    this._interiorIntersection = null\n  }\n  static createAllIntersectionsFinder(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    return finder\n  }\n  static isInteriorVertexIntersection() {\n    if (arguments.length === 4) {\n      const p0 = arguments[0], p1 = arguments[1], isEnd0 = arguments[2], isEnd1 = arguments[3]\n      if (isEnd0 && isEnd1) return false\n      if (p0.equals2D(p1)) \n        return true\n      \n      return false\n    } else if (arguments.length === 8) {\n      const p00 = arguments[0], p01 = arguments[1], p10 = arguments[2], p11 = arguments[3], isEnd00 = arguments[4], isEnd01 = arguments[5], isEnd10 = arguments[6], isEnd11 = arguments[7]\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p00, p10, isEnd00, isEnd10)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p00, p11, isEnd00, isEnd11)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p01, p10, isEnd01, isEnd10)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p01, p11, isEnd01, isEnd11)) return true\n      return false\n    }\n  }\n  static createInteriorIntersectionCounter(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setInteriorIntersectionsOnly(true)\n    finder.setFindAllIntersections(true)\n    finder.setKeepIntersections(false)\n    return finder\n  }\n  static createIntersectionCounter(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    finder.setKeepIntersections(false)\n    return finder\n  }\n  static isEndSegment(segStr, index) {\n    if (index === 0) return true\n    if (index >= segStr.size() - 2) return true\n    return false\n  }\n  static createAnyIntersectionFinder(li) {\n    return new NodingIntersectionFinder(li)\n  }\n  static createInteriorIntersectionsFinder(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    finder.setInteriorIntersectionsOnly(true)\n    return finder\n  }\n  setCheckEndSegmentsOnly(isCheckEndSegmentsOnly) {\n    this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly\n  }\n  getIntersectionSegments() {\n    return this._intSegments\n  }\n  count() {\n    return this._intersectionCount\n  }\n  getIntersections() {\n    return this._intersections\n  }\n  setFindAllIntersections(findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n  setKeepIntersections(keepIntersections) {\n    this._keepIntersections = keepIntersections\n  }\n  getIntersection() {\n    return this._interiorIntersection\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (!this._findAllIntersections && this.hasIntersection()) return null\n    const isSameSegString = e0 === e1\n    const isSameSegment = isSameSegString && segIndex0 === segIndex1\n    if (isSameSegment) return null\n    if (this._isCheckEndSegmentsOnly) {\n      const isEndSegPresent = NodingIntersectionFinder.isEndSegment(e0, segIndex0) || NodingIntersectionFinder.isEndSegment(e1, segIndex1)\n      if (!isEndSegPresent) return null\n    }\n    const p00 = e0.getCoordinate(segIndex0)\n    const p01 = e0.getCoordinate(segIndex0 + 1)\n    const p10 = e1.getCoordinate(segIndex1)\n    const p11 = e1.getCoordinate(segIndex1 + 1)\n    const isEnd00 = segIndex0 === 0\n    const isEnd01 = segIndex0 + 2 === e0.size()\n    const isEnd10 = segIndex1 === 0\n    const isEnd11 = segIndex1 + 2 === e1.size()\n    this._li.computeIntersection(p00, p01, p10, p11)\n    const isInteriorInt = this._li.hasIntersection() && this._li.isInteriorIntersection()\n    let isInteriorVertexInt = false\n    if (!this._isInteriorIntersectionsOnly) {\n      const isAdjacentSegment = isSameSegString && Math.abs(segIndex1 - segIndex0) <= 1\n      isInteriorVertexInt = !isAdjacentSegment && NodingIntersectionFinder.isInteriorVertexIntersection(p00, p01, p10, p11, isEnd00, isEnd01, isEnd10, isEnd11)\n    }\n    if (isInteriorInt || isInteriorVertexInt) {\n      this._intSegments = new Array(4).fill(null)\n      this._intSegments[0] = p00\n      this._intSegments[1] = p01\n      this._intSegments[2] = p10\n      this._intSegments[3] = p11\n      this._interiorIntersection = this._li.getIntersection(0)\n      if (this._keepIntersections) this._intersections.add(this._interiorIntersection)\n      this._intersectionCount++\n    }\n  }\n  hasIntersection() {\n    return this._interiorIntersection !== null\n  }\n  isDone() {\n    if (this._findAllIntersections) return false\n    return this._interiorIntersection !== null\n  }\n  setInteriorIntersectionsOnly(isInteriorIntersectionsOnly) {\n    this._isInteriorIntersectionsOnly = isInteriorIntersectionsOnly\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport MCIndexNoder from './MCIndexNoder.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport NodingIntersectionFinder from './NodingIntersectionFinder.js'\nexport default class FastNodingValidator {\n  constructor() {\n    FastNodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._segStrings = null\n    this._findAllIntersections = false\n    this._segInt = null\n    this._isValid = true\n    const segStrings = arguments[0]\n    this._segStrings = segStrings\n  }\n  static computeIntersections(segStrings) {\n    const nv = new FastNodingValidator(segStrings)\n    nv.setFindAllIntersections(true)\n    nv.isValid()\n    return nv.getIntersections()\n  }\n  execute() {\n    if (this._segInt !== null) return null\n    this.checkInteriorIntersections()\n  }\n  getIntersections() {\n    return this._segInt.getIntersections()\n  }\n  isValid() {\n    this.execute()\n    return this._isValid\n  }\n  setFindAllIntersections(findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n  checkInteriorIntersections() {\n    this._isValid = true\n    this._segInt = new NodingIntersectionFinder(this._li)\n    this._segInt.setFindAllIntersections(this._findAllIntersections)\n    const noder = new MCIndexNoder()\n    noder.setSegmentIntersector(this._segInt)\n    noder.computeNodes(this._segStrings)\n    if (this._segInt.hasIntersection()) {\n      this._isValid = false\n      return null\n    }\n  }\n  checkValid() {\n    this.execute()\n    if (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getIntersection())\n  }\n  getErrorMessage() {\n    if (this._isValid) return 'no intersections found'\n    const intSegs = this._segInt.getIntersectionSegments()\n    return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n  }\n}\n","import BasicSegmentString from '../noding/BasicSegmentString.js'\nimport FastNodingValidator from '../noding/FastNodingValidator.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class EdgeNodingValidator {\n  constructor() {\n    EdgeNodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nv = null\n    const edges = arguments[0]\n    this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges))\n  }\n  static toSegmentStrings(edges) {\n    const segStrings = new ArrayList()\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      segStrings.add(new BasicSegmentString(e.getCoordinates(), e))\n    }\n    return segStrings\n  }\n  static checkValid(edges) {\n    const validator = new EdgeNodingValidator(edges)\n    validator.checkValid()\n  }\n  checkValid() {\n    this._nv.checkValid()\n  }\n}\n","import GeometryFactory from '../GeometryFactory.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class GeometryCollectionMapper {\n  constructor() {\n    GeometryCollectionMapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._mapOp = null\n    const mapOp = arguments[0]\n    this._mapOp = mapOp\n  }\n  static map(gc, op) {\n    const mapper = new GeometryCollectionMapper(op)\n    return mapper.map(gc)\n  }\n  map(gc) {\n    const mapped = new ArrayList()\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = this._mapOp.map(gc.getGeometryN(i))\n      if (!g.isEmpty()) mapped.add(g)\n    }\n    return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport OverlayOp from './OverlayOp.js'\nexport default class LineBuilder {\n  constructor() {\n    LineBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._op = null\n    this._geometryFactory = null\n    this._ptLocator = null\n    this._lineEdgesList = new ArrayList()\n    this._resultLineList = new ArrayList()\n    const op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2]\n    this._op = op\n    this._geometryFactory = geometryFactory\n    this._ptLocator = ptLocator\n  }\n  collectLines(opCode) {\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      this.collectLineEdge(de, opCode, this._lineEdgesList)\n      this.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList)\n    }\n  }\n  labelIsolatedLine(e, targetIndex) {\n    const loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex))\n    e.getLabel().setLocation(targetIndex, loc)\n  }\n  build(opCode) {\n    this.findCoveredLineEdges()\n    this.collectLines(opCode)\n    this.buildLines(opCode)\n    return this._resultLineList\n  }\n  collectLineEdge(de, opCode, edges) {\n    const label = de.getLabel()\n    const e = de.getEdge()\n    if (de.isLineEdge()) \n      if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n        edges.add(e)\n        de.setVisitedEdge(true)\n      }\n    \n  }\n  findCoveredLineEdges() {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().findCoveredLineEdges()\n    }\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const e = de.getEdge()\n      if (de.isLineEdge() && !e.isCoveredSet()) {\n        const isCovered = this._op.isCoveredByA(de.getCoordinate())\n        e.setCovered(isCovered)\n      }\n    }\n  }\n  labelIsolatedLines(edgesList) {\n    for (let it = edgesList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (e.isIsolated()) \n        if (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1)\n      \n    }\n  }\n  buildLines(opCode) {\n    for (let it = this._lineEdgesList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const line = this._geometryFactory.createLineString(e.getCoordinates())\n      this._resultLineList.add(line)\n      e.setInResult(true)\n    }\n  }\n  collectBoundaryTouchEdge(de, opCode, edges) {\n    const label = de.getLabel()\n    if (de.isLineEdge()) return null\n    if (de.isVisited()) return null\n    if (de.isInteriorAreaEdge()) return null\n    if (de.getEdge().isInResult()) return null\n    Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult())\n    if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n      edges.add(de.getEdge())\n      de.setVisitedEdge(true)\n    }\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nimport OverlayOp from './OverlayOp.js'\nexport default class PointBuilder {\n  constructor() {\n    PointBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._op = null\n    this._geometryFactory = null\n    this._resultPointList = new ArrayList()\n    const op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2]\n    this._op = op\n    this._geometryFactory = geometryFactory\n  }\n  filterCoveredNodeToPoint(n) {\n    const coord = n.getCoordinate()\n    if (!this._op.isCoveredByLA(coord)) {\n      const pt = this._geometryFactory.createPoint(coord)\n      this._resultPointList.add(pt)\n    }\n  }\n  extractNonCoveredResultNodes(opCode) {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n      const n = nodeit.next()\n      if (n.isInResult()) continue\n      if (n.isIncidentEdgeInResult()) continue\n      if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n        const label = n.getLabel()\n        if (OverlayOp.isResultOfOp(label, opCode)) \n          this.filterCoveredNodeToPoint(n)\n        \n      }\n    }\n  }\n  build(opCode) {\n    this.extractNonCoveredResultNodes(opCode)\n    return this._resultPointList\n  }\n}\n","import LineString from '../LineString.js'\nimport GeometryFactory from '../GeometryFactory.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Point from '../Point.js'\nimport Polygon from '../Polygon.js'\nimport MultiPoint from '../MultiPoint.js'\nimport LinearRing from '../LinearRing.js'\nimport MultiPolygon from '../MultiPolygon.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport MultiLineString from '../MultiLineString.js'\nexport default class GeometryTransformer {\n  constructor() {\n    GeometryTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._factory = null\n    this._pruneEmptyGeometry = true\n    this._preserveGeometryCollectionType = true\n    this._preserveCollections = false\n    this._preserveType = false\n  }\n  transformPoint(geom, parent) {\n    return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n  transformPolygon(geom, parent) {\n    let isAllValidLinearRings = true\n    const shell = this.transformLinearRing(geom.getExteriorRing(), geom)\n    if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false\n    const holes = new ArrayList()\n    for (let i = 0; i < geom.getNumInteriorRing(); i++) {\n      const hole = this.transformLinearRing(geom.getInteriorRingN(i), geom)\n      if (hole === null || hole.isEmpty()) \n        continue\n      \n      if (!(hole instanceof LinearRing)) isAllValidLinearRings = false\n      holes.add(hole)\n    }\n    if (isAllValidLinearRings) {\n      return this._factory.createPolygon(shell, holes.toArray([]))\n    } else {\n      const components = new ArrayList()\n      if (shell !== null) components.add(shell)\n      components.addAll(holes)\n      return this._factory.buildGeometry(components)\n    }\n  }\n  createCoordinateSequence(coords) {\n    return this._factory.getCoordinateSequenceFactory().create(coords)\n  }\n  getInputGeometry() {\n    return this._inputGeom\n  }\n  transformMultiLineString(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformLineString(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transformCoordinates(coords, parent) {\n    return this.copy(coords)\n  }\n  transformLineString(geom, parent) {\n    return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n  transformMultiPoint(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPoint(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transformMultiPolygon(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPolygon(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  copy(seq) {\n    return seq.copy()\n  }\n  transformGeometryCollection(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transform(geom.getGeometryN(i))\n      if (transformGeom === null) continue\n      if (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    if (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList))\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transform(inputGeom) {\n    this._inputGeom = inputGeom\n    this._factory = inputGeom.getFactory()\n    if (inputGeom instanceof Point) return this.transformPoint(inputGeom, null)\n    if (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null)\n    if (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null)\n    if (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null)\n    if (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null)\n    if (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null)\n    if (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null)\n    if (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null)\n    throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getGeometryType())\n  }\n  transformLinearRing(geom, parent) {\n    const seq = this.transformCoordinates(geom.getCoordinateSequence(), geom)\n    if (seq === null) return this._factory.createLinearRing(null)\n    const seqSize = seq.size()\n    if (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq)\n    return this._factory.createLinearRing(seq)\n  }\n}\n","import LineString from '../../../geom/LineString.js'\nimport CoordinateList from '../../../geom/CoordinateList.js'\nimport Coordinate from '../../../geom/Coordinate.js'\nimport Double from '../../../../../../java/lang/Double.js'\nimport LineSegment from '../../../geom/LineSegment.js'\nexport default class LineStringSnapper {\n  constructor() {\n    LineStringSnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._snapTolerance = 0.0\n    this._srcPts = null\n    this._seg = new LineSegment()\n    this._allowSnappingToSourceVertices = false\n    this._isClosed = false\n    if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n      const srcLine = arguments[0], snapTolerance = arguments[1]\n      LineStringSnapper.constructor_.call(this, srcLine.getCoordinates(), snapTolerance)\n    } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n      const srcPts = arguments[0], snapTolerance = arguments[1]\n      this._srcPts = srcPts\n      this._isClosed = LineStringSnapper.isClosed(srcPts)\n      this._snapTolerance = snapTolerance\n    }\n  }\n  static isClosed(pts) {\n    if (pts.length <= 1) return false\n    return pts[0].equals2D(pts[pts.length - 1])\n  }\n  snapVertices(srcCoords, snapPts) {\n    const end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size()\n    for (let i = 0; i < end; i++) {\n      const srcPt = srcCoords.get(i)\n      const snapVert = this.findSnapForVertex(srcPt, snapPts)\n      if (snapVert !== null) {\n        srcCoords.set(i, new Coordinate(snapVert))\n        if (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert))\n      }\n    }\n  }\n  findSnapForVertex(pt, snapPts) {\n    for (let i = 0; i < snapPts.length; i++) {\n      if (pt.equals2D(snapPts[i])) return null\n      if (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i]\n    }\n    return null\n  }\n  snapTo(snapPts) {\n    const coordList = new CoordinateList(this._srcPts)\n    this.snapVertices(coordList, snapPts)\n    this.snapSegments(coordList, snapPts)\n    const newPts = coordList.toCoordinateArray()\n    return newPts\n  }\n  snapSegments(srcCoords, snapPts) {\n    if (snapPts.length === 0) return null\n    let distinctPtCount = snapPts.length\n    if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1\n    for (let i = 0; i < distinctPtCount; i++) {\n      const snapPt = snapPts[i]\n      const index = this.findSegmentIndexToSnap(snapPt, srcCoords)\n      if (index >= 0) \n        srcCoords.add(index + 1, new Coordinate(snapPt), false)\n      \n    }\n  }\n  findSegmentIndexToSnap(snapPt, srcCoords) {\n    let minDist = Double.MAX_VALUE\n    let snapIndex = -1\n    for (let i = 0; i < srcCoords.size() - 1; i++) {\n      this._seg.p0 = srcCoords.get(i)\n      this._seg.p1 = srcCoords.get(i + 1)\n      if (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) \n        if (this._allowSnappingToSourceVertices) continue; else return -1\n      \n      const dist = this._seg.distance(snapPt)\n      if (dist < this._snapTolerance && dist < minDist) {\n        minDist = dist\n        snapIndex = i\n      }\n    }\n    return snapIndex\n  }\n  setAllowSnappingToSourceVertices(allowSnappingToSourceVertices) {\n    this._allowSnappingToSourceVertices = allowSnappingToSourceVertices\n  }\n}\n","import TreeSet from '../../../../../../java/util/TreeSet.js'\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer.js'\nimport hasInterface from '../../../../../../hasInterface.js'\nimport Double from '../../../../../../java/lang/Double.js'\nimport LineStringSnapper from './LineStringSnapper.js'\nimport PrecisionModel from '../../../geom/PrecisionModel.js'\nimport Polygonal from '../../../geom/Polygonal.js'\nexport default class GeometrySnapper {\n  constructor() {\n    GeometrySnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._srcGeom = null\n    const srcGeom = arguments[0]\n    this._srcGeom = srcGeom\n  }\n  static snap(g0, g1, snapTolerance) {\n    const snapGeom = new Array(2).fill(null)\n    const snapper0 = new GeometrySnapper(g0)\n    snapGeom[0] = snapper0.snapTo(g1, snapTolerance)\n    const snapper1 = new GeometrySnapper(g1)\n    snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance)\n    return snapGeom\n  }\n  static computeOverlaySnapTolerance() {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      let snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g)\n      const pm = g.getPrecisionModel()\n      if (pm.getType() === PrecisionModel.FIXED) {\n        const fixedSnapTol = 1 / pm.getScale() * 2 / 1.415\n        if (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol\n      }\n      return snapTolerance\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n    }\n  }\n  static computeSizeBasedSnapTolerance(g) {\n    const env = g.getEnvelopeInternal()\n    const minDimension = Math.min(env.getHeight(), env.getWidth())\n    const snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR\n    return snapTol\n  }\n  static snapToSelf(geom, snapTolerance, cleanResult) {\n    const snapper0 = new GeometrySnapper(geom)\n    return snapper0.snapToSelf(snapTolerance, cleanResult)\n  }\n  snapTo(snapGeom, snapTolerance) {\n    const snapPts = this.extractTargetCoordinates(snapGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts)\n    return snapTrans.transform(this._srcGeom)\n  }\n  snapToSelf(snapTolerance, cleanResult) {\n    const snapPts = this.extractTargetCoordinates(this._srcGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts, true)\n    const snappedGeom = snapTrans.transform(this._srcGeom)\n    let result = snappedGeom\n    if (cleanResult && hasInterface(result, Polygonal)) \n      result = snappedGeom.buffer(0)\n    \n    return result\n  }\n  computeSnapTolerance(ringPts) {\n    const minSegLen = this.computeMinimumSegmentLength(ringPts)\n    const snapTol = minSegLen / 10\n    return snapTol\n  }\n  extractTargetCoordinates(g) {\n    const ptSet = new TreeSet()\n    const pts = g.getCoordinates()\n    for (let i = 0; i < pts.length; i++) \n      ptSet.add(pts[i])\n    \n    return ptSet.toArray(new Array(0).fill(null))\n  }\n  computeMinimumSegmentLength(pts) {\n    let minSegLen = Double.MAX_VALUE\n    for (let i = 0; i < pts.length - 1; i++) {\n      const segLen = pts[i].distance(pts[i + 1])\n      if (segLen < minSegLen) minSegLen = segLen\n    }\n    return minSegLen\n  }\n}\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9\nclass SnapTransformer extends GeometryTransformer {\n  constructor() {\n    super()\n    SnapTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._snapTolerance = null\n    this._snapPts = null\n    this._isSelfSnap = false\n    if (arguments.length === 2) {\n      const snapTolerance = arguments[0], snapPts = arguments[1]\n      this._snapTolerance = snapTolerance\n      this._snapPts = snapPts\n    } else if (arguments.length === 3) {\n      const snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2]\n      this._snapTolerance = snapTolerance\n      this._snapPts = snapPts\n      this._isSelfSnap = isSelfSnap\n    }\n  }\n  snapLine(srcPts, snapPts) {\n    const snapper = new LineStringSnapper(srcPts, this._snapTolerance)\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap)\n    return snapper.snapTo(snapPts)\n  }\n  transformCoordinates(coords, parent) {\n    const srcPts = coords.toCoordinateArray()\n    const newPts = this.snapLine(srcPts, this._snapPts)\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n}\n","import Double from '../../../../java/lang/Double.js'\nimport Long from '../../../../java/lang/Long.js'\nexport default class CommonBits {\n  constructor() {\n    this._isFirst = true\n    this._commonMantissaBitsCount = 53\n    this._commonBits = new Long()\n    this._commonSignExp = null\n  }\n\n  getCommon() {\n    return Double.longBitsToDouble(this._commonBits)\n  }\n\n  add(num) {\n    const numBits = Double.doubleToLongBits(num)\n    if (this._isFirst) {\n      this._commonBits = numBits\n      this._commonSignExp = CommonBits.signExpBits(this._commonBits)\n      this._isFirst = false\n      return null\n    }\n    const numSignExp = CommonBits.signExpBits(numBits)\n    if (numSignExp !== this._commonSignExp) {\n      this._commonBits.high = 0 | 0\n      this._commonBits.low = 0 | 0\n      return null\n    }\n    this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits)\n    this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount))\n  }\n\n  toString() {\n    if (arguments.length === 1) {\n      const bits = arguments[0]\n      const x = Double.longBitsToDouble(bits)\n      const numStr = Long.toBinaryString(bits)\n      const padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr\n      const bitStr = padStr.substring(padStr.length - 64)\n      const str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]'\n      return str\n    }\n  }\n\n  getClass() {\n    return CommonBits\n  }\n\n  get interfaces_() {\n    return []\n  }\n\n  static getBit(bits, i) {\n    const mask = (1 << (i % 32))\n    if (i < 32) return (bits.low & mask) !== 0 ? 1 : 0\n\n    return (bits.high & mask) !== 0 ? 1 : 0\n  }\n\n  static signExpBits(num) {\n    return num.high >>> 20\n  }\n\n  static zeroLowerBits(bits, nBits) {\n    let prop = 'low'\n    if (nBits > 32) {\n      bits.low = 0 | 0\n      nBits %= 32\n      prop = 'high'\n    }\n    if (nBits > 0) {\n      const mask = (nBits < 32) ? (~((1 << nBits) - 1)) : 0\n      bits[prop] &= mask\n    }\n    return bits\n  }\n\n  static numCommonMostSigMantissaBits(num1, num2) {\n    let count = 0\n    for (let i = 52; i >= 0; i--) {\n      if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count\n      count++\n    }\n    return 52\n  }\n}\n","import CommonBits from './CommonBits.js'\nimport CoordinateFilter from '../geom/CoordinateFilter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter.js'\nexport default class CommonBitsRemover {\n  constructor() {\n    CommonBitsRemover.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._commonCoord = null\n    this._ccFilter = new CommonCoordinateFilter()\n  }\n  addCommonBits(geom) {\n    const trans = new Translater(this._commonCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n  }\n  removeCommonBits(geom) {\n    if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom\n    const invCoord = new Coordinate(this._commonCoord)\n    invCoord.x = -invCoord.x\n    invCoord.y = -invCoord.y\n    const trans = new Translater(invCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n    return geom\n  }\n  getCommonCoordinate() {\n    return this._commonCoord\n  }\n  add(geom) {\n    geom.apply(this._ccFilter)\n    this._commonCoord = this._ccFilter.getCommonCoordinate()\n  }\n}\nclass CommonCoordinateFilter {\n  constructor() {\n    CommonCoordinateFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._commonBitsX = new CommonBits()\n    this._commonBitsY = new CommonBits()\n  }\n  filter(coord) {\n    this._commonBitsX.add(coord.x)\n    this._commonBitsY.add(coord.y)\n  }\n  getCommonCoordinate() {\n    return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\nclass Translater {\n  constructor() {\n    Translater.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.trans = null\n    const trans = arguments[0]\n    this.trans = trans\n  }\n  filter(seq, i) {\n    const xp = seq.getOrdinate(i, 0) + this.trans.x\n    const yp = seq.getOrdinate(i, 1) + this.trans.y\n    seq.setOrdinate(i, 0, xp)\n    seq.setOrdinate(i, 1, yp)\n  }\n  isDone() {\n    return false\n  }\n  isGeometryChanged() {\n    return true\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFilter]\n  }\n}\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter\nCommonBitsRemover.Translater = Translater\n","import GeometrySnapper from './GeometrySnapper.js'\nimport System from '../../../../../../java/lang/System.js'\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover.js'\nimport OverlayOp from '../OverlayOp.js'\nexport default class SnapOverlayOp {\n  constructor() {\n    SnapOverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = new Array(2).fill(null)\n    this._snapTolerance = null\n    this._cbr = null\n    const g1 = arguments[0], g2 = arguments[1]\n    this._geom[0] = g1\n    this._geom[1] = g2\n    this.computeSnapTolerance()\n  }\n  static overlayOp(g0, g1, opCode) {\n    const op = new SnapOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n  static union(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n  static intersection(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n  static symDifference(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n  static difference(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n  selfSnap(geom) {\n    const snapper0 = new GeometrySnapper(geom)\n    const snapGeom = snapper0.snapTo(geom, this._snapTolerance)\n    return snapGeom\n  }\n  removeCommonBits(geom) {\n    this._cbr = new CommonBitsRemover()\n    this._cbr.add(geom[0])\n    this._cbr.add(geom[1])\n    const remGeom = new Array(2).fill(null)\n    remGeom[0] = this._cbr.removeCommonBits(geom[0].copy())\n    remGeom[1] = this._cbr.removeCommonBits(geom[1].copy())\n    return remGeom\n  }\n  prepareResult(geom) {\n    this._cbr.addCommonBits(geom)\n    return geom\n  }\n  getResultGeometry(opCode) {\n    const prepGeom = this.snap(this._geom)\n    const result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode)\n    return this.prepareResult(result)\n  }\n  checkValid(g) {\n    if (!g.isValid()) \n      System.out.println('Snapped geometry is invalid')\n    \n  }\n  computeSnapTolerance() {\n    this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1])\n  }\n  snap(geom) {\n    const remGeom = this.removeCommonBits(geom)\n    const snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance)\n    return snapGeom\n  }\n}\n","import SnapOverlayOp from './SnapOverlayOp.js'\nimport RuntimeException from '../../../../../../java/lang/RuntimeException.js'\nimport OverlayOp from '../OverlayOp.js'\nexport default class SnapIfNeededOverlayOp {\n  constructor() {\n    SnapIfNeededOverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = new Array(2).fill(null)\n    const g1 = arguments[0], g2 = arguments[1]\n    this._geom[0] = g1\n    this._geom[1] = g2\n  }\n  static overlayOp(g0, g1, opCode) {\n    const op = new SnapIfNeededOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n  static union(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n  static intersection(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n  static symDifference(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n  static difference(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n  getResultGeometry(opCode) {\n    let result = null\n    let isSuccess = false\n    let savedException = null\n    try {\n      result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      const isValid = true\n      if (isValid) isSuccess = true\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        savedException = ex\n      else throw ex\n    } finally {}\n    if (!isSuccess) \n      try {\n        result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      } catch (ex) {\n        if (ex instanceof RuntimeException) \n          throw savedException\n        else throw ex\n      } finally {}\n    \n    return result\n  }\n}\n","export default class MonotoneChain {\n  constructor() {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.mce = null\n    this.chainIndex = null\n    const mce = arguments[0], chainIndex = arguments[1]\n    this.mce = mce\n    this.chainIndex = chainIndex\n  }\n  computeIntersections(mc, si) {\n    this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si)\n  }\n}\n","import Comparable from '../../../../../java/lang/Comparable.js'\nexport default class SweepLineEvent {\n  constructor() {\n    SweepLineEvent.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._label = null\n    this._xValue = null\n    this._eventType = null\n    this._insertEvent = null\n    this._deleteEventIndex = null\n    this._obj = null\n    if (arguments.length === 2) {\n      const x = arguments[0], insertEvent = arguments[1]\n      this._eventType = SweepLineEvent.DELETE\n      this._xValue = x\n      this._insertEvent = insertEvent\n    } else if (arguments.length === 3) {\n      const label = arguments[0], x = arguments[1], obj = arguments[2]\n      this._eventType = SweepLineEvent.INSERT\n      this._label = label\n      this._xValue = x\n      this._obj = obj\n    }\n  }\n  isDelete() {\n    return this._eventType === SweepLineEvent.DELETE\n  }\n  setDeleteEventIndex(deleteEventIndex) {\n    this._deleteEventIndex = deleteEventIndex\n  }\n  getObject() {\n    return this._obj\n  }\n  compareTo(o) {\n    const pe = o\n    if (this._xValue < pe._xValue) return -1\n    if (this._xValue > pe._xValue) return 1\n    if (this._eventType < pe._eventType) return -1\n    if (this._eventType > pe._eventType) return 1\n    return 0\n  }\n  getInsertEvent() {\n    return this._insertEvent\n  }\n  isInsert() {\n    return this._eventType === SweepLineEvent.INSERT\n  }\n  isSameLabel(ev) {\n    if (this._label === null) return false\n    return this._label === ev._label\n  }\n  getDeleteEventIndex() {\n    return this._deleteEventIndex\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\nSweepLineEvent.INSERT = 1\nSweepLineEvent.DELETE = 2\n","export default class SegmentIntersector {\n  constructor() {\n    SegmentIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hasIntersection = false\n    this._hasProper = false\n    this._hasProperInterior = false\n    this._properIntersectionPoint = null\n    this._li = null\n    this._includeProper = null\n    this._recordIsolated = null\n    this._isSelfIntersection = null\n    this._numIntersections = 0\n    this.numTests = 0\n    this._bdyNodes = null\n    this._isDone = false\n    this._isDoneWhenProperInt = false\n    const li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2]\n    this._li = li\n    this._includeProper = includeProper\n    this._recordIsolated = recordIsolated\n  }\n  static isAdjacentSegments(i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n  isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) \n      if (this._li.getIntersectionNum() === 1) {\n        if (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.getNumPoints() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) \n            return true\n          \n        }\n      }\n    \n    return false\n  }\n  getProperIntersectionPoint() {\n    return this._properIntersectionPoint\n  }\n  setIsDoneIfProperInt(isDoneWhenProperInt) {\n    this._isDoneWhenProperInt = isDoneWhenProperInt\n  }\n  hasProperInteriorIntersection() {\n    return this._hasProperInterior\n  }\n  isBoundaryPointInternal(li, bdyNodes) {\n    for (let i = bdyNodes.iterator(); i.hasNext(); ) {\n      const node = i.next()\n      const pt = node.getCoordinate()\n      if (li.isIntersection(pt)) return true\n    }\n    return false\n  }\n  hasProperIntersection() {\n    return this._hasProper\n  }\n  hasIntersection() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return this._isDone\n  }\n  isBoundaryPoint(li, bdyNodes) {\n    if (bdyNodes === null) return false\n    if (this.isBoundaryPointInternal(li, bdyNodes[0])) return true\n    if (this.isBoundaryPointInternal(li, bdyNodes[1])) return true\n    return false\n  }\n  setBoundaryNodes(bdyNodes0, bdyNodes1) {\n    this._bdyNodes = new Array(2).fill(null)\n    this._bdyNodes[0] = bdyNodes0\n    this._bdyNodes[1] = bdyNodes1\n  }\n  addIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      if (this._recordIsolated) {\n        e0.setIsolated(false)\n        e1.setIsolated(false)\n      }\n      this._numIntersections++\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        if (this._includeProper || !this._li.isProper()) {\n          e0.addIntersections(this._li, segIndex0, 0)\n          e1.addIntersections(this._li, segIndex1, 1)\n        }\n        if (this._li.isProper()) {\n          this._properIntersectionPoint = this._li.getIntersection(0).copy()\n          this._hasProper = true\n          if (this._isDoneWhenProperInt) \n            this._isDone = true\n          \n          if (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true\n        }\n      }\n    }\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport MonotoneChain from './MonotoneChain.js'\nimport SweepLineEvent from './SweepLineEvent.js'\nimport EdgeSetIntersector from './EdgeSetIntersector.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport List from '../../../../../java/util/List.js'\nexport default class SimpleMCSweepLineIntersector extends EdgeSetIntersector {\n  constructor() {\n    super()\n    SimpleMCSweepLineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.events = new ArrayList()\n    this.nOverlaps = null\n  }\n  prepareEvents() {\n    Collections.sort(this.events)\n    for (let i = 0; i < this.events.size(); i++) {\n      const ev = this.events.get(i)\n      if (ev.isDelete()) \n        ev.getInsertEvent().setDeleteEventIndex(i)\n      \n    }\n  }\n  computeIntersections() {\n    if (arguments.length === 1) {\n      const si = arguments[0]\n      this.nOverlaps = 0\n      this.prepareEvents()\n      for (let i = 0; i < this.events.size(); i++) {\n        const ev = this.events.get(i)\n        if (ev.isInsert()) \n          this.processOverlaps(i, ev.getDeleteEventIndex(), ev, si)\n        \n        if (si.isDone()) \n          break\n        \n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        const edges0 = arguments[0], edges1 = arguments[1], si = arguments[2]\n        this.addEdges(edges0, edges0)\n        this.addEdges(edges1, edges1)\n        this.computeIntersections(si)\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n        const edges = arguments[0], si = arguments[1], testAllSegments = arguments[2]\n        if (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges)\n        this.computeIntersections(si)\n      }\n    }\n  }\n  addEdge(edge, edgeSet) {\n    const mce = edge.getMonotoneChainEdge()\n    const startIndex = mce.getStartIndexes()\n    for (let i = 0; i < startIndex.length - 1; i++) {\n      const mc = new MonotoneChain(mce, i)\n      const insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc)\n      this.events.add(insertEvent)\n      this.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent))\n    }\n  }\n  processOverlaps(start, end, ev0, si) {\n    const mc0 = ev0.getObject()\n    for (let i = start; i < end; i++) {\n      const ev1 = this.events.get(i)\n      if (ev1.isInsert()) {\n        const mc1 = ev1.getObject()\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si)\n          this.nOverlaps++\n        }\n      }\n    }\n  }\n  addEdges() {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      for (let i = edges.iterator(); i.hasNext(); ) {\n        const edge = i.next()\n        this.addEdge(edge, edge)\n      }\n    } else if (arguments.length === 2) {\n      const edges = arguments[0], edgeSet = arguments[1]\n      for (let i = edges.iterator(); i.hasNext(); ) {\n        const edge = i.next()\n        this.addEdge(edge, edgeSet)\n      }\n    }\n  }\n}\n","export default class EdgeSetIntersector {}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Comparator from '../../../../../java/util/Comparator.js'\nexport default class IntervalRTreeNode {\n  constructor() {\n    IntervalRTreeNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._min = Double.POSITIVE_INFINITY\n    this._max = Double.NEGATIVE_INFINITY\n  }\n  getMin() {\n    return this._min\n  }\n  intersects(queryMin, queryMax) {\n    if (this._min > queryMax || this._max < queryMin) return false\n    return true\n  }\n  getMax() {\n    return this._max\n  }\n  toString() {\n    return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n  }\n}\nclass NodeComparator {\n  compare(o1, o2) {\n    const n1 = o1\n    const n2 = o2\n    const mid1 = (n1._min + n1._max) / 2\n    const mid2 = (n2._min + n2._max) / 2\n    if (mid1 < mid2) return -1\n    if (mid1 > mid2) return 1\n    return 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nIntervalRTreeNode.NodeComparator = NodeComparator\n","import IntervalRTreeNode from './IntervalRTreeNode.js'\nexport default class IntervalRTreeLeafNode extends IntervalRTreeNode {\n  constructor() {\n    super()\n    IntervalRTreeLeafNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._item = null\n    const min = arguments[0], max = arguments[1], item = arguments[2]\n    this._min = min\n    this._max = max\n    this._item = item\n  }\n  query(queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) return null\n    visitor.visitItem(this._item)\n  }\n}\n","import IntervalRTreeNode from './IntervalRTreeNode.js'\nexport default class IntervalRTreeBranchNode extends IntervalRTreeNode {\n  constructor() {\n    super()\n    IntervalRTreeBranchNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._node1 = null\n    this._node2 = null\n    const n1 = arguments[0], n2 = arguments[1]\n    this._node1 = n1\n    this._node2 = n2\n    this.buildExtent(this._node1, this._node2)\n  }\n  buildExtent(n1, n2) {\n    this._min = Math.min(n1._min, n2._min)\n    this._max = Math.max(n1._max, n2._max)\n  }\n  query(queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) \n      return null\n    \n    if (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor)\n    if (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor)\n  }\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode.js'\nimport IntervalRTreeNode from './IntervalRTreeNode.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport System from '../../../../../java/lang/System.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode.js'\nexport default class SortedPackedIntervalRTree {\n  constructor() {\n    SortedPackedIntervalRTree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._leaves = new ArrayList()\n    this._root = null\n    this._level = 0\n  }\n  buildTree() {\n    Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator())\n    let src = this._leaves\n    let temp = null\n    let dest = new ArrayList()\n    while (true) {\n      this.buildLevel(src, dest)\n      if (dest.size() === 1) return dest.get(0)\n      temp = src\n      src = dest\n      dest = temp\n    }\n  }\n  insert(min, max, item) {\n    if (this._root !== null) throw new IllegalStateException('Index cannot be added to once it has been queried')\n    this._leaves.add(new IntervalRTreeLeafNode(min, max, item))\n  }\n  query(min, max, visitor) {\n    this.init()\n    if (this._root === null) return null\n    this._root.query(min, max, visitor)\n  }\n  buildRoot() {\n    if (this._root !== null) return null\n    this._root = this.buildTree()\n  }\n  printNode(node) {\n    System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)))\n  }\n  init() {\n    if (this._root !== null) return null\n    if (this._leaves.size() === 0) return null\n    this.buildRoot()\n  }\n  buildLevel(src, dest) {\n    this._level++\n    dest.clear()\n    for (let i = 0; i < src.size(); i += 2) {\n      const n1 = src.get(i)\n      const n2 = i + 1 < src.size() ? src.get(i) : null\n      if (n2 === null) {\n        dest.add(n1)\n      } else {\n        const node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1))\n        dest.add(node)\n      }\n    }\n  }\n}\n","import LineString from '../LineString.js'\nimport Geometry from '../Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport LinearRing from '../LinearRing.js'\nimport GeometryComponentFilter from '../GeometryComponentFilter.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class LinearComponentExtracter {\n  constructor() {\n    LinearComponentExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._lines = null\n    this._isForcedToLineString = false\n    if (arguments.length === 1) {\n      const lines = arguments[0]\n      this._lines = lines\n    } else if (arguments.length === 2) {\n      const lines = arguments[0], isForcedToLineString = arguments[1]\n      this._lines = lines\n      this._isForcedToLineString = isForcedToLineString\n    }\n  }\n  static getGeometry() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], forceToLineString = arguments[1]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString))\n    }\n  }\n  static getLines() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return LinearComponentExtracter.getLines(geom, false)\n    } else if (arguments.length === 2) {\n      if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n        const geoms = arguments[0], lines = arguments[1]\n        for (let i = geoms.iterator(); i.hasNext(); ) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines)\n        }\n        return lines\n      } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n        const geom = arguments[0], forceToLineString = arguments[1]\n        const lines = new ArrayList()\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n        const geom = arguments[0], lines = arguments[1]\n        if (geom instanceof LineString) \n          lines.add(geom)\n        else \n          geom.apply(new LinearComponentExtracter(lines))\n        \n        return lines\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n        const geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2]\n        for (let i = geoms.iterator(); i.hasNext(); ) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines, forceToLineString)\n        }\n        return lines\n      } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n        const geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2]\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      }\n    }\n  }\n  filter(geom) {\n    if (this._isForcedToLineString && geom instanceof LinearRing) {\n      const line = geom.getFactory().createLineString(geom.getCoordinateSequence())\n      this._lines.add(line)\n      return null\n    }\n    if (geom instanceof LineString) this._lines.add(geom)\n  }\n  setForceToLineString(isForcedToLineString) {\n    this._isForcedToLineString = isForcedToLineString\n  }\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  }\n}\n","import ItemVisitor from './ItemVisitor.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class ArrayListVisitor {\n  constructor() {\n    ArrayListVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._items = new ArrayList()\n  }\n  visitItem(item) {\n    this._items.add(item)\n  }\n  getItems() {\n    return this._items\n  }\n  get interfaces_() {\n    return [ItemVisitor]\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport ItemVisitor from '../../index/ItemVisitor.js'\nimport PointOnGeometryLocator from './PointOnGeometryLocator.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Polygonal from '../../geom/Polygonal.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter.js'\nimport ArrayListVisitor from '../../index/ArrayListVisitor.js'\nimport RayCrossingCounter from '../RayCrossingCounter.js'\nexport default class IndexedPointInAreaLocator {\n  constructor() {\n    IndexedPointInAreaLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    this._index = null\n    const g = arguments[0]\n    if (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException('Argument must be Polygonal or LinearRing')\n    this._geom = g\n  }\n  locate(p) {\n    if (this._index === null) {\n      this._index = new IntervalIndexedGeometry(this._geom)\n      this._geom = null\n    }\n    const rcc = new RayCrossingCounter(p)\n    const visitor = new SegmentVisitor(rcc)\n    this._index.query(p.y, p.y, visitor)\n    return rcc.getLocation()\n  }\n  get interfaces_() {\n    return [PointOnGeometryLocator]\n  }\n}\nclass SegmentVisitor {\n  constructor() {\n    SegmentVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._counter = null\n    const counter = arguments[0]\n    this._counter = counter\n  }\n  visitItem(item) {\n    const seg = item\n    this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1))\n  }\n  get interfaces_() {\n    return [ItemVisitor]\n  }\n}\nclass IntervalIndexedGeometry {\n  constructor() {\n    IntervalIndexedGeometry.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isEmpty = false\n    this._index = new SortedPackedIntervalRTree()\n    const geom = arguments[0]\n    if (geom.isEmpty()) this._isEmpty = true; else this.init(geom)\n  }\n  init(geom) {\n    const lines = LinearComponentExtracter.getLines(geom)\n    for (let i = lines.iterator(); i.hasNext(); ) {\n      const line = i.next()\n      const pts = line.getCoordinates()\n      this.addLine(pts)\n    }\n  }\n  addLine(pts) {\n    for (let i = 1; i < pts.length; i++) {\n      const seg = new LineSegment(pts[i - 1], pts[i])\n      const min = Math.min(seg.p0.y, seg.p1.y)\n      const max = Math.max(seg.p0.y, seg.p1.y)\n      this._index.insert(min, max, seg)\n    }\n  }\n  query() {\n    if (arguments.length === 2) {\n      const min = arguments[0], max = arguments[1]\n      if (this._isEmpty) return new ArrayList()\n      const visitor = new ArrayListVisitor()\n      this._index.query(min, max, visitor)\n      return visitor.getItems()\n    } else if (arguments.length === 3) {\n      const min = arguments[0], max = arguments[1], visitor = arguments[2]\n      if (this._isEmpty) return null\n      this._index.query(min, max, visitor)\n    }\n  }\n}\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry\n","import PointLocator from '../algorithm/PointLocator.js'\nimport Location from '../geom/Location.js'\nimport LineString from '../geom/LineString.js'\nimport HashMap from '../../../../java/util/HashMap.js'\nimport Geometry from '../geom/Geometry.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Position from './Position.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Point from '../geom/Point.js'\nimport Polygon from '../geom/Polygon.js'\nimport MultiPoint from '../geom/MultiPoint.js'\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector.js'\nimport LinearRing from '../geom/LinearRing.js'\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport SegmentIntersector from './index/SegmentIntersector.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nimport Label from './Label.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport Polygonal from '../geom/Polygonal.js'\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator.js'\nimport Assert from '../util/Assert.js'\nimport Edge from './Edge.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nimport PlanarGraph from './PlanarGraph.js'\nexport default class GeometryGraph extends PlanarGraph {\n  constructor() {\n    super()\n    GeometryGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parentGeom = null\n    this._lineEdgeMap = new HashMap()\n    this._boundaryNodeRule = null\n    this._useBoundaryDeterminationRule = true\n    this._argIndex = null\n    this._boundaryNodes = null\n    this._hasTooFewPoints = false\n    this._invalidPoint = null\n    this._areaPtLocator = null\n    this._ptLocator = new PointLocator()\n    if (arguments.length === 2) {\n      const argIndex = arguments[0], parentGeom = arguments[1]\n      GeometryGraph.constructor_.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n    } else if (arguments.length === 3) {\n      const argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2]\n      this._argIndex = argIndex\n      this._parentGeom = parentGeom\n      this._boundaryNodeRule = boundaryNodeRule\n      if (parentGeom !== null) \n        this.add(parentGeom)\n      \n    }\n  }\n  static determineBoundary(boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  }\n  insertBoundaryPoint(argIndex, coord) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    let boundaryCount = 1\n    let loc = Location.NONE\n    loc = lbl.getLocation(argIndex, Position.ON)\n    if (loc === Location.BOUNDARY) boundaryCount++\n    const newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount)\n    lbl.setLocation(argIndex, newLoc)\n  }\n  computeSelfNodes() {\n    if (arguments.length === 2) {\n      const li = arguments[0], computeRingSelfNodes = arguments[1]\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      const li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2]\n      const si = new SegmentIntersector(li, true, false)\n      si.setIsDoneIfProperInt(isDoneIfProperInt)\n      const esi = this.createEdgeSetIntersector()\n      const isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon\n      const computeAllSegments = computeRingSelfNodes || !isRings\n      esi.computeIntersections(this._edges, si, computeAllSegments)\n      this.addSelfIntersectionNodes(this._argIndex)\n      return si\n    }\n  }\n  computeSplitEdges(edgelist) {\n    for (let i = this._edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      e.eiList.addSplitEdges(edgelist)\n    }\n  }\n  computeEdgeIntersections(g, li, includeProper) {\n    const si = new SegmentIntersector(li, includeProper, true)\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes())\n    const esi = this.createEdgeSetIntersector()\n    esi.computeIntersections(this._edges, g._edges, si)\n    return si\n  }\n  getGeometry() {\n    return this._parentGeom\n  }\n  getBoundaryNodeRule() {\n    return this._boundaryNodeRule\n  }\n  hasTooFewPoints() {\n    return this._hasTooFewPoints\n  }\n  addPoint() {\n    if (arguments[0] instanceof Point) {\n      const p = arguments[0]\n      const coord = p.getCoordinate()\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR)\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR)\n    }\n  }\n  addPolygon(p) {\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      this.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n  addEdge(e) {\n    this.insertEdge(e)\n    const coord = e.getCoordinates()\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY)\n  }\n  addLineString(line) {\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR))\n    this._lineEdgeMap.put(line, e)\n    this.insertEdge(e)\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point')\n    this.insertBoundaryPoint(this._argIndex, coord[0])\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1])\n  }\n  getInvalidPoint() {\n    return this._invalidPoint\n  }\n  getBoundaryPoints() {\n    const coll = this.getBoundaryNodes()\n    const pts = new Array(coll.size()).fill(null)\n    let i = 0\n    for (let it = coll.iterator(); it.hasNext(); ) {\n      const node = it.next()\n      pts[i++] = node.getCoordinate().copy()\n    }\n    return pts\n  }\n  getBoundaryNodes() {\n    if (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex)\n    return this._boundaryNodes\n  }\n  addSelfIntersectionNode(argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) return null\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc)\n  }\n  addPolygonRing(lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates())\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    let left = cwLeft\n    let right = cwRight\n    if (Orientation.isCCW(coord)) {\n      left = cwRight\n      right = cwLeft\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right))\n    this._lineEdgeMap.put(lr, e)\n    this.insertEdge(e)\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n  }\n  insertPoint(argIndex, coord, onLocation) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    if (lbl === null) \n      n._label = new Label(argIndex, onLocation)\n    else lbl.setLocation(argIndex, onLocation)\n  }\n  createEdgeSetIntersector() {\n    return new SimpleMCSweepLineIntersector()\n  }\n  addSelfIntersectionNodes(argIndex) {\n    for (let i = this._edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        this.addSelfIntersectionNode(argIndex, ei.coord, eLoc)\n      }\n    }\n  }\n  add() {\n    if (arguments.length === 1 && arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      if (g.isEmpty()) return null\n      if (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false\n      if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getGeometryType())\n    } else {\n      return super.add.apply(this, arguments)\n    }\n  }\n  addCollection(gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n  locate(pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) \n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom)\n      \n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  }\n  findEdge() {\n    if (arguments.length === 1 && arguments[0] instanceof LineString) {\n      const line = arguments[0]\n      return this._lineEdgeMap.get(line)\n    } else {\n      return super.findEdge.apply(this, arguments)\n    }\n  }\n}\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule.js'\nimport GeometryGraph from '../geomgraph/GeometryGraph.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nexport default class GeometryGraphOperation {\n  constructor() {\n    GeometryGraphOperation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._resultPrecisionModel = null\n    this._arg = null\n    if (arguments.length === 1) {\n      const g0 = arguments[0]\n      this.setComputationPrecision(g0.getPrecisionModel())\n      this._arg = new Array(1).fill(null)\n      this._arg[0] = new GeometryGraph(0, g0)\n      \n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      GeometryGraphOperation.constructor_.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2]\n      if (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel())\n      this._arg = new Array(2).fill(null)\n      this._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule)\n      this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule)\n    }\n  }\n  getArgGeometry(i) {\n    return this._arg[i].getGeometry()\n  }\n  setComputationPrecision(pm) {\n    this._resultPrecisionModel = pm\n    this._li.setPrecisionModel(this._resultPrecisionModel)\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator.js'\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper.js'\nimport PolygonBuilder from './PolygonBuilder.js'\nimport Position from '../../geomgraph/Position.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport LineBuilder from './LineBuilder.js'\nimport PointBuilder from './PointBuilder.js'\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp.js'\nimport Label from '../../geomgraph/Label.js'\nimport OverlayNodeFactory from './OverlayNodeFactory.js'\nimport GeometryGraphOperation from '../GeometryGraphOperation.js'\nimport EdgeList from '../../geomgraph/EdgeList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class OverlayOp extends GeometryGraphOperation {\n  constructor() {\n    super()\n    OverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._ptLocator = new PointLocator()\n    this._geomFact = null\n    this._resultGeom = null\n    this._graph = null\n    this._edgeList = new EdgeList()\n    this._resultPolyList = new ArrayList()\n    this._resultLineList = new ArrayList()\n    this._resultPointList = new ArrayList()\n    const g0 = arguments[0], g1 = arguments[1]\n    GeometryGraphOperation.constructor_.call(this, g0, g1)\n    this._graph = new PlanarGraph(new OverlayNodeFactory())\n    this._geomFact = g0.getFactory()\n  }\n  static overlayOp(geom0, geom1, opCode) {\n    const gov = new OverlayOp(geom0, geom1)\n    const geomOv = gov.getResultGeometry(opCode)\n    return geomOv\n  }\n  static union(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION)\n  }\n  static intersection(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory())\n    if (geom.isGeometryCollection()) {\n      const g2 = other\n      return GeometryCollectionMapper.map(geom, new (class {\n        get interfaces_() {\n          return [MapOp]\n        }\n        map(g) {\n          return OverlayOp.intersection(g, g2)\n        }\n      })())\n    }\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION)\n  }\n  static symDifference(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE)\n  }\n  static resultDimension(opCode, g0, g1) {\n    const dim0 = g0.getDimension()\n    const dim1 = g1.getDimension()\n    let resultDimension = -1\n    switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1)\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1)\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1)\n      break\n    }\n    return resultDimension\n  }\n  static createEmptyResult(overlayOpCode, a, b, geomFact) {\n    let result = null\n    const resultDim = OverlayOp.resultDimension(overlayOpCode, a, b)\n    return result = geomFact.createEmpty(resultDim)\n  }\n  static difference(geom, other) {\n    if (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory())\n    if (other.isEmpty()) return geom.copy()\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE)\n  }\n  static isResultOfOp() {\n    if (arguments.length === 2) {\n      const label = arguments[0], opCode = arguments[1]\n      const loc0 = label.getLocation(0)\n      const loc1 = label.getLocation(1)\n      return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n    } else if (arguments.length === 3) {\n      let loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2]\n      if (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR\n      if (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR\n      switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0 === Location.INTERIOR && loc1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0 === Location.INTERIOR || loc1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR\n      }\n      return false\n    }\n  }\n  insertUniqueEdge(e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      const depth = existingEdge.getDepth()\n      if (depth.isNull()) \n        depth.add(existingLabel)\n      \n      depth.add(labelToMerge)\n      existingLabel.merge(labelToMerge)\n    } else {\n      this._edgeList.add(e)\n    }\n  }\n  getGraph() {\n    return this._graph\n  }\n  cancelDuplicateResultEdges() {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const sym = de.getSym()\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false)\n        sym.setInResult(false)\n      }\n    }\n  }\n  isCoveredByLA(coord) {\n    if (this.isCovered(coord, this._resultLineList)) return true\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n  computeGeometry(resultPointList, resultLineList, resultPolyList, opcode) {\n    const geomList = new ArrayList()\n    geomList.addAll(resultPointList)\n    geomList.addAll(resultLineList)\n    geomList.addAll(resultPolyList)\n    if (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact)\n    return this._geomFact.buildGeometry(geomList)\n  }\n  mergeSymLabels() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().mergeSymLabels()\n    }\n  }\n  isCovered(coord, geomList) {\n    for (let it = geomList.iterator(); it.hasNext(); ) {\n      const geom = it.next()\n      const loc = this._ptLocator.locate(coord, geom)\n      if (loc !== Location.EXTERIOR) return true\n    }\n    return false\n  }\n  replaceCollapsedEdges() {\n    const newEdges = new ArrayList()\n    for (let it = this._edgeList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.isCollapsed()) {\n        it.remove()\n        newEdges.add(e.getCollapsedEdge())\n      }\n    }\n    this._edgeList.addAll(newEdges)\n  }\n  updateNodeLabelling() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      const lbl = node.getEdges().getLabel()\n      node.getLabel().merge(lbl)\n    }\n  }\n  getResultGeometry(overlayOpCode) {\n    this.computeOverlay(overlayOpCode)\n    return this._resultGeom\n  }\n  insertUniqueEdges(edges) {\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      this.insertUniqueEdge(e)\n    }\n  }\n  computeOverlay(opCode) {\n    this.copyPoints(0)\n    this.copyPoints(1)\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true)\n    const baseSplitEdges = new ArrayList()\n    this._arg[0].computeSplitEdges(baseSplitEdges)\n    this._arg[1].computeSplitEdges(baseSplitEdges)\n    const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges)\n    this.computeLabelsFromDepths()\n    this.replaceCollapsedEdges()\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges())\n    this._graph.addEdges(this._edgeList.getEdges())\n    this.computeLabelling()\n    this.labelIncompleteNodes()\n    this.findResultAreaEdges(opCode)\n    this.cancelDuplicateResultEdges()\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    polyBuilder.add(this._graph)\n    this._resultPolyList = polyBuilder.getPolygons()\n    const lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator)\n    this._resultLineList = lineBuilder.build(opCode)\n    const pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator)\n    this._resultPointList = pointBuilder.build(opCode)\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode)\n  }\n  labelIncompleteNode(n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setLocation(targetIndex, loc)\n  }\n  copyPoints(argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n      const graphNode = i.next()\n      const newNode = this._graph.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n  findResultAreaEdges(opCode) {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) \n        de.setInResult(true)\n      \n    }\n  }\n  computeLabelsFromDepths() {\n    for (let it = this._edgeList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const lbl = e.getLabel()\n      const depth = e.getDepth()\n      if (!depth.isNull()) {\n        depth.normalize()\n        for (let i = 0; i < 2; i++) \n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) \n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i)\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized')\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT))\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized')\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT))\n            }\n          \n        \n      }\n    }\n  }\n  computeLabelling() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n    this.mergeSymLabels()\n    this.updateNodeLabelling()\n  }\n  labelIncompleteNodes() {\n    for (let ni = this._graph.getNodes().iterator(); ni.hasNext(); ) {\n      const n = ni.next()\n      const label = n.getLabel()\n      if (n.isIsolated()) \n        if (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1)\n      \n      n.getEdges().updateLabelling(label)\n    }\n  }\n  isCoveredByA(coord) {\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n}\nOverlayOp.INTERSECTION = 1\nOverlayOp.UNION = 2\nOverlayOp.DIFFERENCE = 3\nOverlayOp.SYMDIFFERENCE = 4\n","import EdgeEnd from '../../geomgraph/EdgeEnd.js'\nimport Label from '../../geomgraph/Label.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class EdgeEndBuilder {\n  createEdgeEndForNext(edge, l, eiCurr, eiNext) {\n    const iNext = eiCurr.segmentIndex + 1\n    if (iNext >= edge.getNumPoints() && eiNext === null) return null\n    let pNext = edge.getCoordinate(iNext)\n    if (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord\n    const e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()))\n    l.add(e)\n  }\n  createEdgeEndForPrev(edge, l, eiCurr, eiPrev) {\n    let iPrev = eiCurr.segmentIndex\n    if (eiCurr.dist === 0.0) {\n      if (iPrev === 0) return null\n      iPrev--\n    }\n    let pPrev = edge.getCoordinate(iPrev)\n    if (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord\n    const label = new Label(edge.getLabel())\n    label.flip()\n    const e = new EdgeEnd(edge, eiCurr.coord, pPrev, label)\n    l.add(e)\n  }\n  computeEdgeEnds() {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      const l = new ArrayList()\n      for (let i = edges; i.hasNext(); ) {\n        const e = i.next()\n        this.computeEdgeEnds(e, l)\n      }\n      return l\n    } else if (arguments.length === 2) {\n      const edge = arguments[0], l = arguments[1]\n      const eiList = edge.getEdgeIntersectionList()\n      eiList.addEndpoints()\n      const it = eiList.iterator()\n      let eiPrev = null\n      let eiCurr = null\n      if (!it.hasNext()) return null\n      let eiNext = it.next()\n      do {\n        eiPrev = eiCurr\n        eiCurr = eiNext\n        eiNext = null\n        if (it.hasNext()) eiNext = it.next()\n        if (eiCurr !== null) {\n          this.createEdgeEndForPrev(edge, l, eiCurr, eiPrev)\n          this.createEdgeEndForNext(edge, l, eiCurr, eiNext)\n        }\n      } while (eiCurr !== null)\n    }\n  }\n}\n","import Location from '../../geom/Location.js'\nimport EdgeEnd from '../../geomgraph/EdgeEnd.js'\nimport Position from '../../geomgraph/Position.js'\nimport GeometryGraph from '../../geomgraph/GeometryGraph.js'\nimport Label from '../../geomgraph/Label.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Edge from '../../geomgraph/Edge.js'\nexport default class EdgeEndBundle extends EdgeEnd {\n  constructor() {\n    super()\n    EdgeEndBundle.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edgeEnds = new ArrayList()\n    if (arguments.length === 1) {\n      const e = arguments[0]\n      EdgeEndBundle.constructor_.call(this, null, e)\n    } else if (arguments.length === 2) {\n      const boundaryNodeRule = arguments[0], e = arguments[1]\n      EdgeEnd.constructor_.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()))\n      this.insert(e)\n    }\n  }\n  insert(e) {\n    this._edgeEnds.add(e)\n  }\n  print(out) {\n    out.println('EdgeEndBundle--> Label: ' + this._label)\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      ee.print(out)\n      out.println()\n    }\n  }\n  iterator() {\n    return this._edgeEnds.iterator()\n  }\n  getEdgeEnds() {\n    return this._edgeEnds\n  }\n  computeLabelOn(geomIndex, boundaryNodeRule) {\n    let boundaryCount = 0\n    let foundInterior = false\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const loc = e.getLabel().getLocation(geomIndex)\n      if (loc === Location.BOUNDARY) boundaryCount++\n      if (loc === Location.INTERIOR) foundInterior = true\n    }\n    let loc = Location.NONE\n    if (foundInterior) loc = Location.INTERIOR\n    if (boundaryCount > 0) \n      loc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount)\n    \n    this._label.setLocation(geomIndex, loc)\n  }\n  computeLabelSide(geomIndex, side) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.getLabel().isArea()) {\n        const loc = e.getLabel().getLocation(geomIndex, side)\n        if (loc === Location.INTERIOR) {\n          this._label.setLocation(geomIndex, side, Location.INTERIOR)\n          return null\n        } else if (loc === Location.EXTERIOR) {\n          this._label.setLocation(geomIndex, side, Location.EXTERIOR)\n        }\n      }\n    }\n  }\n  getLabel() {\n    return this._label\n  }\n  computeLabelSides(geomIndex) {\n    this.computeLabelSide(geomIndex, Position.LEFT)\n    this.computeLabelSide(geomIndex, Position.RIGHT)\n  }\n  updateIM(im) {\n    Edge.updateIM(this._label, im)\n  }\n  computeLabel(boundaryNodeRule) {\n    let isArea = false\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.getLabel().isArea()) isArea = true\n    }\n    if (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE); else this._label = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) {\n      this.computeLabelOn(i, boundaryNodeRule)\n      if (isArea) this.computeLabelSides(i)\n    }\n  }\n}\n","import EdgeEndStar from '../../geomgraph/EdgeEndStar.js'\nimport EdgeEndBundle from './EdgeEndBundle.js'\nexport default class EdgeEndBundleStar extends EdgeEndStar {\n  constructor() {\n    super()\n  }\n  updateIM(im) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const esb = it.next()\n      esb.updateIM(im)\n    }\n  }\n  insert(e) {\n    let eb = this._edgeMap.get(e)\n    if (eb === null) {\n      eb = new EdgeEndBundle(e)\n      this.insertEdgeEnd(e, eb)\n    } else {\n      eb.insert(e)\n    }\n  }\n}\n","import Node from '../../geomgraph/Node.js'\nexport default class RelateNode extends Node {\n  constructor() {\n    super()\n    RelateNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const coord = arguments[0], edges = arguments[1]\n    Node.constructor_.call(this, coord, edges)\n  }\n  updateIMFromEdges(im) {\n    this._edges.updateIM(im)\n  }\n  computeIM(im) {\n    im.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0)\n  }\n}\n","import EdgeEndBundleStar from './EdgeEndBundleStar.js'\nimport RelateNode from './RelateNode.js'\nimport NodeFactory from '../../geomgraph/NodeFactory.js'\nexport default class RelateNodeFactory extends NodeFactory {\n  constructor() {\n    super()\n  }\n  createNode(coord) {\n    return new RelateNode(coord, new EdgeEndBundleStar())\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nimport IntersectionMatrix from '../../geom/IntersectionMatrix.js'\nimport EdgeEndBuilder from './EdgeEndBuilder.js'\nimport NodeMap from '../../geomgraph/NodeMap.js'\nimport RelateNodeFactory from './RelateNodeFactory.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport Assert from '../../util/Assert.js'\nexport default class RelateComputer {\n  constructor() {\n    RelateComputer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._ptLocator = new PointLocator()\n    this._arg = null\n    this._nodes = new NodeMap(new RelateNodeFactory())\n    this._im = null\n    this._isolatedEdges = new ArrayList()\n    this._invalidPoint = null\n    const arg = arguments[0]\n    this._arg = arg\n  }\n  insertEdgeEnds(ee) {\n    for (let i = ee.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      this._nodes.add(e)\n    }\n  }\n  computeProperIntersectionIM(intersector, im) {\n    const dimA = this._arg[0].getGeometry().getDimension()\n    const dimB = this._arg[1].getGeometry().getDimension()\n    const hasProper = intersector.hasProperIntersection()\n    const hasProperInterior = intersector.hasProperInteriorIntersection()\n    if (dimA === 2 && dimB === 2) {\n      if (hasProper) im.setAtLeast('212101212')\n    } else if (dimA === 2 && dimB === 1) {\n      if (hasProper) im.setAtLeast('FFF0FFFF2')\n      if (hasProperInterior) im.setAtLeast('1FFFFF1FF')\n    } else if (dimA === 1 && dimB === 2) {\n      if (hasProper) im.setAtLeast('F0FFFFFF2')\n      if (hasProperInterior) im.setAtLeast('1F1FFFFFF')\n    } else if (dimA === 1 && dimB === 1) {\n      if (hasProperInterior) im.setAtLeast('0FFFFFFFF')\n    }\n  }\n  labelIsolatedEdges(thisIndex, targetIndex) {\n    for (let ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\n      const e = ei.next()\n      if (e.isIsolated()) {\n        this.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry())\n        this._isolatedEdges.add(e)\n      }\n    }\n  }\n  labelIsolatedEdge(e, targetIndex, target) {\n    if (target.getDimension() > 0) {\n      const loc = this._ptLocator.locate(e.getCoordinate(), target)\n      e.getLabel().setAllLocations(targetIndex, loc)\n    } else {\n      e.getLabel().setAllLocations(targetIndex, Location.EXTERIOR)\n    }\n  }\n  computeIM() {\n    const im = new IntersectionMatrix()\n    im.set(Location.EXTERIOR, Location.EXTERIOR, 2)\n    if (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n      this.computeDisjointIM(im)\n      return im\n    }\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    const intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false)\n    this.computeIntersectionNodes(0)\n    this.computeIntersectionNodes(1)\n    this.copyNodesAndLabels(0)\n    this.copyNodesAndLabels(1)\n    this.labelIsolatedNodes()\n    this.computeProperIntersectionIM(intersector, im)\n    const eeBuilder = new EdgeEndBuilder()\n    const ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator())\n    this.insertEdgeEnds(ee0)\n    const ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator())\n    this.insertEdgeEnds(ee1)\n    this.labelNodeEdges()\n    this.labelIsolatedEdges(0, 1)\n    this.labelIsolatedEdges(1, 0)\n    this.updateIM(im)\n    return im\n  }\n  labelNodeEdges() {\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const node = ni.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n  }\n  copyNodesAndLabels(argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n      const graphNode = i.next()\n      const newNode = this._nodes.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n  labelIntersectionNodes(argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        const n = this._nodes.find(ei.coord)\n        if (n.getLabel().isNull(argIndex)) \n          if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR)\n        \n      }\n    }\n  }\n  labelIsolatedNode(n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setAllLocations(targetIndex, loc)\n  }\n  computeIntersectionNodes(argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        const n = this._nodes.addNode(ei.coord)\n        if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else \n        if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR)\n        \n      }\n    }\n  }\n  labelIsolatedNodes() {\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const n = ni.next()\n      const label = n.getLabel()\n      Assert.isTrue(label.getGeometryCount() > 0, 'node with empty label found')\n      if (n.isIsolated()) \n        if (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1)\n      \n    }\n  }\n  updateIM(im) {\n    for (let ei = this._isolatedEdges.iterator(); ei.hasNext(); ) {\n      const e = ei.next()\n      e.updateIM(im)\n    }\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const node = ni.next()\n      node.updateIM(im)\n      node.updateIMFromEdges(im)\n    }\n  }\n  computeDisjointIM(im) {\n    const ga = this._arg[0].getGeometry()\n    if (!ga.isEmpty()) {\n      im.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension())\n      im.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension())\n    }\n    const gb = this._arg[1].getGeometry()\n    if (!gb.isEmpty()) {\n      im.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension())\n      im.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension())\n    }\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Point from '../../geom/Point.js'\nimport Polygon from '../../geom/Polygon.js'\nexport default class RectangleContains {\n  constructor() {\n    RectangleContains.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    const rectangle = arguments[0]\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  static contains(rectangle, b) {\n    const rc = new RectangleContains(rectangle)\n    return rc.contains(b)\n  }\n  isContainedInBoundary(geom) {\n    if (geom instanceof Polygon) return false\n    if (geom instanceof Point) return this.isPointContainedInBoundary(geom)\n    if (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom)\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const comp = geom.getGeometryN(i)\n      if (!this.isContainedInBoundary(comp)) return false\n    }\n    return true\n  }\n  isLineSegmentContainedInBoundary(p0, p1) {\n    if (p0.equals(p1)) return this.isPointContainedInBoundary(p0)\n    if (p0.x === p1.x) {\n      if (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true\n    } else if (p0.y === p1.y) {\n      if (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true\n    }\n    return false\n  }\n  isLineStringContainedInBoundary(line) {\n    const seq = line.getCoordinateSequence()\n    const p0 = new Coordinate()\n    const p1 = new Coordinate()\n    for (let i = 0; i < seq.size() - 1; i++) {\n      seq.getCoordinate(i, p0)\n      seq.getCoordinate(i + 1, p1)\n      if (!this.isLineSegmentContainedInBoundary(p0, p1)) return false\n    }\n    return true\n  }\n  isPointContainedInBoundary() {\n    if (arguments[0] instanceof Point) {\n      const point = arguments[0]\n      return this.isPointContainedInBoundary(point.getCoordinate())\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      return pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY()\n    }\n  }\n  contains(geom) {\n    if (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false\n    if (this.isContainedInBoundary(geom)) return false\n    return true\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport RobustLineIntersector from './RobustLineIntersector.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class RectangleLineIntersector {\n  constructor() {\n    RectangleLineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._rectEnv = null\n    this._diagUp0 = null\n    this._diagUp1 = null\n    this._diagDown0 = null\n    this._diagDown1 = null\n    const rectEnv = arguments[0]\n    this._rectEnv = rectEnv\n    this._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY())\n    this._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY())\n    this._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY())\n    this._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY())\n  }\n  intersects(p0, p1) {\n    const segEnv = new Envelope(p0, p1)\n    if (!this._rectEnv.intersects(segEnv)) return false\n    if (this._rectEnv.intersects(p0)) return true\n    if (this._rectEnv.intersects(p1)) return true\n    if (p0.compareTo(p1) > 0) {\n      const tmp = p0\n      p0 = p1\n      p1 = tmp\n    }\n    let isSegUpwards = false\n    if (p1.y > p0.y) isSegUpwards = true\n    if (isSegUpwards) \n      this._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1)\n    else \n      this._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1)\n    \n    if (this._li.hasIntersection()) return true\n    return false\n  }\n}\n","import GeometryCollection from '../GeometryCollection.js'\nexport default class ShortCircuitedGeometryVisitor {\n  constructor() {\n    ShortCircuitedGeometryVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isDone = false\n  }\n  applyTo(geom) {\n    for (let i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n      const element = geom.getGeometryN(i)\n      if (!(element instanceof GeometryCollection)) {\n        this.visit(element)\n        if (this.isDone()) {\n          this._isDone = true\n          return null\n        }\n      } else {\n        this.applyTo(element)\n      }\n    }\n  }\n}\n","import Coordinate from '../../geom/Coordinate.js'\nimport Polygon from '../../geom/Polygon.js'\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector.js'\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor.js'\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator.js'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter.js'\nexport default class RectangleIntersects {\n  constructor() {\n    RectangleIntersects.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectangle = null\n    this._rectEnv = null\n    const rectangle = arguments[0]\n    this._rectangle = rectangle\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  static intersects(rectangle, b) {\n    const rp = new RectangleIntersects(rectangle)\n    return rp.intersects(b)\n  }\n  intersects(geom) {\n    if (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false\n    const visitor = new EnvelopeIntersectsVisitor(this._rectEnv)\n    visitor.applyTo(geom)\n    if (visitor.intersects()) return true\n    const ecpVisitor = new GeometryContainsPointVisitor(this._rectangle)\n    ecpVisitor.applyTo(geom)\n    if (ecpVisitor.containsPoint()) return true\n    const riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle)\n    riVisitor.applyTo(geom)\n    if (riVisitor.intersects()) return true\n    return false\n  }\n}\nclass EnvelopeIntersectsVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    EnvelopeIntersectsVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    this._intersects = false\n    const rectEnv = arguments[0]\n    this._rectEnv = rectEnv\n  }\n  isDone() {\n    return this._intersects === true\n  }\n  visit(element) {\n    const elementEnv = element.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) \n      return null\n    \n    if (this._rectEnv.contains(elementEnv)) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n      this._intersects = true\n      return null\n    }\n  }\n  intersects() {\n    return this._intersects\n  }\n}\nclass GeometryContainsPointVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    GeometryContainsPointVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectSeq = null\n    this._rectEnv = null\n    this._containsPoint = false\n    const rectangle = arguments[0]\n    this._rectSeq = rectangle.getExteriorRing().getCoordinateSequence()\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  isDone() {\n    return this._containsPoint === true\n  }\n  visit(geom) {\n    if (!(geom instanceof Polygon)) return null\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const rectPt = new Coordinate()\n    for (let i = 0; i < 4; i++) {\n      this._rectSeq.getCoordinate(i, rectPt)\n      if (!elementEnv.contains(rectPt)) continue\n      if (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n        this._containsPoint = true\n        return null\n      }\n    }\n  }\n  containsPoint() {\n    return this._containsPoint\n  }\n}\nclass RectangleIntersectsSegmentVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    RectangleIntersectsSegmentVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    this._rectIntersector = null\n    this._hasIntersection = false\n    this._p0 = new Coordinate()\n    this._p1 = new Coordinate()\n    const rectangle = arguments[0]\n    this._rectEnv = rectangle.getEnvelopeInternal()\n    this._rectIntersector = new RectangleLineIntersector(this._rectEnv)\n  }\n  intersects() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return this._hasIntersection === true\n  }\n  visit(geom) {\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const lines = LinearComponentExtracter.getLines(geom)\n    this.checkIntersectionWithLineStrings(lines)\n  }\n  checkIntersectionWithLineStrings(lines) {\n    for (let i = lines.iterator(); i.hasNext(); ) {\n      const testLine = i.next()\n      this.checkIntersectionWithSegments(testLine)\n      if (this._hasIntersection) return null\n    }\n  }\n  checkIntersectionWithSegments(testLine) {\n    const seq1 = testLine.getCoordinateSequence()\n    for (let j = 1; j < seq1.size(); j++) {\n      seq1.getCoordinate(j - 1, this._p0)\n      seq1.getCoordinate(j, this._p1)\n      if (this._rectIntersector.intersects(this._p0, this._p1)) {\n        this._hasIntersection = true\n        return null\n      }\n    }\n  }\n}\n","import RelateComputer from './RelateComputer.js'\nimport GeometryGraphOperation from '../GeometryGraphOperation.js'\nimport RectangleContains from '../predicate/RectangleContains.js'\nimport RectangleIntersects from '../predicate/RectangleIntersects.js'\nexport default class RelateOp extends GeometryGraphOperation {\n  constructor() {\n    super()\n    RelateOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._relate = null\n    if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      GeometryGraphOperation.constructor_.call(this, g0, g1)\n      this._relate = new RelateComputer(this._arg)\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2]\n      GeometryGraphOperation.constructor_.call(this, g0, g1, boundaryNodeRule)\n      this._relate = new RelateComputer(this._arg)\n    }\n  }\n  static covers(g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) \n      return false\n    \n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) \n      return false\n    \n    if (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return true\n    \n    return new RelateOp(g1, g2).getIntersectionMatrix().isCovers()\n  }\n  static intersects(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return RectangleIntersects.intersects(g1, g2)\n    \n    if (g2.isRectangle()) \n      return RectangleIntersects.intersects(g2, g1)\n    \n    if (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n      const r = false\n      for (let i = 0; i < g1.getNumGeometries(); i++) \n        for (let j = 0; j < g2.getNumGeometries(); j++) \n          if (g1.getGeometryN(i).intersects(g2.getGeometryN(j))) \n            return true\n          \n        \n      \n      return false\n    }\n    return new RelateOp(g1, g2).getIntersectionMatrix().isIntersects()\n  }\n  static touches(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension())\n  }\n  static equalsTopo(g1, g2) {\n    if (!g1.getEnvelopeInternal().equals(g2.getEnvelopeInternal())) return false\n    return RelateOp.relate(g1, g2).isEquals(g1.getDimension(), g2.getDimension())\n  }\n  static relate() {\n    if (arguments.length === 2) {\n      const a = arguments[0], b = arguments[1]\n      const relOp = new RelateOp(a, b)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    } else if (arguments.length === 3) {\n      const a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2]\n      const relOp = new RelateOp(a, b, boundaryNodeRule)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    }\n  }\n  static overlaps(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension())\n  }\n  static crosses(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension())\n  }\n  static contains(g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) \n      return false\n    \n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) \n      return false\n    \n    if (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return RectangleContains.contains(g1, g2)\n    \n    return new RelateOp(g1, g2).getIntersectionMatrix().isContains()\n  }\n  getIntersectionMatrix() {\n    return this._relate.computeIM()\n  }\n}\n","import SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp.js'\nimport OverlayOp from '../overlay/OverlayOp.js'\nexport default class UnionOp {\n  get interfaces_() {\n    return []\n  }\n\n  getClass() {\n    return UnionOp\n  }\n\n  static union(g, other) {\n    if (g.isEmpty() || other.isEmpty()) {\n      if (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory())\n      if (g.isEmpty()) return other.copy()\n      if (other.isEmpty()) return g.copy()\n    }\n    g.checkNotGeometryCollection(g)\n    g.checkNotGeometryCollection(other)\n    return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n  }\n}\n","import Coordinate from 'jsts/org/locationtech/jts/geom/Coordinate.js';\nimport GeometryFactory from 'jsts/org/locationtech/jts/geom/GeometryFactory.js';\nimport MultiPolygon from 'jsts/org/locationtech/jts/geom/MultiPolygon';\nimport PrecisionModel from 'jsts/org/locationtech/jts/geom/PrecisionModel.js';\nimport WKTReader from 'jsts/org/locationtech/jts/io/WKTReader.js';\nimport WKTWriter from 'jsts/org/locationtech/jts/io/WKTWriter.js';\nimport {BufferOp} from 'jsts/org/locationtech/jts/operation/buffer';\nimport OverlayOp from 'jsts/org/locationtech/jts/operation/overlay/OverlayOp.js'\nimport RelateOp from 'jsts/org/locationtech/jts/operation/relate/RelateOp.js'\nimport UnionOp from 'jsts/org/locationtech/jts/operation/union/UnionOp.js'\n\n// TODO: various geometry patched functions don't show up in node module\n// see jsts monkey.js for patching\n\nexport const intersects = (g1, g2) => {\n  return RelateOp.intersects(g1, g2);  \n}\n\nexport const touches = (g1, g2) => {\n  return RelateOp.touches(g1, g2)\n};\n\nexport const union = (g1, g2) => {\n  return UnionOp.union(g1, g2);\n};\n\nexport const intersection = (g1, g2) => {\n  return OverlayOp.intersection(g1, g2);\n};\n\nexport const contains = (g1, g2) => {\n  return RelateOp.contains(g1, g2);\n};\n\nexport const expandGeometry = (geometry, distance) => {\n  return BufferOp.bufferOp(geometry, distance).norm();\n};\n\nexport const isMultiPolygon = (geometry) => {\n  return geometry instanceof MultiPolygon;\n}\n\nexport const isPolygon = (geometry) => {\n  return geometry instanceof Polygon;\n}\n\nexport const geometryToWkt = (geometry) => {\n  if (!geometry) {\n    return null;\n  }\n  const precisionModel = new PrecisionModel();\n  const factory = new GeometryFactory(precisionModel);\n  const wktWriter = new WKTWriter(factory);\n  return wktWriter.write(geometry);\n};\n\nexport const wktToGeometry = (wkt) => {\n  if (!wkt) {\n    return null;\n  }\n  const wktReader = new WKTReader(); \n  return wktReader.read(wkt);\n};\n\n// {x, y, height, width}\nexport const rectToPolygon = (rect) => {\n  const reader = new WKTReader(); \n  const polyString = rectToWKTPolygonString(rect);\n  return reader.read(polyString);\n};\n\n// {x, y, height, width}\nexport const rectToWKTPolygonString = (rect) => {\n  const p = [\n    rect.x, rect.y,\n    rect.x + rect.width, rect.y,\n    rect.x + rect.width, rect.y + rect.height,\n    rect.x, rect.y + rect.height,\n    // close off poly\n    rect.x, rect.y,\n  ];\n  return `POLYGON((${p[0]} ${p[1]}, ${p[2]} ${p[3]}, ${p[4]} ${p[5]}, ${p[6]} ${p[7]}, ${p[8]} ${p[9]}))`;\n};\n\nexport const twoPointsToLineString = (x1, y1, x2, y2) => {\n  return new GeometryFactory().createLineString([\n    new Coordinate(x1, y1),\n    new Coordinate(x2, y2),\n    ]);\n};\n\n// [[x,y]...]\nexport const pointsToPolygon = (points) => {\n  const coords = points.map(p => new Coordinate(p[0], p[1]));\n  return new GeometryFactory().createPolygon(coords);\n};\n\nexport const slope = (x1, y1, x2, y2) => {\n  if (x1 === x2) {\n    // vertical line has undefined slope\n    return Infinity;\n  }\n  return (y2 - y1) / (x2 - x1);\n};\n\nexport const inverseSlope = (slope) => {\n  if (slope === Infinity) {\n    // vertical line; inverse/perpendicular is horizontal\n    return 0.0;\n  }\n  if (slope === 0) {\n    // horizontal line; inverse/pendendicular is vertical\n    return Infinity;\n  }\n  return -1.0 / slope;\n};\n\nexport const distanceBetweenPoints = (x1, y1, x2, y2) => {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n};\n\nexport const comparePoints = (x1, y1, x2, y2) => {\n  if (x1 < x2 || (x1 === x2 && y1 < y2)) {\n    // less than\n    return -1;\n  } else if (x1 === x2 && y1 === y2) {\n    // equal\n    return 0;\n  } else {\n    // greater than\n    return 1;\n  }\n};\n\nexport const lesserPoint = (x1, y1, x2, y2) => {\n  if (comparePoints(x1, y1, x2, y2) === -1) {\n    return [x1, y1];\n  }\n  return [x2, y2];\n};\n\nexport const greaterPoint = (x1, y1, x2, y2) => {\n  if (comparePoints(x1, y1, x2, y2) !== -1) {\n    return [x1, y1];\n  }\n  return [x2, y2];\n};\n","import * as constants from \"./constants.js\";\nimport * as geo from \"./geo-utils.js\";\n\nconst FLAG_NAME = \"\"\n\nexport const makeWalls = async (state) => {\n  if (!game.user.isGM) {\n    // need GM privs to delete/create walls\n    return;\n  }\n  await deleteAllWalls();\n  if (state.geometry) {\n    if (geo.isMultiPolygon(state.geometry)) {\n      await makeWallsFromMulti(state.geometry);\n    } else if (geo.isPolygon(state.geometry)) {\n      await makeWallsFromPoly(state.geometry);\n    }\n  }\n  await makeInteriorWalls(state.interiorWalls);\n  await makeDoors(state.doors);\n  await makeSecretDoors(state.secretDoors);\n};\n\nconst deleteAllWalls = async () => {\n  try {   \n    // scene.update() triggers a redraw, \n    // which causes an infinite loop of redraw/refresh.\n    // so avoid it :P\n    const walls = canvas.scene.getEmbeddedCollection(\"Wall\");\n    const ids = [];\n    for (const wall of walls) {\n      const flag = wall.getFlag(constants.MODULE_NAME, \"dungeonVersion\");\n      if (flag) {\n        ids.push(wall.id);\n      }\n    }\n    await canvas.scene.deleteEmbeddedDocuments(\"Wall\", ids);\n  } catch(error) {\n    console.error(error);\n  }\n};\n\nconst makeWallsFromMulti = async (multi) => {\n  for (let i = 0; i < multi.getNumGeometries(); i++) {\n    const poly = multi.getGeometryN(i);\n    await makeWallsFromPoly(poly);\n  }\n};\n\nconst wallData = (x1, y1, x2, y2) => {\n  return {\n    // From Foundry API docs:\n    // \"The wall coordinates, a length-4 array of finite numbers [x0,y0,x1,y1]\"\n    c: [x1, y1, x2, y2],\n    flags: {\n      \"dungeon-draw\": {\n        // extract string constant somewhere\n        \"dungeonVersion\": \"1.0\"\n      }\n    }\n  }\n};\n\nconst doorData = (x1, y1, x2, y2) => {\n  const data = wallData(x1, y1, x2, y2);\n  data.door = 1;  // door\n  return data;\n};\n\nconst secretDoorData = (x1, y1, x2, y2) => {\n  const data = wallData(x1, y1, x2, y2);\n  data.door = 2;  // secret\n  return data;\n};\n\nconst makeWallsFromPoly = async (poly) => {\n  const allWalls = [];\n  const exterior = poly.getExteriorRing();\n  const coords = exterior.getCoordinates();\n  for (let i = 0; i < coords.length - 1; i++) {\n    // constants.MODULE_NAME\n    const data = wallData(coords[i].x, coords[i].y, coords[i+1].x, coords[i+1].y);\n    allWalls.push(data);\n  }\n  const numHoles = poly.getNumInteriorRing();    \n  for (let i = 0; i < numHoles; i++) {\n    const hole = poly.getInteriorRingN(i);\n    const coords = hole.getCoordinates();\n    for (let i = 0; i < coords.length - 1; i++) {\n      const data = wallData(coords[i].x, coords[i].y, coords[i+1].x, coords[i+1].y);\n      allWalls.push(data);\n    }      \n  }\n  if (allWalls.length) {\n    await canvas.scene.createEmbeddedDocuments(\"Wall\", allWalls);\n  }\n};\n\n/** [[x1,y1,x2,y2],...] */\nconst makeInteriorWalls = async (walls) => {\n  const allWalls = [];\n  for (const wall of walls) {\n    const data = wallData(wall[0], wall[1], wall[2], wall[3]);\n    allWalls.push(data);\n  }\n  if (allWalls.length) {\n    await canvas.scene.createEmbeddedDocuments(\"Wall\", allWalls);\n  }\n};\n\n/** [[x1,y1,x2,y2],...] */\nconst makeDoors = async (doors) => {\n  const allDoors = [];\n  for (const door of doors) {\n    const data = doorData(door[0], door[1], door[2], door[3]);\n    allDoors.push(data);\n  }\n  if (allDoors.length) {\n    await canvas.scene.createEmbeddedDocuments(\"Wall\", allDoors);\n  }\n};\n\n/** [[x1,y1,x2,y2],...] */\nconst makeSecretDoors = async (doors) => {\n  const allDoors = [];\n  for (const door of doors) {\n    const data = secretDoorData(door[0], door[1], door[2], door[3]);\n    allDoors.push(data);\n  }\n  if (allDoors.length) {\n    await canvas.scene.createEmbeddedDocuments(\"Wall\", allDoors);\n  }\n};","import { makeWalls } from \"./wallmaker.js\";\nimport * as geo from \"./geo-utils.js\";\nimport { defaultConfig } from \"./themes.js\";\n\nexport class DungeonState {\n  static FLAG_KEY = \"dungeonState\";\n\n  constructor(geometry, themeAreas, doors, secretDoors, interiorWalls, config) {\n    this.geometry = geometry;\n    this.themeAreas = themeAreas;\n    this.doors = doors;\n    this.secretDoors = secretDoors;\n    this.interiorWalls = interiorWalls;\n    this.config = config;\n  }\n\n  static startState() {\n    return new DungeonState(null, [], [], [], [], defaultConfig());\n  }\n\n  clone() {\n    return new DungeonState(\n      this.geometry ? this.geometry.copy() : null,\n      JSON.parse(JSON.stringify(this.themeAreas)),      \n      JSON.parse(JSON.stringify(this.doors)),\n      this.secretDoors ? [...this.secretDoors] : [],\n      this.interiorWalls ? [...this.interiorWalls] : [],\n      JSON.parse(JSON.stringify(this.config))\n      );\n  }\n\n  /* -------------------------------------------- */  \n\n  toString() {\n    return JSON.stringify({\n      // serialize the geometry object as a WKT string\n      wkt: geo.geometryToWkt(this.geometry),\n      themeAreas: this.themeAreas,\n      doors: this.doors,\n      secretDoors: this.secretDoors,\n      interiorWalls: this.interiorWalls,\n      config: this.config,\n    });\n  }\n\n  // TODO: implement as fromJSON?\n  static fromString(s) {\n    if (!s) {\n      return DungeonState.startState();\n    }\n    const obj = JSON.parse(s);\n    const geometry = geo.wktToGeometry(obj.wkt);\n    const themeAreas = obj.themeAreas ? obj.themeAreas : [];\n    const doors = obj.doors ? obj.doors : [];\n    const secretDoors = obj.secretDoors ? obj.secretDoors : [];\n    const interiorWalls = obj.interiorWalls ? obj.interiorWalls : [];\n    // fill in any new defaults\n    const config = foundry.utils.mergeObject(defaultConfig(), obj.config);\n    return new DungeonState(geometry, themeAreas, doors, secretDoors, interiorWalls, config);\n  }\n\n  /* -------------------------------------------- */  \n\n  async saveToJournalEntry(journalEntry) {\n    const serialized = this.toString();\n    // update walls before we update the journal\n    await makeWalls(this);\n    await journalEntry.update({\n      content: serialized,\n    });\n  }\n\n  static async loadFromJournalEntry(journalEntry) {\n    if (journalEntry.data.content) {\n      console.log(`Loading dungeon from JournalEntry ${journalEntry.name}`);\n      return DungeonState.fromString(journalEntry.data.content);\n    } else {\n      console.log(\"Loading dungeon from start state\");\n      return DungeonState.startState();\n    }\n  }\n}\n","/*!\n * pixi-filters - v4.1.5\n * Compiled Wed, 29 Sep 2021 14:05:57 UTC\n *\n * pixi-filters is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar __filters=function(e,n,t,r,o,i,l,a){\"use strict\";var s=function(e,n){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])})(e,n)};function u(e,n){function t(){this.constructor=e}s(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}var f=function(){return(f=Object.assign||function(e){for(var n,t=arguments,r=1,o=arguments.length;r<o;r++)for(var i in n=t[r])Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i]);return e}).apply(this,arguments)};Object.create;Object.create;var c=\"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\",m=function(e){function n(n){var t=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float gamma;\\nuniform float contrast;\\nuniform float saturation;\\nuniform float brightness;\\nuniform float red;\\nuniform float green;\\nuniform float blue;\\nuniform float alpha;\\n\\nvoid main(void)\\n{\\n    vec4 c = texture2D(uSampler, vTextureCoord);\\n\\n    if (c.a > 0.0) {\\n        c.rgb /= c.a;\\n\\n        vec3 rgb = pow(c.rgb, vec3(1. / gamma));\\n        rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb)), rgb, saturation), contrast);\\n        rgb.r *= red;\\n        rgb.g *= green;\\n        rgb.b *= blue;\\n        c.rgb = rgb * brightness;\\n\\n        c.rgb *= c.a;\\n    }\\n\\n    gl_FragColor = c * alpha;\\n}\\n\")||this;return t.gamma=1,t.saturation=1,t.contrast=1,t.brightness=1,t.red=1,t.green=1,t.blue=1,t.alpha=1,Object.assign(t,n),t}return u(n,e),n.prototype.apply=function(e,n,t,r){this.uniforms.gamma=Math.max(this.gamma,1e-4),this.uniforms.saturation=this.saturation,this.uniforms.contrast=this.contrast,this.uniforms.brightness=this.brightness,this.uniforms.red=this.red,this.uniforms.green=this.green,this.uniforms.blue=this.blue,this.uniforms.alpha=this.alpha,e.applyFilter(this,n,t,r)},n}(n.Filter),p=function(e){function n(n){void 0===n&&(n=.5);var t=e.call(this,c,\"\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform float threshold;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    // A simple & fast algorithm for getting brightness.\\n    // It's inaccuracy , but good enought for this feature.\\n    float _max = max(max(color.r, color.g), color.b);\\n    float _min = min(min(color.r, color.g), color.b);\\n    float brightness = (_max + _min) * 0.5;\\n\\n    if(brightness > threshold) {\\n        gl_FragColor = color;\\n    } else {\\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n    }\\n}\\n\")||this;return t.threshold=n,t}return u(n,e),Object.defineProperty(n.prototype,\"threshold\",{get:function(){return this.uniforms.threshold},set:function(e){this.uniforms.threshold=e},enumerable:!1,configurable:!0}),n}(n.Filter),d=function(e){function n(n,r,o){void 0===n&&(n=4),void 0===r&&(r=3),void 0===o&&(o=!1);var i=e.call(this,c,o?\"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\nuniform vec4 filterClamp;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\\n\":\"\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 uOffset;\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n\\n    // Sample top left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample top right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));\\n\\n    // Sample bottom right pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Sample bottom left pixel\\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));\\n\\n    // Average\\n    color *= 0.25;\\n\\n    gl_FragColor = color;\\n}\")||this;return i._kernels=[],i._blur=4,i._quality=3,i.uniforms.uOffset=new Float32Array(2),i._pixelSize=new t.Point,i.pixelSize=1,i._clamp=o,Array.isArray(n)?i.kernels=n:(i._blur=n,i.quality=r),i}return u(n,e),n.prototype.apply=function(e,n,t,r){var o,i=this._pixelSize.x/n._frame.width,l=this._pixelSize.y/n._frame.height;if(1===this._quality||0===this._blur)o=this._kernels[0]+.5,this.uniforms.uOffset[0]=o*i,this.uniforms.uOffset[1]=o*l,e.applyFilter(this,n,t,r);else{for(var a=e.getFilterTexture(),s=n,u=a,f=void 0,c=this._quality-1,m=0;m<c;m++)o=this._kernels[m]+.5,this.uniforms.uOffset[0]=o*i,this.uniforms.uOffset[1]=o*l,e.applyFilter(this,s,u,1),f=s,s=u,u=f;o=this._kernels[c]+.5,this.uniforms.uOffset[0]=o*i,this.uniforms.uOffset[1]=o*l,e.applyFilter(this,s,t,r),e.returnFilterTexture(a)}},n.prototype._updatePadding=function(){this.padding=Math.ceil(this._kernels.reduce((function(e,n){return e+n+.5}),0))},n.prototype._generateKernels=function(){var e=this._blur,n=this._quality,t=[e];if(e>0)for(var r=e,o=e/n,i=1;i<n;i++)r-=o,t.push(r);this._kernels=t,this._updatePadding()},Object.defineProperty(n.prototype,\"kernels\",{get:function(){return this._kernels},set:function(e){Array.isArray(e)&&e.length>0?(this._kernels=e,this._quality=e.length,this._blur=Math.max.apply(Math,e)):(this._kernels=[0],this._quality=1)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"clamp\",{get:function(){return this._clamp},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"pixelSize\",{get:function(){return this._pixelSize},set:function(e){\"number\"==typeof e?(this._pixelSize.x=e,this._pixelSize.y=e):Array.isArray(e)?(this._pixelSize.x=e[0],this._pixelSize.y=e[1]):e instanceof t.Point?(this._pixelSize.x=e.x,this._pixelSize.y=e.y):(this._pixelSize.x=1,this._pixelSize.y=1)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"quality\",{get:function(){return this._quality},set:function(e){this._quality=Math.max(1,Math.round(e)),this._generateKernels()},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"blur\",{get:function(){return this._blur},set:function(e){this._blur=e,this._generateKernels()},enumerable:!1,configurable:!0}),n}(n.Filter),h=function(e){function n(t){var o=e.call(this,c,\"uniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D bloomTexture;\\nuniform float bloomScale;\\nuniform float brightness;\\n\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n    color.rgb *= brightness;\\n    vec4 bloomColor = vec4(texture2D(bloomTexture, vTextureCoord).rgb, 0.0);\\n    bloomColor.rgb *= bloomScale;\\n    gl_FragColor = color + bloomColor;\\n}\\n\")||this;o.bloomScale=1,o.brightness=1,o._resolution=r.settings.FILTER_RESOLUTION,\"number\"==typeof t&&(t={threshold:t});var i=Object.assign(n.defaults,t);o.bloomScale=i.bloomScale,o.brightness=i.brightness;var l=i.kernels,a=i.blur,s=i.quality,u=i.pixelSize,f=i.resolution;return o._extractFilter=new p(i.threshold),o._extractFilter.resolution=f,o._blurFilter=l?new d(l):new d(a,s),o.pixelSize=u,o.resolution=f,o}return u(n,e),n.prototype.apply=function(e,n,t,r,o){var i=e.getFilterTexture();this._extractFilter.apply(e,n,i,1,o);var l=e.getFilterTexture();this._blurFilter.apply(e,i,l,1),this.uniforms.bloomScale=this.bloomScale,this.uniforms.brightness=this.brightness,this.uniforms.bloomTexture=l,e.applyFilter(this,n,t,r),e.returnFilterTexture(l),e.returnFilterTexture(i)},Object.defineProperty(n.prototype,\"resolution\",{get:function(){return this._resolution},set:function(e){this._resolution=e,this._extractFilter&&(this._extractFilter.resolution=e),this._blurFilter&&(this._blurFilter.resolution=e)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"threshold\",{get:function(){return this._extractFilter.threshold},set:function(e){this._extractFilter.threshold=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"kernels\",{get:function(){return this._blurFilter.kernels},set:function(e){this._blurFilter.kernels=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"blur\",{get:function(){return this._blurFilter.blur},set:function(e){this._blurFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"quality\",{get:function(){return this._blurFilter.quality},set:function(e){this._blurFilter.quality=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"pixelSize\",{get:function(){return this._blurFilter.pixelSize},set:function(e){this._blurFilter.pixelSize=e},enumerable:!1,configurable:!0}),n.defaults={threshold:.5,bloomScale:1,brightness:1,kernels:null,blur:8,quality:4,pixelSize:1,resolution:r.settings.FILTER_RESOLUTION},n}(n.Filter),g=function(e){function n(n){void 0===n&&(n=8);var t=e.call(this,c,\"varying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform float pixelSize;\\nuniform sampler2D uSampler;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n    return floor( coord / size ) * size;\\n}\\n\\nvec2 getMod(vec2 coord, vec2 size)\\n{\\n    return mod( coord , size) / size;\\n}\\n\\nfloat character(float n, vec2 p)\\n{\\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\\n\\n    if (clamp(p.x, 0.0, 4.0) == p.x)\\n    {\\n        if (clamp(p.y, 0.0, 4.0) == p.y)\\n        {\\n            if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\\n        }\\n    }\\n    return 0.0;\\n}\\n\\nvoid main()\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    // get the rounded color..\\n    vec2 pixCoord = pixelate(coord, vec2(pixelSize));\\n    pixCoord = unmapCoord(pixCoord);\\n\\n    vec4 color = texture2D(uSampler, pixCoord);\\n\\n    // determine the character to use\\n    float gray = (color.r + color.g + color.b) / 3.0;\\n\\n    float n =  65536.0;             // .\\n    if (gray > 0.2) n = 65600.0;    // :\\n    if (gray > 0.3) n = 332772.0;   // *\\n    if (gray > 0.4) n = 15255086.0; // o\\n    if (gray > 0.5) n = 23385164.0; // &\\n    if (gray > 0.6) n = 15252014.0; // 8\\n    if (gray > 0.7) n = 13199452.0; // @\\n    if (gray > 0.8) n = 11512810.0; // #\\n\\n    // get the mod..\\n    vec2 modd = getMod(coord, vec2(pixelSize));\\n\\n    gl_FragColor = color * character( n, vec2(-1.0) + modd * 2.0);\\n\\n}\\n\")||this;return t.size=n,t}return u(n,e),Object.defineProperty(n.prototype,\"size\",{get:function(){return this.uniforms.pixelSize},set:function(e){this.uniforms.pixelSize=e},enumerable:!1,configurable:!0}),n}(n.Filter),v=function(e){function n(n){var t=e.call(this,c,\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform float transformX;\\nuniform float transformY;\\nuniform vec3 lightColor;\\nuniform float lightAlpha;\\nuniform vec3 shadowColor;\\nuniform float shadowAlpha;\\n\\nvoid main(void) {\\n    vec2 transform = vec2(1.0 / filterArea) * vec2(transformX, transformY);\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n    float light = texture2D(uSampler, vTextureCoord - transform).a;\\n    float shadow = texture2D(uSampler, vTextureCoord + transform).a;\\n\\n    color.rgb = mix(color.rgb, lightColor, clamp((color.a - light) * lightAlpha, 0.0, 1.0));\\n    color.rgb = mix(color.rgb, shadowColor, clamp((color.a - shadow) * shadowAlpha, 0.0, 1.0));\\n    gl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\\n\")||this;return t._thickness=2,t._angle=0,t.uniforms.lightColor=new Float32Array(3),t.uniforms.shadowColor=new Float32Array(3),Object.assign(t,{rotation:45,thickness:2,lightColor:16777215,lightAlpha:.7,shadowColor:0,shadowAlpha:.7},n),t.padding=1,t}return u(n,e),n.prototype._updateTransform=function(){this.uniforms.transformX=this._thickness*Math.cos(this._angle),this.uniforms.transformY=this._thickness*Math.sin(this._angle)},Object.defineProperty(n.prototype,\"rotation\",{get:function(){return this._angle/t.DEG_TO_RAD},set:function(e){this._angle=e*t.DEG_TO_RAD,this._updateTransform()},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"thickness\",{get:function(){return this._thickness},set:function(e){this._thickness=e,this._updateTransform()},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"lightColor\",{get:function(){return o.rgb2hex(this.uniforms.lightColor)},set:function(e){o.hex2rgb(e,this.uniforms.lightColor)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"lightAlpha\",{get:function(){return this.uniforms.lightAlpha},set:function(e){this.uniforms.lightAlpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"shadowColor\",{get:function(){return o.rgb2hex(this.uniforms.shadowColor)},set:function(e){o.hex2rgb(e,this.uniforms.shadowColor)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"shadowAlpha\",{get:function(){return this.uniforms.shadowAlpha},set:function(e){this.uniforms.shadowAlpha=e},enumerable:!1,configurable:!0}),n}(n.Filter),y=function(e){function n(n,o,s,u){void 0===n&&(n=2),void 0===o&&(o=4),void 0===s&&(s=r.settings.FILTER_RESOLUTION),void 0===u&&(u=5);var f,c,m=e.call(this)||this;return\"number\"==typeof n?(f=n,c=n):n instanceof t.Point?(f=n.x,c=n.y):Array.isArray(n)&&(f=n[0],c=n[1]),m.blurXFilter=new a.BlurFilterPass(!0,f,o,s,u),m.blurYFilter=new a.BlurFilterPass(!1,c,o,s,u),m.blurYFilter.blendMode=i.BLEND_MODES.SCREEN,m.defaultFilter=new l.AlphaFilter,m}return u(n,e),n.prototype.apply=function(e,n,t,r){var o=e.getFilterTexture();this.defaultFilter.apply(e,n,t,r),this.blurXFilter.apply(e,n,o,1),this.blurYFilter.apply(e,o,t,0),e.returnFilterTexture(o)},Object.defineProperty(n.prototype,\"blur\",{get:function(){return this.blurXFilter.blur},set:function(e){this.blurXFilter.blur=this.blurYFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"blurX\",{get:function(){return this.blurXFilter.blur},set:function(e){this.blurXFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"blurY\",{get:function(){return this.blurYFilter.blur},set:function(e){this.blurYFilter.blur=e},enumerable:!1,configurable:!0}),n}(n.Filter),b=function(e){function n(t){var r=e.call(this,c,\"uniform float radius;\\nuniform float strength;\\nuniform vec2 center;\\nuniform sampler2D uSampler;\\nvarying vec2 vTextureCoord;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nvoid main()\\n{\\n    vec2 coord = vTextureCoord * filterArea.xy;\\n    coord -= center * dimensions.xy;\\n    float distance = length(coord);\\n    if (distance < radius) {\\n        float percent = distance / radius;\\n        if (strength > 0.0) {\\n            coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\\n        } else {\\n            coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\\n        }\\n    }\\n    coord += center * dimensions.xy;\\n    coord /= filterArea.xy;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    vec4 color = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n\\n    gl_FragColor = color;\\n}\\n\")||this;return r.uniforms.dimensions=new Float32Array(2),Object.assign(r,n.defaults,t),r}return u(n,e),n.prototype.apply=function(e,n,t,r){var o=n.filterFrame,i=o.width,l=o.height;this.uniforms.dimensions[0]=i,this.uniforms.dimensions[1]=l,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"radius\",{get:function(){return this.uniforms.radius},set:function(e){this.uniforms.radius=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"strength\",{get:function(){return this.uniforms.strength},set:function(e){this.uniforms.strength=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"center\",{get:function(){return this.uniforms.center},set:function(e){this.uniforms.center=e},enumerable:!1,configurable:!0}),n.defaults={center:[.5,.5],radius:100,strength:1},n}(n.Filter),x=function(e){function t(n,t,r){void 0===t&&(t=!1),void 0===r&&(r=1);var o=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform sampler2D colorMap;\\nuniform float _mix;\\nuniform float _size;\\nuniform float _sliceSize;\\nuniform float _slicePixelSize;\\nuniform float _sliceInnerSize;\\nvoid main() {\\n    vec4 color = texture2D(uSampler, vTextureCoord.xy);\\n\\n    vec4 adjusted;\\n    if (color.a > 0.0) {\\n        color.rgb /= color.a;\\n        float innerWidth = _size - 1.0;\\n        float zSlice0 = min(floor(color.b * innerWidth), innerWidth);\\n        float zSlice1 = min(zSlice0 + 1.0, innerWidth);\\n        float xOffset = _slicePixelSize * 0.5 + color.r * _sliceInnerSize;\\n        float s0 = xOffset + (zSlice0 * _sliceSize);\\n        float s1 = xOffset + (zSlice1 * _sliceSize);\\n        float yOffset = _sliceSize * 0.5 + color.g * (1.0 - _sliceSize);\\n        vec4 slice0Color = texture2D(colorMap, vec2(s0,yOffset));\\n        vec4 slice1Color = texture2D(colorMap, vec2(s1,yOffset));\\n        float zOffset = fract(color.b * innerWidth);\\n        adjusted = mix(slice0Color, slice1Color, zOffset);\\n\\n        color.rgb *= color.a;\\n    }\\n    gl_FragColor = vec4(mix(color, adjusted, _mix).rgb, color.a);\\n\\n}\")||this;return o.mix=1,o._size=0,o._sliceSize=0,o._slicePixelSize=0,o._sliceInnerSize=0,o._nearest=!1,o._scaleMode=null,o._colorMap=null,o._scaleMode=null,o.nearest=t,o.mix=r,o.colorMap=n,o}return u(t,e),t.prototype.apply=function(e,n,t,r){this.uniforms._mix=this.mix,e.applyFilter(this,n,t,r)},Object.defineProperty(t.prototype,\"colorSize\",{get:function(){return this._size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"colorMap\",{get:function(){return this._colorMap},set:function(e){var t;e&&(e instanceof n.Texture||(e=n.Texture.from(e)),(null===(t=e)||void 0===t?void 0:t.baseTexture)&&(e.baseTexture.scaleMode=this._scaleMode,e.baseTexture.mipmap=i.MIPMAP_MODES.OFF,this._size=e.height,this._sliceSize=1/this._size,this._slicePixelSize=this._sliceSize/this._size,this._sliceInnerSize=this._slicePixelSize*(this._size-1),this.uniforms._size=this._size,this.uniforms._sliceSize=this._sliceSize,this.uniforms._slicePixelSize=this._slicePixelSize,this.uniforms._sliceInnerSize=this._sliceInnerSize,this.uniforms.colorMap=e),this._colorMap=e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"nearest\",{get:function(){return this._nearest},set:function(e){this._nearest=e,this._scaleMode=e?i.SCALE_MODES.NEAREST:i.SCALE_MODES.LINEAR;var n=this._colorMap;n&&n.baseTexture&&(n.baseTexture._glTextures={},n.baseTexture.scaleMode=this._scaleMode,n.baseTexture.mipmap=i.MIPMAP_MODES.OFF,n._updateID++,n.baseTexture.emit(\"update\",n.baseTexture))},enumerable:!1,configurable:!0}),t.prototype.updateColorMap=function(){var e=this._colorMap;e&&e.baseTexture&&(e._updateID++,e.baseTexture.emit(\"update\",e.baseTexture),this.colorMap=e)},t.prototype.destroy=function(n){void 0===n&&(n=!1),this._colorMap&&this._colorMap.destroy(n),e.prototype.destroy.call(this)},t}(n.Filter),_=function(e){function n(n,t){void 0===n&&(n=0),void 0===t&&(t=1);var r=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec3 color;\\nuniform float alpha;\\n\\nvoid main(void) {\\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\\n    gl_FragColor = vec4(mix(currentColor.rgb, color.rgb, currentColor.a * alpha), currentColor.a);\\n}\\n\")||this;return r._color=0,r._alpha=1,r.uniforms.color=new Float32Array(3),r.color=n,r.alpha=t,r}return u(n,e),Object.defineProperty(n.prototype,\"color\",{get:function(){return this._color},set:function(e){var n=this.uniforms.color;\"number\"==typeof e?(o.hex2rgb(e,n),this._color=e):(n[0]=e[0],n[1]=e[1],n[2]=e[2],this._color=o.rgb2hex(n))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"alpha\",{get:function(){return this._alpha},set:function(e){this.uniforms.alpha=e,this._alpha=e},enumerable:!1,configurable:!0}),n}(n.Filter),C=function(e){function n(n,t,r){void 0===n&&(n=16711680),void 0===t&&(t=0),void 0===r&&(r=.4);var o=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec3 originalColor;\\nuniform vec3 newColor;\\nuniform float epsilon;\\nvoid main(void) {\\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\\n    vec3 colorDiff = originalColor - (currentColor.rgb / max(currentColor.a, 0.0000000001));\\n    float colorDistance = length(colorDiff);\\n    float doReplace = step(colorDistance, epsilon);\\n    gl_FragColor = vec4(mix(currentColor.rgb, (newColor + colorDiff) * currentColor.a, doReplace), currentColor.a);\\n}\\n\")||this;return o._originalColor=16711680,o._newColor=0,o.uniforms.originalColor=new Float32Array(3),o.uniforms.newColor=new Float32Array(3),o.originalColor=n,o.newColor=t,o.epsilon=r,o}return u(n,e),Object.defineProperty(n.prototype,\"originalColor\",{get:function(){return this._originalColor},set:function(e){var n=this.uniforms.originalColor;\"number\"==typeof e?(o.hex2rgb(e,n),this._originalColor=e):(n[0]=e[0],n[1]=e[1],n[2]=e[2],this._originalColor=o.rgb2hex(n))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"newColor\",{get:function(){return this._newColor},set:function(e){var n=this.uniforms.newColor;\"number\"==typeof e?(o.hex2rgb(e,n),this._newColor=e):(n[0]=e[0],n[1]=e[1],n[2]=e[2],this._newColor=o.rgb2hex(n))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"epsilon\",{get:function(){return this.uniforms.epsilon},set:function(e){this.uniforms.epsilon=e},enumerable:!1,configurable:!0}),n}(n.Filter),S=function(e){function n(n,t,r){void 0===t&&(t=200),void 0===r&&(r=200);var o=e.call(this,c,\"precision mediump float;\\n\\nvarying mediump vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec2 texelSize;\\nuniform float matrix[9];\\n\\nvoid main(void)\\n{\\n   vec4 c11 = texture2D(uSampler, vTextureCoord - texelSize); // top left\\n   vec4 c12 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - texelSize.y)); // top center\\n   vec4 c13 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y - texelSize.y)); // top right\\n\\n   vec4 c21 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y)); // mid left\\n   vec4 c22 = texture2D(uSampler, vTextureCoord); // mid center\\n   vec4 c23 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y)); // mid right\\n\\n   vec4 c31 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y + texelSize.y)); // bottom left\\n   vec4 c32 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + texelSize.y)); // bottom center\\n   vec4 c33 = texture2D(uSampler, vTextureCoord + texelSize); // bottom right\\n\\n   gl_FragColor =\\n       c11 * matrix[0] + c12 * matrix[1] + c13 * matrix[2] +\\n       c21 * matrix[3] + c22 * matrix[4] + c23 * matrix[5] +\\n       c31 * matrix[6] + c32 * matrix[7] + c33 * matrix[8];\\n\\n   gl_FragColor.a = c22.a;\\n}\\n\")||this;return o.uniforms.texelSize=new Float32Array(2),o.uniforms.matrix=new Float32Array(9),void 0!==n&&(o.matrix=n),o.width=t,o.height=r,o}return u(n,e),Object.defineProperty(n.prototype,\"matrix\",{get:function(){return this.uniforms.matrix},set:function(e){var n=this;e.forEach((function(e,t){n.uniforms.matrix[t]=e}))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"width\",{get:function(){return 1/this.uniforms.texelSize[0]},set:function(e){this.uniforms.texelSize[0]=1/e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"height\",{get:function(){return 1/this.uniforms.texelSize[1]},set:function(e){this.uniforms.texelSize[1]=1/e},enumerable:!1,configurable:!0}),n}(n.Filter),F=function(e){function n(){return e.call(this,c,\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\\n\\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n    if (lum < 1.00)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.75)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.50)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.3)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n}\\n\")||this}return u(n,e),n}(n.Filter),z=function(e){function n(t){var r=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nconst float SQRT_2 = 1.414213;\\n\\nconst float light = 1.0;\\n\\nuniform float curvature;\\nuniform float lineWidth;\\nuniform float lineContrast;\\nuniform bool verticalLine;\\nuniform float noise;\\nuniform float noiseSize;\\n\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\n\\nuniform float seed;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 dir = vec2(vTextureCoord.xy - vec2(0.5, 0.5)) * filterArea.xy / dimensions;\\n\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 rgb = gl_FragColor.rgb;\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        rgb += _noise * noise;\\n    }\\n\\n    if (lineWidth > 0.0)\\n    {\\n        float _c = curvature > 0. ? curvature : 1.;\\n        float k = curvature > 0. ?(length(dir * dir) * 0.25 * _c * _c + 0.935 * _c) : 1.;\\n        vec2 uv = dir * k;\\n\\n        float v = (verticalLine ? uv.x * dimensions.x : uv.y * dimensions.y) * min(1.0, 2.0 / lineWidth ) / _c;\\n        float j = 1. + cos(v * 1.2 - time) * 0.5 * lineContrast;\\n        rgb *= j;\\n        float segment = verticalLine ? mod((dir.x + .5) * dimensions.x, 4.) : mod((dir.y + .5) * dimensions.y, 4.);\\n        rgb *= 0.99 + ceil(segment) * 0.015;\\n    }\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    gl_FragColor.rgb = rgb;\\n}\\n\")||this;return r.time=0,r.seed=0,r.uniforms.dimensions=new Float32Array(2),Object.assign(r,n.defaults,t),r}return u(n,e),n.prototype.apply=function(e,n,t,r){var o=n.filterFrame,i=o.width,l=o.height;this.uniforms.dimensions[0]=i,this.uniforms.dimensions[1]=l,this.uniforms.seed=this.seed,this.uniforms.time=this.time,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"curvature\",{get:function(){return this.uniforms.curvature},set:function(e){this.uniforms.curvature=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"lineWidth\",{get:function(){return this.uniforms.lineWidth},set:function(e){this.uniforms.lineWidth=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"lineContrast\",{get:function(){return this.uniforms.lineContrast},set:function(e){this.uniforms.lineContrast=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"verticalLine\",{get:function(){return this.uniforms.verticalLine},set:function(e){this.uniforms.verticalLine=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"noise\",{get:function(){return this.uniforms.noise},set:function(e){this.uniforms.noise=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"noiseSize\",{get:function(){return this.uniforms.noiseSize},set:function(e){this.uniforms.noiseSize=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"vignetting\",{get:function(){return this.uniforms.vignetting},set:function(e){this.uniforms.vignetting=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"vignettingAlpha\",{get:function(){return this.uniforms.vignettingAlpha},set:function(e){this.uniforms.vignettingAlpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"vignettingBlur\",{get:function(){return this.uniforms.vignettingBlur},set:function(e){this.uniforms.vignettingBlur=e},enumerable:!1,configurable:!0}),n.defaults={curvature:1,lineWidth:1,lineContrast:.25,verticalLine:!1,noise:0,noiseSize:1,seed:0,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3,time:0},n}(n.Filter),O=function(e){function n(n,t){void 0===n&&(n=1),void 0===t&&(t=5);var r=e.call(this,c,\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;\\n\\nuniform float angle;\\nuniform float scale;\\n\\nfloat pattern()\\n{\\n   float s = sin(angle), c = cos(angle);\\n   vec2 tex = vTextureCoord * filterArea.xy;\\n   vec2 point = vec2(\\n       c * tex.x - s * tex.y,\\n       s * tex.x + c * tex.y\\n   ) * scale;\\n   return (sin(point.x) * sin(point.y)) * 4.0;\\n}\\n\\nvoid main()\\n{\\n   vec4 color = texture2D(uSampler, vTextureCoord);\\n   float average = (color.r + color.g + color.b) / 3.0;\\n   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\\n}\\n\")||this;return r.scale=n,r.angle=t,r}return u(n,e),Object.defineProperty(n.prototype,\"scale\",{get:function(){return this.uniforms.scale},set:function(e){this.uniforms.scale=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"angle\",{get:function(){return this.uniforms.angle},set:function(e){this.uniforms.angle=e},enumerable:!1,configurable:!0}),n}(n.Filter),P=function(e){function i(o){var l=e.call(this)||this;l.angle=45,l._distance=5,l._resolution=r.settings.FILTER_RESOLUTION;var a=o?f(f({},i.defaults),o):i.defaults,s=a.kernels,u=a.blur,m=a.quality,p=a.pixelSize,h=a.resolution;l._tintFilter=new n.Filter(c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform vec3 color;\\n\\nuniform vec2 shift;\\nuniform vec4 inputSize;\\n\\nvoid main(void){\\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\\n\\n    // Premultiply alpha\\n    sample.rgb = color.rgb * sample.a;\\n\\n    // alpha user alpha\\n    sample *= alpha;\\n\\n    gl_FragColor = sample;\\n}\"),l._tintFilter.uniforms.color=new Float32Array(4),l._tintFilter.uniforms.shift=new t.Point,l._tintFilter.resolution=h,l._blurFilter=s?new d(s):new d(u,m),l.pixelSize=p,l.resolution=h;var g=a.shadowOnly,v=a.rotation,y=a.distance,b=a.alpha,x=a.color;return l.shadowOnly=g,l.rotation=v,l.distance=y,l.alpha=b,l.color=x,l._updatePadding(),l}return u(i,e),i.prototype.apply=function(e,n,t,r){var o=e.getFilterTexture();this._tintFilter.apply(e,n,o,1),this._blurFilter.apply(e,o,t,r),!0!==this.shadowOnly&&e.applyFilter(this,n,t,0),e.returnFilterTexture(o)},i.prototype._updatePadding=function(){this.padding=this.distance+2*this.blur},i.prototype._updateShift=function(){this._tintFilter.uniforms.shift.set(this.distance*Math.cos(this.angle),this.distance*Math.sin(this.angle))},Object.defineProperty(i.prototype,\"resolution\",{get:function(){return this._resolution},set:function(e){this._resolution=e,this._tintFilter&&(this._tintFilter.resolution=e),this._blurFilter&&(this._blurFilter.resolution=e)},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"distance\",{get:function(){return this._distance},set:function(e){this._distance=e,this._updatePadding(),this._updateShift()},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"rotation\",{get:function(){return this.angle/t.DEG_TO_RAD},set:function(e){this.angle=e*t.DEG_TO_RAD,this._updateShift()},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"alpha\",{get:function(){return this._tintFilter.uniforms.alpha},set:function(e){this._tintFilter.uniforms.alpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"color\",{get:function(){return o.rgb2hex(this._tintFilter.uniforms.color)},set:function(e){o.hex2rgb(e,this._tintFilter.uniforms.color)},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"kernels\",{get:function(){return this._blurFilter.kernels},set:function(e){this._blurFilter.kernels=e},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"blur\",{get:function(){return this._blurFilter.blur},set:function(e){this._blurFilter.blur=e,this._updatePadding()},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"quality\",{get:function(){return this._blurFilter.quality},set:function(e){this._blurFilter.quality=e},enumerable:!1,configurable:!0}),Object.defineProperty(i.prototype,\"pixelSize\",{get:function(){return this._blurFilter.pixelSize},set:function(e){this._blurFilter.pixelSize=e},enumerable:!1,configurable:!0}),i.defaults={rotation:45,distance:5,color:0,alpha:.5,shadowOnly:!1,kernels:null,blur:2,quality:3,pixelSize:1,resolution:r.settings.FILTER_RESOLUTION},i}(n.Filter),A=function(e){function n(n){void 0===n&&(n=5);var t=e.call(this,c,\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float strength;\\nuniform vec4 filterArea;\\n\\n\\nvoid main(void)\\n{\\n\\tvec2 onePixel = vec2(1.0 / filterArea);\\n\\n\\tvec4 color;\\n\\n\\tcolor.rgb = vec3(0.5);\\n\\n\\tcolor -= texture2D(uSampler, vTextureCoord - onePixel) * strength;\\n\\tcolor += texture2D(uSampler, vTextureCoord + onePixel) * strength;\\n\\n\\tcolor.rgb = vec3((color.r + color.g + color.b) / 3.0);\\n\\n\\tfloat alpha = texture2D(uSampler, vTextureCoord).a;\\n\\n\\tgl_FragColor = vec4(color.rgb * alpha, alpha);\\n}\\n\")||this;return t.strength=n,t}return u(n,e),Object.defineProperty(n.prototype,\"strength\",{get:function(){return this.uniforms.strength},set:function(e){this.uniforms.strength=e},enumerable:!1,configurable:!0}),n}(n.Filter),T=function(e){function r(t){var o=e.call(this,c,\"// precision highp float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\nuniform float aspect;\\n\\nuniform sampler2D displacementMap;\\nuniform float offset;\\nuniform float sinDir;\\nuniform float cosDir;\\nuniform int fillMode;\\n\\nuniform float seed;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nconst int TRANSPARENT = 0;\\nconst int ORIGINAL = 1;\\nconst int LOOP = 2;\\nconst int CLAMP = 3;\\nconst int MIRROR = 4;\\n\\nvoid main(void)\\n{\\n    vec2 coord = (vTextureCoord * filterArea.xy) / dimensions;\\n\\n    if (coord.x > 1.0 || coord.y > 1.0) {\\n        return;\\n    }\\n\\n    float cx = coord.x - 0.5;\\n    float cy = (coord.y - 0.5) * aspect;\\n    float ny = (-sinDir * cx + cosDir * cy) / aspect + 0.5;\\n\\n    // displacementMap: repeat\\n    // ny = ny > 1.0 ? ny - 1.0 : (ny < 0.0 ? 1.0 + ny : ny);\\n\\n    // displacementMap: mirror\\n    ny = ny > 1.0 ? 2.0 - ny : (ny < 0.0 ? -ny : ny);\\n\\n    vec4 dc = texture2D(displacementMap, vec2(0.5, ny));\\n\\n    float displacement = (dc.r - dc.g) * (offset / filterArea.x);\\n\\n    coord = vTextureCoord + vec2(cosDir * displacement, sinDir * displacement * aspect);\\n\\n    if (fillMode == CLAMP) {\\n        coord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    } else {\\n        if( coord.x > filterClamp.z ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.x -= filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x = filterClamp.z * 2.0 - coord.x;\\n            }\\n        } else if( coord.x < filterClamp.x ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.x += filterClamp.z;\\n            } else if (fillMode == MIRROR) {\\n                coord.x *= -filterClamp.z;\\n            }\\n        }\\n\\n        if( coord.y > filterClamp.w ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.y -= filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y = filterClamp.w * 2.0 - coord.y;\\n            }\\n        } else if( coord.y < filterClamp.y ) {\\n            if (fillMode == TRANSPARENT) {\\n                discard;\\n            } else if (fillMode == LOOP) {\\n                coord.y += filterClamp.w;\\n            } else if (fillMode == MIRROR) {\\n                coord.y *= -filterClamp.w;\\n            }\\n        }\\n    }\\n\\n    gl_FragColor.r = texture2D(uSampler, coord + red * (1.0 - seed * 0.4) / filterArea.xy).r;\\n    gl_FragColor.g = texture2D(uSampler, coord + green * (1.0 - seed * 0.3) / filterArea.xy).g;\\n    gl_FragColor.b = texture2D(uSampler, coord + blue * (1.0 - seed * 0.2) / filterArea.xy).b;\\n    gl_FragColor.a = texture2D(uSampler, coord).a;\\n}\\n\")||this;return o.offset=100,o.fillMode=r.TRANSPARENT,o.average=!1,o.seed=0,o.minSize=8,o.sampleSize=512,o._slices=0,o._offsets=new Float32Array(1),o._sizes=new Float32Array(1),o._direction=-1,o.uniforms.dimensions=new Float32Array(2),o._canvas=document.createElement(\"canvas\"),o._canvas.width=4,o._canvas.height=o.sampleSize,o.texture=n.Texture.from(o._canvas,{scaleMode:i.SCALE_MODES.NEAREST}),Object.assign(o,r.defaults,t),o}return u(r,e),r.prototype.apply=function(e,n,t,r){var o=n.filterFrame,i=o.width,l=o.height;this.uniforms.dimensions[0]=i,this.uniforms.dimensions[1]=l,this.uniforms.aspect=l/i,this.uniforms.seed=this.seed,this.uniforms.offset=this.offset,this.uniforms.fillMode=this.fillMode,e.applyFilter(this,n,t,r)},r.prototype._randomizeSizes=function(){var e=this._sizes,n=this._slices-1,t=this.sampleSize,r=Math.min(this.minSize/t,.9/this._slices);if(this.average){for(var o=this._slices,i=1,l=0;l<n;l++){var a=i/(o-l),s=Math.max(a*(1-.6*Math.random()),r);e[l]=s,i-=s}e[n]=i}else{i=1;var u=Math.sqrt(1/this._slices);for(l=0;l<n;l++){s=Math.max(u*i*Math.random(),r);e[l]=s,i-=s}e[n]=i}this.shuffle()},r.prototype.shuffle=function(){for(var e=this._sizes,n=this._slices-1;n>0;n--){var t=Math.random()*n>>0,r=e[n];e[n]=e[t],e[t]=r}},r.prototype._randomizeOffsets=function(){for(var e=0;e<this._slices;e++)this._offsets[e]=Math.random()*(Math.random()<.5?-1:1)},r.prototype.refresh=function(){this._randomizeSizes(),this._randomizeOffsets(),this.redraw()},r.prototype.redraw=function(){var e,n=this.sampleSize,t=this.texture,r=this._canvas.getContext(\"2d\");r.clearRect(0,0,8,n);for(var o=0,i=0;i<this._slices;i++){e=Math.floor(256*this._offsets[i]);var l=this._sizes[i]*n,a=e>0?e:0,s=e<0?-e:0;r.fillStyle=\"rgba(\"+a+\", \"+s+\", 0, 1)\",r.fillRect(0,o>>0,n,l+1>>0),o+=l}t.baseTexture.update(),this.uniforms.displacementMap=t},Object.defineProperty(r.prototype,\"sizes\",{get:function(){return this._sizes},set:function(e){for(var n=Math.min(this._slices,e.length),t=0;t<n;t++)this._sizes[t]=e[t]},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"offsets\",{get:function(){return this._offsets},set:function(e){for(var n=Math.min(this._slices,e.length),t=0;t<n;t++)this._offsets[t]=e[t]},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"slices\",{get:function(){return this._slices},set:function(e){this._slices!==e&&(this._slices=e,this.uniforms.slices=e,this._sizes=this.uniforms.slicesWidth=new Float32Array(e),this._offsets=this.uniforms.slicesOffset=new Float32Array(e),this.refresh())},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"direction\",{get:function(){return this._direction},set:function(e){if(this._direction!==e){this._direction=e;var n=e*t.DEG_TO_RAD;this.uniforms.sinDir=Math.sin(n),this.uniforms.cosDir=Math.cos(n)}},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"red\",{get:function(){return this.uniforms.red},set:function(e){this.uniforms.red=e},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"green\",{get:function(){return this.uniforms.green},set:function(e){this.uniforms.green=e},enumerable:!1,configurable:!0}),Object.defineProperty(r.prototype,\"blue\",{get:function(){return this.uniforms.blue},set:function(e){this.uniforms.blue=e},enumerable:!1,configurable:!0}),r.prototype.destroy=function(){var e;null===(e=this.texture)||void 0===e||e.destroy(!0),this.texture=this._canvas=this.red=this.green=this.blue=this._sizes=this._offsets=null},r.defaults={slices:5,offset:100,direction:0,fillMode:0,average:!1,seed:0,red:[0,0],green:[0,0],blue:[0,0],minSize:8,sampleSize:512},r.TRANSPARENT=0,r.ORIGINAL=1,r.LOOP=2,r.CLAMP=3,r.MIRROR=4,r}(n.Filter),w=function(e){function n(t){var r=this,o=Object.assign({},n.defaults,t),i=o.outerStrength,l=o.innerStrength,a=o.color,s=o.knockout,u=o.quality,f=Math.round(o.distance);return(r=e.call(this,c,\"varying vec2 vTextureCoord;\\nvarying vec4 vColor;\\n\\nuniform sampler2D uSampler;\\n\\nuniform float outerStrength;\\nuniform float innerStrength;\\n\\nuniform vec4 glowColor;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform bool knockout;\\n\\nconst float PI = 3.14159265358979323846264;\\n\\nconst float DIST = __DIST__;\\nconst float ANGLE_STEP_SIZE = min(__ANGLE_STEP_SIZE__, PI * 2.0);\\nconst float ANGLE_STEP_NUM = ceil(PI * 2.0 / ANGLE_STEP_SIZE);\\n\\nconst float MAX_TOTAL_ALPHA = ANGLE_STEP_NUM * DIST * (DIST + 1.0) / 2.0;\\n\\nvoid main(void) {\\n    vec2 px = vec2(1.0 / filterArea.x, 1.0 / filterArea.y);\\n\\n    float totalAlpha = 0.0;\\n\\n    vec2 direction;\\n    vec2 displaced;\\n    vec4 curColor;\\n\\n    for (float angle = 0.0; angle < PI * 2.0; angle += ANGLE_STEP_SIZE) {\\n       direction = vec2(cos(angle), sin(angle)) * px;\\n\\n       for (float curDistance = 0.0; curDistance < DIST; curDistance++) {\\n           displaced = clamp(vTextureCoord + direction * \\n                   (curDistance + 1.0), filterClamp.xy, filterClamp.zw);\\n\\n           curColor = texture2D(uSampler, displaced);\\n\\n           totalAlpha += (DIST - curDistance) * curColor.a;\\n       }\\n    }\\n    \\n    curColor = texture2D(uSampler, vTextureCoord);\\n\\n    float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\\n\\n    float innerGlowAlpha = (1.0 - alphaRatio) * innerStrength * curColor.a;\\n    float innerGlowStrength = min(1.0, innerGlowAlpha);\\n    \\n    vec4 innerColor = mix(curColor, glowColor, innerGlowStrength);\\n\\n    float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\\n    float outerGlowStrength = min(1.0 - innerColor.a, outerGlowAlpha);\\n\\n    vec4 outerGlowColor = outerGlowStrength * glowColor.rgba;\\n    \\n    if (knockout) {\\n      float resultAlpha = outerGlowAlpha + innerGlowAlpha;\\n      gl_FragColor = vec4(glowColor.rgb * resultAlpha, resultAlpha);\\n    }\\n    else {\\n      gl_FragColor = innerColor + outerGlowColor;\\n    }\\n}\\n\".replace(/__ANGLE_STEP_SIZE__/gi,\"\"+(1/u/f).toFixed(7)).replace(/__DIST__/gi,f.toFixed(0)+\".0\"))||this).uniforms.glowColor=new Float32Array([0,0,0,1]),Object.assign(r,{color:a,outerStrength:i,innerStrength:l,padding:f,knockout:s}),r}return u(n,e),Object.defineProperty(n.prototype,\"color\",{get:function(){return o.rgb2hex(this.uniforms.glowColor)},set:function(e){o.hex2rgb(e,this.uniforms.glowColor)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"outerStrength\",{get:function(){return this.uniforms.outerStrength},set:function(e){this.uniforms.outerStrength=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"innerStrength\",{get:function(){return this.uniforms.innerStrength},set:function(e){this.uniforms.innerStrength=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"knockout\",{get:function(){return this.uniforms.knockout},set:function(e){this.uniforms.knockout=e},enumerable:!1,configurable:!0}),n.defaults={distance:10,outerStrength:4,innerStrength:0,color:16777215,quality:.1,knockout:!1},n}(n.Filter),D=function(e){function n(r){var o=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform vec2 light;\\nuniform bool parallel;\\nuniform float aspect;\\n\\nuniform float gain;\\nuniform float lacunarity;\\nuniform float time;\\nuniform float alpha;\\n\\n${perlin}\\n\\nvoid main(void) {\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    float d;\\n\\n    if (parallel) {\\n        float _cos = light.x;\\n        float _sin = light.y;\\n        d = (_cos * coord.x) + (_sin * coord.y * aspect);\\n    } else {\\n        float dx = coord.x - light.x / dimensions.x;\\n        float dy = (coord.y - light.y / dimensions.y) * aspect;\\n        float dis = sqrt(dx * dx + dy * dy) + 0.00001;\\n        d = dy / dis;\\n    }\\n\\n    vec3 dir = vec3(d, d, 0.0);\\n\\n    float noise = turb(dir + vec3(time, 0.0, 62.1 + time) * 0.05, vec3(480.0, 320.0, 480.0), lacunarity, gain);\\n    noise = mix(noise, 0.0, 0.3);\\n    //fade vertically.\\n    vec4 mist = vec4(noise, noise, noise, 1.0) * (1.0 - coord.y);\\n    mist.a = 1.0;\\n    // apply user alpha\\n    mist *= alpha;\\n\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) + mist;\\n\\n}\\n\".replace(\"${perlin}\",\"vec3 mod289(vec3 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 mod289(vec4 x)\\n{\\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\nvec4 permute(vec4 x)\\n{\\n    return mod289(((x * 34.0) + 1.0) * x);\\n}\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n    return 1.79284291400159 - 0.85373472095314 * r;\\n}\\nvec3 fade(vec3 t)\\n{\\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec3 P, vec3 rep)\\n{\\n    vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n    Pi0 = mod289(Pi0);\\n    Pi1 = mod289(Pi1);\\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n    vec4 iz0 = Pi0.zzzz;\\n    vec4 iz1 = Pi1.zzzz;\\n    vec4 ixy = permute(permute(ix) + iy);\\n    vec4 ixy0 = permute(ixy + iz0);\\n    vec4 ixy1 = permute(ixy + iz1);\\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n    gx0 = fract(gx0);\\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n    vec4 sz0 = step(gz0, vec4(0.0));\\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n    gx1 = fract(gx1);\\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n    vec4 sz1 = step(gz1, vec4(0.0));\\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n    vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\\n    vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\\n    vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\\n    vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\\n    vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\\n    vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\\n    vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\\n    vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n    g000 *= norm0.x;\\n    g010 *= norm0.y;\\n    g100 *= norm0.z;\\n    g110 *= norm0.w;\\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n    g001 *= norm1.x;\\n    g011 *= norm1.y;\\n    g101 *= norm1.z;\\n    g111 *= norm1.w;\\n    float n000 = dot(g000, Pf0);\\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n    float n111 = dot(g111, Pf1);\\n    vec3 fade_xyz = fade(Pf0);\\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n    return 2.2 * n_xyz;\\n}\\nfloat turb(vec3 P, vec3 rep, float lacunarity, float gain)\\n{\\n    float sum = 0.0;\\n    float sc = 1.0;\\n    float totalgain = 1.0;\\n    for (float i = 0.0; i < 6.0; i++)\\n    {\\n        sum += totalgain * pnoise(P * sc, rep);\\n        sc *= lacunarity;\\n        totalgain *= gain;\\n    }\\n    return abs(sum);\\n}\\n\"))||this;o.parallel=!0,o.time=0,o._angle=0,o.uniforms.dimensions=new Float32Array(2);var i=Object.assign(n.defaults,r);return o._angleLight=new t.Point,o.angle=i.angle,o.gain=i.gain,o.lacunarity=i.lacunarity,o.alpha=i.alpha,o.parallel=i.parallel,o.center=i.center,o.time=i.time,o}return u(n,e),n.prototype.apply=function(e,n,t,r){var o=n.filterFrame,i=o.width,l=o.height;this.uniforms.light=this.parallel?this._angleLight:this.center,this.uniforms.parallel=this.parallel,this.uniforms.dimensions[0]=i,this.uniforms.dimensions[1]=l,this.uniforms.aspect=l/i,this.uniforms.time=this.time,this.uniforms.alpha=this.alpha,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"angle\",{get:function(){return this._angle},set:function(e){this._angle=e;var n=e*t.DEG_TO_RAD;this._angleLight.x=Math.cos(n),this._angleLight.y=Math.sin(n)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"gain\",{get:function(){return this.uniforms.gain},set:function(e){this.uniforms.gain=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"lacunarity\",{get:function(){return this.uniforms.lacunarity},set:function(e){this.uniforms.lacunarity=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"alpha\",{get:function(){return this.uniforms.alpha},set:function(e){this.uniforms.alpha=e},enumerable:!1,configurable:!0}),n.defaults={angle:30,gain:.5,lacunarity:2.5,time:0,parallel:!0,center:[0,0],alpha:1},n}(n.Filter),j=function(e){function n(n,r,o){void 0===n&&(n=[0,0]),void 0===r&&(r=5),void 0===o&&(o=0);var i=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uVelocity;\\nuniform int uKernelSize;\\nuniform float uOffset;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\n\\n// Notice:\\n// the perfect way:\\n//    int kernelSize = min(uKernelSize, MAX_KERNELSIZE);\\n// BUT in real use-case , uKernelSize < MAX_KERNELSIZE almost always.\\n// So use uKernelSize directly.\\n\\nvoid main(void)\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        gl_FragColor = color;\\n        return;\\n    }\\n\\n    vec2 velocity = uVelocity / filterArea.xy;\\n    float offset = -uOffset / length(uVelocity) - 0.5;\\n    int k = uKernelSize - 1;\\n\\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\\n        if (i == k) {\\n            break;\\n        }\\n        vec2 bias = velocity * (float(i) / float(k) + offset);\\n        color += texture2D(uSampler, vTextureCoord + bias);\\n    }\\n    gl_FragColor = color / float(uKernelSize);\\n}\\n\")||this;return i.kernelSize=5,i.uniforms.uVelocity=new Float32Array(2),i._velocity=new t.ObservablePoint(i.velocityChanged,i),i.setVelocity(n),i.kernelSize=r,i.offset=o,i}return u(n,e),n.prototype.apply=function(e,n,t,r){var o=this.velocity,i=o.x,l=o.y;this.uniforms.uKernelSize=0!==i||0!==l?this.kernelSize:0,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"velocity\",{get:function(){return this._velocity},set:function(e){this.setVelocity(e)},enumerable:!1,configurable:!0}),n.prototype.setVelocity=function(e){if(Array.isArray(e)){var n=e[0],t=e[1];this._velocity.set(n,t)}else this._velocity.copyFrom(e)},n.prototype.velocityChanged=function(){this.uniforms.uVelocity[0]=this._velocity.x,this.uniforms.uVelocity[1]=this._velocity.y,this.padding=1+(Math.max(Math.abs(this._velocity.x),Math.abs(this._velocity.y))>>0)},Object.defineProperty(n.prototype,\"offset\",{get:function(){return this.uniforms.uOffset},set:function(e){this.uniforms.uOffset=e},enumerable:!1,configurable:!0}),n}(n.Filter),M=function(e){function n(n,t,r){void 0===t&&(t=.05),void 0===r&&(r=n.length);var o=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform float epsilon;\\n\\nconst int MAX_COLORS = %maxColors%;\\n\\nuniform vec3 originalColors[MAX_COLORS];\\nuniform vec3 targetColors[MAX_COLORS];\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n\\n    float alpha = gl_FragColor.a;\\n    if (alpha < 0.0001)\\n    {\\n      return;\\n    }\\n\\n    vec3 color = gl_FragColor.rgb / alpha;\\n\\n    for(int i = 0; i < MAX_COLORS; i++)\\n    {\\n      vec3 origColor = originalColors[i];\\n      if (origColor.r < 0.0)\\n      {\\n        break;\\n      }\\n      vec3 colorDiff = origColor - color;\\n      if (length(colorDiff) < epsilon)\\n      {\\n        vec3 targetColor = targetColors[i];\\n        gl_FragColor = vec4((targetColor + colorDiff) * alpha, alpha);\\n        return;\\n      }\\n    }\\n}\\n\".replace(/%maxColors%/g,r.toFixed(0)))||this;return o._replacements=[],o._maxColors=0,o.epsilon=t,o._maxColors=r,o.uniforms.originalColors=new Float32Array(3*r),o.uniforms.targetColors=new Float32Array(3*r),o.replacements=n,o}return u(n,e),Object.defineProperty(n.prototype,\"replacements\",{get:function(){return this._replacements},set:function(e){var n=this.uniforms.originalColors,t=this.uniforms.targetColors,r=e.length;if(r>this._maxColors)throw new Error(\"Length of replacements (\"+r+\") exceeds the maximum colors length (\"+this._maxColors+\")\");n[3*r]=-1;for(var i=0;i<r;i++){var l=e[i],a=l[0];\"number\"==typeof a?a=o.hex2rgb(a):l[0]=o.rgb2hex(a),n[3*i]=a[0],n[3*i+1]=a[1],n[3*i+2]=a[2];var s=l[1];\"number\"==typeof s?s=o.hex2rgb(s):l[1]=o.rgb2hex(s),t[3*i]=s[0],t[3*i+1]=s[1],t[3*i+2]=s[2]}this._replacements=e},enumerable:!1,configurable:!0}),n.prototype.refresh=function(){this.replacements=this._replacements},Object.defineProperty(n.prototype,\"maxColors\",{get:function(){return this._maxColors},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"epsilon\",{get:function(){return this.uniforms.epsilon},set:function(e){this.uniforms.epsilon=e},enumerable:!1,configurable:!0}),n}(n.Filter),R=function(e){function n(t,r){void 0===r&&(r=0);var o=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\n\\nuniform float sepia;\\nuniform float noise;\\nuniform float noiseSize;\\nuniform float scratch;\\nuniform float scratchDensity;\\nuniform float scratchWidth;\\nuniform float vignetting;\\nuniform float vignettingAlpha;\\nuniform float vignettingBlur;\\nuniform float seed;\\n\\nconst float SQRT_2 = 1.414213;\\nconst vec3 SEPIA_RGB = vec3(112.0 / 255.0, 66.0 / 255.0, 20.0 / 255.0);\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvec3 Overlay(vec3 src, vec3 dst)\\n{\\n    // if (dst <= 0.5) then: 2 * src * dst\\n    // if (dst > 0.5) then: 1 - 2 * (1 - dst) * (1 - src)\\n    return vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\\n                (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\\n                (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)));\\n}\\n\\n\\nvoid main()\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\\n    vec3 color = gl_FragColor.rgb;\\n\\n    if (sepia > 0.0)\\n    {\\n        float gray = (color.x + color.y + color.z) / 3.0;\\n        vec3 grayscale = vec3(gray);\\n\\n        color = Overlay(SEPIA_RGB, grayscale);\\n\\n        color = grayscale + sepia * (color - grayscale);\\n    }\\n\\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\\n\\n    if (vignetting > 0.0)\\n    {\\n        float outter = SQRT_2 - vignetting * SQRT_2;\\n        vec2 dir = vec2(vec2(0.5, 0.5) - coord);\\n        dir.y *= dimensions.y / dimensions.x;\\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\\n        color.rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\\n    }\\n\\n    if (scratchDensity > seed && scratch != 0.0)\\n    {\\n        float phase = seed * 256.0;\\n        float s = mod(floor(phase), 2.0);\\n        float dist = 1.0 / scratchDensity;\\n        float d = distance(coord, vec2(seed * dist, abs(s - seed * dist)));\\n        if (d < seed * 0.6 + 0.4)\\n        {\\n            highp float period = scratchDensity * 10.0;\\n\\n            float xx = coord.x * period + phase;\\n            float aa = abs(mod(xx, 0.5) * 4.0);\\n            float bb = mod(floor(xx / 0.5), 2.0);\\n            float yy = (1.0 - bb) * aa + bb * (2.0 - aa);\\n\\n            float kk = 2.0 * period;\\n            float dw = scratchWidth / dimensions.x * (0.75 + seed);\\n            float dh = dw * kk;\\n\\n            float tine = (yy - (2.0 - dh));\\n\\n            if (tine > 0.0) {\\n                float _sign = sign(scratch);\\n\\n                tine = s * tine / period + scratch + 0.1;\\n                tine = clamp(tine + 1.0, 0.5 + _sign * 0.5, 1.5 + _sign * 0.5);\\n\\n                color.rgb *= tine;\\n            }\\n        }\\n    }\\n\\n    if (noise > 0.0 && noiseSize > 0.0)\\n    {\\n        vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\\n        // vec2 d = pixelCoord * noiseSize * vec2(1024.0 + seed * 512.0, 1024.0 - seed * 512.0);\\n        // float _noise = snoise(d) * 0.5;\\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\\n        color += _noise * noise;\\n    }\\n\\n    gl_FragColor.rgb = color;\\n}\\n\")||this;return o.seed=0,o.uniforms.dimensions=new Float32Array(2),\"number\"==typeof t?(o.seed=t,t=void 0):o.seed=r,Object.assign(o,n.defaults,t),o}return u(n,e),n.prototype.apply=function(e,n,t,r){var o,i;this.uniforms.dimensions[0]=null===(o=n.filterFrame)||void 0===o?void 0:o.width,this.uniforms.dimensions[1]=null===(i=n.filterFrame)||void 0===i?void 0:i.height,this.uniforms.seed=this.seed,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"sepia\",{get:function(){return this.uniforms.sepia},set:function(e){this.uniforms.sepia=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"noise\",{get:function(){return this.uniforms.noise},set:function(e){this.uniforms.noise=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"noiseSize\",{get:function(){return this.uniforms.noiseSize},set:function(e){this.uniforms.noiseSize=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"scratch\",{get:function(){return this.uniforms.scratch},set:function(e){this.uniforms.scratch=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"scratchDensity\",{get:function(){return this.uniforms.scratchDensity},set:function(e){this.uniforms.scratchDensity=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"scratchWidth\",{get:function(){return this.uniforms.scratchWidth},set:function(e){this.uniforms.scratchWidth=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"vignetting\",{get:function(){return this.uniforms.vignetting},set:function(e){this.uniforms.vignetting=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"vignettingAlpha\",{get:function(){return this.uniforms.vignettingAlpha},set:function(e){this.uniforms.vignettingAlpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"vignettingBlur\",{get:function(){return this.uniforms.vignettingBlur},set:function(e){this.uniforms.vignettingBlur=e},enumerable:!1,configurable:!0}),n.defaults={sepia:.3,noise:.3,noiseSize:1,scratch:.5,scratchDensity:.3,scratchWidth:1,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3},n}(n.Filter),E=function(e){function n(t,r,o){void 0===t&&(t=1),void 0===r&&(r=0),void 0===o&&(o=.1);var i=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec2 thickness;\\nuniform vec4 outlineColor;\\nuniform vec4 filterClamp;\\n\\nconst float DOUBLE_PI = 3.14159265358979323846264 * 2.;\\n\\nvoid main(void) {\\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\\n    vec4 curColor;\\n    float maxAlpha = 0.;\\n    vec2 displaced;\\n    for (float angle = 0.; angle <= DOUBLE_PI; angle += ${angleStep}) {\\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\\n        curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\\n        maxAlpha = max(maxAlpha, curColor.a);\\n    }\\n    float resultAlpha = max(maxAlpha, ownColor.a);\\n    gl_FragColor = vec4((ownColor.rgb + outlineColor.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\\n}\\n\".replace(/\\$\\{angleStep\\}/,n.getAngleStep(o)))||this;return i._thickness=1,i.uniforms.thickness=new Float32Array([0,0]),i.uniforms.outlineColor=new Float32Array([0,0,0,1]),Object.assign(i,{thickness:t,color:r,quality:o}),i}return u(n,e),n.getAngleStep=function(e){var t=Math.max(e*n.MAX_SAMPLES,n.MIN_SAMPLES);return(2*Math.PI/t).toFixed(7)},n.prototype.apply=function(e,n,t,r){this.uniforms.thickness[0]=this._thickness/n._frame.width,this.uniforms.thickness[1]=this._thickness/n._frame.height,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"color\",{get:function(){return o.rgb2hex(this.uniforms.outlineColor)},set:function(e){o.hex2rgb(e,this.uniforms.outlineColor)},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"thickness\",{get:function(){return this._thickness},set:function(e){this._thickness=e,this.padding=e},enumerable:!1,configurable:!0}),n.MIN_SAMPLES=1,n.MAX_SAMPLES=100,n}(n.Filter),I=function(e){function n(n){void 0===n&&(n=10);var t=e.call(this,c,\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform vec2 size;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 pixelate(vec2 coord, vec2 size)\\n{\\n\\treturn floor( coord / size ) * size;\\n}\\n\\nvoid main(void)\\n{\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = pixelate(coord, size);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord);\\n}\\n\")||this;return t.size=n,t}return u(n,e),Object.defineProperty(n.prototype,\"size\",{get:function(){return this.uniforms.size},set:function(e){\"number\"==typeof e&&(e=[e,e]),this.uniforms.size=e},enumerable:!1,configurable:!0}),n}(n.Filter),k=function(e){function n(n,t,r,o){void 0===n&&(n=0),void 0===t&&(t=[0,0]),void 0===r&&(r=5),void 0===o&&(o=-1);var i=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform float uRadian;\\nuniform vec2 uCenter;\\nuniform float uRadius;\\nuniform int uKernelSize;\\n\\nconst int MAX_KERNEL_SIZE = 2048;\\n\\nvoid main(void)\\n{\\n    vec4 color = texture2D(uSampler, vTextureCoord);\\n\\n    if (uKernelSize == 0)\\n    {\\n        gl_FragColor = color;\\n        return;\\n    }\\n\\n    float aspect = filterArea.y / filterArea.x;\\n    vec2 center = uCenter.xy / filterArea.xy;\\n    float gradient = uRadius / filterArea.x * 0.3;\\n    float radius = uRadius / filterArea.x - gradient * 0.5;\\n    int k = uKernelSize - 1;\\n\\n    vec2 coord = vTextureCoord;\\n    vec2 dir = vec2(center - coord);\\n    float dist = length(vec2(dir.x, dir.y * aspect));\\n\\n    float radianStep = uRadian;\\n    if (radius >= 0.0 && dist > radius) {\\n        float delta = dist - radius;\\n        float gap = gradient;\\n        float scale = 1.0 - abs(delta / gap);\\n        if (scale <= 0.0) {\\n            gl_FragColor = color;\\n            return;\\n        }\\n        radianStep *= scale;\\n    }\\n    radianStep /= float(k);\\n\\n    float s = sin(radianStep);\\n    float c = cos(radianStep);\\n    mat2 rotationMatrix = mat2(vec2(c, -s), vec2(s, c));\\n\\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\\n        if (i == k) {\\n            break;\\n        }\\n\\n        coord -= center;\\n        coord.y *= aspect;\\n        coord = rotationMatrix * coord;\\n        coord.y /= aspect;\\n        coord += center;\\n\\n        vec4 sample = texture2D(uSampler, coord);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        color += sample;\\n    }\\n\\n    gl_FragColor = color / float(uKernelSize);\\n}\\n\")||this;return i._angle=0,i.angle=n,i.center=t,i.kernelSize=r,i.radius=o,i}return u(n,e),n.prototype.apply=function(e,n,t,r){this.uniforms.uKernelSize=0!==this._angle?this.kernelSize:0,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"angle\",{get:function(){return this._angle},set:function(e){this._angle=e,this.uniforms.uRadian=e*Math.PI/180},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"center\",{get:function(){return this.uniforms.uCenter},set:function(e){this.uniforms.uCenter=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"radius\",{get:function(){return this.uniforms.uRadius},set:function(e){(e<0||e===1/0)&&(e=-1),this.uniforms.uRadius=e},enumerable:!1,configurable:!0}),n}(n.Filter),L=function(e){function n(t){var r=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\n\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\nuniform vec2 dimensions;\\n\\nuniform bool mirror;\\nuniform float boundary;\\nuniform vec2 amplitude;\\nuniform vec2 waveLength;\\nuniform vec2 alpha;\\nuniform float time;\\n\\nfloat rand(vec2 co) {\\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\\n    vec2 coord = pixelCoord / dimensions;\\n\\n    if (coord.y < boundary) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    float k = (coord.y - boundary) / (1. - boundary + 0.0001);\\n    float areaY = boundary * dimensions.y / filterArea.y;\\n    float v = areaY + areaY - vTextureCoord.y;\\n    float y = mirror ? v : vTextureCoord.y;\\n\\n    float _amplitude = ((amplitude.y - amplitude.x) * k + amplitude.x ) / filterArea.x;\\n    float _waveLength = ((waveLength.y - waveLength.x) * k + waveLength.x) / filterArea.y;\\n    float _alpha = (alpha.y - alpha.x) * k + alpha.x;\\n\\n    float x = vTextureCoord.x + cos(v * 6.28 / _waveLength - time) * _amplitude;\\n    x = clamp(x, filterClamp.x, filterClamp.z);\\n\\n    vec4 color = texture2D(uSampler, vec2(x, y));\\n\\n    gl_FragColor = color * _alpha;\\n}\\n\")||this;return r.time=0,r.uniforms.amplitude=new Float32Array(2),r.uniforms.waveLength=new Float32Array(2),r.uniforms.alpha=new Float32Array(2),r.uniforms.dimensions=new Float32Array(2),Object.assign(r,n.defaults,t),r}return u(n,e),n.prototype.apply=function(e,n,t,r){var o,i;this.uniforms.dimensions[0]=null===(o=n.filterFrame)||void 0===o?void 0:o.width,this.uniforms.dimensions[1]=null===(i=n.filterFrame)||void 0===i?void 0:i.height,this.uniforms.time=this.time,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"mirror\",{get:function(){return this.uniforms.mirror},set:function(e){this.uniforms.mirror=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"boundary\",{get:function(){return this.uniforms.boundary},set:function(e){this.uniforms.boundary=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"amplitude\",{get:function(){return this.uniforms.amplitude},set:function(e){this.uniforms.amplitude[0]=e[0],this.uniforms.amplitude[1]=e[1]},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"waveLength\",{get:function(){return this.uniforms.waveLength},set:function(e){this.uniforms.waveLength[0]=e[0],this.uniforms.waveLength[1]=e[1]},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"alpha\",{get:function(){return this.uniforms.alpha},set:function(e){this.uniforms.alpha[0]=e[0],this.uniforms.alpha[1]=e[1]},enumerable:!1,configurable:!0}),n.defaults={mirror:!0,boundary:.5,amplitude:[0,20],waveLength:[30,100],alpha:[1,1],time:0},n}(n.Filter),N=function(e){function n(n,t,r){void 0===n&&(n=[-10,0]),void 0===t&&(t=[0,10]),void 0===r&&(r=[0,0]);var o=e.call(this,c,\"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec2 red;\\nuniform vec2 green;\\nuniform vec2 blue;\\n\\nvoid main(void)\\n{\\n   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/filterArea.xy).r;\\n   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/filterArea.xy).g;\\n   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/filterArea.xy).b;\\n   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\\n}\\n\")||this;return o.red=n,o.green=t,o.blue=r,o}return u(n,e),Object.defineProperty(n.prototype,\"red\",{get:function(){return this.uniforms.red},set:function(e){this.uniforms.red=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"green\",{get:function(){return this.uniforms.green},set:function(e){this.uniforms.green=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"blue\",{get:function(){return this.uniforms.blue},set:function(e){this.uniforms.blue=e},enumerable:!1,configurable:!0}),n}(n.Filter),X=function(e){function n(t,r,o){void 0===t&&(t=[0,0]),void 0===o&&(o=0);var i=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\nuniform vec4 filterClamp;\\n\\nuniform vec2 center;\\n\\nuniform float amplitude;\\nuniform float wavelength;\\n// uniform float power;\\nuniform float brightness;\\nuniform float speed;\\nuniform float radius;\\n\\nuniform float time;\\n\\nconst float PI = 3.14159;\\n\\nvoid main()\\n{\\n    float halfWavelength = wavelength * 0.5 / filterArea.x;\\n    float maxRadius = radius / filterArea.x;\\n    float currentRadius = time * speed / filterArea.x;\\n\\n    float fade = 1.0;\\n\\n    if (maxRadius > 0.0) {\\n        if (currentRadius > maxRadius) {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n        fade = 1.0 - pow(currentRadius / maxRadius, 2.0);\\n    }\\n\\n    vec2 dir = vec2(vTextureCoord - center / filterArea.xy);\\n    dir.y *= filterArea.y / filterArea.x;\\n    float dist = length(dir);\\n\\n    if (dist <= 0.0 || dist < currentRadius - halfWavelength || dist > currentRadius + halfWavelength) {\\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\\n        return;\\n    }\\n\\n    vec2 diffUV = normalize(dir);\\n\\n    float diff = (dist - currentRadius) / halfWavelength;\\n\\n    float p = 1.0 - pow(abs(diff), 2.0);\\n\\n    // float powDiff = diff * pow(p, 2.0) * ( amplitude * fade );\\n    float powDiff = 1.25 * sin(diff * PI) * p * ( amplitude * fade );\\n\\n    vec2 offset = diffUV * powDiff / filterArea.xy;\\n\\n    // Do clamp :\\n    vec2 coord = vTextureCoord + offset;\\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\\n    vec4 color = texture2D(uSampler, clampedCoord);\\n    if (coord != clampedCoord) {\\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\\n    }\\n\\n    // No clamp :\\n    // gl_FragColor = texture2D(uSampler, vTextureCoord + offset);\\n\\n    color.rgb *= 1.0 + (brightness - 1.0) * p * fade;\\n\\n    gl_FragColor = color;\\n}\\n\")||this;return i.center=t,Object.assign(i,n.defaults,r),i.time=o,i}return u(n,e),n.prototype.apply=function(e,n,t,r){this.uniforms.time=this.time,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"center\",{get:function(){return this.uniforms.center},set:function(e){this.uniforms.center=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"amplitude\",{get:function(){return this.uniforms.amplitude},set:function(e){this.uniforms.amplitude=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"wavelength\",{get:function(){return this.uniforms.wavelength},set:function(e){this.uniforms.wavelength=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"brightness\",{get:function(){return this.uniforms.brightness},set:function(e){this.uniforms.brightness=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"speed\",{get:function(){return this.uniforms.speed},set:function(e){this.uniforms.speed=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"radius\",{get:function(){return this.uniforms.radius},set:function(e){this.uniforms.radius=e},enumerable:!1,configurable:!0}),n.defaults={amplitude:30,wavelength:160,brightness:1,speed:500,radius:-1},n}(n.Filter),B=function(e){function n(n,t,r){void 0===t&&(t=0),void 0===r&&(r=1);var o=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform sampler2D uLightmap;\\nuniform vec4 filterArea;\\nuniform vec2 dimensions;\\nuniform vec4 ambientColor;\\nvoid main() {\\n    vec4 diffuseColor = texture2D(uSampler, vTextureCoord);\\n    vec2 lightCoord = (vTextureCoord * filterArea.xy) / dimensions;\\n    vec4 light = texture2D(uLightmap, lightCoord);\\n    vec3 ambient = ambientColor.rgb * ambientColor.a;\\n    vec3 intensity = ambient + light.rgb;\\n    vec3 finalColor = diffuseColor.rgb * intensity;\\n    gl_FragColor = vec4(finalColor, diffuseColor.a);\\n}\\n\")||this;return o._color=0,o.uniforms.dimensions=new Float32Array(2),o.uniforms.ambientColor=new Float32Array([0,0,0,r]),o.texture=n,o.color=t,o}return u(n,e),n.prototype.apply=function(e,n,t,r){var o,i;this.uniforms.dimensions[0]=null===(o=n.filterFrame)||void 0===o?void 0:o.width,this.uniforms.dimensions[1]=null===(i=n.filterFrame)||void 0===i?void 0:i.height,e.applyFilter(this,n,t,r)},Object.defineProperty(n.prototype,\"texture\",{get:function(){return this.uniforms.uLightmap},set:function(e){this.uniforms.uLightmap=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"color\",{get:function(){return this._color},set:function(e){var n=this.uniforms.ambientColor;\"number\"==typeof e?(o.hex2rgb(e,n),this._color=e):(n[0]=e[0],n[1]=e[1],n[2]=e[2],n[3]=e[3],this._color=o.rgb2hex(n))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"alpha\",{get:function(){return this.uniforms.ambientColor[3]},set:function(e){this.uniforms.ambientColor[3]=e},enumerable:!1,configurable:!0}),n}(n.Filter),G=function(e){function n(n,r,o,i){void 0===n&&(n=100),void 0===r&&(r=600);var l=e.call(this,c,\"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float blur;\\nuniform float gradientBlur;\\nuniform vec2 start;\\nuniform vec2 end;\\nuniform vec2 delta;\\nuniform vec2 texSize;\\n\\nfloat random(vec3 scale, float seed)\\n{\\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\n}\\n\\nvoid main(void)\\n{\\n    vec4 color = vec4(0.0);\\n    float total = 0.0;\\n\\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\\n\\n    for (float t = -30.0; t <= 30.0; t++)\\n    {\\n        float percent = (t + offset - 0.5) / 30.0;\\n        float weight = 1.0 - abs(percent);\\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\\n        sample.rgb *= sample.a;\\n        color += sample * weight;\\n        total += weight;\\n    }\\n\\n    color /= total;\\n    color.rgb /= color.a + 0.00001;\\n\\n    gl_FragColor = color;\\n}\\n\")||this;return l.uniforms.blur=n,l.uniforms.gradientBlur=r,l.uniforms.start=o||new t.Point(0,window.innerHeight/2),l.uniforms.end=i||new t.Point(600,window.innerHeight/2),l.uniforms.delta=new t.Point(30,30),l.uniforms.texSize=new t.Point(window.innerWidth,window.innerHeight),l.updateDelta(),l}return u(n,e),n.prototype.updateDelta=function(){this.uniforms.delta.x=0,this.uniforms.delta.y=0},Object.defineProperty(n.prototype,\"blur\",{get:function(){return this.uniforms.blur},set:function(e){this.uniforms.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"gradientBlur\",{get:function(){return this.uniforms.gradientBlur},set:function(e){this.uniforms.gradientBlur=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"start\",{get:function(){return this.uniforms.start},set:function(e){this.uniforms.start=e,this.updateDelta()},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"end\",{get:function(){return this.uniforms.end},set:function(e){this.uniforms.end=e,this.updateDelta()},enumerable:!1,configurable:!0}),n}(n.Filter),K=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return u(n,e),n.prototype.updateDelta=function(){var e=this.uniforms.end.x-this.uniforms.start.x,n=this.uniforms.end.y-this.uniforms.start.y,t=Math.sqrt(e*e+n*n);this.uniforms.delta.x=e/t,this.uniforms.delta.y=n/t},n}(G),q=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return u(n,e),n.prototype.updateDelta=function(){var e=this.uniforms.end.x-this.uniforms.start.x,n=this.uniforms.end.y-this.uniforms.start.y,t=Math.sqrt(e*e+n*n);this.uniforms.delta.x=-n/t,this.uniforms.delta.y=e/t},n}(G),W=function(e){function n(n,t,r,o){void 0===n&&(n=100),void 0===t&&(t=600);var i=e.call(this)||this;return i.tiltShiftXFilter=new K(n,t,r,o),i.tiltShiftYFilter=new q(n,t,r,o),i}return u(n,e),n.prototype.apply=function(e,n,t,r){var o=e.getFilterTexture();this.tiltShiftXFilter.apply(e,n,o,1),this.tiltShiftYFilter.apply(e,o,t,r),e.returnFilterTexture(o)},Object.defineProperty(n.prototype,\"blur\",{get:function(){return this.tiltShiftXFilter.blur},set:function(e){this.tiltShiftXFilter.blur=this.tiltShiftYFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"gradientBlur\",{get:function(){return this.tiltShiftXFilter.gradientBlur},set:function(e){this.tiltShiftXFilter.gradientBlur=this.tiltShiftYFilter.gradientBlur=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"start\",{get:function(){return this.tiltShiftXFilter.start},set:function(e){this.tiltShiftXFilter.start=this.tiltShiftYFilter.start=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"end\",{get:function(){return this.tiltShiftXFilter.end},set:function(e){this.tiltShiftXFilter.end=this.tiltShiftYFilter.end=e},enumerable:!1,configurable:!0}),n}(n.Filter),Y=function(e){function n(t){var r=e.call(this,c,\"varying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float radius;\\nuniform float angle;\\nuniform vec2 offset;\\nuniform vec4 filterArea;\\n\\nvec2 mapCoord( vec2 coord )\\n{\\n    coord *= filterArea.xy;\\n    coord += filterArea.zw;\\n\\n    return coord;\\n}\\n\\nvec2 unmapCoord( vec2 coord )\\n{\\n    coord -= filterArea.zw;\\n    coord /= filterArea.xy;\\n\\n    return coord;\\n}\\n\\nvec2 twist(vec2 coord)\\n{\\n    coord -= offset;\\n\\n    float dist = length(coord);\\n\\n    if (dist < radius)\\n    {\\n        float ratioDist = (radius - dist) / radius;\\n        float angleMod = ratioDist * ratioDist * angle;\\n        float s = sin(angleMod);\\n        float c = cos(angleMod);\\n        coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\\n    }\\n\\n    coord += offset;\\n\\n    return coord;\\n}\\n\\nvoid main(void)\\n{\\n\\n    vec2 coord = mapCoord(vTextureCoord);\\n\\n    coord = twist(coord);\\n\\n    coord = unmapCoord(coord);\\n\\n    gl_FragColor = texture2D(uSampler, coord );\\n\\n}\\n\")||this;return Object.assign(r,n.defaults,t),r}return u(n,e),Object.defineProperty(n.prototype,\"offset\",{get:function(){return this.uniforms.offset},set:function(e){this.uniforms.offset=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"radius\",{get:function(){return this.uniforms.radius},set:function(e){this.uniforms.radius=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"angle\",{get:function(){return this.uniforms.angle},set:function(e){this.uniforms.angle=e},enumerable:!1,configurable:!0}),n.defaults={radius:200,angle:4,padding:20,offset:new t.Point},n}(n.Filter),Z=function(e){function n(t){var r,o=Object.assign(n.defaults,t),i=o.maxKernelSize,l=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(t[r[o]]=e[r[o]])}return t}(o,[\"maxKernelSize\"]);return r=e.call(this,c,\"varying vec2 vTextureCoord;\\nuniform sampler2D uSampler;\\nuniform vec4 filterArea;\\n\\nuniform vec2 uCenter;\\nuniform float uStrength;\\nuniform float uInnerRadius;\\nuniform float uRadius;\\n\\nconst float MAX_KERNEL_SIZE = ${maxKernelSize};\\n\\n// author: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\\nhighp float rand(vec2 co, float seed) {\\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n    highp float dt = dot(co + seed, vec2(a, b)), sn = mod(dt, 3.14159);\\n    return fract(sin(sn) * c + seed);\\n}\\n\\nvoid main() {\\n\\n    float minGradient = uInnerRadius * 0.3;\\n    float innerRadius = (uInnerRadius + minGradient * 0.5) / filterArea.x;\\n\\n    float gradient = uRadius * 0.3;\\n    float radius = (uRadius - gradient * 0.5) / filterArea.x;\\n\\n    float countLimit = MAX_KERNEL_SIZE;\\n\\n    vec2 dir = vec2(uCenter.xy / filterArea.xy - vTextureCoord);\\n    float dist = length(vec2(dir.x, dir.y * filterArea.y / filterArea.x));\\n\\n    float strength = uStrength;\\n\\n    float delta = 0.0;\\n    float gap;\\n    if (dist < innerRadius) {\\n        delta = innerRadius - dist;\\n        gap = minGradient;\\n    } else if (radius >= 0.0 && dist > radius) { // radius < 0 means it's infinity\\n        delta = dist - radius;\\n        gap = gradient;\\n    }\\n\\n    if (delta > 0.0) {\\n        float normalCount = gap / filterArea.x;\\n        delta = (normalCount - delta) / normalCount;\\n        countLimit *= delta;\\n        strength *= delta;\\n        if (countLimit < 1.0)\\n        {\\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\\n            return;\\n        }\\n    }\\n\\n    // randomize the lookup values to hide the fixed number of samples\\n    float offset = rand(vTextureCoord, 0.0);\\n\\n    float total = 0.0;\\n    vec4 color = vec4(0.0);\\n\\n    dir *= strength;\\n\\n    for (float t = 0.0; t < MAX_KERNEL_SIZE; t++) {\\n        float percent = (t + offset) / MAX_KERNEL_SIZE;\\n        float weight = 4.0 * (percent - percent * percent);\\n        vec2 p = vTextureCoord + dir * percent;\\n        vec4 sample = texture2D(uSampler, p);\\n\\n        // switch to pre-multiplied alpha to correctly blur transparent images\\n        // sample.rgb *= sample.a;\\n\\n        color += sample * weight;\\n        total += weight;\\n\\n        if (t > countLimit){\\n            break;\\n        }\\n    }\\n\\n    color /= total;\\n    // switch back from pre-multiplied alpha\\n    // color.rgb /= color.a + 0.00001;\\n\\n    gl_FragColor = color;\\n}\\n\".replace(\"${maxKernelSize}\",i.toFixed(1)))||this,Object.assign(r,l),r}return u(n,e),Object.defineProperty(n.prototype,\"center\",{get:function(){return this.uniforms.uCenter},set:function(e){this.uniforms.uCenter=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"strength\",{get:function(){return this.uniforms.uStrength},set:function(e){this.uniforms.uStrength=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"innerRadius\",{get:function(){return this.uniforms.uInnerRadius},set:function(e){this.uniforms.uInnerRadius=e},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,\"radius\",{get:function(){return this.uniforms.uRadius},set:function(e){(e<0||e===1/0)&&(e=-1),this.uniforms.uRadius=e},enumerable:!1,configurable:!0}),n.defaults={strength:.1,center:[0,0],innerRadius:0,radius:-1,maxKernelSize:32},n}(n.Filter);return e.AdjustmentFilter=m,e.AdvancedBloomFilter=h,e.AsciiFilter=g,e.BevelFilter=v,e.BloomFilter=y,e.BulgePinchFilter=b,e.CRTFilter=z,e.ColorMapFilter=x,e.ColorOverlayFilter=_,e.ColorReplaceFilter=C,e.ConvolutionFilter=S,e.CrossHatchFilter=F,e.DotFilter=O,e.DropShadowFilter=P,e.EmbossFilter=A,e.GlitchFilter=T,e.GlowFilter=w,e.GodrayFilter=D,e.KawaseBlurFilter=d,e.MotionBlurFilter=j,e.MultiColorReplaceFilter=M,e.OldFilmFilter=R,e.OutlineFilter=E,e.PixelateFilter=I,e.RGBSplitFilter=N,e.RadialBlurFilter=k,e.ReflectionFilter=L,e.ShockwaveFilter=X,e.SimpleLightmapFilter=B,e.TiltShiftAxisFilter=G,e.TiltShiftFilter=W,e.TiltShiftXFilter=K,e.TiltShiftYFilter=q,e.TwistFilter=Y,e.ZoomBlurFilter=Z,Object.defineProperty(e,\"__esModule\",{value:!0}),e}({},PIXI,PIXI,PIXI,PIXI.utils,PIXI,PIXI.filters,PIXI.filters);Object.assign(PIXI.filters,__filters);\n//# sourceMappingURL=pixi-filters.js.map\n","import * as geo from \"./geo-utils.js\";\nimport { getTheme } from \"./themes.js\";\n// importing a local copy of PIXI filters, to avoid a long chain of npm pixi dependencies\nimport \"./lib/pixi-filters.min.js\";\n\nexport const render = async (container, state) => {\n  container.clear();\n  await addBackgroundImage(container, state.config);\n  // floor render pass, no additional clipping\n  await renderPass(container, state);\n  // draw theme-painted areas as additional render passes\n  await drawThemeAreas(container, state);\n}\n\nconst drawThemeAreas = async (container, state) => {\n  for (let area of state.themeAreas) {\n    const theme = getTheme(area.themeKey);\n    if (!theme) {\n      console.log(`No such ${area.themeType} theme: ${area.themeKey}`);\n      continue;\n    }\n    // TODO: hacky way to pass down the actual theme to paint\n    const areaState = state.clone();    \n    // TODO: how should we deal with different wall thicknesses, door colors, etc\n    // which look jarring/off when two different themes meet up\n    areaState.config = theme.config;\n    // TODO: for now, just keep certain values from the main state config,\n    // so the dungeon walls etc look consistent at meet up areas\n    areaState.config.doorColor = state.config.doorColor;\n    areaState.config.doorFillColor = state.config.doorFillColor;\n    areaState.config.doorFillOpacity = state.config.doorFillOpacity;\n    areaState.config.doorThickness = state.config.doorThickness;\n    areaState.config.wallColor = state.config.wallColor;\n    areaState.config.wallThickness = state.config.wallThickness;\n    areaState.config.exteriorShadowOpacity = 0.0;  // don't draw additional exterior shadows\n\n    // mask for our area shape\n    const areaContainer = new PIXI.Container();\n    const areaMask = new PIXI.Graphics();\n    areaMask.beginFill(0xFFFFFF, 1.0);\n    areaMask.drawPolygon(area.points.flat());\n    areaMask.endFill();\n    areaContainer.mask = areaMask;\n\n    // render the theme, clipping to our rectangle\n    const clipPoly = geo.pointsToPolygon(area.points);\n    await renderPass(areaContainer, areaState, {clipPoly});\n\n    container.addChild(areaMask);\n    container.addChild(areaContainer);\n  }\n};\n\nconst renderPass = async (container, state, options={}) => {\n  const floorGfx = new PIXI.Graphics();\n  const interiorShadowGfx = new PIXI.Graphics();\n  const wallGfx = new PIXI.Graphics();\n\n  if (state.geometry) {\n    // maybe draw an outer surrounding blurred shadow\n    addExteriorShadow(container, state.config, state.geometry);\n\n    // use a mask to clip the tiled background and interior shadows\n    const clipMask = new PIXI.Graphics();\n    if (geo.isMultiPolygon(state.geometry)) {\n      drawMultiPolygonMask(clipMask, state.geometry);\n    } else if (geo.isPolygon(state.geometry)) {\n      drawPolygonMask(clipMask, state.geometry);\n    }\n    container.addChild(clipMask);\n\n    interiorShadowGfx.mask = clipMask;\n    // apply alpha filter once for entire shadow graphics, so overlaps aren't additive\n    const alphaFilter = new PIXI.filters.AlphaFilter(state.config.interiorShadowOpacity);\n    const blurFilter = new PIXI.filters.BlurFilter();\n    interiorShadowGfx.filters = [alphaFilter, blurFilter];\n\n    // maybe add a tiled background\n    if (state.config.floorTexture) {\n      // TODO: having both clipMask / clipPoly parameters is confusing. \n      await addTiledBackground(container, clipMask, state.config, state.geometry, options.clipPoly);\n    }\n\n    // draw the dungeon geometry room(s)\n    if (geo.isMultiPolygon(state.geometry)) {\n      drawMultiPolygonRoom(floorGfx, interiorShadowGfx, wallGfx, state.config, state.geometry);\n    } else if (geo.isPolygon(state.geometry)) {\n      drawPolygonRoom(floorGfx, interiorShadowGfx, wallGfx, state.config, state.geometry);\n    }\n  }\n\n  // draw interior walls\n  for (let wall of state.interiorWalls) {\n    drawInteriorWall(interiorShadowGfx, wallGfx, state.config, wall);\n  }    \n\n  // draw doors\n  for (let door of state.doors) {\n    drawDoor(interiorShadowGfx, wallGfx, state.config, door);\n  }\n  for (let secretDoor of state.secretDoors) {\n    drawSecretDoor(interiorShadowGfx, wallGfx, state.config, secretDoor);\n  }\n\n  // layer everything properly\n  container.addChild(floorGfx);\n  container.addChild(interiorShadowGfx);\n  container.addChild(wallGfx);\n};\n\n/** Try-catch wrapper around loadTexture. */\nconst getTexture = async (path) => {\n  try {\n    const texture = await loadTexture(path);\n    return texture;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/** Possibly add a background image. */\nconst addBackgroundImage = async (container, config) => {\n  if (config.backgroundImage) {\n    // mimicking MapLayer._drawBackground() behavior\n    const texture = await getTexture(config.backgroundImage);\n    if (texture?.valid) {\n      const d = canvas.dimensions;\n      const bg = new PIXI.Sprite(texture);\n      bg.position.set(d.paddingX - d.shiftX, d.paddingY - d.shiftY);\n      // resize the background image to match the scene dimensions\n      bg.width = d.sceneWidth;\n      bg.height = d.sceneHeight;\n      maybeStartSpriteVideo(bg);\n      container.addChild(bg); \n    }\n  }\n};\n\nconst maybeStartSpriteVideo = (sprite) => {\n  // if video, start playing it\n  const source = sprite.texture.baseTexture.resource.source;\n  const isVideo = source && source.tagName === \"VIDEO\";\n  if (isVideo) {\n    source.loop = true;\n    source.volume = game.settings.get(\"core\", \"globalAmbientVolume\");\n    game.video.play(source);   \n  }\n};\n\n/** Add an exterior blurred shadow. */\nconst addExteriorShadow = (container, config, geometry) => {\n  if (!config.exteriorShadowThickness || !config.exteriorShadowOpacity || !geometry) {\n    return;\n  }\n  if (geo.isMultiPolygon(geometry)) {\n    for (let i = 0; i < geometry.getNumGeometries(); i++) {\n      const poly = geometry.getGeometryN(i);      \n      addExteriorShadowForPoly(container, config, poly);\n    }\n  } else if (geo.isPolygon(geometry)) {\n    addExteriorShadowForPoly(container, config, geometry);\n  }\n}\n\n/** Add an exterior blurred shadow for the given polygon. */\nconst addExteriorShadowForPoly = (container, config, poly) => {\n  const outerShadow = new PIXI.Graphics();\n  // normalize the expanded buffer to remove any oddities\n  //const expanded = poly.buffer(config.exteriorShadowThickness).norm();\n  const expanded = geo.expandGeometry(poly, config.exteriorShadowThickness);\n  outerShadow.beginFill(PIXI.utils.string2hex(config.exteriorShadowColor), config.exteriorShadowOpacity);\n  outerShadow.drawPolygon(expanded.getCoordinates().map(c => [c.x, c.y]).flat());\n  outerShadow.endFill();\n  const blurFilter = new PIXI.filters.BlurFilter();\n  outerShadow.filters = [blurFilter];\n  container.addChild(outerShadow);\n}\n\n/** Add TilingSprites for floor texture. */\nconst addTiledBackground = async (container, mask, config, geometry, clipPoly) => {\n  const texture = await getTexture(config.floorTexture);\n  if (!texture?.valid) {\n    return;\n  }\n\n  // assume square textures\n  const textureSize = texture.width;\n  // allow for scene padding in our total height/width\n  const height = canvas.scene.data.height * (1 + 2 * canvas.scene.data.padding);\n  const width = canvas.scene.data.width * (1 + 2 * canvas.scene.data.padding);\n  const rows = Math.ceil(height / textureSize);\n  const cols = Math.ceil(width / textureSize);\n\n  const bg = new PIXI.Container();\n  for (let row = 0; row < rows; row++) {\n    for (let col = 0; col < cols; col++) {\n      // only create a sprite if this row/col rectangle intersects with our map geometry\n      const rect = geo.pointsToPolygon([\n        [col * textureSize, row * textureSize],\n        [(col + 1) * textureSize, row * textureSize],\n        [(col + 1) * textureSize, (row + 1) * textureSize],\n        [col * textureSize, (row + 1) * textureSize],\n        [col * textureSize, row * textureSize],\n      ]);\n      if (\n        (!clipPoly || geo.intersects(clipPoly, rect)) &&\n        geo.intersects(geometry, rect) && \n        !geo.touches(geometry, rect)\n        ) {\n        const sprite = new PIXI.TilingSprite(texture, textureSize, textureSize);\n        sprite.x = col * textureSize;\n        sprite.y = row * textureSize;\n        if (config.floorTextureTint) {\n          sprite.tint = foundry.utils.colorStringToHex(config.floorTextureTint);\n        }\n        maybeStartSpriteVideo(sprite);\n        bg.addChild(sprite);\n      }\n    }\n  }\n  bg.mask = mask;\n  container.addChild(bg);\n};\n\nconst rectangleForSegment = (thickness, x1, y1, x2, y2) => {\n  const slope = geo.slope(x1, y1, x2, y2);\n  const rectDelta = thickness / 2.0;\n\n  // slope is delta y / delta x\n  if (slope === 0) {\n    // door is horizontal\n    return [\n      x1,\n      y1 + rectDelta,\n      x2,\n      y1 + rectDelta,\n      x2,\n      y1 - rectDelta,\n      x1,\n      y1 - rectDelta,\n    ];\n  }\n  if (slope === Infinity) {\n    // door is vertical\n    return [\n      x1 - rectDelta,\n      y1,\n      x1 - rectDelta,\n      y2,\n      x2 + rectDelta,\n      y2,\n      x2 + rectDelta,\n      y1,        \n    ];\n  };\n\n  // https://math.stackexchange.com/questions/656500/given-a-point-slope-and-a-distance-along-that-slope-easily-find-a-second-p/656512\n  const theta = Math.atan(slope);\n  // flipped dx/dy and +/- to make things work\n  const dy = rectDelta * Math.cos(theta);\n  const dx = rectDelta * Math.sin(theta);\n  return [\n    // lower right - more x, more y\n    x1 - dx,\n    y1 + dy,\n    // upper right - more x, less y\n    x2 - dx,\n    y2 + dy,\n    // upper left - less x, less y\n    x2 + dx, \n    y2 - dy,\n    // lower left - less x, more y\n    x1 + dx, \n    y1 - dy,\n    // close the polygon\n    x1 + dy,\n    y1 - dx,\n  ];\n};\n\nconst drawPolygonMask = (gfx, poly) => {\n  const exterior = poly.getExteriorRing();\n  const coords = exterior.getCoordinates();\n  const flatCoords = coords.map(c => [c.x, c.y]).flat();\n  gfx.beginFill(0xFFFFFF, 1.0);\n  gfx.drawPolygon(flatCoords);\n  gfx.endFill();\n\n  const numHoles = poly.getNumInteriorRing();    \n  for (let i = 0; i < numHoles; i++) {\n    const hole = poly.getInteriorRingN(i);\n    const coords = hole.getCoordinates();\n    const flatCoords = coords.map(c => [c.x, c.y]).flat();\n    gfx.lineStyle(0, 0x000000, 1.0, 1, 0.5);\n    gfx.beginHole();\n    gfx.drawPolygon(flatCoords);\n    gfx.endHole();\n  }\n};\n\nconst drawMultiPolygonMask = (gfx, multi) => {\n  for (let i = 0; i < multi.getNumGeometries(); i++) {\n    const poly = multi.getGeometryN(i);\n    drawPolygonMask(gfx, poly);\n  }\n};\n\nconst drawMultiPolygonRoom = (floorGfx, interiorShadowGfx, wallGfx, config, multi) => {\n  for (let i = 0; i < multi.getNumGeometries(); i++) {\n    const poly = multi.getGeometryN(i);\n    drawPolygonRoom(floorGfx, interiorShadowGfx, wallGfx, config, poly);\n  }\n};\n\nconst drawPolygonRoom = (floorGfx, interiorShadowGfx, wallGfx, config, poly) => {\n  const exterior = poly.getExteriorRing();\n  const coords = exterior.getCoordinates();\n  const flatCoords = coords.map(c => [c.x, c.y]).flat();\n\n  // if no floor texture is specified, draw a solid-color floor\n  if (!config.floorTexture) {\n    floorGfx.beginFill(PIXI.utils.string2hex(config.floorColor), 1.0);\n    floorGfx.drawPolygon(flatCoords);\n    floorGfx.endFill();\n  }\n\n  // cut out holes\n  const numHoles = poly.getNumInteriorRing();    \n  for (let i = 0; i < numHoles; i++) {\n    const hole = poly.getInteriorRingN(i);\n    const coords = hole.getCoordinates();\n    const flatCoords = coords.map(c => [c.x, c.y]).flat();\n    floorGfx.lineStyle(0, 0x000000, 1.0, 1, 0.5);\n    floorGfx.beginHole();\n    floorGfx.drawPolygon(flatCoords);\n    floorGfx.endHole();\n  }\n\n  // draw inner wall drop shadows\n  if (config.interiorShadowOpacity) {\n    // TODO: don't need to set this multiple times... bubble up?\n    // TODO: there's a weird lag or visual artifact happening between the inner blur shadow and the solid line wall,\n    // that sometimes leaves an unshadowed or lighter pixel line/area next to the wall.\n    // To (partially) work around that, draw a wider shadow from the middle of the wall, rather than inside.\n    interiorShadowGfx.lineStyle({\n      width: config.wallThickness + config.interiorShadowThickness,\n      color: PIXI.utils.string2hex(config.interiorShadowColor),\n      alignment: 0.5,  // middle\n      join: \"round\"\n    });\n    interiorShadowGfx.drawPolygon(flatCoords);\n  }\n\n  // draw outer wall poly\n  wallGfx.lineStyle(config.wallThickness, PIXI.utils.string2hex(config.wallColor), 1.0, 0.5);\n  wallGfx.drawPolygon(flatCoords);\n\n  // draw interior hole walls/shadows\n  for (let i = 0; i < numHoles; i++) {\n    const hole = poly.getInteriorRingN(i);\n    const coords = hole.getCoordinates();\n    const flatCoords = coords.map(c => [c.x, c.y]).flat();\n\n    // draw hole wall outer drop shadows\n    interiorShadowGfx.drawPolygon(flatCoords);\n\n    // draw hole wall poly\n    wallGfx.lineStyle(config.wallThickness, PIXI.utils.string2hex(config.wallColor), 1.0);\n    wallGfx.drawPolygon(flatCoords);\n  }\n};\n\n// [x1, y1, x2, y2]\nconst drawInteriorWall = (interiorShadowGfx, wallGfx, config, wall) => {\n  drawInteriorWallShadow(interiorShadowGfx, config, wall);\n\n  wallGfx.lineStyle({\n    width: config.wallThickness,\n    color: PIXI.utils.string2hex(config.wallColor),\n    alpha: 1.0,\n    alignment: 0.5,  // middle\n    cap: \"round\"\n  });\n  wallGfx.moveTo(wall[0], wall[1]);\n  wallGfx.lineTo(wall[2], wall[3]);\n};\n\nconst drawInteriorWallShadow = (gfx, config, wall) => {\n  gfx.lineStyle({\n    // wide enough to be exposed on either side\n    width: config.wallThickness + config.interiorShadowThickness,\n    color: PIXI.utils.string2hex(config.interiorShadowColor),\n    alignment: 0.5,  // middle\n    join: \"round\",\n    cap: \"round\"\n  });\n  gfx.moveTo(wall[2], wall[3]);\n  gfx.lineTo(wall[0], wall[1]);\n};\n\n// [x1, y1, x2, y2]\nconst drawDoor = (interiorShadowGfx, wallGfx, config, door) => {\n  const totalLength = geo.distanceBetweenPoints(door[0], door[1], door[2], door[3]);\n  const jambLength = 20;\n  const rectLength = totalLength - (2 * jambLength);\n  const jambFraction = jambLength / totalLength;\n  const rectFraction = rectLength / totalLength;\n  const rectEndFraction = jambFraction + rectFraction;\n  const deltaX = door[2] - door[0];\n  const deltaY = door[3] - door[1];\n  const jamb1End = [door[0] + (deltaX * jambFraction), door[1] + (deltaY * jambFraction)];\n  const rectEnd = [door[0] + (deltaX * rectEndFraction), door[1] + (deltaY * rectEndFraction)]\n  const doorRect = rectangleForSegment(config.doorThickness, jamb1End[0], jamb1End[1], rectEnd[0], rectEnd[1]);\n\n  // draw drop shadows\n  drawDoorShadow(interiorShadowGfx, config, door);        \n\n  // draw door\n  wallGfx.lineStyle({\n    width: config.wallThickness,\n    color: PIXI.utils.string2hex(config.wallColor),\n    alpha: 1.0,\n    alignment: 0.5, // middle\n    cap: \"round\",\n  });\n  wallGfx.moveTo(door[0], door[1]);\n  // left jamb\n  wallGfx.lineTo(jamb1End[0], jamb1End[1]);\n  // right jamb\n  wallGfx.moveTo(rectEnd[0], rectEnd[1]);\n  wallGfx.lineTo(door[2], door[3]);\n  // door rectangle\n  if (config.doorFillOpacity) {\n    wallGfx.beginFill(PIXI.utils.string2hex(config.doorFillColor), config.doorFillOpacity);\n  }\n  // TODO: redundant/remove?\n  wallGfx.lineStyle(config.wallThickness, PIXI.utils.string2hex(config.doorColor), 1.0, 0.5);    \n  wallGfx.drawPolygon(\n    doorRect[0], doorRect[1], \n    doorRect[2], doorRect[3],\n    doorRect[4], doorRect[5], \n    doorRect[6], doorRect[7],\n    doorRect[0], doorRect[1]\n    );\n  if (config.doorFillColor) {\n    wallGfx.endFill();\n  }\n};\n\nconst rectangleForDoor = (thickness, door) => {\n\n};\n\nconst drawSecretDoor = (interiorShadowGfx, wallGfx, config, door) => {\n  const isGM = game.user.isGM;\n  if ((isGM && config.secretDoorStyleGM === \"door\") ||\n      (!isGM && config.secretDoorStylePlayer === \"door\")) {\n    drawDoor(interiorShadowGfx, wallGfx, config, door);\n    return;\n  }\n\n  const totalLength = geo.distanceBetweenPoints(door[0], door[1], door[2], door[3]);\n  const rectLength = 40.0;\n  const jambLength = (totalLength - rectLength) / 2.0;\n  const jambFraction = jambLength / totalLength;\n  const rectFraction = rectLength / totalLength;\n  const rectEndFraction = jambFraction + rectFraction;\n  const deltaX = door[2] - door[0];\n  const deltaY = door[3] - door[1];\n  const jamb1End = [door[0] + (deltaX * jambFraction), door[1] + (deltaY * jambFraction)];\n  const middle = [door[0] + (deltaX * 0.5), door[1] + (deltaY * 0.5)];\n  const rectEnd = [door[0] + (deltaX * rectEndFraction), door[1] + (deltaY * rectEndFraction)]\n  const doorRect = rectangleForSegment(30.0, jamb1End[0], jamb1End[1], rectEnd[0], rectEnd[1]);\n\n  // draw drop shadows\n  drawInteriorWallShadow(interiorShadowGfx, config, door);\n\n  // draw a wall across the door opening\n  wallGfx.lineStyle({\n    width: config.wallThickness,\n    color: PIXI.utils.string2hex(config.wallColor),\n    alpha: 1.0,\n    alignment: 0.5, // middle\n    cap: \"round\",\n  });\n  wallGfx.moveTo(door[0], door[1]);\n  wallGfx.lineTo(door[2], door[3]);\n\n  // possibly draw an additional S-shape through the wall\n  if ((isGM && config.secretDoorStyleGM === \"secret\") ||\n      (!isGM && config.secretDoorStylePlayer === \"secret\")) {\n    const midRect = rectangleForSegment(50.0, jamb1End[0], jamb1End[1], middle[0], middle[1]);\n    const midRect2 = rectangleForSegment(50.0, middle[0], middle[1], rectEnd[0], rectEnd[1]);\n    wallGfx.lineStyle({\n      width: 5.0,\n      color: PIXI.utils.string2hex(config.secretDoorSColor),\n      alpha: 1.0,\n      alignment: 0.5, // middle\n      cap: \"round\",\n    });\n    wallGfx.moveTo(doorRect[6], doorRect[7]);\n    wallGfx.bezierCurveTo(midRect[0], midRect[1], midRect[2], midRect[3], middle[0], middle[1]);\n    wallGfx.bezierCurveTo(midRect2[6], midRect2[7], midRect2[4], midRect2[5], doorRect[2], doorRect[3]);  \n  }\n};\n\n\nconst drawDoorShadow = (gfx, config, door) => {\n  const totalLength = geo.distanceBetweenPoints(door[0], door[1], door[2], door[3]);\n  const jambLength = 20;\n  const rectLength = totalLength - (2 * jambLength);\n  const jambFraction = jambLength / totalLength;\n  const rectFraction = rectLength / totalLength;\n  const rectEndFraction = jambFraction + rectFraction;\n  const deltaX = door[2] - door[0];\n  const deltaY = door[3] - door[1];\n  const jamb1End = [door[0] + (deltaX * jambFraction), door[1] + (deltaY * jambFraction)];\n  const rectEnd = [door[0] + (deltaX * rectEndFraction), door[1] + (deltaY * rectEndFraction)]\n  const doorRect = rectangleForSegment(config.doorThickness, jamb1End[0], jamb1End[1], rectEnd[0], rectEnd[1]);\n\n  gfx.lineStyle({\n    // wide enough to be exposed on either side\n    width: config.wallThickness + config.interiorShadowThickness,\n    color: PIXI.utils.string2hex(config.interiorShadowColor),\n    alignment: 0.5,  // middle\n    join: \"round\"\n  });\n\n  // left jamb\n  gfx.moveTo(door[2], door[3]);\n  gfx.lineTo(rectEnd[0], rectEnd[1]);\n\n  // right jamb\n  gfx.moveTo(jamb1End[0], jamb1End[1]);\n  gfx.lineTo(door[0], door[1]);\n\n  // door rectangle\n  gfx.drawPolygon(\n    doorRect[0], doorRect[1], \n    doorRect[2], doorRect[3],\n    doorRect[4], doorRect[5], \n    doorRect[6], doorRect[7],\n    doorRect[0], doorRect[1]\n    );    \n};\n","import { DungeonState } from \"./dungeonstate.js\";\nimport { render } from \"./renderer.js\";\nimport * as geo from \"./geo-utils.js\";\nimport { getThemePainterThemeKey } from \"./themes.js\";\n\n\n/**\n * @extends {PlaceableObject}\n */\n// TODO: does Dungeon even need to be a PlaceableObject? Or could it just extend PIXI.Container?\nexport class Dungeon extends PlaceableObject {\n\n  // expects JournalEntry for constructor\n  constructor(journalEntry, note) {\n    // note will be saved as this.document\n    super(note);\n    this.journalEntry = journalEntry;\n    // time-ordered array of DungeonStates\n    this.history = [DungeonState.startState()];\n    this.historyIndex = 0;\n  }\n\n  /* -------------------------------------------- */\n\n  // TODO: figure out what documentName / embeddedName / type we should be using\n  /** @inheritdoc */\n  static embeddedName = \"Drawing\";\n\n  /* -------------------------------------------- */\n\n  deleteAll() {\n    // keep our most recent config around\n    const lastState = this.state();\n    const resetState = DungeonState.startState();\n    resetState.config = lastState.config;\n    this.history = [resetState];\n    this.historyIndex = 0;\n    this.history[this.historyIndex].saveToJournalEntry(this.journalEntry);\n    this.refresh();\n  }\n\n  state() {\n    return this.history[this.historyIndex];\n  }\n\n  /* -------------------------------------------- */\n  /* Rendering                                    */\n  /* -------------------------------------------- */\n\n  /** @override */\n  draw() {\n    this.refresh();\n    return this;\n  }  \n\n  /** @override */\n  refresh() {\n    render(this, this.state());\n  } \n\n  async maybeRefresh(journalEntry) {\n    if (journalEntry.id === this.journalEntry.id) {\n      const savedState = await DungeonState.loadFromJournalEntry(this.journalEntry);\n      // update state, but don't save to journal\n      await this.pushState(savedState, false);\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  async loadFromJournalEntry() {\n    const savedState = await DungeonState.loadFromJournalEntry(this.journalEntry);\n    this.history = [savedState];\n    this.historyIndex = 0;\n    await this.refresh();\n  };\n\n  /* -------------------------------------------- */\n\n  async undo() {\n    this.historyIndex = Math.max(0, this.historyIndex - 1);\n    await this.history[this.historyIndex].saveToJournalEntry(this.journalEntry);\n    await this.refresh();\n  }\n\n  async redo() {\n    this.historyIndex = Math.min(this.history.length - 1, this.historyIndex + 1);\n    await this.history[this.historyIndex].saveToJournalEntry(this.journalEntry);\n    await this.refresh();\n  }\n\n  /* -------------------------------------------- */\n\n  async pushState(newState, saveToJournalEntry=true) {\n    // throw away any history states after current\n    for (let i = this.history.length - 1; i > this.historyIndex; i--) {\n      this.history.pop();\n    }\n    // and add our new state    \n    this.history.push(newState);\n    this.historyIndex++;\n\n    if (saveToJournalEntry) {\n      await newState.saveToJournalEntry(this.journalEntry);      \n    }\n    await this.refresh();\n  }\n\n  async setConfig(config) {\n    const newState = this.state().clone();\n    newState.config = config;\n    await this.pushState(newState);\n  }\n\n  async addDoor(x1, y1, x2, y2) {\n    await this._addDoor(x1, y1, x2, y2, \"doors\", );\n  }\n\n  async addSecretDoor(x1, y1, x2, y2) {\n    await this._addDoor(x1, y1, x2, y2, \"secretDoors\");\n  }\n\n  async _addDoor(x1, y1, x2, y2, doorProperty) {\n    const newState = this.history[this.historyIndex].clone();\n    const doorPoly = geo.twoPointsToLineString(x1, y1, x2, y2);\n\n    // possibly split interior walls\n    const wallsToDelete = [];\n    const wallsToAdd = [];\n    for (let wall of newState.interiorWalls) {\n      const wallPoly = geo.twoPointsToLineString(wall[0], wall[1], wall[2], wall[3]);\n      const contains = geo.contains(wallPoly, doorPoly);\n      if (contains) {\n        wallsToDelete.push(wall);\n        // make sure points are consistently ordered\n        const w1 = geo.lesserPoint(wall[0], wall[1], wall[2], wall[3]);\n        const w2 = geo.greaterPoint(wall[0], wall[1], wall[2], wall[3]);\n        const d1 = geo.lesserPoint(x1, y1, x2, y2);\n        const d2 = geo.greaterPoint(x1, y1, x2, y2);\n        wallsToAdd.push([w1[0], w1[1], d1[0], d1[1]]);\n        wallsToAdd.push([d2[0], d2[1], w2[0], w2[1]]);\n      }\n    }\n    newState.interiorWalls = newState.interiorWalls.filter(w => wallsToDelete.indexOf(w) === -1);\n    newState.interiorWalls = newState.interiorWalls.concat(wallsToAdd);\n    newState[doorProperty].push([x1, y1, x2, y2]);\n    await this.pushState(newState);\n  }\n\n  // {x:, y:, height:, width:}\n  async subtractDoors(rect) {\n    const rectPoly = geo.rectToPolygon(rect);\n    const doorsToKeep = this.history[this.historyIndex].doors.filter(d => {\n      const doorPoly = geo.twoPointsToLineString(d[0], d[1], d[2], d[3]);\n      return !rectPoly.intersects(doorPoly);\n    });\n    if (doorsToKeep.length != this.history[this.historyIndex].doors.length) {\n      const newState = this.history[this.historyIndex].clone();\n      newState.doors = doorsToKeep;\n      await this.pushState(newState);      \n    }\n  }\n\n  /**\n   * Split the wall if it's drawn over an existing door.\n   * \n   * @returns [[x1, y1, x2, y2], ...]\n   */\n  _maybeSplitWall(x1, y1, x2, y2, doors) {\n    // TODO: this logic doesn't handle two doors side by side\n    const wallPoly = geo.twoPointsToLineString(x1, y1, x2, y2);\n    for (let door of doors) {\n      const doorPoly = geo.twoPointsToLineString(door[0], door[1], door[2], door[3]);\n      const contains = geo.contains(wallPoly, doorPoly);\n      if (contains) {\n        // make sure points are consistently ordered\n        const w1 = geo.lesserPoint(x1, y1, x2, y2);\n        const w2 = geo.greaterPoint(x1, y1, x2, y2);\n        const d1 = geo.lesserPoint(door[0], door[1], door[2], door[3]);\n        const d2 = geo.greaterPoint(door[0], door[1], door[2], door[3]);\n        return [\n          [w1[0], w1[1], d1[0], d1[1]],\n          [d2[0], d2[1], w2[0], w2[1]]\n        ];\n      } \n    }\n    // wall didn't contain any door, so return as-is\n    return [[x1, y1, x2, y2]];\n  }\n\n  async addInteriorWall(x1, y1, x2, y2) {\n    const newState = this.history[this.historyIndex].clone();\n    const wallsToAdd = this._maybeSplitWall(x1, y1, x2, y2, newState.doors);\n    newState.interiorWalls = newState.interiorWalls.concat(wallsToAdd);\n    await this.pushState(newState);\n  }\n\n  // {x:, y:, height:, width:}\n  async subtractInteriorWalls(rect) {\n    const rectPoly = geo.rectToPolygon(rect);\n    const wallsToKeep = this.history[this.historyIndex].interiorWalls.filter(w => {\n      const wallPoly = geo.twoPointsToLineString(w[0], w[1], w[2], w[3]);\n      return !rectPoly.intersects(wallPoly);\n    });\n    if (wallsToKeep.length != this.history[this.historyIndex].interiorWalls.length) {\n      const newState = this.history[this.historyIndex].clone();\n      newState.interiorWalls = wallsToKeep;\n      await this.pushState(newState);      \n    }\n  }\n\n  // {x:, y:, height:, width:}\n  async subtractDoorsAndInteriorWalls(rect) {\n    const rectPoly = geo.rectToPolygon(rect);\n    const oldState = this.history[this.historyIndex];\n    const doorsToKeep = oldState.doors.filter(d => {\n      const doorPoly = geo.twoPointsToLineString(d[0], d[1], d[2], d[3]);\n      return !rectPoly.intersects(doorPoly);\n    });\n    const secretDoorsToKeep = oldState.secretDoors.filter(d => {\n      const doorPoly = geo.twoPointsToLineString(d[0], d[1], d[2], d[3]);\n      return !rectPoly.intersects(doorPoly);\n    });\n    const wallsToKeep = oldState.interiorWalls.filter(w => {\n      const wallPoly = geo.twoPointsToLineString(w[0], w[1], w[2], w[3]);\n      return !rectPoly.intersects(wallPoly);\n    });\n    if (doorsToKeep.length != oldState.doors.length \n      || secretDoorsToKeep.length != oldState.secretDoors.length\n      || wallsToKeep.length != oldState.interiorWalls.length) {\n      const newState = oldState.clone();\n      newState.doors = doorsToKeep;\n      newState.secretDoors = secretDoorsToKeep;\n      newState.interiorWalls = wallsToKeep;\n      await this.pushState(newState);      \n    }\n  }\n\n  async _addPoly(poly) {\n    const oldState = this.history[this.historyIndex];\n    const newState = oldState.clone();    \n    if (newState.geometry) {\n      newState.geometry = geo.union(newState.geometry, poly);\n      const touches = geo.touches(oldState.geometry, poly);\n      if (touches) {\n        const intersection = geo.intersection(oldState.geometry, poly);\n        const coordinates = intersection.getCoordinates();\n        // TODO: do we need to handle more complicated overlaps, GeometryCollection etc?\n        // this coordinate 2-step is flimsy\n        if (coordinates.length > 1 && coordinates.length % 2 === 0) {\n          for (let i = 0; i < coordinates.length; i+=2) {\n            const wallsToAdd = this._maybeSplitWall(coordinates[i].x, coordinates[i].y, coordinates[i+1].x, coordinates[i+1].y, newState.doors);\n            newState.interiorWalls = newState.interiorWalls.concat(wallsToAdd);\n          }\n        }\n      } else {\n        // also nuke any interior walls in this new poly\n        const wallsToKeep = newState.interiorWalls.filter(w => {\n          const wallPoly = geo.twoPointsToLineString(w[0], w[1], w[2], w[3]);\n          return !poly.intersects(wallPoly);\n        });\n        if (wallsToKeep.length != newState.interiorWalls.length) {\n          newState.interiorWalls = wallsToKeep;\n        }        \n      }\n    } else {\n      newState.geometry = poly;\n    }\n    await this.pushState(newState);    \n  }\n\n  // {x:, y:, height:, width:}  \n  async addRectangle(rect) {\n    const poly = geo.rectToPolygon(rect);\n    this._addPoly(poly);\n  }\n\n  // {x:, y:, height:, width:}\n  async subtractRectangle(rect) {\n    // only makes sense to subtract if we have geometry\n    if (!this.history[this.historyIndex].geometry) {\n      return;\n    }\n    const poly = geo.rectToPolygon(rect);\n    // and if the poly intersects existing geometry\n    if (!this.history[this.historyIndex].geometry.intersects(poly)) {\n      return;\n    }\n    const newState = this.history[this.historyIndex].clone();    \n    newState.geometry = newState.geometry.difference(poly);\n    await this.pushState(newState);\n  };\n\n  // [[x,y]...]\n  async addPolygon(points) {\n    try {\n      const poly = geo.pointsToPolygon(points);\n      await this._addPoly(poly);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * @param {Object} rect \n   * @param {Number} rect.x\n   * @param {Number} rect.y\n   * @param {Number} rect.height\n   * @param {Number} rect.width\n   */\n  async addThemeArea(points) {\n    try {\n      // make sure we can create a polygon from the points\n      const poly = geo.pointsToPolygon(points);\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n\n    const themeKey = getThemePainterThemeKey();\n    const newArea = {\n      points,\n      themeKey,\n    };\n    const newState = this.history[this.historyIndex].clone();\n    newState.themeAreas.push(newArea);\n    await this.pushState(newState);\n  }\n\n  // {x:, y:, height:, width:}\n  async removeThemeAreas(rect) {\n    const rectPoly = geo.rectToPolygon(rect);\n    const areasToKeep = this.history[this.historyIndex].themeAreas.filter(a => {\n      try {\n        const areaPoly = geo.pointsToPolygon(a.points);\n        return !rectPoly.intersects(areaPoly);\n      } catch (error) {\n        console.log(error);\n        return false;\n      } \n    });\n    if (areasToKeep.length != this.history[this.historyIndex].themeAreas.length) {\n      const newState = this.history[this.historyIndex].clone();\n      newState.themeAreas = areasToKeep;\n      await this.pushState(newState);      \n    }\n  }  \n}\n","import * as constants from \"./constants.js\";\nimport { Dungeon } from \"./dungeon.js\";\n\n\nconst FOLDER_NAME = \"Dungeon Draw\";\n\nconst findDungeonEntryAndNote = () => {\n  for (const [key, note] of canvas.scene.notes.entries()) {\n    const journalEntry = game.journal.get(note.data.entryId);\n    if (journalEntry) {\n      const flag = journalEntry.getFlag(constants.MODULE_NAME, \"dungeonVersion\");\n      if (flag) {\n        return {journalEntry, note};\n      }\n    }\n  }\n  return {journalEntry: null, note: null};\n};\n\nconst createDungeonEntryAndNote = async () => {\n  const journalEntry = await createDungeonEntry();\n  const note = await createDungeonNote(journalEntry);\n  return {journalEntry, note};\n}\n\nconst createDungeonEntry = async () => {\n  let folder = game.folders.filter((f) =>\n    f.data.type === \"JournalEntry\" && f.name === FOLDER_NAME).pop();\n  if (!folder) {\n    folder = await Folder.create({\n      name: FOLDER_NAME,\n      type: \"JournalEntry\"\n    });\n  }\n\n  const journalEntry = await JournalEntry.create({\n    name: canvas.scene.name,\n    folder: folder.id,\n    flags: {\n      \"dungeon-draw\": {\n        // extract string constant somewhere\n        \"dungeonVersion\": \"1.0\"\n      }\n    }\n  });\n  return journalEntry;\n};\n\nconst createDungeonNote = async (journalEntry) => {\n  await canvas.scene.createEmbeddedDocuments(\"Note\", [{\n    entryId : journalEntry.id,\n    fontSize : 20,\n    icon : \"icons/svg/cave.svg\",\n    iconSize : 32,\n    textAnchor : 1, \n    textColor : \"#FFFFFF\",\n    x : 50,\n    y : 50, \n    iconTint : \"\",\n    text : \"Dungeon Draw\",\n    flags : {\n    } \n  }]);    \n};\n\n/**\n * \n * @extends {PlaceablesLayer} \n */\nexport class DungeonLayer extends PlaceablesLayer {\n\n  static LAYER_NAME = \"dungeon\";\n\n  constructor() {\n    super();\n    this.dungeonContainer = null;\n    this.dungeon = null;\n  }\n\n  /** @inheritdoc */\n  static get layerOptions() {\n    return foundry.utils.mergeObject(super.layerOptions, {\n      name: DungeonLayer.LAYER_NAME,\n      // canDragCreate: game.user.isGM,\n      canDragCreate: true,\n      zIndex: -1  // under tiles and background image\n    });\n  }\n\n  // TODO: figure out what documentName / embeddedName / type we should be using\n  /** @inheritdoc */\n  static documentName = \"Drawing\";\n\n  /**\n   * Get initial data for a new drawing.\n   * Start with some global defaults, apply user default config, then apply mandatory overrides per tool.\n   * @param {Object} origin     The initial coordinate\n   * @return {Object}           The new drawing data\n   */\n  _getNewDrawingData(origin) {\n    const tool = game.activeTool;\n    const data = {\n      fillColor: game.user.color,\n      strokeColor: game.user.color,\n      strokeWidth: 8,\n    };\n    // Mandatory additions\n    data.x = origin.x;\n    data.y = origin.y;\n    data.author = game.user.id;\n    // Tool-based settings\n    switch ( tool ) {\n      case \"addrect\":\n      case \"subtractdoor\":\n      case \"subtractrect\":\n      case \"themeeraser\":\n        data.type = CONST.DRAWING_TYPES.RECTANGLE;\n        data.points = [];\n        break;\n      case \"adddoor\":\n      case \"addpoly\":\n      case \"addsecretdoor\":\n      case \"addwall\":\n      case \"themepainter\":\n        data.type = CONST.DRAWING_TYPES.POLYGON;\n        data.points = [[0, 0]];\n        break;        \n      case \"ellipse\":\n        data.type = CONST.DRAWING_TYPES.ELLIPSE;\n        data.points = [];\n        break;\n    }\n    return data;\n  }  \n\n  /** @override */\n  async deleteAll() {\n    const type = this.constructor.documentName;\n    if ( !game.user.isGM ) {\n      throw new Error(`You do not have permission to delete ${type} objects from the Scene.`);\n    }\n    return Dialog.confirm({\n      title: game.i18n.localize(\"CONTROLS.ClearAll\"),\n      content: `<p>${game.i18n.format(\"CONTROLS.ClearAllHint\", {type})}</p>`,\n      yes: () => this._deleteAll()\n    });\n  }\n\n  // actually delete everything\n  async _deleteAll() {\n    this.dungeon?.deleteAll();\n  }\n\n  /* -------------------------------------------- */\n\n  async loadDungeon() {\n    const {journalEntry, note} = await findDungeonEntryAndNote();\n    if (journalEntry) {\n      this.dungeon = new Dungeon(journalEntry, note);\n      await this.dungeon.loadFromJournalEntry();\n      // add dungeon underneath any placeables or drawing preview\n      this.addChildAt(this.dungeon, 0);\n    } else {\n      // no journal entry and note found, so make sure dungeon is nulled on this layer\n      this.dungeon = null;\n    }\n  }\n\n  async createNewDungeon() {\n    const {journalEntry, note} = await createDungeonEntryAndNote();\n    await this.loadDungeon();\n  }\n\n  /* -------------------------------------------- */\n  /*  Rendering                                   */\n  /* -------------------------------------------- */\n\n  /** @inheritdoc */\n  async draw() {\n    await super.draw();\n    return this;\n  }  \n\n  /* -------------------------------------------- */\n  /*  Event Listeners and Handlers                */\n  /* -------------------------------------------- */\n\n  /** @override */\n  async _onClickLeft(event) {\n    const {preview, createState, originalEvent} = event.data;\n\n    // Continue polygon point placement\n    if ( createState >= 1 && preview.isPolygon ) {\n      let point = event.data.destination;\n      if ( !originalEvent.shiftKey ) point = canvas.grid.getSnappedPosition(point.x, point.y, this.gridPrecision);\n      preview._addPoint(point, false);\n      preview._chain = true; // Note that we are now in chain mode\n      return preview.refresh();\n    }\n\n    await super._onClickLeft(event);\n  }\n\n  /** @override */\n  _onClickLeft2(event) {\n    const {createState, preview} = event.data;\n\n    // Conclude polygon placement with double-click\n    if ( createState >= 1 && preview.isPolygon ) {\n      event.data.createState = 2;\n      return this._onDragLeftDrop(event);\n    }\n\n    super._onClickLeft2(event);\n  }\n\n  /** @override */\n  async _onDragLeftStart(event) {\n    await super._onDragLeftStart(event);\n\n    // we use a Drawing as our preview, but then on end-drag/completion,\n    // update our single Dungeon instance.\n    const data = this._getNewDrawingData(event.data.origin);\n    const document = new DrawingDocument(data, {parent: canvas.scene});\n    const drawing = new Drawing(document);\n    event.data.preview = this.preview.addChild(drawing);\n    return drawing.draw();\n  }\n\n  /** @override */\n  _onDragLeftMove(event) {\n    const {preview, createState} = event.data;\n    if (!preview) {\n      return;\n    }\n    if (preview.parent === null) { \n      // In theory this should never happen, but rarely does\n      this.preview.addChild(preview);\n    }\n    if (createState >= 1) {\n      preview._onMouseDraw(event);\n      if (preview.data.type !== CONST.DRAWING_TYPES.POLYGON \n        || game.activeTool === \"adddoor\"\n        || game.activeTool === \"addsecretdoor\"\n        || game.activeTool === \"addwall\") {\n        event.data.createState = 2;\n      }\n    }    \n  }\n\n  /** @override */\n  async _onDragLeftDrop(event) {\n    const { createState, destination, origin, preview } = event.data;\n\n    // Successful drawing completion\n    if (createState === 2) {\n      // create a new dungeon if we don't already have one\n      if (!this.dungeon) {\n        await this.createNewDungeon();\n      }\n\n      const distance = Math.hypot(destination.x - origin.x, destination.y - origin.y);\n      const minDistance = distance >= (canvas.dimensions.size / 8);\n      const completePolygon = preview.isPolygon && (preview.data.points.length > 2);\n\n      if (game.activeTool === \"adddoor\") {\n        event.data.createState = 0;\n        const data = preview.data.toObject(false);\n        preview._chain = false;\n        await this.dungeon.addDoor(data.x, data.y,\n          data.x + data.points[1][0], data.y + data.points[1][1]);\n      } if (game.activeTool === \"addsecretdoor\") {\n        event.data.createState = 0;\n        const data = preview.data.toObject(false);\n        preview._chain = false;\n        await this.dungeon.addSecretDoor(data.x, data.y,\n          data.x + data.points[1][0], data.y + data.points[1][1]);  \n      } else if (game.activeTool === \"addwall\") {\n        event.data.createState = 0;\n        const data = preview.data.toObject(false);\n        preview._chain = false;\n        await this.dungeon.addInteriorWall(data.x, data.y,\n          data.x + data.points[1][0], data.y + data.points[1][1]);\n      } else if (minDistance || completePolygon) {\n\n        event.data.createState = 0;\n        const data = preview.data.toObject(false);\n        preview._chain = false;\n        const createData = this.constructor.placeableClass.normalizeShape(data);\n\n        if (game.activeTool === \"addpoly\") {\n          const length = createData.points.length;\n          if (length > 2 && (\n            createData.points[0][0] !== createData.points[length-1][0] ||  \n            createData.points[0][1] !== createData.points[length-1][1])) {\n              // auto-close the polygon\n              createData.points.push(createData.points[0]);\n          }\n          const offsetPoints = createData.points.map(p => [p[0] + createData.x, p[1] + createData.y]);\n          await this.dungeon.addPolygon(offsetPoints);\n        } else if (game.activeTool === \"addrect\") {\n          const rect = {\n            x: createData.x, \n            y: createData.y,\n            height: createData.height,\n            width: createData.width\n          };\n          await this.dungeon.addRectangle(rect);\n        } else if (game.activeTool === \"subtractdoor\") {\n          const rect = {\n            x: createData.x, \n            y: createData.y,\n            height: createData.height,\n            width: createData.width\n          };\n          await this.dungeon.subtractDoorsAndInteriorWalls(rect);\n        } else if (game.activeTool === \"themeeraser\") {\n          const rect = {\n            x: createData.x, \n            y: createData.y,\n            height: createData.height,\n            width: createData.width\n          };\n          await this.dungeon.removeThemeAreas(rect);\n        } else if (game.activeTool === \"themepainter\") {\n          const length = createData.points.length;\n          if (length > 2 && (\n            createData.points[0][0] !== createData.points[length-1][0] ||  \n            createData.points[0][1] !== createData.points[length-1][1])) {\n              // auto-close the polygon\n              createData.points.push(createData.points[0]);\n          }\n          const offsetPoints = createData.points.map(p => [p[0] + createData.x, p[1] + createData.y]);\n          await this.dungeon.addThemeArea(offsetPoints);\n        } else if (game.activeTool === \"subtractrect\") {\n          const rect = {\n            x: createData.x, \n            y: createData.y,\n            height: createData.height,\n            width: createData.width\n          };\n          await this.dungeon.subtractRectangle(rect);\n        }\n      }\n\n      // Cancel the preview\n      return this._onDragLeftCancel(event);\n    }\n\n    // In-progress polygon\n    if (createState === 1 && preview.isPolygon) {\n      event.data.originalEvent.preventDefault();\n      if (preview._chain) {\n        return;\n      }\n      return this._onClickLeft(event);\n    }\n\n    // Incomplete drawing\n    return this._onDragLeftCancel(event);\n  }\n}\n","import { ConfigSheet } from \"./configsheet.js\";\nimport { DungeonLayer } from \"./dungeonlayer.js\";\nimport * as constants from \"./constants.js\";\n\n\nexport class DungeonDraw {\n\n  static init() {\n    console.log(\"***** DUNGEON DRAW *****\");\n    game.settings.register(constants.MODULE_NAME, \"releaseNotesVersion\", {\n        name: \"Last version we showed release notes.\",\n        scope: \"client\",\n        default: \"\",\n        type: String,\n        config: false\n    });\n    game.settings.register(constants.MODULE_NAME, \"customThemes\", {\n        name: \"Custom themes.\",\n        scope: \"client\",\n        default: \"{}\",\n        type: String,\n        config: false\n    });\n    game.settings.register(constants.MODULE_NAME, constants.SETTING_THEME_PAINTER_THEME, {\n        name: \"Theme painter theme key.\",\n        scope: \"client\",\n        default: \"module.cavern\",\n        type: String,\n        config: false\n    });    \n  }\n\n  static ready() {\n    DungeonDraw.maybeShowReleaseNotes();\n  }\n\n  static async maybeShowReleaseNotes() {\n    if (!game.user.isGM) {\n      // GMs only\n      return;\n    }\n    const moduleVersion = game.modules.get(constants.MODULE_NAME).data.version;\n    const settingsVersion = game.settings.get(constants.MODULE_NAME, \"releaseNotesVersion\");\n    if (moduleVersion === settingsVersion) {\n      // they've already seen it\n      return;\n    }\n    const resp = await fetch(\"modules/dungeon-draw/CHANGELOG.md\");\n    const changelog = await resp.text();\n    // keep only the most recent changelog section\n    const firstChangelog = \"#\" + changelog.split(\"#\")[1];\n    // show it in a Dialog\n    const html = await renderTemplate(\"modules/dungeon-draw/templates/release-notes.html\", {\n      data: {\n        version: moduleVersion,\n        changelog: firstChangelog\n      }\n    });\n    const dialog = new Dialog(\n      {\n        title: game.i18n.localize(\"DD.ReleaseNotes\"),\n        content: html,\n        buttons: {\n          roll: {\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: \"OK\",\n          },\n        },\n      },\n      {\n        width: 600,  \n      }\n    );\n    dialog.render(true);\n    // mark this version as shown\n    await game.settings.set(constants.MODULE_NAME, \"releaseNotesVersion\", moduleVersion);\n  }\n\n  static getSceneControlButtons(controls) {\n    CONFIG.Canvas.layers.dungeon = DungeonLayer;\n    CONFIG.Dungeon = {\n      //documentClass: DungeonDocument,\n      layerClass: DungeonLayer,\n      //sheetClass: DungeonConfig\n    };\n\n    controls.push({\n      name: \"dungeondraw\",\n      title: \"DD.SceneControlTitle\",\n      layer: DungeonLayer.LAYER_NAME,\n      icon: \"fas fa-dungeon\",\n      visible: game.user.isTrusted,\n      tools: [\n        {\n          name: \"addrect\",\n          title: \"DD.ButtonTitleAddRect\",\n          icon: \"fas fa-plus-square\",\n        },\n        {\n          name: \"subtractrect\",\n          title: \"DD.ButtonTitleSubtractRect\",\n          icon: \"fas fa-minus-square\",\n        },\n        {\n          name: \"addpoly\",\n          title: \"DD.ButtonTitleAddPoly\",\n          icon: \"fas fa-draw-polygon\",\n        },\n        {\n          name: \"addwall\",\n          title: \"DD.ButtonTitleAddWall\",\n          icon: \"fas fa-bars\",\n        },\n        {\n          name: \"adddoor\",\n          title: \"DD.ButtonTitleAddDoor\",\n          icon: \"fas fa-door-open\",\n        },\n        {\n          name: \"addsecretdoor\",\n          title: \"DD.ButtonTitleAddSecretDoor\",\n          icon: \"fas fa-mask\",\n        },\n        {\n          name: \"subtractdoor\",\n          title: \"DD.ButtonTitleSubtractDoorsAndWalls\",\n          icon: \"fas fa-window-close\",\n        },\n        {\n          name: \"themepainter\",\n          title: \"DD.ButtonTitleThemePainter\",\n          icon: \"fas fa-brush\",\n        },\n        {\n          name: \"themeeraser\",\n          title: \"DD.ButtonTitleThemeEraser\",\n          icon: \"fas fa-eraser\",\n        },        \n        {\n          name: \"undo\",\n          title: \"DD.ButtonTitleUndo\",\n          icon: \"fas fa-undo\",\n          onClick: async () => {\n            await canvas.dungeon.dungeon.undo();\n          },\n          button: true\n        },\n        {\n          name: \"redo\",\n          title: \"DD.ButtonTitleRedo\",\n          icon: \"fas fa-redo\",\n          onClick: async () => {\n            await canvas.dungeon.dungeon.redo();\n          },          \n          button: true\n        },\n        {\n          name: \"config\",\n          title: \"DD.ButtonTitleConfig\",\n          icon: \"fas fa-cog\",\n          onClick: () => new ConfigSheet().render(true),\n          button: true\n        },\n        {\n          name: \"clear\",\n          title: \"DD.ButtonTitleClear\",\n          icon: \"fas fa-trash\",\n          // visible: isGM,\n          visible: true,\n          onClick: () => canvas.dungeon.deleteAll(),\n          button: true\n        }\n      ],\n      activeTool: \"addrect\"\n    });\n  }\n\n  static async canvasReady(canvas) {\n    await canvas.dungeon.loadDungeon();\n  }\n\n  static async updateJournalEntry(document, change, options, userId) {\n    if (game.user.id !== userId) {\n      // if somebody else changed the backing JournalEntry, we need to refresh\n      await canvas.dungeon.dungeon?.maybeRefresh(document);\n    }\n  }\n}\n\nHooks.on(\"init\", DungeonDraw.init);\nHooks.on(\"ready\", DungeonDraw.ready);\nHooks.on(\"getSceneControlButtons\", DungeonDraw.getSceneControlButtons);\nHooks.on(\"canvasReady\", DungeonDraw.canvasReady);\nHooks.on(\"updateJournalEntry\", DungeonDraw.updateJournalEntry);\n"],"names":["MODULE_NAME","getTheme","themeKey","splits","split","type","key","getCustomThemes","themes","customThemesString","game","settings","get","constants.MODULE_NAME","JSON","parse","e","console","log","setCustomThemes","customThemes","themesString","stringify","set","getThemePainterThemeKey","default","name","config","backgroundImage","doorThickness","doorColor","doorFillColor","doorFillOpacity","exteriorShadowColor","exteriorShadowThickness","exteriorShadowOpacity","floorColor","floorTexture","floorTextureTint","interiorShadowColor","interiorShadowThickness","interiorShadowOpacity","sceneBackgroundColor","sceneGridColor","sceneGridOpacity","secretDoorSColor","secretDoorStyleGM","secretDoorStylePlayer","wallColor","wallThickness","arcPavement","foundry","utils","mergeObject","basicBlack","cavern","checkerboard","cobblestone","dirt","dungeonSquares","grass","groovyCarpet","hexagon","marble","metalGrid","metalSquares","moldvayBlue","neonBlueprint","ruddyPaper","water","woodPlanks","ThemeSheet","FormApplication","constructor","super","this","defaultOptions","id","classes","template","width","height","tabs","navSelector","contentSelector","initial","title","i18n","localize","getData","theme","themeName","async","event","formData","ConfigSheet","activeTab","_tabs","active","canvas","dungeon","state","customThemeKeys","Object","keys","sort","themeKeys","themePainterThemeKey","customThemeName","themePainterTheme","setConfig","user","isGM","scene","update","backgroundColor","gridAlpha","sceneGridAlpha","gridColor","options","close","preview","removeChildren","activateListeners","html","find","click","_onResetDefaults","bind","_onThemeNameClick","_onSaveAsThemeClick","_onEditThemeClick","_onCopyThemeClick","_onDeleteThemeClick","change","_onThemePainterThemeSelect","preventDefault","refresh","render","themeRow","$","currentTarget","parent","data","newConfig","saveAsThemeName","closest","children","val","_getSubmitData","oldTheme","newTheme","newName","num","setThemePainterThemeKey","NumberUtil","static","x1","x2","tolerance","Math","abs","Exception","Error","message","toString","IllegalArgumentException","Long","high","low","i","mask","result","Double","Comparable","Clonable","Comparator","Serializable","NaN","isNaN","n","Number","isInfinite","isFinite","MAX_VALUE","POSITIVE_INFINITY","NEGATIVE_INFINITY","Float64Array","Int32Array","EXP_BIT_MASK","f64buf","i32buf","buffer","doubleToLongBits","value","longBitsToDouble","bits","BIAS","log2","floor","pow","MAX_REL_BITS_INTEGER","x","y","f","skip","sign","exp","Infinity","fract","RuntimeException","AssertionFailedException","constructor_","apply","arguments","length","call","Assert","shouldNeverReachHere","assertion","isTrue","expectedValue","actualValue","equals","kBuf","ArrayBuffer","kBufAsF64","kBufAsI32","Coordinate","z","c","getZ","NULL_ORDINATE","getM","setOrdinate","ordinateIndex","X","Y","Z","setZ","equals2D","other","equalsWithTolerance","setM","m","M","getOrdinate","equals3D","equalInZ","setX","compareTo","o","getX","clone","CloneNotSupportedException","copy","distance3D","dx","dy","dz","sqrt","getY","setY","distance","hashCode","setCoordinate","interfaces_","Cloneable","DimensionalComparator","_dimensionsToTest","dimensionsToTest","a","b","compare","c1","c2","compX","compY","indexOf","CoordinateSequence","index","hasM","mIndex","getDimension","getMeasures","hasZ","size","getCoordinate","getCoordinateCopy","createCoordinate","expandEnvelope","env","toCoordinateArray","CoordinateSequenceFactory","create","Array","hasInterface","dimension","GeometryComponentFilter","filter","geom","Envelope","_minx","_maxx","_miny","_maxy","init","p","p1","p2","y1","y2","q","q1","q2","minq","min","maxq","max","minp","maxp","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersection","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","getDiameter","w","h","expandToInclude","minExtent","translate","transX","transY","setToNull","disjoint","maxExtent","expandBy","deltaX","deltaY","contains","centre","Geometry","isGeometryCollection","getTypeCode","TYPECODE_GEOMETRYCOLLECTION","getFactory","_factory","getGeometryN","isRectangle","equalsExact","geometryChanged","geometryChangedFilter","geometryChangedAction","_envelope","equalsNorm","g","norm","getLength","getNumGeometries","isEmpty","compareToSameClass","comp","getUserData","_userData","getSRID","_SRID","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","reverse","res","reverseInternal","envelope","setSRID","copyInternal","getPrecisionModel","computeEnvelopeInternal","SRID","setUserData","userData","iterator","j","hasNext","aElement","next","bElement","comparison","isEquivalentClass","getClass","isGeometryCollectionOrDerived","TYPECODE_MULTIPOINT","TYPECODE_MULTILINESTRING","TYPECODE_MULTIPOLYGON","geometries","array","factory","TYPECODE_POINT","TYPECODE_LINESTRING","TYPECODE_LINEARRING","TYPECODE_POLYGON","TYPENAME_POINT","TYPENAME_MULTIPOINT","TYPENAME_LINESTRING","TYPENAME_LINEARRING","TYPENAME_MULTILINESTRING","TYPENAME_POLYGON","TYPENAME_MULTIPOLYGON","TYPENAME_GEOMETRYCOLLECTION","CoordinateFilter","coord","Lineal","CoordinateSequences","src","srcPos","dest","destPos","minDim","dim","seq","isInteger","indexOfFirstCoordinate","scroll","isRing","firstCoordinate","ensureRing","last","k","cs1","cs2","cs1Size","d","v1","v2","minCoordinateIndex","to","minCoordIndex","minCoord","testCoord","fact","newseq","mid","trunc","swap","tmp","copyCoord","createClosedRing","coordinate","UnsupportedOperationException","Character","toUpperCase","Dimension","dimensionValue","FALSE","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","A","SYM_A","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","isDone","isGeometryChanged","LineString","_points","points","isClosed","isSimple","getCoordinates","otherLineString","getBoundaryDimension","getCoordinateN","getNumPoints","createLineString","getEndPoint","getPointN","pts","len","x0","y0","ofLine","line","getBoundary","getGeometryType","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","pt","getStartPoint","createPoint","Puntal","Point","_coordinates","coordinates","IllegalStateException","point","createGeometryCollection","Area","ring","ofRingSigned","sum","p0","Collection","add","addAll","toArray","remove","IndexOutOfBoundsException","List","NoSuchElementException","ArrayList","ensureCapacity","push","splice","clear","element","oldElement","Iterator","comparator","slice","Symbol","values","arrayList","position","Arrays","t","r","concat","original","newLength","StringBuffer","str","append","setCharAt","substr","Integer","intValue","DD","_hi","_lo","dd","hi","lo","determinant","valueOf","multiply","selfSubtract","selfMultiply","strlen","isWhitespace","charAt","isNegative","signCh","numDigits","numBeforeDec","hasDecimalChar","ch","isDigit","TEN","selfAdd","expStr","substring","parseInt","ex","NumberFormatException","val2","numDecPlaces","scale","divide","negate","xAbs","xLog10","xMag","buf","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","gt","lt","ONE","decimalPointPos","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","continueExtractingDigits","remMag","sqr","doubleValue","isZero","getSpecialNumberString","selfDivide","yhi","ylo","hc","tc","hy","ty","C","U","u","SPLIT","dump","createNaN","ge","s","reciprocal","ceil","fhi","flo","rint","setValue","ax","axdd","d2","H","S","T","zhi","zlo","hx","tx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","stringOfChar","numZeroes","SCI_NOT_ZERO","digits","SCI_NOT_EXPONENT_CHAR","trailingDigits","digitsWithDecimal","isPositive","signum","PI","TWO_PI","PI_2","E","EPS","CGAlgorithmsDD","orientationIndexFilter","dx1","dy1","dx2","dy2","px","py","pw","qx","qy","qw","xInt","yInt","pa","pb","pc","detsum","detleft","detright","det","errbound","DP_SAFE_EPSILON","Orientation","orientationIndex","nPts","hiPt","hiIndex","iPrev","iNext","prev","disc","isCCW","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","COLLINEAR","STRAIGHT","Polygonal","Polygon","_shell","_holes","shell","holes","createLinearRing","hasNullElements","hasNonEmptyElements","shellCoordinates","childCoordinates","area","ofRing","shellCopy","holeCopies","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","normalized","clockwise","getExteriorRing","getInteriorRingN","createPolygon","numPoints","convexHull","otherShell","poly","shellComp","nHole1","nHole2","thisHole","otherHole","holeComp","createMultiLineString","rings","Set","SortedSet","TreeSet","GeometryCollection","_geometries","otherCollection","numGeometries","reversed","buildGeometry","theseElements","asList","otherElements","gc","n1","n2","thisGeom","otherGeom","MultiPoint","isValid","LinearRing","validateConstruction","MINIMUM_VALID_SIZE","CoordinateXY","CoordinateXYM","_m","CoordinateXYZM","Coordinates","measures","CoordinateList","allowRepeated","isChanged","coordArrayType","obj","start","end","inc","closeRing","duplicate","MathUtil","ln","LOG_10","v3","v4","System","CoordinateArrays","testPts","testPt","newCoordinates","arraycopy","coord1","coord2","coordinateComparator","coordList","hasRepeatedPoints","nonNull","newCoord","srcStart","destStart","pts1","pts2","clamp","npts","extractPts","iPts","ForwardComparator","o1","o2","BidirectionalComparator","forwardComp","isEqualReversed","OLDcompare","dir1","increasingDirection","dir2","i1","i2","comparePt","StringBuilder","CoordinateArraySequence","_dimension","_measures","coordSeq","cloneCoordinates","strBuilder","CoordinateArraySequenceFactory","instanceObject","readResolve","instance","spatial","MultiPolygon","polygons","allRings","allRingsArray","Map","put","entrySet","HashSet","map","has","from","done","current","HashMap","MapInterface","it","hashSet","entries","forEach","entry","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","pm1","pm2","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","makePrecise","round","maxSigDigits","_name","nameToTypeMap","maximumPreciseValue","MultiLineString","lineStrings","GeometryFactory","_precisionModel","_coordinateSequenceFactory","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","multiPolygons","multiPolygonArray","geometryArray","multiLineStrings","multiLineStringArray","lineStringArray","multiPoints","multiPointArray","linearRings","linearRingArray","pointArray","polygonArray","exemplar","createEmpty","geomList","geomType","isHeterogeneous","hasGeometryCollection","partType","toGeometryArray","geom0","createMultiPolygon","toPolygonArray","toLineStringArray","createMultiPoint","toPointArray","createMultiPointFromCoords","ptSeq","GeometryLayout","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","TokenType","WKTGeometryType","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","undefined","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","decimal","scientificNotation","parseFloat","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","match","isMatch","parseGeometry_","parseGeometryLayout_","layout","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","token","o2c","ordinates","ca2p","components","encodePointGeometry","cs","join","encodeLineStringGeometry","ii","encodePolygonGeometry","GeometryEncoder","encode","geometryEncoder","encodeGeometryLayout","WKTParser","geometryFactory","read","write","geometry","WKTReader","parser","WKTWriter","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","endCapStyle","setEndCapStyle","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","quadSegs","alpha","cos","getEndCapStyle","isSingleSided","JOIN_BEVEL","JOIN_MITRE","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","CAP_FLAT","CAP_SQUARE","Location","locationValue","EXTERIOR","BOUNDARY","INTERIOR","NONE","Position","ON","EmptyStackException","Stack","pop","peek","empty","search","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","pos","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","LinkedList","addLast","removeFirst","shift","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","copySymDepths","computeDepth","outsideDepth","getLabel","setEdgeDepths","node","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","Intersection","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","midx","midy","p1x","p1y","p2x","p2y","q1x","q1y","q2x","q2y","Distance","B","D","pointToSegment","noIntersection","denom","r_num","len2","minDistance","dist","LineIntersector","_result","_inputLines","_intPt","_intLineIndex","_isProper","_pa","_pb","pdx","pdy","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuilder","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","isInteriorIntersection","inputLineIndex","getIntersection","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","toLineString","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","DONT_INTERSECT","DO_INTERSECT","POINT_INTERSECTION","RobustLineIntersector","nearestPt","minDist","isInSegmentEnvelopes","intPt","env0","env1","intersectionSafe","nearestEndpoint","checkDD","intPtDD","isIn","out","println","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","Pq1","Pq2","Qp1","Qp2","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","counter","countSegment","isOnSegment","getLocation","minx","maxx","orient","isPointInPolygon","PointLocation","lineIntersector","locatePointInRing","locateInRing","TopologyLocation","location","on","gl","left","right","setAllLocations","locValue","setAllLocationsIfNull","isLine","merge","newLoc","getLocations","flip","temp","toLocationSymbol","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","leftLoc","rightLoc","label","lineLabel","getGeometryCount","count","toLine","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","isHole","containsPoint","isInRing","addHole","isShell","getMaxNodeDegree","getShell","deLabel","setShell","toPolygon","holeLR","MinimalEdgeRing","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","isInResult","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","Node","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","insert","setNode","setLabelBoundary","SortedMap","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","cmp","getValue","getKey","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","l","containsKey","NodeMap","nodeMap","nodeFact","addNode","createNode","getBoundaryNodes","bdyNodes","Quadrant","quad","NE","NW","quad1","quad2","halfPlane","SE","SW","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","compareDirection","getDy","angle","atan2","className","getName","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","quadrant","DirectedEdge","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","currLocation","nextLocation","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","depth","directionFactor","oppositePos","opposite","oppositeDepth","setNext","NodeFactory","PlanarGraph","_edgeEndList","nodes","nodeit","linkResultDirectedEdges","printEdges","eiList","getNodeIterator","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","PolygonBuilder","_shellList","testEr","shellList","testRing","testEnv","minShell","minShellEnv","tryShell","tryShellRing","tryShellEnv","ptNotInList","isContained","sortShellsAndHoles","edgeRings","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","hole","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","item","getItem","PriorityQueue","_size","_items","poll","minItem","reorder","child","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","EnvelopeDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","env2","miny","maxy","aminx","aminy","amaxx","amaxy","bminx","bminy","bmaxx","bmaxy","maxDistance","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","maximumDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","isFlipped","bp","getDistance","getBoundable","ItemVisitor","visitItem","AbstractSTRtree","_root","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity","queryInternal","searchBounds","visitor","childBoundables","getIntersectsOp","matches","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","top","boundable","createHigherLevels","getRoot","found","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","IntersectsOp","ItemDistance","item1","item2","STRtree","avg","kNearestNeighbors","items","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","nearestNeighbourK","initBndPair","distanceLowerBound","bndPair","pairDistance","getItems","STRtreeNode","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","yComparator","minLeafCount","xComparator","nearestNeighbour","itemDist","minPair","tree","bnd","isWithinDistance","distanceUpperBound","compareDoubles","centreX","centreY","aBounds","bBounds","SegmentPointComparator","octant","xSign","relativeSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","createSplitEdgePts","ei0","ei1","lastSegStartPt","useIntPt1","ipt","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","NodedSegmentString","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","segStrings","resultEdgelist","getNodedSubstrings","getNodeList","safeOctant","addIntersectionNode","normalizedSegmentIndex","nextSegIndex","nextPt","addIntersections","li","LineSegment","ls","minX","seg","orient0","orient1","geomFactory","isVertical","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","pointToLinePerpendicular","minY","midPoint","closestPoints","closestPt","close00","closestPoint","close01","close10","close11","factor","maxX","comp0","equalsTopo","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","reflect","A2plusB2","A2subB2","segmentToSegment","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","_overlapSeg1","_overlapSeg2","overlap","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","end1","overlaps","mid0","mid1","setId","getEndIndex","getStartIndex","getContext","getId","MonotoneChainBuilder","safeStart","chainQuad","getChains","mcList","chainStart","chainEnd","findChainEnd","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","si","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","SegmentOverlapAction","queryChain","testChain","_si","ss1","ss2","processIntersections","BufferInputLineSimplifier","_inputLine","_distanceTol","_isDeleted","_angleOrientation","inputLine","distanceTol","simplify","isDeletable","i0","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","DELETE","isShallowConcavity","NUM_PTS_TO_CHECK","collapseLine","INIT","KEEP","OffsetSegmentString","_ptList","_minimimVertexDistance","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","addPts","lastPt","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","radians","PI_TIMES_2","dx0","dy0","anglePrev","angleNext","tip1","tail","tip2","a1","a2","diff","ang1","ang2","delAngle","angleDegrees","crossproduct","sin","angDel","PI_OVER_2","PI_OVER_4","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addDirectedFillet","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","addLimitedMitreJoin","OFFSET_SEGMENT_SEPARATION_FACTOR","addBevelJoin","addCornerFillet","createSquare","addSegments","addFirstSegment","direction","radius","startAngle","endAngle","addLastSegment","initSideSegments","s1","s2","basePt","ang0","angDiffHalf","angleBetweenOriented","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","totalAngle","nSegs","angleInc","offset","sideSign","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","createCircle","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","isLineOffsetEmpty","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","subgraphs","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","dirEdge","ds","DepthSegment","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","NotRepresentableException","HCoordinate","_x","_y","_w","Triangle","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","ay","bx","by","asqr","bsqr","numx","numy","ccx","ccy","isAcute","cx","cy","l1","l2","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","signedArea","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addRingSide","cwLeftLoc","cwRightLoc","curve","addCurve","addRingBothSides","addPoint","addPolygon","offsetSide","shellCoord","removeRepeatedPoints","isErodedCompletely","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","_geom","shellLoc","holeLoc","locatePointInPolygon","geomi","g2","locateInGeometry","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","getDegree","insertEdgeEnd","DirectedEdgeStar","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","nextOut","nextIn","de0","deLast","quad0","isNorthern","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","findCoveredLineEdges","eLabel","eLoc","OverlayNodeFactory","OrientedCoordinateArray","_orientation","orientation1","orientation2","limit1","limit2","compPt","done1","done2","oca","compareOriented","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","e1","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","p00","p01","p10","p11","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","IntersectionMatrix","_matrix","setAll","elements","actualDimensionValue","requiredDimensionSymbol","requiredDimensionSymbols","isIntersects","isDisjoint","isCovers","isCoveredBy","dimensionSymbols","row","col","toDimensionValue","column","isContains","setAtLeast","minimumDimensionSymbols","minimumDimensionValue","setAtLeastIfValid","isWithin","isTouches","dimensionOfGeometryA","dimensionOfGeometryB","isOverlaps","isEquals","builder","ai","bi","toDimensionSymbol","transpose","isCrosses","IntArrayList","initialCapacity","capacity","copyOf","MonotoneChainIndexer","list","getChainStartIndices","startIndexList","OLDgetChainStartIndices","toIntArray","MonotoneChainEdge","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","toLineLabel","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","BufferBuilder","_workingPrecisionModel","_workingNoder","_geomFact","_graph","lLoc","rLoc","lines","ss","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_pt","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","snap","hotPixel","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","HotPixelSnapAction","isNodeAdded","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","printStackTrace","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","getResultGeometry","bufOp","maxPrecisionDigits","bufEnvMax","minUnitLog10","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","MAX_PRECISION_DIGITS","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","CAP_BUTT","BoundaryNodeRule","isInBoundary","boundaryCount","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInPolygonRing","updateLocationInfo","computeLocation","locateOnPoint","locateOnLineString","locateInPolygon","ml","mpoly","isOnLine","BasicSegmentString","NodingIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_keepIntersections","_isInteriorIntersectionsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","finder","setFindAllIntersections","isEnd1","isEnd00","isEnd01","isEnd10","isEnd11","isInteriorVertexIntersection","setInteriorIntersectionsOnly","setKeepIntersections","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","findAllIntersections","keepIntersections","isSameSegString","isEndSegment","isInteriorInt","isInteriorVertexInt","isInteriorIntersectionsOnly","FastNodingValidator","_isValid","execute","getErrorMessage","intSegs","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","_mapOp","mapOp","op","mapped","LineBuilder","_op","_ptLocator","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","INTERSECTION","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","coords","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","_srcGeom","srcGeom","g0","g1","snapGeom","snapper0","snapper1","computeSizeBasedSnapTolerance","fixedSnapTol","computeOverlaySnapTolerance","SNAP_PRECISION_FACTOR","cleanResult","snapToSelf","extractTargetCoordinates","SnapTransformer","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","_snapPts","_isSelfSnap","isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","padStr","toBinaryString","bitStr","nBits","prop","num1","num2","getBit","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","addCommonBits","trans","Translater","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","overlayOp","UNION","SYMDIFFERENCE","DIFFERENCE","selfSnap","remGeom","prepareResult","prepGeom","SnapIfNeededOverlayOp","isSuccess","savedException","computeIntersections","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","events","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","addEdge","edgeSet","ev0","mc0","ev1","mc1","IntervalRTreeNode","_min","getMin","queryMin","queryMax","getMax","NodeComparator","mid2","IntervalRTreeLeafNode","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","printNode","LinearComponentExtracter","_lines","_isForcedToLineString","isForcedToLineString","getLines","forceToLineString","setForceToLineString","ArrayListVisitor","IndexedPointInAreaLocator","IntervalIndexedGeometry","rcc","SegmentVisitor","_counter","_isEmpty","addLine","GeometryGraph","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","addPolygonRing","getInvalidPoint","getBoundaryPoints","coll","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOperation","_resultPrecisionModel","_arg","setComputationPrecision","_resultGeom","_resultPolyList","geom1","createEmptyResult","MapOp","dim0","dim1","resultDimension","overlayOpCode","geomFact","resultDim","loc0","loc1","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","replaceCollapsedEdges","newEdges","updateNodeLabelling","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","EdgeEndBuilder","createEdgeEndForNext","eiCurr","eiNext","createEdgeEndForPrev","computeEdgeEnds","EdgeEndBundle","_edgeEnds","computeLabelOn","foundInterior","computeLabelSide","computeLabelSides","EdgeEndBundleStar","eb","RelateNode","updateIMFromEdges","RelateNodeFactory","RelateComputer","_im","_isolatedEdges","arg","insertEdgeEnds","computeProperIntersectionIM","intersector","dimA","dimB","hasProper","hasProperInterior","labelIsolatedEdges","thisIndex","labelIsolatedEdge","target","computeDisjointIM","computeIntersectionNodes","copyNodesAndLabels","labelIsolatedNodes","eeBuilder","ee0","ee1","labelNodeEdges","labelIntersectionNodes","labelIsolatedNode","ga","gb","RectangleContains","_rectEnv","rectangle","isContainedInBoundary","isPointContainedInBoundary","isLineStringContainedInBoundary","isLineSegmentContainedInBoundary","RectangleLineIntersector","_diagUp0","_diagUp1","_diagDown0","_diagDown1","rectEnv","segEnv","isSegUpwards","ShortCircuitedGeometryVisitor","applyTo","visit","RectangleIntersects","_rectangle","EnvelopeIntersectsVisitor","ecpVisitor","GeometryContainsPointVisitor","riVisitor","RectangleIntersectsSegmentVisitor","_intersects","elementEnv","_rectSeq","_containsPoint","rectPt","containsPointInPolygon","_rectIntersector","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","RelateOp","_relate","getIntersectionMatrix","relate","UnionOp","touches","isMultiPolygon","isPolygon","geometryToWkt","rectToPolygon","rect","reader","polyString","rectToWKTPolygonString","twoPointsToLineString","pointsToPolygon","distanceBetweenPoints","comparePoints","lesserPoint","greaterPoint","deleteAllWalls","walls","getEmbeddedCollection","ids","wall","getFlag","deleteEmbeddedDocuments","error","makeWallsFromMulti","multi","makeWallsFromPoly","wallData","flags","dungeonVersion","doorData","door","secretDoorData","allWalls","numHoles","createEmbeddedDocuments","makeInteriorWalls","makeDoors","doors","allDoors","makeSecretDoors","DungeonState","themeAreas","secretDoors","interiorWalls","geo.geometryToWkt","startState","journalEntry","serialized","geo.isMultiPolygon","geo.isPolygon","makeWalls","content","fromString","__filters","setPrototypeOf","__proto__","prototype","hasOwnProperty","assign","gamma","saturation","contrast","brightness","red","green","blue","uniforms","applyFilter","Filter","threshold","defineProperty","enumerable","configurable","_kernels","_blur","_quality","uOffset","Float32Array","_pixelSize","pixelSize","_clamp","isArray","kernels","quality","_frame","getFilterTexture","returnFilterTexture","_updatePadding","padding","reduce","_generateKernels","bloomScale","_resolution","FILTER_RESOLUTION","defaults","blur","resolution","_extractFilter","_blurFilter","bloomTexture","v","_thickness","_angle","lightColor","shadowColor","rotation","thickness","lightAlpha","shadowAlpha","_updateTransform","transformX","transformY","DEG_TO_RAD","rgb2hex","hex2rgb","blurXFilter","BlurFilterPass","blurYFilter","blendMode","BLEND_MODES","SCREEN","defaultFilter","AlphaFilter","filterFrame","strength","center","mix","_sliceSize","_slicePixelSize","_sliceInnerSize","_nearest","_scaleMode","_colorMap","nearest","colorMap","_mix","Texture","baseTexture","scaleMode","mipmap","MIPMAP_MODES","OFF","SCALE_MODES","NEAREST","LINEAR","_glTextures","_updateID","emit","updateColorMap","destroy","_","_color","_alpha","_originalColor","_newColor","originalColor","newColor","epsilon","texelSize","matrix","F","time","seed","curvature","lineWidth","lineContrast","verticalLine","noise","noiseSize","vignetting","vignettingAlpha","vignettingBlur","O","_tintFilter","shadowOnly","_updateShift","fillMode","TRANSPARENT","average","minSize","sampleSize","_slices","_offsets","_sizes","_direction","_canvas","document","createElement","texture","aspect","_randomizeSizes","random","shuffle","_randomizeOffsets","redraw","clearRect","fillStyle","fillRect","displacementMap","slicesWidth","slicesOffset","sinDir","cosDir","ORIGINAL","LOOP","CLAMP","MIRROR","outerStrength","innerStrength","knockout","replace","toFixed","glowColor","parallel","_angleLight","gain","lacunarity","light","kernelSize","uVelocity","_velocity","ObservablePoint","velocityChanged","setVelocity","velocity","uKernelSize","copyFrom","_replacements","_maxColors","originalColors","targetColors","replacements","R","sepia","scratch","scratchDensity","scratchWidth","getAngleStep","outlineColor","MAX_SAMPLES","MIN_SAMPLES","I","uRadian","uCenter","uRadius","amplitude","waveLength","mirror","boundary","N","wavelength","speed","ambientColor","uLightmap","G","gradientBlur","window","innerHeight","delta","texSize","innerWidth","updateDelta","K","W","tiltShiftXFilter","tiltShiftYFilter","maxKernelSize","getOwnPropertySymbols","propertyIsEnumerable","uStrength","uInnerRadius","innerRadius","AdjustmentFilter","AdvancedBloomFilter","AsciiFilter","BevelFilter","BloomFilter","BulgePinchFilter","CRTFilter","ColorMapFilter","ColorOverlayFilter","ColorReplaceFilter","ConvolutionFilter","CrossHatchFilter","DotFilter","DropShadowFilter","EmbossFilter","GlitchFilter","GlowFilter","GodrayFilter","KawaseBlurFilter","MotionBlurFilter","MultiColorReplaceFilter","OldFilmFilter","OutlineFilter","PixelateFilter","RGBSplitFilter","RadialBlurFilter","ReflectionFilter","ShockwaveFilter","SimpleLightmapFilter","TiltShiftAxisFilter","TiltShiftFilter","TiltShiftXFilter","TiltShiftYFilter","TwistFilter","ZoomBlurFilter","PIXI","filters","drawThemeAreas","container","themeType","areaState","areaContainer","Container","areaMask","Graphics","beginFill","drawPolygon","flat","endFill","clipPoly","geo.pointsToPolygon","renderPass","addChild","floorGfx","interiorShadowGfx","wallGfx","addExteriorShadow","clipMask","drawMultiPolygonMask","drawPolygonMask","alphaFilter","blurFilter","BlurFilter","addTiledBackground","drawMultiPolygonRoom","drawPolygonRoom","drawInteriorWall","drawDoor","secretDoor","drawSecretDoor","getTexture","path","loadTexture","addBackgroundImage","valid","bg","Sprite","paddingX","shiftX","paddingY","shiftY","sceneWidth","sceneHeight","maybeStartSpriteVideo","sprite","source","resource","tagName","loop","volume","video","play","addExteriorShadowForPoly","outerShadow","expanded","bufferOp","string2hex","textureSize","rows","cols","geo.intersects","geo.touches","TilingSprite","tint","colorStringToHex","rectangleForSegment","slope","geo.slope","rectDelta","theta","atan","gfx","flatCoords","lineStyle","beginHole","endHole","alignment","drawInteriorWallShadow","cap","moveTo","lineTo","totalLength","geo.distanceBetweenPoints","jambFraction","rectEndFraction","jamb1End","rectEnd","doorRect","drawDoorShadow","middle","midRect","midRect2","bezierCurveTo","Dungeon","PlaceableObject","note","history","historyIndex","deleteAll","lastState","resetState","saveToJournalEntry","draw","savedState","loadFromJournalEntry","pushState","newState","_addDoor","doorProperty","doorPoly","geo.twoPointsToLineString","wallsToDelete","wallsToAdd","wallPoly","geo.contains","w1","geo.lesserPoint","w2","geo.greaterPoint","d1","rectPoly","geo.rectToPolygon","doorsToKeep","_maybeSplitWall","wallsToKeep","oldState","secretDoorsToKeep","union","geo.intersection","_addPoly","difference","newArea","areasToKeep","areaPoly","createDungeonEntry","folder","folders","Folder","JournalEntry","createDungeonNote","entryId","fontSize","icon","iconSize","textAnchor","textColor","iconTint","text","DungeonLayer","PlaceablesLayer","dungeonContainer","layerOptions","LAYER_NAME","canDragCreate","zIndex","_getNewDrawingData","origin","tool","activeTool","fillColor","strokeColor","strokeWidth","author","CONST","DRAWING_TYPES","RECTANGLE","ELLIPSE","documentName","Dialog","confirm","format","yes","_deleteAll","notes","journal","findDungeonEntryAndNote","addChildAt","createDungeonEntryAndNote","loadDungeon","createState","originalEvent","destination","shiftKey","grid","getSnappedPosition","gridPrecision","_addPoint","_chain","_onClickLeft","_onClickLeft2","_onDragLeftDrop","_onDragLeftStart","DrawingDocument","drawing","Drawing","_onDragLeftMove","_onMouseDraw","createNewDungeon","hypot","completePolygon","toObject","addDoor","addSecretDoor","addInteriorWall","createData","placeableClass","normalizeShape","offsetPoints","addRectangle","subtractDoorsAndInteriorWalls","removeThemeAreas","addThemeArea","subtractRectangle","_onDragLeftCancel","DungeonDraw","register","scope","String","maybeShowReleaseNotes","moduleVersion","modules","version","resp","fetch","firstChangelog","renderTemplate","changelog","buttons","roll","controls","CONFIG","Canvas","layers","layerClass","layer","visible","isTrusted","tools","onClick","undo","button","redo","userId","maybeRefresh","Hooks","ready","getSceneControlButtons","canvasReady","updateJournalEntry"],"mappings":"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"}